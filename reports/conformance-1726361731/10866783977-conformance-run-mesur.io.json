{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e00f7ca7-6c9f-4c51-9b3c-6381d9a4f304",
        "name": "Clear Cache",
        "item": [
          {
            "id": "09789bc3-9230-42b7-99d1-0011ebf528ee",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d36b95d9-cbb1-4438-b2bf-470608d5e603",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "860df99f-e495-4983-8af9-51bd261b8a3a"
                }
              }
            ]
          },
          {
            "id": "558a8bc0-dc0a-46b6-9b86-992fa9038e62",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8972479-2a8b-4662-89b5-102587e110ec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dc9f842f-a113-411b-aa44-af39ee9dd5ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c2663110-e912-44c0-88f9-3ba13614876b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c82c6bc9-a5ec-4e93-83ca-94beddf34f8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02ed74c4-f812-4f0a-8247-eb2aec5b6fc0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dfdd037-655e-4b4d-9e99-31683a1b4619",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fd545c9-2db1-4b37-b345-0a7d1f725e26"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4916c03c-3840-428e-8fe5-f97f0bf93e9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b24a0ae-f622-44d8-8165-786bad5a19a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "72aada95-545d-4b31-9273-8d430f4c53dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c480cd84-4128-4c8e-9d18-04fa76c8d2d8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "288074a1-788c-4eb6-bc8a-d379a4462e44",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1cf90026-86ec-4629-ad62-037dcf194346"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6c714e7-b013-4430-979d-316b2f28a958",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3935d132-63d3-42a6-be65-63433555a70d"
            }
          }
        ]
      },
      {
        "id": "6319d46c-e903-4e2a-88f6-9f982464f1bc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "703d5ade-a15a-4901-af73-32dcfd435a45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b377026-4ef9-46dc-b845-dea61a256f20",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a950352d-976d-4622-8df8-a1d80f2eca76",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354c10ce-59a2-4aed-b89c-8888f943bab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b892c3e-70e3-4940-bfec-e75a3a5d4354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5987c89-0710-49b3-8026-d43f11a35130",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abe38b0-b92a-415c-bd07-ed784a8daf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aada283-859f-49c8-b845-7f83f22864c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750eaeeb-cb75-40d1-add5-dcf7cbca59cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b16bc32-d2d0-446f-922c-901d91858e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c36c5e8-72de-428b-9643-5123edef83f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79ea58a3-570f-4d82-add4-51196e620876",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "149a1410-ca00-4ef2-aa97-d7a9251d416e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82e2327-0a5a-4be5-aed8-19f0ab866b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e08d3d0e-e377-4070-a568-14b0b3a3f34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef35fcd0-fcd8-4d62-9e57-a6ae677bd5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e0207f-f900-472d-9329-f1e02e4086bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a0b1903e-ccd5-47f9-9f36-86bac2729e1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3c405646-214c-4dfd-b9f2-9318404c0309",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6fef66c-6e0d-43a8-b140-a3f6be517196",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "abac5ba9-b070-423c-b55f-07d37eb5070b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9ed7eb3-fe45-48eb-a703-e116ed4bcf69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cd26bfb5-7cba-4415-93ac-7e076e09f0fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbb498bb-a709-426b-89be-0f7c1511e4ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efe9b0d2-bd5e-4fc3-83a5-8b4eb6e09442"
            }
          }
        ]
      },
      {
        "id": "bc49ab44-2038-4244-8804-e0fe5dca0d97",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bd897404-0f49-4619-955d-bf9bd6b3f647",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bdf139b-33d1-4c9d-9365-f38af050f097",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "905ae386-1a10-4946-be34-4387563f1de3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eba0255-7745-4864-bc00-8719b17218a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e9d592-da8a-4bac-bb8a-70de79c152ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f333171-546a-4443-84f1-395d0a7b80c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "278fee81-a783-49e7-bb35-21660eae087a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60074ffc-d908-48d8-bb44-d0392d0cfd55",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50546880-6e25-4f62-a6ed-1da77b33fff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a249162c-3465-4db0-b6b0-70ee330d50c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaeb912-1227-4f20-a351-ef627a04b938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3538d9b4-6676-462c-9bdf-dd492bc1601f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f2a07c-cb03-46b6-b86b-4fe11de70cf6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09870e4f-d8dd-4d6f-b378-586e2f54a26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a189f84e-8434-4840-8902-b737772c4328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956c203c-41e6-4bce-9747-f6d0bb0f7bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5568d18e-e1f4-4b18-90d4-5e413250ce51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346c7e42-a4af-4dca-85f5-33bbefc46c61",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27b0440-c7a4-47e9-99e8-b8780e1e6314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573f3936-f4ed-4a7d-934f-5e6948888b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c9391c-f08e-4f36-b174-4cc99013939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ffcbc0f-a999-4b49-983c-68d2bd78a374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57568c6e-9be4-455d-89d2-3c76bbeb8781",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97fa651-3d0d-423b-bd59-cd6f3b6004c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea74ead7-cc6f-4760-87bb-15d62b384e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46b64ec-6436-42b6-b8e4-34a600090a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3760f507-f4f6-4ebb-bd8b-8e3d3eca71e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136487fc-b970-450f-bfa2-9722e068b343",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f02f65b-862d-4fcc-a433-41a47d347f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07254f0d-04c2-4ad6-9c9f-fb7fc07b8961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c44025-05a3-4d44-b351-2f8747ed7c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e6db4d7-0441-4898-8955-f70d06620130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db6cefc-a35a-49ec-bf2a-ab56330c8372",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2566c3c9-8e91-44dd-a9ed-3203462a17f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d242c34-6472-4750-bfd6-a78d3647d0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d751ebde-5b44-4e17-b4bf-ef1a4b69dbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfcd993b-0214-42da-98e5-50bb6e3788e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb68844-bd7e-4547-b826-029217c5f7a4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a870ff46-e6e7-4a14-9c06-80052301dc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec671bca-f976-41e2-9b74-1379dad5cbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05193846-07d3-4637-9884-55c7c915cc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21dc6d32-5a65-492f-a9b7-0658788e81c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e294811-1c32-4e4d-bc12-22dbac46ca76",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4223fdb3-b254-4196-929f-623dceb0d7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4192a547-f000-4b54-aa30-438921d2c9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac52df93-2de7-48c3-b783-9445ccbfcc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1f5f172-fedf-4fb4-ae2f-a63fd49f49b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c310e5-af3f-4435-8d69-b2970a6848f1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a6499e-a1b8-4198-b8a7-59ccf535cc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4131a032-94d7-41de-977e-562f861669b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6e50f8-808b-44f4-b2e6-0815404f3799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "913d158d-6b62-450a-8316-77ce7129af33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474a8710-74d9-43f7-b290-c07205dd5881",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7958225c-e021-4eeb-acb1-ffe56f89e9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015e747f-92a0-4ba3-ae30-3d6de050add9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff85363-1092-4880-8680-f22b98c6040a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03f92fcb-44e7-4a41-8c18-30ed8b1b0a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae559e5-3a0b-443f-ab27-6a5295bb1ca6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b44f2d4-7e8a-40da-89e9-a01f8cd0423a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab74f584-6d70-4d36-981f-2e4ff0ab0b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca1550a-1cb3-4bcc-a894-6bbdda8e793e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a58f732b-7cb7-45ef-a8df-234971d58043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6745818d-b67d-4688-b20f-312e3b5d8592",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06568628-1104-4624-b1b7-8e39a91f00b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b383eb-1ec8-4119-bd96-fb09d5a324e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cc08da-310b-4670-ba13-a40c49636c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "920d3966-e278-403a-b888-fb569bc06cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6829b13-9106-40f7-b32d-a0c4ebced578",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c83ee3-67a4-4c88-8b7e-26d8a623c92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65bb9a6-db8b-4ab3-b7e2-2b2c42099a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20615e05-fed4-4de7-94f6-f60a1b42fd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "448b473e-0f86-4de1-8b05-6a6bdb0c46bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6b18e5-d030-4342-b0c6-47b9fd642f04",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01f51b2-150b-4f45-a6f3-ced50d22512c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbda412-cda5-4019-8bbf-33a0175160c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7dd180-bf90-4f41-bc4a-7ac7d4d8c36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bcfd27d-2b09-4b05-ac23-f9387f1fe257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c65e9d-93a7-4a60-b470-c3bd9c42cc22",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64989db3-c7d7-4259-a99f-3f4970f45d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1291af46-209c-40ca-be13-71cd6c01acd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d14e05b-0a98-4f03-ad73-ea5f35e9553e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37f30c89-5797-4b81-b44b-ebd5d9f304bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c950da1-5393-4024-879e-9949d77088e2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06992b09-35ca-4083-a42a-bb6fd7fa3bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ac09fd-a8cf-48c7-9b49-073fffda0334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77c00a1-cec3-4f84-82a8-ee9040bcbfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3d8ea66-4aef-4d0a-a7f1-0b1d3e0af9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ae208e-67d0-4476-bfdb-bd34b08ed1bb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0921c10e-44e2-42ed-8b60-8b57c14870b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8adb88f-8163-45a2-815d-9e10418b8754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83309e6d-0976-45ca-b848-5adbbe77e1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceff0075-08ad-41de-a44a-3e9681b34009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf583b8-5b03-4335-a1c1-d7535b36df2e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440ce02c-3bad-4f69-9675-39bc1e431df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a376396c-92b9-4ff7-aa55-efdaf3b881c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eeee15-13a8-48a8-8974-62dfd4518896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e833fbe-85f1-4455-bd96-c5655d8077d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06e186f-3e8a-48b2-a276-860ad7da29bd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02b36c9-e94d-4b22-8358-32396ca61d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5c30d1-4d07-4ff0-81d3-e5c9808bc060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5926d8f-9346-4f72-976d-dc2d69c58cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec031be-182b-496e-9cdc-3875c9f5d948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10d3c74-ed3d-4021-a325-5033c58f764e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfbe8d7-7bba-4b60-9312-6a4416f7d315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efa1e8f-200a-4267-83d4-426cbbfa9ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee8722f-afba-4f1b-871a-2a9f2140f9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7004df5-c3a2-4247-b31a-a54348d02d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83c0c69-d7e9-4244-95e6-3a30e7011a67",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8499d94-03a5-4597-80f4-9ba75d879dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1812521-2063-44ac-9d45-0897adc8f1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec082891-6a56-435b-8019-db145d5411c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b54a092-b7ed-4b61-930c-38a66b177073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e1cabf-e155-4b7c-8400-ca59e2fd0fe3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f1b116-5349-49d8-81ed-5c4066f91e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773c9043-dfff-417e-8d8f-8adfd5661f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720a8295-c1a8-4f64-8373-561c7fa1ee9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "399b0f53-926f-4537-886e-28cc75500fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf955b2-88b0-4c5e-a5a3-6ca73f703e7c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f176a1a7-88ce-42fa-9e8f-0b0dbb250d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d233c9-62ac-4806-981e-d5505a957757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4769e67c-13f3-4ca2-99b6-1965c14ac2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "193e899a-8adf-46ed-a3c6-b6cb322ac78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419e0153-dd91-4503-b52c-fde76fb499c8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86747f39-331f-4f09-9b77-e451268ab02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0737a4cf-f758-46c3-bfcf-80a54c1c3189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88571456-e10a-47f3-bda5-a4abae905b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ab421b-404b-49fd-9653-d1313cb05862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4dd282-459a-48e5-8ab9-6a4f2ada2752",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e926482-b57f-464d-86a7-4449ff10abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285edea6-4bac-424d-ac9d-338653d187e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e996ace3-9572-4cb9-9884-534ebe35e093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2cdfc0-71a5-4a03-a83f-8d65b25dbcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c823109e-a755-45d1-9f33-aebfb15c4e66",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9e8b2f-83cc-424e-88c7-118456d88743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df912672-5897-40ba-be16-d25f0c0a613a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2a7dda-7c13-493a-afef-89ea6b1bf70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e13a16de-5717-4ad0-b7f4-58620b5a2a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f305beb7-ad4c-4bf0-a1df-9be934a0e49d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88a0c6a-1e64-490d-af2e-44eda6581f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33735746-df6e-47b6-a69c-90635614d3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faacd295-5205-4adf-8052-3a0e5b33506f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f9806d-3880-44f3-a760-bac0ce90eda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6dad27-3fb1-4645-b897-58297b1ad65f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ab2327-b3eb-4666-b29e-875459e9be04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69245a4-b385-43b5-bd78-147704d6740c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241d9554-2ec3-433f-b5ab-9c9886f06b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7da7182e-da30-41de-8c88-9c7a475d8b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621a9929-6f99-41a0-9b99-ee128fceab07",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5884e4da-a02f-48f1-bf3b-b48836630f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27243f7b-29b8-45fb-b08a-a1fa11b37ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03924ea7-af96-4d81-8b5d-b5b21c8dfcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dcb242-1c78-4a34-80b9-f92aee8ea65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d68777-4aae-44e1-b20d-f70c42ce959f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1bc11f-9b58-475e-991c-89bfecbe4ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5e328d-dc10-45bd-8cf0-5a281e61763d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674bf376-088d-40d8-9d38-4fa936c589b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea44a1d-df6c-4d17-bea3-8e278d7b52b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec90cdf-5f20-4e46-a22e-f511834f4d07",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c12a401-a9cc-4aa6-951d-e3564937ea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24323cb7-6270-40f8-9d25-7599dabf545c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe238da-e4d8-46e4-83f7-0d4799590b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e326f549-6b1f-4a2a-8e92-88720f435a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176c2dec-1f5c-4283-a101-043544d944dc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d03a59-60df-44bd-aed1-4583fe38bfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4215897e-ddef-4ebb-a964-829f5d27741d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3b7140-2fa1-4b1f-bfc4-d56edcc8b8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1f9894-716a-4ac5-b254-2d463cff59c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e8c90e-a57c-4445-bdae-854681212f5e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68165fc-e478-41c3-b82c-541f0a10dce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22f62c9-2bf3-42b0-9f50-7ca639baf86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22934c2-3d37-49df-8cca-56b41e137642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed20a0d-83cc-4734-9f15-d686fec27c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b55eeb8-1641-4464-9770-1d6a0d001b03",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9242c1-0d6f-4bd5-ab03-62832d392ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2840a46-7542-42c8-8148-4a4f625ff0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05de9d60-ec55-41c1-84df-fc4af1d00b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "075cbf13-19e0-4641-988d-15a0859f2b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3d681c-d338-45d7-9a5c-123c884a1a65",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a47244-aa4b-482a-91ce-f1f80050e8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18bb8b70-0f81-4d86-8fed-d1e7db51ef1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7127eaa4-df23-4c9e-8708-c5f46a487f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27200353-f43c-45b9-891b-3f078b9a7272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b124f28-4bff-43b9-a7b7-a8feb1c88b4f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc4b2b4-4452-4763-aec9-79bdff3588f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b67a13-ac64-4adc-9470-dc926f276b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e055546-d4fd-4bd8-9583-b5da9ed617b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5edf1e-7124-413f-a466-519d7d69cfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0568a5-354f-4691-846a-30e5623258e9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1f933a-3597-47fa-bd75-95e2e3e8026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ab96e0-f01e-4129-8fc6-f3f27bbe86bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a5bb33-69ab-4920-91cf-55212b6e1e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cefa0ca4-e5dd-4286-97fc-ba0e7238f0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a704c575-ae5e-4821-9202-88b233fc1f11",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8625b16-11e5-4bcb-9c9f-bdf58cd64c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0d8528-781a-48c8-aa61-9fbda2553684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc0d032-d091-469b-b29b-10c8c9a70725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc5cd6f-6b1a-4cbd-a422-fcd1ff425a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70b265b-9760-4f13-b7ec-95c3cd453afe",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c5df6e-59b5-4402-89a2-38b6caa9d784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7823d2b-83de-4f25-96f9-c3b0ddc54e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489432d0-9fb3-4012-a2bd-1a07fb0624f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22b45ab4-06a1-4b94-8d7a-13633bc11c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b53e6d3-62df-4fb8-a737-3efc2ce645df",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf69bf90-66a0-4c94-bcf5-7a481091a6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff82ada-f4ff-411b-9475-c9049703523a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78a713f-820c-40a9-b3ba-24a4253b1c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f140c7e3-c2d6-4c8b-a286-c34d6e304b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6205ee5-028d-4e1c-8bfe-3e23346b0ebf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2899678a-9220-4d07-8b5f-71d7983ee475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b0adae-8d19-4a1e-ba19-5c2bf6f786ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da9ffd9-cda4-494a-b66b-08cde4928ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef28aae-aec4-478b-8730-56313e22ef6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaa52d6-b4a3-4b6c-b439-800df86d4995",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef4d6c3-4803-4162-b065-a19e75880ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925bc7e9-5a3c-4dba-9bb1-ba403ef9adcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05515c1e-7638-40ef-a58b-54d32cf09182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d756e13a-84aa-48a3-8699-8887815948f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a361e0a-28c6-49cd-aa81-774e8e9d89af",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c844ce3-c009-4f07-ad92-65567013b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b9a752-a3c9-4e3e-8b9f-d589eec6d9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b018627a-387a-4c00-9246-a36b5b68b6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7c022f-fc7a-4914-99db-3fddcba70bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11b9ffc-45a6-4a34-8361-7d43ccccaacd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103bfbda-80d4-4626-a931-9ccb6e083651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46720684-e17f-4121-932f-ea22b6b86e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3f67bf-1eb7-4a76-9cbc-94cc447e99d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f5d5b9-469c-4466-b6f3-95740aaf05ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c21cc7-4e7a-4b49-82ee-5021b1420f4c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f533255-29bc-45fb-88aa-b77882e0d332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cf4112-d879-4e41-8c7d-1b44ff9bbaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa49f0c3-7cc3-49cb-adb6-16c335d851e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ed6db5-a989-4f42-b5d9-a4357cde4edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd4db6d-d420-40a6-94c1-10e981fbbabf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142f9989-4454-4f20-b89a-129e4f5a0476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6f3d5b-1c5b-4f8a-beba-5451e97c6fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9736f5e6-1f10-4944-afac-a21b5c8c7e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1722f14-d850-4324-90c4-06feb384ea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613f7901-ba0a-4fb8-b985-138cc2f01e7a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89e3bcb-7b7c-40d7-9f83-982ad9e17ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f81a68-1b59-47ac-ae19-669201ef135a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4325f0-b3d3-4b33-ab36-88ddf99161a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8381cb-f0ea-49d6-943f-20c97d7e8949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d14ec63-51a2-4f62-8153-81385c145331",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fd1ccb-85e2-4fe4-ac31-c962f89d3fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23710585-6531-4f50-9740-10b9859bb8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d2e5ce-2939-476a-8305-08927bdd2128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78ff092a-08f4-4a94-b10e-83a155b35b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22fe79c-d1a9-4114-8282-32df4febb9c8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34a024f-ed81-4b38-b905-09824e124499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0b41ca-5838-4f7d-8c9e-9f14a3e6aa38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239ea8aa-0c39-49c3-80de-e711e5f8f060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab13f208-d246-4cb5-b6e7-dae2eccccab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d625051-05ad-46e7-bd29-f884e37dbdbb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5a35e4-da14-48c7-b22f-88935ee07364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c4c1a5-ff83-410d-984c-e0cc467e1e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409c2e4f-9086-4ba7-be3d-093d9752c8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14abe41-31e5-4125-84f5-63e0b294b759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfdf81d-3956-422d-8f35-c0db0cb780c6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14a31b0-9682-4726-bcc7-2dd006751469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3c8f70-9870-4929-9a5b-787995072715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b956a4-27e1-4efe-83b7-0486dbf6e769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "027b637d-e246-4533-89f6-fc7a72cc25cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0788030-fee3-47ff-bcec-dfb3d1edad13",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8526bfb3-dd55-4569-9aca-719565edafb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b25269-6f87-4cee-b29b-8e7f1dbdf481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d171a39d-3f8c-47e4-90b3-b593c785c7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a49605-40ae-427f-b7e2-24b26f4c1bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252f0ed9-88a7-4f75-a415-f03b313a4d60",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f55771-106b-4f19-9974-260efb76e29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a5b474-a3f8-4b63-b71d-8905a4835e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447e9733-a02a-40cd-9180-3416903969b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69b326b-31e4-4aab-a571-983a42d60d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc96c92-04da-498d-a98c-2d6172ebd1e5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fe422a-1944-4e22-a462-7e1341e55f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ed7dd7-ad9a-46fb-8b32-e69c0bd11ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace2ef29-c592-4437-878f-8b34140867dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b105c78d-5f79-465e-9938-ef0f6935e1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69964a7-e1ed-4ea2-acdf-e57fe23d6cdc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c494d5-c5ea-4e00-a14c-7b1d8103d1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1908e7f0-9996-4df7-92dd-728f55456f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da020fd-d7e2-4f9a-bddd-5b879a482763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4a777c31-4bb5-47b5-8f84-6e5f47c80cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635a30a8-604a-4024-9d25-c6a1a53e3acc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a29b1b-d7da-49d8-b729-93c809efc80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf59605-5947-40d3-a853-fa9ab7f591e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42162ce5-0b75-4144-93f5-91dabed6c9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5877479-a284-4ba5-958f-1376ba60d155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca37273f-7a31-4d58-92f0-137898ae282f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c6cf9c-dd9b-4e12-a307-35230eabf6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6c3ac6-b34d-48d5-b264-82cc89374cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3f5a93-d0c2-4154-9d41-457af8f4579b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f130872-4f9c-444e-94fb-3a9ecedae39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1d831d-04b8-48e0-ba3b-3c86a2129ea0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd7bd75-bad1-4d66-bfa9-9facf2017a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bcf498-8d44-4c11-abf7-d5e21fb46ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c5e991-3712-41bf-8083-1771da1eec00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c69e05-0c65-4791-ad21-002a7035633b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a5baf5-e274-4012-8b31-b2660b8b9b95",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defe570f-f51d-4584-9bee-a7e8eff9a65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c556f0c-3ec6-44cf-933e-a75f22448d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431b958b-95c1-4983-9804-dd3410fa0414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2949491a-ddf1-4320-b4be-c5840941a759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7939ee-f304-4b39-8f15-3f4d29de02db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019d273d-da68-48b2-a24e-6b94af5edbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb98e55d-20bf-483f-8024-9aa5a9973923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1276c8b6-2e87-4b45-82cc-3a0fe6bc967c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04b74da-dcd5-45dc-aad9-917145f82c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f11d96-7bd7-490d-bcc3-4cc1f76eb4c1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf9559c-dcb1-483d-95f4-41b8cc6cec98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cf2aa3-75ed-4e93-8d3f-3f4f3583c1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b007d4f1-d1c1-4429-b953-adc4c3dc412d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d383780-bf5d-49d3-81d7-f35849fd53f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9720de-5f23-4b38-a030-ac0c6f2ebb82",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c8db3f-5ad8-4d50-9474-66c3c7f0eb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35954638-f9b5-4b79-9f99-f3898250db0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fcff4b-12fd-41f9-b15a-481ead2997d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d06d696-9341-4603-8ec0-892862e119e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270b9f9c-0086-4433-be32-b37b57ad4ed8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ced1492-a7fb-4db9-9328-8a2e94d1151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587b9bb8-e7f0-4b67-bfcd-dc117452953c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff75a3da-7cc1-4591-bd2d-283843f16340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84b7530b-44df-4fc6-842e-cf06a0e5bc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeca2c6-3b95-45f8-a4b3-2f85e04d56ee",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb032cc7-7453-43ce-8784-03837d41694e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8a8864-a936-457e-851f-a693c47c6247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3723e3f6-3f74-42ef-bf8e-2d89c0103077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7905c35b-6ae5-476f-9e31-5b3fbf471c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c4e47a-b194-423a-bcbf-aebccf791b11",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc5559a-affc-4815-9048-69f414418c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68effcb-4583-4ebb-98a0-1f59632b3bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875ed518-d5f2-484d-92f7-5db4b8759db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eece152f-e669-470d-aac6-08cc738beea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8121a15e-739f-4d1c-93a2-f91c410daabd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b564a5fd-b521-42a6-a8ea-cb8874ea8658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b0ed5b-eb8c-4654-adb6-034684d59f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75da2369-ab30-4ac7-a107-803d090313d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67d47b54-f441-4c17-b675-8e0b5be18b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e35e7f-6c7b-4ded-bcea-cc030b5323a7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d4f6a6-bd2d-402c-adec-a715c4c8914e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9acbd2-11bd-4823-88cf-3c7007a74917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54fc34f-3e86-43ae-8885-985931ebe3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "875b36ea-5c39-41ab-b6f6-a66035897cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f64284-281f-4e58-a368-6b44195cc556",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fc522b-91d7-4ec8-bc74-07fd8cd437c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a6b89d-dbcc-427a-95a4-0000a8181cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76525af6-a059-4481-9d35-1c20cca05f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8abb3ec-554c-4203-9629-31ff331088ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8327a196-feb6-4f72-b203-a973610a4260",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067b2d67-3226-49c2-ae13-f8139e0af285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2324d710-e889-4ca8-b8ab-6af531708756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2874e70-4a0e-48a8-85e8-d3d247d8ee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce8c299-9b38-4281-b5b5-396f3e112764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5faa88-284b-45a4-a7dc-f246d3ac6f40",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9a4e0b-2b7d-48e2-8623-1287188ceea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc721930-ee94-4c2e-9dea-3f69f8e9909d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949ef337-f7a1-48d7-a394-57c9d52e6fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4420be6a-9573-49ac-ab8d-cbab00fd7161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86c84cd-dc69-4c6f-bbe6-4402652efece",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633e417c-ac24-4946-9ad0-3cf900c225a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfac0902-8779-4f65-8cbf-258d05d188d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09246c76-688c-4d5f-9b4c-6bd701a4d735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18b99014-cc53-48da-83d5-aa5bec558043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5e6863-7b26-4341-a5a1-5f9249306d22",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e374aac3-21c8-41ab-a995-d60fc9f7f338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac92c175-0e21-40b5-9b7d-e9cdebb4126b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fbe968-04b0-466a-a91c-9aff7bad1ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "983e2acf-403d-4494-afc4-382fdec90b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafc9684-d27f-46ac-981a-3e9bacf7f4bf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6dfd0d-7ab2-453a-864e-a6a6c50c53cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366ea323-ee7e-4bc1-a64d-a81a4da8ff3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d45307-1f7d-4cd4-ac34-51c88c515c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c72d0e2-7865-4af0-8822-010057b69f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae5b04c-8b51-42fd-8b46-cf053b307813",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca12883-ef1e-4bde-a222-6f6aff212cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ed9b51-a326-408b-9793-533f9b3501f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8655b17f-7fbd-4ae5-ae00-49e0517ba095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccebd1b-dcf0-4e91-a91d-4a4f3e504d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3244ca98-66c7-46c6-b637-99b144ec2444",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db12fed-fb8c-449c-a74c-ef4de4096a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6eb88c-0436-4e81-b0be-c213e248b61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576f991b-6f64-41b6-80d6-c09c75ec2003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4724d0d7-1da3-48be-842f-65ae4589ad4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4772c94b-0918-4cee-94aa-6e6ff07deac2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adf4d5e-c310-41f3-ba03-c89dc13cbe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8660d9-81e4-4ba6-bb7a-3bcec1f0fe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444f283c-5d1a-44db-a2a4-20891b00b648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b671a09-33cc-42c3-8428-8481a31b08e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c925ee72-a2d5-4c26-8900-5623f532b797",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919d6b0b-731f-418b-b245-c4c87a5c6426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82c4a0b-76ca-4888-b852-9354d703c147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f26e8e-becf-4506-955d-32f0c360dd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c9daf9-77fd-4e2a-b363-82bfc962f515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfee3b5-a9ae-4427-9dc3-d962ada87c78",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adfeaf8-afeb-4bcf-92a6-edbda85ece3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a81923-ec07-43c3-8a6c-6faad17658ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a891b216-fb4f-45ba-a4ff-a9a9f45f51f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3354ce43-7f37-48cf-8187-89323eb5243f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3fe55c-1ceb-4687-8dd4-9e6c1af97263",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc84f61-a0e3-4172-9d69-ea58892993d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfce1fd0-36a4-4c4a-91c0-abd20e0b5dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc3155c-127c-4903-92f7-44bae49f7f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd1bdd0-7d97-4e1c-b122-f33395b99180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abf1d9a-5238-4379-9414-bb25046baa35",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106da4f3-2130-4436-86ff-43665fb813e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3244de4-8fd7-4732-a2eb-77dac2d5f8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6baf3f2-3d48-4b8f-b656-85a210a0179a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d84ef705-85cb-4c62-baf0-dad10b6cd6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6244a828-75a5-49e8-a4cc-93ae232bdd19",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062133d3-9c70-4ab1-af03-56784ca4c772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98832661-8b49-4392-a0fe-03e6549f228d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea2e305-770c-464c-88ce-0b23d80a9823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f249b5-24b4-4b44-8393-f8358e3cd0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57c55f4-be8a-484b-a5f9-b915fd98eaf0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ed9dd5-e423-4f35-9443-7019f407ea71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243bd71b-aed6-4ddd-a518-d23e57a1541f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197e951f-39f2-45ea-971a-8bed9107d383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0138da5-201c-4a77-9e40-5697ff19b284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ce3fa3-3047-4b2d-aa74-ccc3f14943b9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53e285e-8bd2-47a5-9cd6-5932b61da9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7dff9c-663c-4622-bda3-ef4c97278eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afef62c-6784-4edd-b1ed-be433e44acc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d672d1-5209-413d-aefd-716500e2c79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab36ab2c-ef52-408e-9e8a-bbf7b126e019",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef043766-ae3b-4cb3-9146-c0f9c4d7c0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126a6693-b1cc-4397-802a-033cfa0d0a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4d0eed-ee03-4953-875f-2b8ce073c80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ea7b8a-47eb-4aad-9862-61d3a4fcab89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcfdb8c-bd2d-4d4d-af81-39e4599008af",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3feeec3-df4f-4077-9cb5-c87c55f07b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b812d2-a0f2-4dd2-9e9e-f5f17dd6da1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c6fbc2-354d-4f93-ac90-c3e22535135c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "785fa691-80c1-41df-b189-8e8fa7fe5b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37be26ab-85cc-4046-858e-17733bc1bbe1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a433bee-c9ee-435a-9dd1-276d8c2dedc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a83c74a-8dd9-4ad2-b548-8a487ca7fdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d8c22f-ded2-4d96-9d60-b4c504b927b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52de8334-0813-4316-96e5-cb21b898ebcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada3f7b4-2f96-4318-8dc9-f18fc3ca25e6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9343764c-8810-4e75-ad37-c661df4c44f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29266e35-741c-44a6-b571-6e1d6858999c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ce84a9-cb17-4e85-8dac-363c95bddfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b73717-e94b-4ea1-b3e8-5b99fa025613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481a73ae-40e5-4ca9-b5ee-9b603ab867f9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262c4d20-afff-4400-a015-eac7b289d5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fc3b8a-9ba7-4295-b479-2f3550c336e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e39aeb-3789-407f-881f-0eea397fa48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9076758-2239-4809-8919-8bde06cbb188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54888d8-0310-4c2d-9ccc-4366a1b1ff3e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d90d74a-6348-4050-9eaa-e74f790d2948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac77a5ed-cc29-435f-b339-a41bf1001eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a7f61b-70ca-4ebb-854b-fdbed5322758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01279b99-f3ab-4622-8d8b-a733b1ca4fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10de6baa-ff68-4c4c-85ba-7e2034224d7c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7896d371-4b6c-4e26-a06a-7b897fdd1aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a123439-42ba-4b47-a051-158a1df21b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b21f32-2d7d-4c9a-bdbc-baa232e8cb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c42b2b69-e682-431b-bae8-65ee815152c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96ed58d-91f0-4b8e-9591-80fa7b607ba2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2744d3f4-b630-4787-ae09-991b95a5efc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "21ad7748-5b7f-414b-a404-165fe0074ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65013032-165d-437a-91d8-ab8312ff8cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8bc8fe-ab64-4429-b1cc-7bef00de4ca4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73e35818-3044-4bac-971f-b430cb3cb4bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5273a495-4c89-40f2-9f87-e021702c357c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a19b5c-dee4-4890-af9a-d5470f2776da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4859119-3651-423f-ad4a-d8d5beb19e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284a3418-6584-420c-8644-839434a9fed6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d1151a9-9268-41f4-82bd-ffdef31fbea3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b57ab69-f28c-43f1-bb3d-3549989bd44b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29a3529a-d070-4944-bd7f-ee2f3f43ba6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99b520c7-0b08-4d60-9aa1-1bde7d6a05ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7452fdc4-8657-481d-b1a7-ed0ba192bd4e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b573bb2-76b2-4157-9fbe-001d2d933aeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e00a45bf-c0c1-45e4-9ab3-fd0b42113f56"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a02f6323-165f-4046-8fb2-c19831d561c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e49508c1-874f-4e0a-b993-c904d5dffe65"
                }
              }
            ]
          },
          {
            "id": "2693b452-76ec-47a4-b981-cf0f8d7946d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9130b5ff-ec3f-4497-8c18-b665c63da2e2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3940d2a0-c60d-4c63-9575-7b945a8ae9c6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22feed75-816d-43c8-9cdd-7dd8b058ba1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "adf19f01-a2d0-4ec8-a0dd-81dceded94f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ddb46a-b0d3-4c39-b00c-98dcc1a6820c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea2d7f3-c6fd-4c11-adc8-d26895fb7dd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c8d7928-a2c3-478b-9561-14bbeaac378d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "678c51ba-687a-46cf-84a9-60c0110d8ba8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7d37084-567c-4d21-8dad-41fdf47f96e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47207bbf-e468-4e25-a95a-fd5b01d9ac7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9080a761-567e-43af-8d66-acf328ff56c7"
                    }
                  }
                ]
              },
              {
                "id": "666484c8-9f2f-4ca3-bacf-36e8941454ee",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0974adeb-9592-4977-a2d6-77b617123eec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e98d8424-054c-4c91-986a-aec32b483a04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b5299d8-5314-4a81-901c-2f38919676ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1eaf68b5-7385-4609-9c5c-2bc6f3b2e6e6"
                    }
                  }
                ]
              },
              {
                "id": "65546249-d8ca-476e-9f8e-e51de974dd39",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2a3e31d-065d-4e3c-a6d1-456904aa1304",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f432e110-6307-42a4-bafc-aad6fcbfa978"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50676e0f-1dd0-493b-8797-a41e25e4def0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "55e41230-2a11-46cf-8ebe-035b686cea6f"
                    }
                  }
                ]
              },
              {
                "id": "c261f995-37fb-4069-959c-b3d825795061",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0a3a19d-154c-4a3b-b8d9-bf1a23228310",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e9f7e79-1af4-4e22-9ab6-b83b3f506911"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a87fab2-9b2b-4f5e-a437-eab3d1d06d32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dfb3cba3-2edb-497e-8336-5364bd66424f"
                    }
                  }
                ]
              },
              {
                "id": "cd1e063d-d302-46c1-96f0-b7000c538ec5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13c4254e-056b-4bd8-9438-257f37e6f9f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd881c48-e8f0-45ac-a2a8-ae35bfee553c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10e6bfa1-8968-4793-99a9-bdcb87cbdecb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a1a39bfe-62b2-46ed-8701-62c5b87d250c"
                    }
                  }
                ]
              },
              {
                "id": "e99cd166-17e5-46a7-9018-bb892cafaa55",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d2ad0d4-a586-486b-b201-55cabf361005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74d79c07-a99e-4fdb-9d3b-1ef550bb49e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c2732c7-c8d8-46d7-93cc-f759ca44d5d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6417dda-4931-420d-a1df-7e224c05e6ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d66dff3-40ad-41ea-a870-330b778f1bda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0a671bf-ef96-4dc5-b268-071b5b686314"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "941f0a10-19ba-442d-8024-8cda1a6e3200",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02b5ad34-1077-4f0a-adfb-8ba1cff540a0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ade5d6c4-a230-4f98-8ca9-ef04b6f59146",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5280ce1d-e183-4f67-bc99-a410811df79b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e006fdd8-e003-4d84-b08d-54db604d04ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0de3a833-d3e8-4223-ac07-58e1c0a8b565"
            }
          }
        ]
      },
      {
        "id": "07895029-a458-418d-8bab-67558be19deb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "58b42c2c-691a-480b-b579-616f420cca0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d4b618c-0ad6-46ac-8292-cc13039a1e83",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2811c5b-0b8a-4485-84c8-8bd5f1389f11",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3857c70-7ae1-4bcd-b027-22e7d586a4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074dde9a-bc82-4d26-922a-987a600aaa49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2db71e4-6316-4fbc-9904-39cdfab1834e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e258805f-69d4-4375-b80c-c50084ddcf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ee9cae-b8ee-47ad-ac9f-478b709d227c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939e4adc-bab3-4c21-bb64-954c5d1fa382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876d2ccd-c2ab-4ef6-bdc5-61f2c1069e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe383f1-754a-47ea-926b-17edc1ab9ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ba787a-ee48-4a1f-b9e3-1319cf9ccbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f62699-4ba5-458a-a074-d71a20e2e378",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae126a40-98bf-44e3-9547-ec413e2c262f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66d25a5-0a12-40e0-a960-6cdd6133413e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201c017c-770e-4685-91ba-b063c6e531c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e2dfb9-e704-48ff-a5b8-3c99a437abf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b529a7bc-9c0f-4362-a8e1-93907c489ae6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9601fa-7b30-46b1-a928-b18dc2f12f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd59bd83-4402-4b11-8629-d83c33f268ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464e5145-f704-430c-b8c9-51effe716033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c05ba9-ab29-40a5-8ad3-9b3a7a44ff5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4f569d-7099-4280-84ec-a51158de5742",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d9c8b2-2ffb-4971-b088-1a7e635f3814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ac94f0-da3d-4fe3-a79a-b1b8f245c163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0c7945-e0ec-4141-97c8-847baa6337a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc573de-a893-4b7c-86e0-5be6caf235ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b198a2-8a24-47aa-a514-b853169848dc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4a95a3-f64c-461b-a12a-b1bbf50e10d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66be0313-4504-462e-b6d1-b60b16009dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977d1b90-9348-40a2-ab00-c41f0397faab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0fb99f-d740-4046-8c57-91c544322911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42da4a6-23d4-475a-8f73-6c92fafd92ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69806e95-8395-4ca3-887d-bc207dcb4ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1b1013-3d2b-472d-b924-dfb78b130627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7f2e2a-c7ac-443a-b834-79cd7ba97043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf5463c-8fbb-4565-8e3a-510b8f0e4d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c486f1e-51dc-461d-9a7e-b026bef5a2d8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ccd243-dc44-4ac6-aaee-bed1e286dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da3fdea-89a6-4f30-bf89-6f1de4e1affb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124eecfa-5749-4665-980d-6be5eadca11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88726852-47a8-4f36-ab3a-c83d7204b41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561746ba-088a-4d93-9a74-25001b1d1338",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140d8c39-a43a-4609-8c61-9c445da5b091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7835ff-22cb-487e-ae50-fb89761d9a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2291bda8-f547-449b-a7d9-8af894ea8371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcc7d56-fb49-4455-adcb-848f6f02207b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e82838d-3e56-49fd-9864-4211d18ff77a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4faa6c5-bdd6-48a2-91fe-ad119b22ee31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c19b4de-787d-47bc-9bca-158d8105e20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c3dcd6-4175-4151-ae5e-b9891d04543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16e260d2-9d4c-484e-941c-d6911a42ba5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e0a041-da56-4dcd-8793-bf6815289b09",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763e22a0-fb5e-4421-9b84-712a9200f1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54b4430-2cf8-47fd-a1c9-d4c26d35c187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec4f2bb-0d37-4c1d-a970-08f175008327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "82932d96-d742-42c6-91ea-e629421d17e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677446c6-85a4-40e7-9329-24fcf4bf27ad",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658d6ac0-6bac-4943-a3c2-32d88f14a856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c63f209-1284-435e-826e-afacbfbbf906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55d1ff3-c108-4bf0-bcb1-9f114a925ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d24f743a-d8a3-4a23-8fed-da7ed7107161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5731125-5e5f-407a-993b-3285dc01789e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd490eb-072c-4b2b-8610-72b088c7c3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c8d7fc-8488-40f7-8a70-e1840a3653fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4ea9de-2478-402d-a3e4-a6238d8556f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85fb463-e6be-48bf-b272-9ddebbb8d95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489b7ee0-daeb-45f2-928c-b09573123b50",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8692c6-91ba-4260-903c-3a1f05a4ad42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316c3013-5625-4c3e-a727-fee3098234c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e22837-fe0e-4959-ad70-4359a568aa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc28baa-b454-4cbd-beac-0ea8ed770118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0236fc27-2a5b-48fb-becf-c36e4ef8ae17",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da64dae-00a9-4391-902a-f541d8cf4b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182b1e97-870a-47bc-ab50-a272e5bf6f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a30a4a5-661b-48fc-b0e3-7b4f000386eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e8b2d3-201d-41e9-bf91-ddaab7b76756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3cbe08-43d1-4aed-b85b-b998ff8dd8ea",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9928b2de-9e7e-426f-a565-ca76eb7e62f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b464f96-3d6d-4876-8888-f521f9f2046f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7169c0f-b225-4564-b0b2-36dc3d25cffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "36e891da-b298-4d33-ad43-cb367d964e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742a270c-7820-4166-831d-41acf686df16",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a5e3c5-f84e-43f0-b37a-9e3041b2e889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454dbdb1-fa99-451e-9ea4-10888780e066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02aad417-a54d-4220-ae11-be67a07dee1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f1cef5-fc02-4183-8c5b-83b422ab880d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1142b8-6e8c-4206-9af8-deac9ff19d5c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671c02ee-714c-4247-b33c-4ed076a9e860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224c6bfd-0995-4d83-9593-08c3cf3b11e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49524cd6-1ef7-4dd2-a651-0665d8767e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc445cc6-a561-4e4e-af87-664c26117723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692fd66e-370c-4c8e-9cca-2f079141db5d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548db672-6882-4e0f-baaa-591041c7f168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3acac0-bc22-483e-9913-6934247f08d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e332dc7-af76-43b3-ba75-28ab82acafab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca6d1dc-a418-42a2-8baa-3ac040aead4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75542e95-fc2e-4ada-9450-80aa9534eac5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df14d00-836a-4dd6-a8a0-af6c902ce4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d4d326-4205-44f2-9a0b-fb1023abbb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54553a0d-c64a-4373-aaaa-75f68374d372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6d7363-e7bd-449d-990e-b8515a055b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37df33c3-d906-4fd9-8f7e-7a512981d3ce",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670e2348-a5bd-4316-ab63-e500a82fb2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7f0400-976d-4a4c-b681-fe9e66943625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92198a6-8d0c-4d97-a8a9-9aefc36d34ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32fb2b9e-b03f-41fd-98fa-7f482dfbe5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d7325d-2d8a-4bbe-9d90-ec6ecd1c90e9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a740f281-498f-4bf1-ac23-2b302e91c5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c026ba5b-3496-4e6d-99d5-ca538fc7649f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a8b944-e1f7-4a6b-a6de-820d0fbbb792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a22913-e5d4-4b48-a4d9-55c74cf48372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3492d895-f7e5-4698-832b-c771c27bd582",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f199d1e-6ccc-4c7f-b43d-28b5c986812f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0360b9-30bc-4754-af9b-1b333fc48e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a8ae6b-136b-4148-8c6e-2146b61b6b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2755c3c6-123a-4866-9f07-7a3e001f1e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444af3e7-c1d6-4c47-9ca9-7c42422a8081",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cf614e-2903-4b65-925a-e111147a5bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254163c0-fa99-4bf9-8db5-7fe810506146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4dbc98-bb8f-47b4-ab7c-665fb31d378d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4d7513-5b5e-4fed-a5f7-6b84cbc34f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114c2092-4162-4bc5-8040-092a51173f85",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9aa1f6-d7f6-43c3-a2ee-e6c434207af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a01ee24-01bd-4d92-83f1-dc5570013079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a52cc47-dfa5-45cd-aa4f-f4cb5481ec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b808cd0b-0d58-4277-a24f-9ec7a180c791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef26c1db-2e00-4356-b14e-85df46351d31",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257c9788-5603-4209-b6b7-f6586b26e816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566060b7-5088-4cc0-917f-0d2dafbc23a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30d0ccc-d16d-4290-8688-eff67d8c3c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "591ac293-9c00-40f9-937a-c816deea3152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d8c5ec-6757-4d98-9b61-0b5549415831",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51715261-5ac3-462d-9b76-3aef157d0712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cccc52-ead2-410b-bb89-dfdf1b730c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e33d365-9d7a-4b73-ac35-39532218f701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18adb2b0-55d0-48c9-95fc-12a9ea06981d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20445bb-04cd-40a6-9e16-cae59dcc2890",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58661d8a-6530-405d-b717-d87ba3ef6b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f5e77f-60ff-4c20-9b6f-b93ff792e55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fa1fbb-44ba-46e4-92f2-a5f018b218c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "866a2ccc-1c20-4436-b4db-18b89d6d3667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017a25f5-8878-4c6d-82e0-b2f9ba67157c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b38ab5-2de1-4dc5-b5dd-2d30c6497e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46310849-9f4b-489b-8b2b-ca79b1df5083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048a93b1-108c-4e13-9e57-51472abbe2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f3450a-86aa-4c3c-bf90-2bce1e18fece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4aea11-2595-41e7-a80c-f412bb97cc8c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef6a71e-3f44-4cba-8699-cfcc067b4621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da626e7-8571-40fd-b1d8-c4e906890ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6687cc68-ac0f-4f14-847f-6c06adfc8925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d44a42b3-8830-4cea-8d38-5bd1e5a8f5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12829579-9e17-464a-93a3-85e43059ccfb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd31508e-41b8-4c30-85d9-c4d88843098e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6ffa6a-16ed-4a34-ae8b-e6a60d9231f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e317033b-6a8f-4a0d-a253-6b72ee5ac342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e5927f-21a2-499a-b7fe-9658b135aad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788bb581-5fff-4c71-93e8-81a57f09df92",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddccacaa-107a-4105-b1f8-1ff1b96c2d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485904ae-060a-44cc-b202-b07890f6f543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5eaac5-1b44-4ab0-80ed-45e2a83406c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4f5735-1e1f-490c-b74b-f48d4b48b50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390857b5-a08e-4dfb-b880-af75d063eac5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70d4cd2-9760-4544-a457-8526bc9e4ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b127933-d7f9-4aec-b3d0-5dc3faf5df50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d815aeb1-bb23-4cf9-86e2-52de377691a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da794122-e4b5-48d0-98f1-a71e941dea72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d3d51b-63cd-4c4d-ab0c-ea4bc55962f7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e9dd36-05ba-4642-a72e-d563dd654397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36edb816-efc0-4737-a09e-a2e8fd4f699d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9621d981-dd4f-4a74-8dd0-70a88e9840f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "370f58f8-b2e3-4b88-9acc-0fcdeaeb1bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf68ef4b-ddf8-4275-9ff2-cff7419ee16e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6f1955-9a53-4d41-b872-69cd8298c5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255b2967-0320-4f52-82a5-613a6f0b87c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61341c16-0eb8-43cc-b4c5-211620a38a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a47a047-af31-4230-8cb7-7ef25d4f7652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa5274b-2c04-4e3c-900f-540dac2c2ae1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9f94aa-83fb-4b65-89d6-8ec676c17640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2106f00-feba-4817-9922-2646a0d74405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3a8792-a313-4d81-bbdb-2dd43baf491d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06192da1-c5a0-4f44-941b-d0f280f8ca3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deba3f5-69a4-4437-8f78-b42877743c3e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99a2541-72d1-483b-a061-acc6e8f689c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60afe99d-cda3-4330-90fa-ae3a0f6a54fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdd7656-41e5-4280-a503-f40b7aaa59f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5151b539-4044-492f-b8e8-567acacae47f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04c8516b-91ac-4239-a9e6-d021d68846f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c58ab407-45d9-46e1-ad52-b99f151a0800",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2226843-a974-4ffe-a72f-7cf9efd0cf1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9edcd7a6-4268-441e-8323-00083a1ce3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00335ffb-1508-4567-b9bc-c106432e4575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a5f1a79-bc76-472f-824c-1bcdfece8fc8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44224a3d-64de-44aa-b270-d8b6bfd5475e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6bc4d1b-c9f8-42c3-9655-827d132bea1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85a18898-05fa-4b96-bcc2-58fd29c5fd3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36dcf9ef-a351-4420-b97f-f8c6f57a2995"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65aa1a39-c4ee-4542-9274-cb3dee9eed9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9b5a0a9-6ac5-463e-82e8-aa3f1b655e4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae68b687-5f2a-4145-8f0e-f54aaad59e32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0d899d1-27dc-49a2-a403-b0f2c6827297"
            }
          }
        ]
      },
      {
        "id": "01e02180-6d34-4e84-b91a-9bb8a6356803",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "859fd9d3-4d58-4889-9e53-919e88011276",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02ed1940-9bd0-4aa4-a329-7f4384b86e18",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "965f1575-c4e6-474f-8721-241c8d56b943",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0302fa79-0d43-42ad-81a3-4e404fecb671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224b0921-3931-48b6-91f4-57c9167b52b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb50588-8361-4726-82bd-9d0f06483aef",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17121dc1-adb0-4eae-b807-619547c03b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867fb7d7-51f9-494f-bd8b-c0c1bd9806a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4567e701-9365-47fc-ac60-96b6254deec3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0bfafe-a238-4df8-a170-acfd57fc44f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6847ce-1b4c-4ddd-b724-e16bc254aec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c0c79b-0c7a-4b5d-a56c-deeea826d739",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a332e77-de2d-476d-b2d9-7d27678ed8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9164b2ca-a2be-40ad-a05a-420b8c39caab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886e9be5-5578-49d3-b273-cf8cac1778a2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd03280c-6742-4935-a4e8-423c1aed1f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc6b3df-fb2f-4d6c-b975-3557e7297e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b378e5-8376-47ca-a11d-1b1eaf0c8c7f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c312bfc-4f1f-4475-8fcb-8d0b46ff652e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf89a60-bc55-489d-9979-f1bf1bd860ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6286ffc6-fe2b-4bec-88a2-7d5fc6ac7c04",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77ca795-12f1-4c75-b085-f13ee3559411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c8fc38-dd4f-4aee-a665-3d93d5146551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb99e240-714a-4a52-965d-b5ab541e41b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ef0a81-f740-4302-9fa4-b31d9c0b7e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0af110-da89-42e9-930d-3e1bdd1183a4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f185f6c-dea3-4af6-a0db-95312faa85f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddac7f4-3268-45fe-b641-e78edab4f2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf1b3ec-65e7-4006-916c-a99bf0d20e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22d9ecb-44c4-4156-b573-0236d54e85bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6e7f21-fe17-466c-b521-3f0e3fbd767e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b01c702-f2d8-4454-b181-8f92d5e27578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b466240c-e52c-4cd9-b004-f05d61d17736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cffd56-abeb-46b3-9362-40575747d840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9671bade-5a49-4d41-813f-9bf342ac7e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc0038f-d347-4697-990b-022cd475d35f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82dceb8-cbe3-4d77-80bd-63c9307adafb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ae977a-fc4e-4bae-bb76-dc8e8a0de666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e7a094-8fb5-4668-9e2d-079c769fc588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ab9378-13b1-445b-9474-f1fd4799f774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69010167-7b48-4bc3-beb1-4f677605d84a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6e1424-417a-43f3-8716-77552e7e4366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39109e5-994d-45e6-aef5-6660f2e71b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ac2ac4-7f82-4ab6-aa16-15b5137d4e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3ca6b0-1398-445f-8554-ba832e468af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2640d842-d00b-4b01-88f8-091e0b19cd8b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031ce941-def6-4997-9650-46991e4d8e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58483c09-0981-4670-b1f3-df1067e1f159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016cbee6-ee83-427c-81f5-e7ba950b699b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04c67c2-fc6f-4c9a-8c24-eb4712753c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38183cd3-8436-432e-8ddc-fc8ec1af853b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600c368e-f22a-40a6-a91f-59374af3b9ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d4c009-0054-4eec-a9ce-449a5359b8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713b7de5-18f1-418a-9b56-c1876064d9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40746f9c-ed02-4769-a67d-01831de709d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76759a73-1073-45dd-afe3-f151155f7363",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37a9aa7-d004-46c6-a110-2a8f2fec41b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac185f8-22f2-4dd7-b527-415f269f49e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76ee172-63bc-4569-bc72-dc4ca64c86bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc63cc2-7434-465e-8ebd-940072a97990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18267878-f3a8-454b-bd51-50e30242c17f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d07610-0b7d-4873-8364-9cd49192ffd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c21d1a-1c55-4175-9918-83e7ce86c658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cdd238-5444-4c81-a7d1-cbd3695ed611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341955bc-9323-4436-97a3-89ecd37f3a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa6b604-763d-4eab-a611-0fdd07e38aa6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72e0f08-da39-4b88-b638-96011ed4d5da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4669bde9-01c4-4205-9bca-f4e24113e726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748798b5-2a24-4c98-b293-c29270beab36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c38f268-a6c7-4777-a846-fbea189548bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20eee40d-0b52-4578-b0f5-9de4007459c4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15e6fcc-3e09-4439-b735-909add0069ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec57f9a1-a584-4cbb-ad03-d5addd81d7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65bb67e-439c-49da-a1a1-fadda0e42b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3146877e-a254-4c9a-b07d-edc0474759a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69aacea-5a28-42a0-b590-fde1e69d6598",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5cdae3-58de-4aeb-a7fc-3e7dea515c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd77875-8887-4fe2-b799-a4a661b62d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcc7f83-ad40-47c5-9bf6-14a0956e07d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07396e9c-4cd3-4ea1-bedd-8fa0bfacc204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11e2d71-193e-44ce-8bf3-611dc8db782d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99bda67-4c7b-4af4-bd56-8aaa8077b9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d7fb5b-ae55-431b-996e-f131c9b0bb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e074d3db-6656-4201-b01a-5cf97d97ba7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f86303a-c923-48f2-8854-09f65fc2add8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9199cd28-1402-46a6-a075-bb852bc89f55",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d2c500-0b21-45b2-a81f-85d09e317714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0a3bcd-c4ba-4fb3-943d-afd916c3550f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b951432e-9e66-420a-b03f-d106d1c27388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1580d5c7-c153-4575-905b-70692419ffa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f99c838-1057-46b3-bb5a-7675c59a9cb1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b127303-dbd7-4178-a6d5-a7baef07fb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5adc4d22-df59-4040-b3f1-3085c21e9e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b65d095-d5ac-4aca-996f-eb123579ea26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae035bd-61f1-4c47-803d-d034c87fa45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db2546f-6bdd-458d-a9a1-be76e3ce8c75",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff25a83-8d6c-4229-9a4e-88199c8f9155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63fbd67-37a9-4c83-bf29-51067d40fb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd01031-3ed9-4a92-b1b8-ccc4b9cee90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cc4dbb-992f-4c96-8368-e89c12e8197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdd934c-088a-4978-9ed4-58fa7677ea49",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15778a9-9f14-4c7c-8026-b64ac39ce526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f867a5d7-6874-4d98-ba9f-bba5509902a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f47ba3-4960-4460-961b-3ca09a4587d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dcda70-22f1-4da3-a68e-89fa47f6c2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22775e99-c9b6-48c8-8e37-e76f5c88095d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4836d9-c078-419f-af11-f193b28fbe13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69338793-5a49-4d5b-9ac1-ea1dde95e8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ca0daf-385c-464e-99f8-e7d3e5927f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbf9db3-eac0-43fd-9ccb-ae9da8dfe2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9f8919-8ea8-4c6e-96a7-65b9f303679b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e2e8b4-78e8-41f3-871e-7ebe6f87ec87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee11f02-40e4-4341-99e5-e3da5f9dbd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d727df7-bc73-480c-9716-5b633fa59e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d9e9cc-e0f2-4b53-9e85-55894ced8592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3572f2-5ac1-486a-8cc9-78a3373e093e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7521ca0-f2d7-402a-b997-ecd1abed8c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db818d5-f2c0-4c85-9135-d8e34589c5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adba888-af89-46cf-9b8d-06f756353de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b1c9ef-524a-4f33-a031-615d31f1cb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3910e85b-0b1f-49eb-9d30-5a4d195d1ec6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4a9e32-1d29-49af-a3c7-e0ecddcf6803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273163ab-7eb7-4541-a0b6-6ae7b6b339cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bf4cc4-e1fe-4905-b42d-b72d8b488086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c420aa-9a6d-4fb9-b975-6bf865576ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df560f39-d71c-4ca9-a22a-48b32297de47",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b694c4-489d-48bc-aa5d-bec0e57f984b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0c4b1d-5168-44ef-be0c-1288540cf3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119f69cd-f1ef-4633-bee3-6572a50c89e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35de9e2-cb8b-4e92-83a4-67a7576a3ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fee4bb7-cec8-4729-9c59-82359e9381d6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff42de6-c357-4ec6-a44c-7d75472081f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed3a986-de86-4af1-8461-4e3444b991ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0973c116-52cf-45e9-bb78-40109f873842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87a5dc6-6fe6-45db-960e-8d9ff637ce85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9a9df4-d795-4f4d-a7ce-9a69e5d9443d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d57edc1-305d-4990-9795-7bbe0805a9f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d108c5ae-27f4-4fb5-a39a-d4c69a38987c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a49594-5e07-4739-82e6-1e2b2d09edd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d21fb9-6c84-4a65-9f72-1891cdcae672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926cf697-fe3d-4257-aab6-58ba5b6e70a5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42078260-f24b-4538-b3c0-6870ed2cec81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b77794-7ebd-4680-957e-c7f2eae8737e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1e7035-1386-46d0-b924-886ce15a626e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5038d2b-2eba-4007-bb8e-3ff6d2163d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b52a670-3e20-4ad5-b804-396ae811ae9f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57db9f2-1103-4136-81b5-6e4e0db7da5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd0323b-dbfa-4302-b838-1ae50a6e7f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3787cc6-d2e5-42a6-a56a-ade933a1c62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dc50d0-2e82-448a-adb0-47c83f27abe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a67ad8-857b-459f-9160-5bb268bf230d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408e3b44-a1bf-4d7b-80c3-dc75367cc49e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f4030e-48cb-4867-b80f-3e5fa07bc6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fad705-20d8-408b-a994-2faeac9c442f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6486f9f7-9988-4ce1-96d1-d3ebd2be3cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bb29d5-8cc8-41c0-a988-284e85b96be0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16afcbe-d81e-43c7-b4dc-a8d666b5c3e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1704d8-3fd9-4b0b-b635-eaaa71589744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7147ea9-23a2-40dc-821d-f58e2712e66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d88196-f8bd-4c71-9943-ad7b976fa5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76090350-8052-411e-80bb-b5fadf63264e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8baa10aa-12c4-498f-bc9c-9023a297e2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf76903-7a45-48c6-8e33-6b93176be68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e63e42-6b2a-48d2-ae6f-e48e0ab88d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd7c2f7-c794-400a-91a9-4d99488ba86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c5fc60-0496-4a75-b9a3-8cd4f8837bb5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bd12fe-406b-41c7-ad9b-1c25a68db806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb5d9f4-3a37-47ce-a050-c264daad64d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf72c6ea-7c20-4cd7-b98d-5496a5509b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ecc1dd-43be-4c9f-aba6-7c0c8e724dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf1d8df-f896-4dcf-829d-d3c039e5f95b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4bfb4d-fdc7-4322-8073-c8679d8a3df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b2970a-a215-48e9-b3cd-a32362ddc466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcca744-66a4-4143-aae4-b93f3a034f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637f8d4e-7ac9-4803-807c-634bf23ee3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3062ac85-142c-4f10-b0c4-b315d0a9f2d9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2856e80e-47f8-41d5-85b9-583fa28787a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e2547d-359c-42ad-93d1-f8eb8753828f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e144101-3ce2-4a30-aadf-800d1ac52215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be4e25f-893d-46f7-bd65-0cd65c813e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344079b4-e48c-4997-a658-827624f94fb2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4321a4f-5ab3-4268-80a2-5a6860a792df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6400141f-9cdb-4533-a2b5-6fc71e97b767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79b46bd-6923-4282-a7a9-2d7a3ba644d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca430652-7050-4a49-801c-2d326c5eb9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c78f93-2459-4f93-8997-7e4b051cfe1a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4331c89e-cde7-4d76-a92a-214023ed2b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a97ad2-a9bc-4f31-8b85-ef7eaadff218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47e4856-d3f5-421f-a107-1cd20bf88864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bbae69-cd69-43fe-9a92-4a9e3dda91ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33408ab8-9845-4f4f-8928-672b9b5b33e8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23dfa33-4d29-4a69-ad2a-c79415662677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8a0837-30a9-4f1d-b0b4-abb3874e79aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7bbb32-3856-4356-86d6-171d614664ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188a0f61-3848-4ffc-ad83-3665e4eba315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5c2b3b-a25f-4983-8903-26a2f05ee462",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667ed6e8-f4ed-47fc-a629-eb0916ad4168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafcb77c-0e61-4cd4-af89-35bb05a67530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bae9d84-1a31-42c5-9a11-6294d84d3a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58528ca-dcea-400d-8d03-314835a93b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c038aa41-7b68-4363-8389-448d1c2bc9fa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91086ce2-9aae-4545-a728-9d8b542d94ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffec371-af44-4a11-b9a6-cd0cb1f74dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4872f59f-c608-4b1a-9e5a-0dec305c0eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2235d66b-e7d8-4478-ae08-b5ccc24f59ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6759e0ff-fb72-43b3-81e0-e5305ee085a3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8208531-8ee7-422c-b342-922de6ebc399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f188bd1-77bc-4fc5-8c66-6e5dcf332181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943e0643-4625-4a7c-8b56-b90874cfcb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72dbd33-5d5c-40fd-86d1-ef888d745d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011233e2-3ee9-4828-9277-6b518acebb99",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5feb209-e31f-4fee-95c8-d5c0eae06224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cadb280-b6b9-4ef4-bed8-9870fe3d9695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1a7c6f-6330-4f82-b898-82e50b6f51bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf02efbd-7fca-4328-8ebe-58f220c07e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcc0a69-af48-4de1-a959-a98b3532b667",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b180a7-0093-479a-8d3c-fee33f67f014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040b0346-cf7e-42af-9759-a15b0b725ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccb1513-d15b-4b7d-b8c5-c8e4575379f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c326340-acd5-4831-abcd-c8d4b270e494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2ec161-8971-4a21-a0ef-e67de812417d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e37e02-da17-45b5-86b1-90692a317eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae64ca56-256b-4ac1-aead-cc708199b0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a79f998-7f99-4d58-a10f-ed4babbf7d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1128fae-80ef-4794-89d7-0322578ce4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3654199-99ba-4a74-9cf3-31076c5b9eab",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4198c7-d922-4791-aba2-bd0de5561559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f2b5ad-d05d-4194-b226-84144f47a9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2614a38-dc28-4760-88e3-ed79f461687c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0e42cf-14ea-4aaf-ac9d-28f6b095866c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41672d18-53ca-45b4-aba5-5e9b52ffe267",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a24e962-fc86-48a9-bb18-c26a9accae60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814c087f-731b-459b-a6c6-44a755b557c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9002a2ea-33bd-471b-b9f2-4b6bf12a787e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6cef2d-a4db-476d-a31f-176ca2d18836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c0de2b-3cc5-46d7-a087-eaf3b9a6be32",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d342772-1227-466a-8296-b0b6417e7940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18cf6fd-e70a-459d-9a93-7f7724cfc895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489edafd-65b1-4c00-9033-fa1eea20a623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d829a2-a969-476c-999d-2fb7313e25a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb2027f-5395-4be2-997b-c9b294fea76a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d234e8-a1b9-4751-959f-7f3faf0118ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c68d24a-f0d3-4390-941f-9702a9938f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec67a8f-1799-4315-8b10-e7a64fc9e2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b6751d-96c9-49a5-a908-306d3eac1152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f158241-0275-41ec-8fec-ad26dff1e97d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b10cc5-65eb-473f-b83c-82f788d5eb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfa3933-dfd9-4890-81ab-b9e2f7e0473d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b743ab-bef3-44aa-9b08-206ab0ebb409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822b9092-e468-4ac7-97bc-45a50509a662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150f0470-1bf0-42d2-bf69-619cc26f8c17",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84f0ed3-9153-4a51-afa5-72d84cde5c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67982c7-eb93-401d-96b7-1f4939a61408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3743679a-1ba2-4ca6-ba44-0be761da49e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c01e2f-7428-4fe6-85dd-43da5a9eb763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43877db-973f-4aa0-aadc-ca1b660cf685",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09234ca-768d-4a86-8386-a69c708b5199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f94c1fd-e85c-4d9c-9e04-36cfe8a6db5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992be2b9-865a-410a-a022-9e7fd0600643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b452938d-0917-4b9a-a6fe-d3474d567e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8554a583-8e0f-4e55-94b1-d92fcec84ab7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ede1667-e8bd-4bd6-8706-e5ef6976ae29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a473b4-f637-4aa3-9926-150447ccb882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d419d237-cc54-4323-b533-1c8ec9e94094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a695286b-f2a6-4064-b878-cfbe69791a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e151b4e8-c256-4b76-9a5b-2d2b1ff94177",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39b4523-78c1-4383-a8cd-377d5898c1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b883b59c-68fb-436a-b63e-37b0543e154b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4e0069-69eb-427d-b9f7-312562fcc83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3666d4a2-7ef1-4a4c-a7dd-d4118db87e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d3ffca-0193-4eaa-8b97-2b68da64eff4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9fcc03-d07c-4e08-9a5d-280cd8d5da55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c83c969-0b04-4174-94cf-be697ff0d5be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ce54e0-a921-4c0e-8b7a-cc2a8a57dea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0bf23c-f2a2-4a1b-9510-aefaf81e44b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d809237c-7ef2-444d-8cb0-1728c790b5c8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48fd5ba-968b-4259-8d1f-ab23abe714db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb87b972-ff68-4715-9755-6f2078292d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bae7f4-10d7-452c-a19a-b5549d7d8f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb04470-7505-4ec8-9911-76fb7ada3740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e57105-c713-427b-b85b-6878cf289a7f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d02f177-0481-4041-baa9-91953a999909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16060421-a587-4175-a3c8-d297c2082cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16055965-f7fa-4d53-b2a4-8ee26d246fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd93d30-ad76-42b5-b1c5-9b7aad5363f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e827e7-5492-460e-80a3-71fc4ffcfaf6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cddb4d3-589e-4a39-bba0-6ad0ed41c014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e69bd8f-bbb0-46b8-9f4f-8ee09f5e244d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15bc85d-7316-4ba9-b3b3-ea4a09c1d50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19209d0-2e06-4de1-b5a5-042c075d235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869be570-63da-4523-83aa-aa4134c301cd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dc496f-9407-4d54-b58a-e190d0e4af3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af9c4f8-af41-4ca1-a594-38afbb437c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413fbc45-d7db-40de-9a52-b625b87e2de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab12e24-40b1-49ee-9a7b-ccf259a1d677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c336348e-cd3c-4383-8ca2-8ede982e03b4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f597e25b-c274-4f47-ade7-0e5e0f8b2c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604fe9bf-66f8-49a2-9574-09742c0a2b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29128ba7-661e-48d7-b528-67af6c18c3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63b9d37-faa1-4325-80ca-20660fad2ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979f1ea3-87b4-4be5-8cb6-5d1dd7834c4f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab83b774-6b97-4e12-a0f5-bdad9d0775f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7091b299-d9d1-46e0-a61b-342fa867abae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d3777f-503c-4ed8-ada5-5585abf56660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76536fb5-9f54-4f3b-8daf-7821277b402c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ab890d-c42a-40f3-8886-f0775408aec4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2941bdeb-b4c3-408d-a857-76b4336ee58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7948deeb-9d91-4283-8520-095c7ae1449e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a889360-2edb-4e22-897d-756078b97c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac25cc96-3764-4df7-8037-1229f4180f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef19de7d-9daa-4975-ac43-f19aff2f27e5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9721c5ee-e26c-4ae6-b366-d2907a7fe97e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e692bc-0a4c-4c96-b891-d09e5f3e41d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b264035-2be6-4a16-bd2f-c35770154027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1412b084-813d-456a-b9f2-9d862cec6ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ce73c3-dcb4-49fd-827f-01f8cf2e67dd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491d660e-ba82-4271-b933-1b5a5037b2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4c1c07-1cca-4051-b2aa-efca068eb454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1ae552-f357-4957-912e-760c3ada8a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ed4454-c8d2-4ae9-a18c-93c6bccab10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5552b86a-ec2c-48f0-93fd-8ed933613976",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5287cf-1548-4895-b7c5-342faf95f94e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7828e7-d4ad-47ec-81d9-875b2a8002e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc57b660-1abe-4dbe-82f2-778308662fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde8ae7b-6005-405e-80b0-d4e2764da189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294d05c8-73f3-4dae-9678-225537f11b43",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdfee77-ef72-49a5-bc97-7502beb49cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aabedcbd-393b-477b-9518-38b2fa5636bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808d2089-c506-42cd-9b58-b4e7cf42c75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f1f86d-e2c1-42d3-b249-10eac00e73bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357e0896-48d6-4677-b0a8-ee9b86e1ee31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cff51a-116c-45a0-916c-815d3e1cc463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a48eb93-4100-4813-8e2b-7839b903ac26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e549d63-deb8-41a8-bab9-19659a77b89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b4aab7-d545-4b1c-81b6-6b01491911dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d795d6b7-dd70-48f7-a070-90836aa90b0a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec61ab8-cc7f-4f8a-9fcf-401552ff2886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d345301a-44dc-49e4-b14c-67ca86542936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16737ffe-4fa5-4693-915b-2cd9f56a1041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164cb80b-e719-4047-b5e3-4ce37b682b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da426ac0-8b88-4d8a-b0f9-b5b8860a8f81",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d18038-5784-4561-8b0f-6b49829b9741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c3ae75-7a8f-4366-9eec-2fb220b2315a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c2143c-c531-4eb0-abe8-6111b17bbc6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a987b8d8-856c-4f50-922e-81a6b4034a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add5ca2b-7c24-4f25-b436-f6f9f87104d7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12001b03-2e69-454a-876d-5b5fe95765dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9e09e9-0b2f-4bff-8b33-88493fbf797d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa09657-68b4-436e-a9e8-f3119fe0186e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9224ae87-88f7-4aab-a7d1-b50a2ee75581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17569b06-0a8e-41a3-851b-a150ef43bfc1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce71cc6-a3f5-48f5-94f6-545dffa9cd1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d947ae5c-3553-497c-bbed-4c36a739309f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776d0d0a-cc26-431c-8da6-f6785d1d68e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8797f55d-f197-4822-ad85-b2a3213cd24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28fc4ad-7fe4-40da-a331-574c6f455ca1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2bb832-af4c-40ea-8d1e-fe120e7f0247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a58778f-6a28-4019-81f5-a536bfa447c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2a8c8f-e16a-4de1-a4fe-7ec1d9305b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9f8d68-6f9e-49db-a286-e375df86b4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d207287-ee2a-47be-9941-3714aaecd70c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d69a176-dcc8-42f9-8a15-088f70a04efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e888686-93cd-40a8-9a00-4ffc4ab8e3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3fbe08-8aea-45a3-b68e-827fd37103fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0102c114-9056-4c1d-b903-8d368dde4672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa9c329-6298-468f-a5ee-359848fae84d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b6e9b2-da67-453b-8c3a-1337eab0ff5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7870a44a-c40e-4a84-95ab-39e8eb33c330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d436858-f5d9-497f-a037-375e1ebe5c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c3b766-6758-4ec7-884e-2145c834e9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d5e3eb-9c1a-4ad0-ade9-52ebe9054fe0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71b4e25-4fac-41e4-8cd4-772c5d52d813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a05dc2-1b4b-4451-97aa-5191d120c466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b8e634-6f9d-4030-9e84-81747e2fc9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9392a26f-1fab-4207-98ba-1dadd6678845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68f875e-c9b7-427e-a394-0206f28f8203",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2688c7d-648d-4bbf-acdf-86b1059d9463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4565ba89-05b9-4311-967d-dce8c00f0951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ca9c74-5c7e-4c40-9bce-fc5137116812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3a8b97-6036-441c-b6c8-ecee75ddef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6558831c-b927-4993-a97e-926c533e5b82",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4663a036-22f6-4d75-bf63-5d8d9688ee36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881ca73c-713a-4762-882b-a1ba2017b85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befb32e4-d158-4c9b-a1d8-85dde1cd3535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01d1687-d737-4462-b92e-8c066d162910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94734d81-399d-4925-9cdf-55563d33926e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8603537c-7237-4c0d-b100-5897e964feb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a82dbe86-907b-4702-96ed-8d4a0f38e96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fce6d46-fcea-4fe9-a626-926f2b191383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61909a46-2e63-43dc-919b-76c6181fc322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b50e598-0da2-443d-b652-a4d6097047da",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cec9be-9d1b-4f2d-8316-c3d32e548374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca07532-4de2-4b48-a58b-e9b969ef102b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366953eb-9ac3-4c26-b6f9-75accb7eb358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa687424-c1ab-4a47-aa9a-d70675279229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1153fa7d-838c-4585-a104-ab32a5e5791d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b158440-e88e-4ffa-94a0-b30327d860b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "738165c7-fc97-4cc4-8623-e6b30c5ca79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1310ec-97e8-45cc-bce5-e778f8977437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ef889a-9c90-45ef-8981-6c7f46c544fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84effae7-52a6-4d17-83e8-d76ac9e5018c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a37118-df80-4988-8637-e22d63575d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb76e591-a60b-4a06-8782-49adebc12119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19159fd-0742-401c-bf97-4fd9b88f0a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00cd68a-e153-47e8-8c84-ef5aca60dc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3280c6-66cb-4bf6-a625-8a3bc390b281",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fd5e82-99fd-4be2-ad23-df48d6855048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b8b803b-b2b4-464a-b4df-336db9cb1cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424c5c1f-4066-436c-a468-271389492481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f13d06-bf86-46d1-8842-45ab05268019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00a1e7c-658a-46a4-8c23-d648647f19cc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373a9fc1-7853-42f1-a68f-63d7e1a47911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac210bf2-54fc-41ac-9856-7234465d30c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e05be56-caae-4035-8267-e29b83f7766f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1667dec-f3cf-4435-a394-f02cdbb65fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b313e8e-3ffd-4b88-80b4-ebeec2b58a39",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5133e2b4-492c-4610-9420-3d02c5dbd4ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df32f158-1237-4028-ab4a-4e7e8b8dfa96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d94e910-0f3e-4783-90f2-474634af321a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5698d6a2-bac1-435b-aa7e-964c14aecdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b589720-7cf8-48cf-9827-d2d3c8555b29",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5da05ab-567e-4960-98a0-03afd2994ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1845144e-60aa-4a21-896a-6ce13fe28b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17555e8-4527-4e2e-9aa9-25f12e3abde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fdcfd3-b8c7-4495-8f57-0d0ae9aeb712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5661e5be-9ef8-46e7-acc0-3aae812242b9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365b03c3-e75f-412e-a47f-8bdc47ea3e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d51b5ff1-3ccf-4232-aa1b-27387db45053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e34298-08ba-4c44-a59f-2d7c3618960f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402e0ebc-f6f5-49c1-afb1-2151bd9c95f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8677d1e-de91-4419-8fc1-5f6ea8dff961",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff34472-02f0-4c2e-a16b-6e14c50664c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b03bf0-3e20-4bad-9925-1eb738fdf80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3bf21b-944d-4c4c-8931-9b5496bd8bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7029aae0-6dde-4bc1-95c0-d758506cb574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375db1cd-a440-4a84-933a-944ecd7dc549",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91af8ff-8e0d-4aca-b5b9-c7c1278921d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27dc23b-6c03-41eb-8a0b-8ec9d90e5f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df66bbfa-7722-4a0c-a69c-e0a523655beb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6f347a-aabc-4fc8-8063-0704de220dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6002a6-bbd2-4325-b1de-efe969088d9e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4fe549-b546-4d8e-ae5a-b17ab93dd3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e0d7b1-b4ab-45df-a997-38b33027cd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdd9363-2bf2-46dd-90a3-68a43c0b2184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35aef7d9-1e97-44e7-92a6-efa3c040061e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feca264c-4879-423a-821b-13f5e61a3b1d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6fd0df-b590-402a-8691-0c075de601dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "613ade34-48aa-48c9-9c69-64f2be19c1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e98f472-839f-4310-8adc-51ae010a0265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b230dd-06a2-4a08-aef7-bb91db43449d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5b64e6-d00d-4dfc-b508-3f5209b746f9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d15b3c-d9ca-491a-85c0-4a4d718f4e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce29c29-3a77-44d5-b78f-f4a81365fb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af1a108-d204-436e-8dc9-da4471c962dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636547a3-64f1-4601-a564-62e8d4bb28ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fb9df9-380c-47cf-adb0-70ab27160620",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92080c22-6e5b-4d0b-a3e5-88ee999e313e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3907de5-7c4a-4e6f-b0d7-c8b3c9a94ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27004c41-05e3-40c2-ae2f-71032b7aaee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea65696-3762-4970-92cb-665463994160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced6b708-25f7-4590-8171-151a01946ccb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c873a959-e45f-4017-b825-c0d8bbcfd903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65a29b0-8aa4-41c2-a57d-a8451450a2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a236279a-fce2-4ed0-bca3-20cdaf98c3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bc96cd-f240-4884-bea1-177115a12a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926ef7ee-b92e-4dfa-9257-9300667fde74",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b51692-2e1d-4f09-abf7-25f077a67e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a14836b2-a96c-48a4-aaf8-6edceccf7e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0902ffe-868d-4da3-8b72-139dc739c6fa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e219c8ae-c6d0-4eb7-b8c4-14dbf3a89af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b22d980-7811-4cde-818a-e5e74a488d5d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb757728-4a61-4457-b237-2d1f06d0cede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e033d903-4d2b-4566-a87d-0b09d68c074f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4cb01d-f98f-47ad-9245-43bb31964744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e50bcc-746e-4116-98f6-c2367c1fd1fa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30153142-f003-4f95-adb0-e8a5c27aa4a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78c07615-590c-46c2-a53b-cc19ed2cc14f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d25eec27-c490-4760-b3d7-f8ce666b3d8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10d0a234-46da-4c17-9bd4-0da51012280e"
                    }
                  }
                ]
              },
              {
                "id": "51599e73-208e-462b-b250-0ce2c45a2f46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87019fb3-348e-4510-a4db-27b913cdd331",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c86dacb-7a66-4415-afcb-5d00bb6569c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e3a1e80e-c5bf-48f9-98cf-f0c50e2f2b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b339651b-c33a-404d-8ed4-4377ba0f087b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b2e5d72-4062-4fac-bea0-a14ce8c35dfb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5669f4b8-5d9c-4823-9f0f-d555c217f186",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b2233be-da66-4c35-914a-ac74a36002be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "984692fc-5dd3-4044-b55f-3a4591db5d4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d984ed20-b605-4933-9992-177531ec45bf"
                    }
                  }
                ]
              },
              {
                "id": "9731bd96-2265-4a29-9cbf-f8201e9743ad",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1a0246fe-3cb2-441e-a67c-406b3059f5b8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6cfb94-c7e4-4b7e-aef2-9eebd7ca72a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "527c3bca-c648-4f17-ab86-16f686476d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57c8922-5d61-49cf-b82b-b70aa0d820fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57af4cb8-0251-4f01-bc89-350a414e3412"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c6d050ff-cb17-4d5c-8d97-111f2745617b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3fbadb75-5219-46eb-95e7-d312a315d365",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b408068-424f-4486-a21e-43532106c27f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "87b03e4a-8fb5-4cb7-b332-bbaf757b830b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a65ea60-bf48-40c4-9223-bcd5e366f836",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "948d82a1-3c3f-4d35-a830-54c4195b6bde"
                    }
                  }
                ]
              },
              {
                "id": "4755d9b0-ddc5-4571-bd57-ce7a6d8d532a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ef68d7f-6b43-4452-906d-dd026afb34e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "43db3e8f-16ed-474a-a88e-7a37b73141b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4760fcb-3418-44df-a4f9-907c16b6676b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae2520f5-7fc5-4762-9ba5-420b9eae4529"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2b7941b-1d46-4754-8e5e-0fc222c1308b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ae2baa65-5be9-4789-b35d-a3490d632b2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81498ebc-6990-447b-9bc1-d94af76c2765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1cbaa75-8815-4cd0-b942-65301b6abb7d"
            }
          }
        ]
      },
      {
        "id": "15457e69-364c-4f33-a1a0-eab777c3bb83",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5a5c3dfb-6109-47c8-bdea-3eea3d76eef7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e973565a-df2a-4d39-84aa-dae5f1d960a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e54c0a4-528c-4cb8-aa58-a8b3dec96d44",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff9620e-051f-43cd-85ef-8b8738416ea0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2dc2f40b-1e79-4d25-aa47-ccc561e81713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452aac13-63b1-4bfe-a576-dcbad980f48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "880b6b22-68c9-4661-a884-253ba043c737"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a84a3b5-bcb7-4d8d-8062-854c561bd18e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51255e4a-2cc8-4187-9819-1243f7d0e443"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a379305-d77f-4356-968c-2267080801f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9450b98-fba0-4342-8d28-777ff2543250"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86afe9aa-82a6-422a-af46-f7ece8668bd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b6097439-22fe-4d82-a460-3ff8286b82ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d094b77-6473-424e-b114-9652aaee13b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b16a6e91-c45f-4dfd-a6fd-dafeba69edf8"
            }
          }
        ]
      },
      {
        "id": "9922a70f-6091-4f9d-aa16-06fb64054541",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e0a3372a-0bea-453d-95fe-b60d730fd1f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2fc3377-a21a-46ff-bab0-082417a7799c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3dc44cec-2342-4781-a4b7-c8ec1ceb2c9d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f324204-a1c7-486b-ba57-90e4b002457c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64e58982-c73f-40df-8da6-2c79839cad8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4799fa-08e9-41f7-a0b2-a38be60116c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed7e0fef-10d3-4fb9-b41c-d8614d8abeac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4051b35-a2df-4ff5-930d-61d852174a91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8363f53d-b3c9-4a45-9a6f-cdc97f46b4c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc7a1126-73cf-4f26-ac93-8d2d41f18273",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d288405-c929-4a95-92e7-25231b120641"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69e6c6ef-7647-4fce-a3cd-e600ee2fe224",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d0b24568-7a5a-4410-a4f3-a2fa745b7235"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8cb17c9-ccba-4e30-b64b-0cf8162d6164",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4ec624b-01fd-4cf0-a247-f659d65e7071"
            }
          }
        ]
      },
      {
        "id": "b3fc80c7-cee3-41fa-b74e-41c973d5202d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b41aa80e-6908-4f9d-aa85-c946effb37d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80265d1f-8621-4e88-9204-e1d5ce485443",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7abf6852-44ca-4d83-89eb-74db4c0367ae",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f1ed6a-a209-491c-ab4e-a2e6532da7df",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8312d986-6fa4-459e-a214-ad575a6b0fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7826fed3-8626-44f7-a1ce-4e2151ef124f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0e15c81-da7b-4156-a604-afa50fafe3f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "174f21bf-3663-4476-a4d9-9fbc619f5e28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f033eb5-5654-4d94-acf0-d134d195f657"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5871c2ea-7b14-4485-b7dd-133725d94daf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e9392bf-381f-47f7-9ad5-3ff3d7e8e35b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19e83328-35b2-4a02-b26c-dc1286079e2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "83e83ecd-04f2-4c02-a041-d9b42881449d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d512f4cc-f9ca-452b-9771-5a5696274541",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37c91f47-172b-4501-b12b-28a7c0b534f8"
            }
          }
        ]
      },
      {
        "id": "92adc50f-2aa8-49af-a085-6cc5ab43a752",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfd29fdf-4cf5-45eb-8366-2f29b20a6da9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17c515c2-aa83-4665-9a75-980b45d466e6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "63de9531-2f82-40bc-ae78-cdd49c58a160",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56cddcd9-bd88-4a0a-a727-38e4e889817c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8076fe25-85b3-43f3-a093-055d8209edae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.66269841269841,
      "responseMin": 8,
      "responseMax": 896,
      "responseSd": 57.43064586770784,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726361384884,
      "completed": 1726361400167
    },
    "executions": [
      {
        "id": "09789bc3-9230-42b7-99d1-0011ebf528ee",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "14680e17-88db-4ec0-b408-77e25e6ba868",
          "httpRequestId": "ba1e5084-ad09-4fad-9453-630bf9ef785b"
        },
        "item": {
          "id": "09789bc3-9230-42b7-99d1-0011ebf528ee",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3dafc900-9da3-4d7d-b074-4ebeab495fef",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "558a8bc0-dc0a-46b6-9b86-992fa9038e62",
        "cursor": {
          "ref": "a75fccfd-6287-4a25-a51e-b8ee9b50ab13",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "48c0679b-655d-4957-875d-b58c396365a2"
        },
        "item": {
          "id": "558a8bc0-dc0a-46b6-9b86-992fa9038e62",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "29b208a2-84a8-4477-af48-c3fff7da0161",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "02ed74c4-f812-4f0a-8247-eb2aec5b6fc0",
        "cursor": {
          "ref": "76e4003c-f444-4b0b-860c-a2981439c3db",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8552ce07-c09c-4428-9c95-214227df7533"
        },
        "item": {
          "id": "02ed74c4-f812-4f0a-8247-eb2aec5b6fc0",
          "name": "did_json"
        },
        "response": {
          "id": "0354e260-6aed-456c-b57a-d1959cc26878",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a950352d-976d-4622-8df8-a1d80f2eca76",
        "cursor": {
          "ref": "327a88eb-9d82-47ec-87fc-d47705833f4e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd2d04d5-7e34-4562-af8d-90dfbdfecd7c"
        },
        "item": {
          "id": "a950352d-976d-4622-8df8-a1d80f2eca76",
          "name": "did:invalid"
        },
        "response": {
          "id": "a01c4d74-bd20-42e6-81cd-26dc245c027b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a950352d-976d-4622-8df8-a1d80f2eca76",
        "cursor": {
          "ref": "327a88eb-9d82-47ec-87fc-d47705833f4e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd2d04d5-7e34-4562-af8d-90dfbdfecd7c"
        },
        "item": {
          "id": "a950352d-976d-4622-8df8-a1d80f2eca76",
          "name": "did:invalid"
        },
        "response": {
          "id": "a01c4d74-bd20-42e6-81cd-26dc245c027b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5987c89-0710-49b3-8026-d43f11a35130",
        "cursor": {
          "ref": "33737dac-99db-4d6c-9377-17a18992c521",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5d359200-f958-4b54-be26-67a0f806061d"
        },
        "item": {
          "id": "a5987c89-0710-49b3-8026-d43f11a35130",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "46274a7d-22eb-4c78-8d0f-42b589d56966",
          "status": "Not Found",
          "code": 404,
          "responseTime": 86,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750eaeeb-cb75-40d1-add5-dcf7cbca59cb",
        "cursor": {
          "ref": "395594c9-9341-471b-9cfb-6628d3df628d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3234466b-8a0e-474e-a578-9fb178d02b15"
        },
        "item": {
          "id": "750eaeeb-cb75-40d1-add5-dcf7cbca59cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "14f49ee2-5fb7-4a79-accb-e82aa5d8e3bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149a1410-ca00-4ef2-aa97-d7a9251d416e",
        "cursor": {
          "ref": "725c6b04-37e4-4953-87e9-341bd7b55f30",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c86fb77e-6a61-46fc-96de-1c3566e11c97"
        },
        "item": {
          "id": "149a1410-ca00-4ef2-aa97-d7a9251d416e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e7590de4-35d2-45c6-8516-4c5947cacfab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c405646-214c-4dfd-b9f2-9318404c0309",
        "cursor": {
          "ref": "8ffe8d56-9647-47d4-a302-9ae4069a0116",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e5235a4f-c851-4a0f-80bc-9f16ab5ad130"
        },
        "item": {
          "id": "3c405646-214c-4dfd-b9f2-9318404c0309",
          "name": "identifiers"
        },
        "response": {
          "id": "5721f2bf-b6aa-45e1-9573-612deac54fae",
          "status": "OK",
          "code": 200,
          "responseTime": 201,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905ae386-1a10-4946-be34-4387563f1de3",
        "cursor": {
          "ref": "281f6357-5aee-4225-b0e6-5a96e4716b38",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "48d948f9-047a-47ba-850a-924754eb3587"
        },
        "item": {
          "id": "905ae386-1a10-4946-be34-4387563f1de3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c76a91fe-42a0-407f-86b8-7b04db42a41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60074ffc-d908-48d8-bb44-d0392d0cfd55",
        "cursor": {
          "ref": "cd54a5bd-6baf-4d29-b3d8-b8807c843bfa",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e7bc8299-0154-448b-8546-b05dd928ce09"
        },
        "item": {
          "id": "60074ffc-d908-48d8-bb44-d0392d0cfd55",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8db1172f-13f0-4403-88e2-f40dd1d50225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f2a07c-cb03-46b6-b86b-4fe11de70cf6",
        "cursor": {
          "ref": "0ca739c2-2040-4567-907d-c4c6a723d2b7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fc81dad1-e967-40fd-8b5f-548c740c668e"
        },
        "item": {
          "id": "35f2a07c-cb03-46b6-b86b-4fe11de70cf6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5763e800-0e78-4553-8397-a368dcee409a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346c7e42-a4af-4dca-85f5-33bbefc46c61",
        "cursor": {
          "ref": "921df3eb-bea4-4634-9471-74f468083581",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a05216f-6a3f-4685-bfad-b3a5ea3fb501"
        },
        "item": {
          "id": "346c7e42-a4af-4dca-85f5-33bbefc46c61",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "18087b3e-3d04-4157-a75e-f547533b0eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57568c6e-9be4-455d-89d2-3c76bbeb8781",
        "cursor": {
          "ref": "df7a26e9-7982-47ad-a494-462f0580b55a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4c56737f-d953-438c-b54f-1fa4e3c0ea00"
        },
        "item": {
          "id": "57568c6e-9be4-455d-89d2-3c76bbeb8781",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1214291c-3579-4f20-b8ca-6ac437bb587f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136487fc-b970-450f-bfa2-9722e068b343",
        "cursor": {
          "ref": "198311f0-4f75-4255-9ffd-cec4d9a77ef7",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f94b54f8-ed5c-45b1-9ee0-584a53dde9c1"
        },
        "item": {
          "id": "136487fc-b970-450f-bfa2-9722e068b343",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "174f231c-3e5e-42c9-b296-2d289ad45d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db6cefc-a35a-49ec-bf2a-ab56330c8372",
        "cursor": {
          "ref": "a736305e-1006-4220-abfe-ee74a36da8e2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a782d8bf-f0b9-4a12-b8bc-d064b8011178"
        },
        "item": {
          "id": "8db6cefc-a35a-49ec-bf2a-ab56330c8372",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0fdb9202-4f85-4edc-ab2b-c28c1bd204f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb68844-bd7e-4547-b826-029217c5f7a4",
        "cursor": {
          "ref": "b45d2f68-7d3f-4e40-a072-4ab5aa689164",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e14de40a-016a-48f4-b300-9a1384c611d3"
        },
        "item": {
          "id": "adb68844-bd7e-4547-b826-029217c5f7a4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3c060920-9ddb-43eb-93bb-8f2bf250dcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e294811-1c32-4e4d-bc12-22dbac46ca76",
        "cursor": {
          "ref": "4ea71cb3-b56d-48ff-97c4-0f1c4982e64a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3185828f-7627-4748-9955-58517200725b"
        },
        "item": {
          "id": "8e294811-1c32-4e4d-bc12-22dbac46ca76",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5e854c09-f682-4740-b8da-c6d8b298fc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c310e5-af3f-4435-8d69-b2970a6848f1",
        "cursor": {
          "ref": "5caf7866-2431-4edb-bdf0-dd457054afaa",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4988a32d-9232-4e03-b747-5d03f0104489"
        },
        "item": {
          "id": "84c310e5-af3f-4435-8d69-b2970a6848f1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5a2c44ef-e661-453b-b186-0fb5bb3e366a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474a8710-74d9-43f7-b290-c07205dd5881",
        "cursor": {
          "ref": "ffae71ec-fad8-4949-955a-1a8f222b9972",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9836a963-f181-419f-bb1d-629870b34d0b"
        },
        "item": {
          "id": "474a8710-74d9-43f7-b290-c07205dd5881",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aba2fa11-bca8-4959-a62e-14b42a6a7be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae559e5-3a0b-443f-ab27-6a5295bb1ca6",
        "cursor": {
          "ref": "bdbf67ea-bdfb-4fdc-91bd-b462f4908387",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f5185f9e-8662-429d-89de-eb6655dbfc8e"
        },
        "item": {
          "id": "6ae559e5-3a0b-443f-ab27-6a5295bb1ca6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "221574a0-3a7e-4463-97bd-78139be9fff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6745818d-b67d-4688-b20f-312e3b5d8592",
        "cursor": {
          "ref": "a7a8c6d1-03e1-48fe-b747-8970001d70fb",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ce86c369-0757-4c8f-9a69-61b82a064b26"
        },
        "item": {
          "id": "6745818d-b67d-4688-b20f-312e3b5d8592",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "75d5a8fb-f285-4c98-8ac1-cb5856476b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6829b13-9106-40f7-b32d-a0c4ebced578",
        "cursor": {
          "ref": "8bfae4a1-fed6-4f22-9e62-34aa40b700c1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "97d3f74b-8d51-4e1c-ae1f-2e95815b40bf"
        },
        "item": {
          "id": "b6829b13-9106-40f7-b32d-a0c4ebced578",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d5be24dc-98d6-4593-9cf8-62453296ca4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6b18e5-d030-4342-b0c6-47b9fd642f04",
        "cursor": {
          "ref": "c341523e-b242-4065-b6bc-a0e9c28572b3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "162a1edc-04ee-4863-81f0-16ed84ed29e2"
        },
        "item": {
          "id": "8b6b18e5-d030-4342-b0c6-47b9fd642f04",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "427d5a07-3d6e-4729-a060-cb7dd0776979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c65e9d-93a7-4a60-b470-c3bd9c42cc22",
        "cursor": {
          "ref": "98deedef-00b9-4154-8a31-e2a840980301",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4567eb78-1f09-4268-8e25-81d114107c78"
        },
        "item": {
          "id": "43c65e9d-93a7-4a60-b470-c3bd9c42cc22",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "411953a6-2051-4cf5-b880-8a614e580971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c950da1-5393-4024-879e-9949d77088e2",
        "cursor": {
          "ref": "68c7af21-9777-4c11-b59d-ad1c912491e9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4fc06cbc-a669-458b-a80e-4b504801dc3c"
        },
        "item": {
          "id": "0c950da1-5393-4024-879e-9949d77088e2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "356436a6-e0a2-4b3b-b94a-9db5b22572a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ae208e-67d0-4476-bfdb-bd34b08ed1bb",
        "cursor": {
          "ref": "dd6e9b39-ce6d-44eb-bac8-a84992ad3ab2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3f758176-ced6-4721-9f4a-e030847adb46"
        },
        "item": {
          "id": "58ae208e-67d0-4476-bfdb-bd34b08ed1bb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5ccd3475-bd57-46bf-b876-acc45f5e2f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf583b8-5b03-4335-a1c1-d7535b36df2e",
        "cursor": {
          "ref": "2434a300-b03f-41c8-8325-58da4ffa47ee",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f950d4e8-c8de-4aaf-b997-8a9f61ea1d06"
        },
        "item": {
          "id": "adf583b8-5b03-4335-a1c1-d7535b36df2e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0c22a60d-138d-4604-a473-46e65770fb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06e186f-3e8a-48b2-a276-860ad7da29bd",
        "cursor": {
          "ref": "6d0acaf4-ba7e-473a-98cf-4ede8a22d5d5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2d5c0e2c-23e8-4be2-89ff-3261f86eb68f"
        },
        "item": {
          "id": "c06e186f-3e8a-48b2-a276-860ad7da29bd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2e07b2b5-a9ae-4296-b6ba-6d40acd89d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10d3c74-ed3d-4021-a325-5033c58f764e",
        "cursor": {
          "ref": "6dc6ded5-edec-4e53-bb62-577bf0a85ab0",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "70a77407-7867-4f94-bacf-d1bc709ebf18"
        },
        "item": {
          "id": "c10d3c74-ed3d-4021-a325-5033c58f764e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b76902f9-6f16-45a3-a403-5fb72d4cae34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83c0c69-d7e9-4244-95e6-3a30e7011a67",
        "cursor": {
          "ref": "e9d32e49-4f75-43b4-acfa-65b4ccf0b145",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "76d06b12-ab61-49e4-92a2-7e172b51c9d9"
        },
        "item": {
          "id": "b83c0c69-d7e9-4244-95e6-3a30e7011a67",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7cb8c708-5663-4679-bc54-388200f5cfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e1cabf-e155-4b7c-8400-ca59e2fd0fe3",
        "cursor": {
          "ref": "86afd41f-9fa5-4928-91ab-7d905b2f5801",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "96be56df-f0b3-45da-a6df-b5cd7be228f5"
        },
        "item": {
          "id": "a5e1cabf-e155-4b7c-8400-ca59e2fd0fe3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b50a14bd-04b1-413f-83b9-b5054af0565b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf955b2-88b0-4c5e-a5a3-6ca73f703e7c",
        "cursor": {
          "ref": "ace25cd0-a5e1-4de0-a0f4-78ee0a3519f0",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a956d262-f820-4e58-b5ab-eda699c7acc0"
        },
        "item": {
          "id": "aaf955b2-88b0-4c5e-a5a3-6ca73f703e7c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "423a72b5-dba8-4d93-8fd6-8421d3f11075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419e0153-dd91-4503-b52c-fde76fb499c8",
        "cursor": {
          "ref": "726d8765-5209-4e37-906c-961c457868b7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "524bb75c-ab4d-4945-9d98-e6d59a605324"
        },
        "item": {
          "id": "419e0153-dd91-4503-b52c-fde76fb499c8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "47add2bc-9ed1-4e20-94cb-a06e61bcec06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4dd282-459a-48e5-8ab9-6a4f2ada2752",
        "cursor": {
          "ref": "b7be8e3c-7533-4e67-8349-50b448683975",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3cdb7dc1-8929-426e-b209-cd6f2737a7ba"
        },
        "item": {
          "id": "db4dd282-459a-48e5-8ab9-6a4f2ada2752",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3c3145c4-d139-465d-b45b-6bf0d0c4395e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c823109e-a755-45d1-9f33-aebfb15c4e66",
        "cursor": {
          "ref": "5649e361-4425-4f08-8cad-492570d49232",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "885cfe62-9f74-4b3b-8498-ab6675ebc648"
        },
        "item": {
          "id": "c823109e-a755-45d1-9f33-aebfb15c4e66",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "56ce94ea-582b-46c1-b0b1-733b35e757f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f305beb7-ad4c-4bf0-a1df-9be934a0e49d",
        "cursor": {
          "ref": "0a2948ac-982d-4c71-9b0b-01c458e964a4",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "659690fa-b11b-403d-a4e4-d1b8ce6e6010"
        },
        "item": {
          "id": "f305beb7-ad4c-4bf0-a1df-9be934a0e49d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "909af073-9e14-47ad-b832-6fc59eb5177a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6dad27-3fb1-4645-b897-58297b1ad65f",
        "cursor": {
          "ref": "4b92a8de-9ed6-4372-a824-fd6172cbbeb7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "692a183c-27bf-4070-9420-04b5192db5b9"
        },
        "item": {
          "id": "9b6dad27-3fb1-4645-b897-58297b1ad65f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "34ae9ff0-13e1-42b8-a292-43b4673e0f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621a9929-6f99-41a0-9b99-ee128fceab07",
        "cursor": {
          "ref": "3cf07ab8-7b73-47c0-84bb-b3f055255bc5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d33bb099-a12a-424d-b80d-563538d1278b"
        },
        "item": {
          "id": "621a9929-6f99-41a0-9b99-ee128fceab07",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b97e76a7-c3ce-4302-a4aa-8840c3b02ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d68777-4aae-44e1-b20d-f70c42ce959f",
        "cursor": {
          "ref": "3971c9f2-5cdd-43bc-85c2-2fc8c1656eb7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dce7c031-7ffb-4ded-95b8-39c2d46e94b7"
        },
        "item": {
          "id": "a2d68777-4aae-44e1-b20d-f70c42ce959f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a1f2c530-dd87-4e26-bdf6-6210c25534db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec90cdf-5f20-4e46-a22e-f511834f4d07",
        "cursor": {
          "ref": "62aaa202-f209-429d-867a-1b285392d2ec",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e0f85680-33da-42e8-a3a0-0f26bc37fe96"
        },
        "item": {
          "id": "1ec90cdf-5f20-4e46-a22e-f511834f4d07",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cd8bc7fd-00e8-4987-a72a-b65b944175b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176c2dec-1f5c-4283-a101-043544d944dc",
        "cursor": {
          "ref": "904452ee-ae22-47c4-9e42-0a4a54416d28",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "da9bba4b-5a9c-4649-888e-665383dd2ed2"
        },
        "item": {
          "id": "176c2dec-1f5c-4283-a101-043544d944dc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "93054887-28c8-4d84-b546-6404e1c2a6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e8c90e-a57c-4445-bdae-854681212f5e",
        "cursor": {
          "ref": "72a490b9-3253-49e7-9daa-b13bde534e45",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b40f25bc-606b-4d52-9b7c-a772ef796686"
        },
        "item": {
          "id": "26e8c90e-a57c-4445-bdae-854681212f5e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6fbeee69-650b-4cd6-a859-c8e68d89800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b55eeb8-1641-4464-9770-1d6a0d001b03",
        "cursor": {
          "ref": "55e6c5d8-61f1-4832-b803-249ab64c0ae2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e39e6dfc-cd75-4b1a-b54b-4c7401d7749a"
        },
        "item": {
          "id": "3b55eeb8-1641-4464-9770-1d6a0d001b03",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "791c00e5-3579-48e3-971b-ae200b2eb6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3d681c-d338-45d7-9a5c-123c884a1a65",
        "cursor": {
          "ref": "a24d972f-4f76-4628-b238-902763acce92",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6c938c4e-290c-47ad-bb49-20d750cbf8bb"
        },
        "item": {
          "id": "8a3d681c-d338-45d7-9a5c-123c884a1a65",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0d65c25d-1c84-488d-b615-b58b8f3940f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b124f28-4bff-43b9-a7b7-a8feb1c88b4f",
        "cursor": {
          "ref": "58bc0084-96ba-479b-b47f-9f23de2eab6d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a4f38443-e581-4925-a313-fdd2d2708922"
        },
        "item": {
          "id": "0b124f28-4bff-43b9-a7b7-a8feb1c88b4f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b27c8d0a-213f-4181-b91e-096e2aa4d580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0568a5-354f-4691-846a-30e5623258e9",
        "cursor": {
          "ref": "2ad95c07-ebcc-488a-be84-bf4bdd7244e3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "729f5743-6930-4a84-8a12-76f003f6edb1"
        },
        "item": {
          "id": "ad0568a5-354f-4691-846a-30e5623258e9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bd4d5acf-056d-4e52-8e72-480ce9b1a40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a704c575-ae5e-4821-9202-88b233fc1f11",
        "cursor": {
          "ref": "995511a4-c4ab-403d-94bf-d0a665bf5fcb",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6e5db76c-1ef3-4149-a10b-e27de4d74eec"
        },
        "item": {
          "id": "a704c575-ae5e-4821-9202-88b233fc1f11",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "49339762-0c63-4947-b519-412332b16973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70b265b-9760-4f13-b7ec-95c3cd453afe",
        "cursor": {
          "ref": "ffc75092-6965-4d1e-afa8-bf4062c70268",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "90cf3053-38c1-4b90-b039-9e643119420d"
        },
        "item": {
          "id": "a70b265b-9760-4f13-b7ec-95c3cd453afe",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "57c92124-d114-473d-a691-20a2bac45883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b53e6d3-62df-4fb8-a737-3efc2ce645df",
        "cursor": {
          "ref": "0468b726-4a4f-4002-9765-5554e54ed9f4",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a41a013e-8e9a-4404-a5a4-e257d4d30092"
        },
        "item": {
          "id": "0b53e6d3-62df-4fb8-a737-3efc2ce645df",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e26c6c47-7546-4623-9b16-14a399bb049c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6205ee5-028d-4e1c-8bfe-3e23346b0ebf",
        "cursor": {
          "ref": "e6415d9c-4415-49ef-9b7e-7e77ce90f981",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eefd94bc-8fb3-456f-bc51-9e596c2db63e"
        },
        "item": {
          "id": "e6205ee5-028d-4e1c-8bfe-3e23346b0ebf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4fb79aca-f5d7-46cb-830d-95bcbb89cc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaa52d6-b4a3-4b6c-b439-800df86d4995",
        "cursor": {
          "ref": "9368c16e-d3f1-4546-bfa3-3c09be00c5c0",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c7fd4dee-5d5e-4bbe-8316-3b057d0e9d05"
        },
        "item": {
          "id": "ceaa52d6-b4a3-4b6c-b439-800df86d4995",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "118f60fa-ff07-4771-b09d-606c550dd79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a361e0a-28c6-49cd-aa81-774e8e9d89af",
        "cursor": {
          "ref": "5c4b3a4b-b429-4baa-9ac0-57e7c75adcaa",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "226f8d84-f681-487e-8caf-f2e5b9c24b20"
        },
        "item": {
          "id": "3a361e0a-28c6-49cd-aa81-774e8e9d89af",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cd4885a5-1919-4087-9448-c2c87684928f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11b9ffc-45a6-4a34-8361-7d43ccccaacd",
        "cursor": {
          "ref": "2da4f14f-70d3-4918-93fe-836ec003f1b1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ad515ac3-a2d6-4e84-bbfb-866b46d66d34"
        },
        "item": {
          "id": "b11b9ffc-45a6-4a34-8361-7d43ccccaacd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d1c2a07a-270d-4594-882d-f536da58e0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c21cc7-4e7a-4b49-82ee-5021b1420f4c",
        "cursor": {
          "ref": "166b5b60-3601-4fd1-a643-c068e92e0e18",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "17d25666-3cf5-471b-bd09-70c4017f118a"
        },
        "item": {
          "id": "d5c21cc7-4e7a-4b49-82ee-5021b1420f4c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3dbf9535-f0ee-4bfa-bb19-e61b2ada5776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd4db6d-d420-40a6-94c1-10e981fbbabf",
        "cursor": {
          "ref": "c6d0db1a-e242-400f-9d2b-b2dc61156574",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e938bc77-9b71-4ccd-8fac-a2db3d4cb810"
        },
        "item": {
          "id": "4dd4db6d-d420-40a6-94c1-10e981fbbabf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3e9196e7-f407-4216-be44-bdbce48cfd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613f7901-ba0a-4fb8-b985-138cc2f01e7a",
        "cursor": {
          "ref": "9178377b-a8cd-43e3-9797-3dfaa4d81218",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c98964b9-fc9f-4538-a850-e24473397f00"
        },
        "item": {
          "id": "613f7901-ba0a-4fb8-b985-138cc2f01e7a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f32b396d-89b9-42e0-9424-2ec58fbf0168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d14ec63-51a2-4f62-8153-81385c145331",
        "cursor": {
          "ref": "a2ec0642-1e91-4426-855d-c52db2f9d1f5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "43cc6d15-8bba-4807-863a-2f19252b3e18"
        },
        "item": {
          "id": "8d14ec63-51a2-4f62-8153-81385c145331",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "06533159-4c10-4633-8a7b-5f2cb01092e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22fe79c-d1a9-4114-8282-32df4febb9c8",
        "cursor": {
          "ref": "a9fd4c5d-014f-48c0-90e4-223f007e3896",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "71e8a6e4-3c9c-461f-b1e2-015995328d89"
        },
        "item": {
          "id": "e22fe79c-d1a9-4114-8282-32df4febb9c8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fabaf80b-ede7-4e3e-98db-b9c9ca124ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d625051-05ad-46e7-bd29-f884e37dbdbb",
        "cursor": {
          "ref": "4541c102-0d99-4fd5-8944-0067b7ed8fd5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7830db34-d7dd-408b-be26-9678980ce518"
        },
        "item": {
          "id": "1d625051-05ad-46e7-bd29-f884e37dbdbb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "702694e0-4d8f-4fa1-b7dc-1ad5f589ff4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfdf81d-3956-422d-8f35-c0db0cb780c6",
        "cursor": {
          "ref": "e2d7e324-163b-47a3-b198-75724714ca46",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6bc1baa6-3b9e-401c-a8a3-293b2cb00ca9"
        },
        "item": {
          "id": "fcfdf81d-3956-422d-8f35-c0db0cb780c6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d08406f2-b966-4d04-84d8-ed54897eeb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0788030-fee3-47ff-bcec-dfb3d1edad13",
        "cursor": {
          "ref": "12b15f1a-f045-4dd6-905c-e771b3dfc5da",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9176f3eb-e531-49ec-b222-06f97fe66063"
        },
        "item": {
          "id": "f0788030-fee3-47ff-bcec-dfb3d1edad13",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5aa29a62-5309-4824-a710-43feeae17682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252f0ed9-88a7-4f75-a415-f03b313a4d60",
        "cursor": {
          "ref": "48fefb32-7b06-4bf3-99f4-3d95c995525d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "22d86189-88f5-4ced-b231-e6a925b62b61"
        },
        "item": {
          "id": "252f0ed9-88a7-4f75-a415-f03b313a4d60",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d6fe875f-29cc-4b1f-99df-1821dde81834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc96c92-04da-498d-a98c-2d6172ebd1e5",
        "cursor": {
          "ref": "cedfb306-bf3b-4978-b209-cdb32fb49dea",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d3d5a38f-cb5e-4720-987e-5b846770f885"
        },
        "item": {
          "id": "6bc96c92-04da-498d-a98c-2d6172ebd1e5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "79a114f9-8af6-408b-8851-c7b6654a8992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69964a7-e1ed-4ea2-acdf-e57fe23d6cdc",
        "cursor": {
          "ref": "5f2e0dcb-57fe-46f8-a511-2eb1ebcfd91e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "948d3f94-f441-49fa-bf58-5a9fcf6f5773"
        },
        "item": {
          "id": "b69964a7-e1ed-4ea2-acdf-e57fe23d6cdc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2306ba26-f708-4475-8494-f70d979bc640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635a30a8-604a-4024-9d25-c6a1a53e3acc",
        "cursor": {
          "ref": "98324cb6-e552-437a-854f-5c28daaa63df",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d32b41f4-5d03-4092-9cdc-ba4b9e538edf"
        },
        "item": {
          "id": "635a30a8-604a-4024-9d25-c6a1a53e3acc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0ae7f06f-973b-49a4-b18a-775f47166c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca37273f-7a31-4d58-92f0-137898ae282f",
        "cursor": {
          "ref": "fd6e664c-e182-42f1-ae70-d8391a08cb47",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1568f4e8-78d1-4139-bc65-cb7caf828079"
        },
        "item": {
          "id": "ca37273f-7a31-4d58-92f0-137898ae282f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a1adc89f-215d-4532-a96e-53212f50034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1d831d-04b8-48e0-ba3b-3c86a2129ea0",
        "cursor": {
          "ref": "d7689138-de1b-4a2b-8eba-765a6cc90cc4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "43f88159-8eac-4e9c-81a7-af07cc3203ac"
        },
        "item": {
          "id": "8f1d831d-04b8-48e0-ba3b-3c86a2129ea0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3197bfb7-3a9a-453b-a6b5-14692298f452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a5baf5-e274-4012-8b31-b2660b8b9b95",
        "cursor": {
          "ref": "4cd5317f-37ad-46bf-b046-57991578a521",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c13b30e5-6d21-4684-b09e-f12778252d23"
        },
        "item": {
          "id": "11a5baf5-e274-4012-8b31-b2660b8b9b95",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e066a5ce-f67b-42ed-bac9-3be270a8f983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7939ee-f304-4b39-8f15-3f4d29de02db",
        "cursor": {
          "ref": "29cf1fc4-d498-410d-8ff1-d23132d839a0",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "14524db9-af01-41f6-9b72-69c154b58508"
        },
        "item": {
          "id": "3e7939ee-f304-4b39-8f15-3f4d29de02db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "261e0e64-1e03-496c-8d6f-dedb0bae26a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f11d96-7bd7-490d-bcc3-4cc1f76eb4c1",
        "cursor": {
          "ref": "28475250-80e6-4801-9d6a-58a54c74c345",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4ec01209-639a-487c-a832-d1ee8aad993a"
        },
        "item": {
          "id": "99f11d96-7bd7-490d-bcc3-4cc1f76eb4c1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "13b91a72-badc-4151-936d-bbb2d829abb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9720de-5f23-4b38-a030-ac0c6f2ebb82",
        "cursor": {
          "ref": "2d2ac96a-ab94-4d1b-9351-575c646eb7fc",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "25332443-4cc1-4899-a91b-abe1cd05164d"
        },
        "item": {
          "id": "bf9720de-5f23-4b38-a030-ac0c6f2ebb82",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2e9f3326-b48c-459e-a883-170b3b4a0ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270b9f9c-0086-4433-be32-b37b57ad4ed8",
        "cursor": {
          "ref": "7a7c7904-b2ff-4c93-ae39-1957db3ecaa6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f700fc28-fa03-4efa-bda5-e0152607b1ab"
        },
        "item": {
          "id": "270b9f9c-0086-4433-be32-b37b57ad4ed8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c7fded41-aec0-4c43-8c05-5adbe9b528bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeca2c6-3b95-45f8-a4b3-2f85e04d56ee",
        "cursor": {
          "ref": "95bc074d-4351-417a-b356-fdc57582a988",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cf0375a3-667d-4646-b29f-632efc5cc652"
        },
        "item": {
          "id": "ceeca2c6-3b95-45f8-a4b3-2f85e04d56ee",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a06079fd-d8f6-4eed-984b-123671f478b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c4e47a-b194-423a-bcbf-aebccf791b11",
        "cursor": {
          "ref": "ec37edde-55a1-4924-806c-accb9b0c11c1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ca3e114d-dee0-4c34-bbfb-382b337b1535"
        },
        "item": {
          "id": "57c4e47a-b194-423a-bcbf-aebccf791b11",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "28c80ed8-f232-4ad4-8ac6-ea149940c243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8121a15e-739f-4d1c-93a2-f91c410daabd",
        "cursor": {
          "ref": "46496224-1d11-4347-83e0-963f9f2e40a7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "16f62c0e-6129-4854-beda-397fee20cdcd"
        },
        "item": {
          "id": "8121a15e-739f-4d1c-93a2-f91c410daabd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2cfd8425-268e-46c0-8dcd-e2cdeedf1b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e35e7f-6c7b-4ded-bcea-cc030b5323a7",
        "cursor": {
          "ref": "7749fe5b-7837-4c76-ad97-56f3123098fe",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3c2e15d5-fc0e-4f88-bf84-35c41c357fb9"
        },
        "item": {
          "id": "f0e35e7f-6c7b-4ded-bcea-cc030b5323a7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "abcc9cb3-3fc5-4fa4-a9ea-78117ac54299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f64284-281f-4e58-a368-6b44195cc556",
        "cursor": {
          "ref": "47ae225c-86b7-423f-bf0d-066b7ae0bc38",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e3efd3e4-3c23-49ee-8d24-5986adc5beb7"
        },
        "item": {
          "id": "49f64284-281f-4e58-a368-6b44195cc556",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8ca60920-0a7d-4b34-992d-4867e5e62e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8327a196-feb6-4f72-b203-a973610a4260",
        "cursor": {
          "ref": "c0b9c981-ea6b-4523-abb7-ff57c0a84f3f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "212d0a47-dcf8-4bd1-8db9-15ecab80cc2a"
        },
        "item": {
          "id": "8327a196-feb6-4f72-b203-a973610a4260",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f4583941-5920-4199-8275-d6573ad5a0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5faa88-284b-45a4-a7dc-f246d3ac6f40",
        "cursor": {
          "ref": "ef0763e2-5987-418e-8ae1-dcd68e5e4484",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c2a4829d-d978-4e91-8f07-b55e49720842"
        },
        "item": {
          "id": "1f5faa88-284b-45a4-a7dc-f246d3ac6f40",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c70ac2c8-5704-44ee-893f-a6092c38dc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86c84cd-dc69-4c6f-bbe6-4402652efece",
        "cursor": {
          "ref": "02814690-c6a6-4939-8bdf-59cc43c64476",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f43b6b6f-39f4-4ae9-b57b-092c8cef74c3"
        },
        "item": {
          "id": "c86c84cd-dc69-4c6f-bbe6-4402652efece",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b2cb1c76-bc9c-48b7-8dab-9c648f19ecab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5e6863-7b26-4341-a5a1-5f9249306d22",
        "cursor": {
          "ref": "80061525-ab1a-439b-95b5-059d5ed3047c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb2a3777-b28f-47ca-90a6-44db0455cc62"
        },
        "item": {
          "id": "fc5e6863-7b26-4341-a5a1-5f9249306d22",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f2b4c6aa-44e6-4b5c-a33e-cbcb6dda5257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc9684-d27f-46ac-981a-3e9bacf7f4bf",
        "cursor": {
          "ref": "811689af-3529-4438-87f1-93f3f7f0a82c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "58df113f-d73c-42b4-84fc-0a5457ca1364"
        },
        "item": {
          "id": "fafc9684-d27f-46ac-981a-3e9bacf7f4bf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c7b15a30-cb01-4e97-bc7f-4afc6c27d9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae5b04c-8b51-42fd-8b46-cf053b307813",
        "cursor": {
          "ref": "d2ffda3e-048b-4461-95fb-19ef9d2fb768",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fe35bfa7-4c7b-451c-933b-6b2724e52f6b"
        },
        "item": {
          "id": "6ae5b04c-8b51-42fd-8b46-cf053b307813",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d414b33d-73e9-477d-a8d1-f2e28e500d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3244ca98-66c7-46c6-b637-99b144ec2444",
        "cursor": {
          "ref": "b27edbd3-3f8e-4d6e-bf0b-cd73755bb1ea",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "762b053d-bec0-4aaa-970d-3bcd40868ca5"
        },
        "item": {
          "id": "3244ca98-66c7-46c6-b637-99b144ec2444",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "68fb81ad-6b07-43ca-8a39-5d8b8b8f4c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4772c94b-0918-4cee-94aa-6e6ff07deac2",
        "cursor": {
          "ref": "c83e00db-1315-41f8-a363-e4b28a87a3f1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dd946da5-d13b-4a65-9ea7-e4ba05cd4e98"
        },
        "item": {
          "id": "4772c94b-0918-4cee-94aa-6e6ff07deac2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c89f53f9-4a78-4d5d-ae42-16f7e82c7bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c925ee72-a2d5-4c26-8900-5623f532b797",
        "cursor": {
          "ref": "7f63d9b6-2316-4457-958c-75430438c2e3",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "df49958e-61ee-48fc-a98b-f4d477c43aac"
        },
        "item": {
          "id": "c925ee72-a2d5-4c26-8900-5623f532b797",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3d557bcb-b2b0-4da3-9393-d482a83674e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfee3b5-a9ae-4427-9dc3-d962ada87c78",
        "cursor": {
          "ref": "30fb3669-7e1b-4e18-85e3-b8f9743f924c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d45b074f-7db9-497a-9e83-a1341393a199"
        },
        "item": {
          "id": "bdfee3b5-a9ae-4427-9dc3-d962ada87c78",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4b7556f9-55c3-4ed7-9f0e-b64ede42c838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3fe55c-1ceb-4687-8dd4-9e6c1af97263",
        "cursor": {
          "ref": "7a82033a-98ce-4ab0-bba7-fdb23e4b943b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0a2e1919-ab2e-4d6d-8600-46c1db60b793"
        },
        "item": {
          "id": "cc3fe55c-1ceb-4687-8dd4-9e6c1af97263",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5c72baa3-24e9-4013-a310-35308f5f7843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abf1d9a-5238-4379-9414-bb25046baa35",
        "cursor": {
          "ref": "72e8b1ec-01e2-4119-9065-aa3017b0aeb2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "449f4cd4-807f-44fd-b70d-260b1ba9fd95"
        },
        "item": {
          "id": "5abf1d9a-5238-4379-9414-bb25046baa35",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "58140ff6-4345-4013-b48c-42f09db7b61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6244a828-75a5-49e8-a4cc-93ae232bdd19",
        "cursor": {
          "ref": "4136c592-eddf-4f74-9cde-3da1d38b4e32",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a2cf207e-4a79-4c20-9ed1-c345644995b8"
        },
        "item": {
          "id": "6244a828-75a5-49e8-a4cc-93ae232bdd19",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1e11643a-8de0-4763-96c2-0e305c50cef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57c55f4-be8a-484b-a5f9-b915fd98eaf0",
        "cursor": {
          "ref": "9fd86643-d90e-4d9d-9052-7a77eff0f018",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "21530455-8cb6-478f-96b4-1b1916200c0a"
        },
        "item": {
          "id": "a57c55f4-be8a-484b-a5f9-b915fd98eaf0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "27516cbd-86a1-4216-81f9-abc578d403a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ce3fa3-3047-4b2d-aa74-ccc3f14943b9",
        "cursor": {
          "ref": "74104201-cd3f-426b-a7db-9ceb5d7d22b5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2ecd153c-338c-4994-8f1d-285727c203d0"
        },
        "item": {
          "id": "57ce3fa3-3047-4b2d-aa74-ccc3f14943b9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7d428ef8-7ce6-44ac-b7b3-b8f75a0b6dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab36ab2c-ef52-408e-9e8a-bbf7b126e019",
        "cursor": {
          "ref": "389d7cfc-0fc2-4be7-899a-e482cebe14a3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0f181311-3974-4e68-9d95-f74c824c6312"
        },
        "item": {
          "id": "ab36ab2c-ef52-408e-9e8a-bbf7b126e019",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "af387a9d-b208-49bc-bb71-23b767edd1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcfdb8c-bd2d-4d4d-af81-39e4599008af",
        "cursor": {
          "ref": "f6540aa6-aac3-4348-909a-457c69af540c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ad4584a1-f59f-4991-a237-b9d875ee9b3e"
        },
        "item": {
          "id": "adcfdb8c-bd2d-4d4d-af81-39e4599008af",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "85a79d90-6ede-4882-b411-e01301d0340e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37be26ab-85cc-4046-858e-17733bc1bbe1",
        "cursor": {
          "ref": "fdc4386c-161e-43f3-a4a6-8db63f2b947e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1f2fde1b-9130-451e-9ef1-17fe97ed70eb"
        },
        "item": {
          "id": "37be26ab-85cc-4046-858e-17733bc1bbe1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "64c40545-e48f-4555-bc84-c5e3fa1d123a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada3f7b4-2f96-4318-8dc9-f18fc3ca25e6",
        "cursor": {
          "ref": "37a6f85b-c65f-4226-91d8-a395771bf217",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d0b70690-70bb-4727-8348-e32cd678bb36"
        },
        "item": {
          "id": "ada3f7b4-2f96-4318-8dc9-f18fc3ca25e6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a7a391ce-c852-47a8-b59e-c4ef510e0f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481a73ae-40e5-4ca9-b5ee-9b603ab867f9",
        "cursor": {
          "ref": "6adb43b6-61e5-4e3b-8e62-3a69bbbd176d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f5fcb581-87d6-42da-9408-21643ec764bb"
        },
        "item": {
          "id": "481a73ae-40e5-4ca9-b5ee-9b603ab867f9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bbbc8876-bbb8-48ca-a277-983db181b400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54888d8-0310-4c2d-9ccc-4366a1b1ff3e",
        "cursor": {
          "ref": "6b516f19-1510-4c2e-add7-c5e1cba459d8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b09540ce-c0eb-4e9b-8904-9fc810546de7"
        },
        "item": {
          "id": "c54888d8-0310-4c2d-9ccc-4366a1b1ff3e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "52991d6a-38a9-49f9-bc7a-10cc0834bc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10de6baa-ff68-4c4c-85ba-7e2034224d7c",
        "cursor": {
          "ref": "5a54ec33-64e7-4ad8-9d00-7796046012d2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2e3b0666-8332-4942-98d2-0bd92d248d02"
        },
        "item": {
          "id": "10de6baa-ff68-4c4c-85ba-7e2034224d7c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "70c2edf7-a3c7-4eec-aa25-b3fafe5f78cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96ed58d-91f0-4b8e-9591-80fa7b607ba2",
        "cursor": {
          "ref": "788e158e-a426-4faa-bc0c-cd90538e8206",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "743ce553-9a69-4293-ab2b-02d06ad86228"
        },
        "item": {
          "id": "b96ed58d-91f0-4b8e-9591-80fa7b607ba2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "efc2ec8d-5081-40c4-a4b7-11076eb2d70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5273a495-4c89-40f2-9f87-e021702c357c",
        "cursor": {
          "ref": "afd9131d-3e9e-4ada-a698-21f99474a595",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3e2821ad-faf6-4bc6-abb4-93c539e3f125"
        },
        "item": {
          "id": "5273a495-4c89-40f2-9f87-e021702c357c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0c834f31-4c22-4a17-ba6f-3e83d6c72f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3940d2a0-c60d-4c63-9575-7b945a8ae9c6",
        "cursor": {
          "ref": "6decc0ce-97ea-488d-8d49-f4d9ba4ad8cc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "207c23ec-8d82-452f-a6eb-d61be395eba5"
        },
        "item": {
          "id": "3940d2a0-c60d-4c63-9575-7b945a8ae9c6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "15ac7f09-9616-4699-90f2-985ec48f4d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8c8d7928-a2c3-478b-9561-14bbeaac378d",
        "cursor": {
          "ref": "89088f9c-a3ba-425c-88fd-a5b8598f7ddf",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b33eea4a-ae13-4b9b-8010-e259d8c0a031"
        },
        "item": {
          "id": "8c8d7928-a2c3-478b-9561-14bbeaac378d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ccb7e7c8-0d29-4702-a47e-1afe04411f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "666484c8-9f2f-4ca3-bacf-36e8941454ee",
        "cursor": {
          "ref": "45f1ac37-41e9-4bf3-a232-3ec44ccbbbc3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8c680252-bb16-4ad2-bc14-3e51e7e8c4d7"
        },
        "item": {
          "id": "666484c8-9f2f-4ca3-bacf-36e8941454ee",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c5cd75a2-330a-4ab9-b14d-ab1bc6857fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "65546249-d8ca-476e-9f8e-e51de974dd39",
        "cursor": {
          "ref": "e17f71e0-3ee4-4e92-b47c-f28405ef55b1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fdb72a08-826e-4dea-a61a-fd8598766791"
        },
        "item": {
          "id": "65546249-d8ca-476e-9f8e-e51de974dd39",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2f616741-d9a5-48db-8c24-29c9d806af60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c261f995-37fb-4069-959c-b3d825795061",
        "cursor": {
          "ref": "c79be60b-7aa8-47f9-9291-e9b1554546d2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3e4b1178-671c-4aef-973a-1f83aa0fd072"
        },
        "item": {
          "id": "c261f995-37fb-4069-959c-b3d825795061",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a62d9f1e-c797-4f86-a1a3-4eac4fd4b80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "cd1e063d-d302-46c1-96f0-b7000c538ec5",
        "cursor": {
          "ref": "e6a41efc-ed04-4579-8227-83c7387b02e2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "46758ad2-9ecf-4109-b954-287c1c65dd5c"
        },
        "item": {
          "id": "cd1e063d-d302-46c1-96f0-b7000c538ec5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a5770ced-8925-40b2-90ef-cd551c717792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e99cd166-17e5-46a7-9018-bb892cafaa55",
        "cursor": {
          "ref": "e0df3beb-402c-44a5-bde1-65086d46bda5",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "43f6c5c0-c204-4744-a929-419b8a74253b"
        },
        "item": {
          "id": "e99cd166-17e5-46a7-9018-bb892cafaa55",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "488564fb-1039-4aa0-ba8a-dafcdca72740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b2811c5b-0b8a-4485-84c8-8bd5f1389f11",
        "cursor": {
          "ref": "dbf7ba33-a286-4c5e-8970-0ed1eb18a43f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8e768010-46e9-48df-a654-9068c7945f97"
        },
        "item": {
          "id": "b2811c5b-0b8a-4485-84c8-8bd5f1389f11",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "49d27aac-5b9b-431c-be7b-2adf6fd0b0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ee9cae-b8ee-47ad-ac9f-478b709d227c",
        "cursor": {
          "ref": "9b6b0df1-59ef-45ef-96c6-aec003634a2f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ef8d539b-2cf9-47fa-8eb5-2bf685e319c5"
        },
        "item": {
          "id": "e4ee9cae-b8ee-47ad-ac9f-478b709d227c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72d79821-91a2-414d-b541-ed7964bd32c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f62699-4ba5-458a-a074-d71a20e2e378",
        "cursor": {
          "ref": "90d02233-0fe7-4459-a741-45ce38ded1cb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "38bcc767-feea-401b-84a7-da58af171563"
        },
        "item": {
          "id": "98f62699-4ba5-458a-a074-d71a20e2e378",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9df26057-0961-47d3-8aa4-accc14661b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b529a7bc-9c0f-4362-a8e1-93907c489ae6",
        "cursor": {
          "ref": "6e1b6b04-6eb3-481a-9390-523fda841947",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8e140841-73cc-49e3-b52f-714b0630b62d"
        },
        "item": {
          "id": "b529a7bc-9c0f-4362-a8e1-93907c489ae6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "045ba63a-4414-478f-b2e7-fc197e20ea46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4f569d-7099-4280-84ec-a51158de5742",
        "cursor": {
          "ref": "9d92f063-d1e8-4eca-864b-0ada9c321cc7",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dde4338b-9c2b-4ab8-bea2-a497c4bc00ac"
        },
        "item": {
          "id": "da4f569d-7099-4280-84ec-a51158de5742",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "36535bdb-22c3-448c-b456-894d8ae6eb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b198a2-8a24-47aa-a514-b853169848dc",
        "cursor": {
          "ref": "4b4b433b-081a-4aa5-aa75-189367c83989",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "794b0785-33dd-4ec6-ae8a-255be5d66777"
        },
        "item": {
          "id": "23b198a2-8a24-47aa-a514-b853169848dc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1808b021-38a7-43fb-97a0-922e04353d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42da4a6-23d4-475a-8f73-6c92fafd92ea",
        "cursor": {
          "ref": "cb4dfe3a-e037-4250-903c-507071284501",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2104c924-6306-482e-930b-46687a1138b0"
        },
        "item": {
          "id": "f42da4a6-23d4-475a-8f73-6c92fafd92ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3855579b-c92f-477e-a5fe-63c4c40d18cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c486f1e-51dc-461d-9a7e-b026bef5a2d8",
        "cursor": {
          "ref": "7495863d-d9d1-44ab-9b8f-f21279efb345",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "49c57ca5-b1ce-49af-8eba-c65fdf989e62"
        },
        "item": {
          "id": "3c486f1e-51dc-461d-9a7e-b026bef5a2d8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "276da01b-f831-4108-aecb-c70c9b6b72e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561746ba-088a-4d93-9a74-25001b1d1338",
        "cursor": {
          "ref": "daa2febb-e33a-4ad7-bb81-3f057b1e16c0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cb69287d-0775-41a1-b412-36503eed8e8e"
        },
        "item": {
          "id": "561746ba-088a-4d93-9a74-25001b1d1338",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8125bc5a-8ffb-4440-9159-9bed9c425003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e82838d-3e56-49fd-9864-4211d18ff77a",
        "cursor": {
          "ref": "6fff6e07-ee92-4e95-9d25-95c79c707f8d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0824772c-7003-4c82-9b9a-a52fa20d30b9"
        },
        "item": {
          "id": "1e82838d-3e56-49fd-9864-4211d18ff77a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dae54698-3334-457a-bba4-5a4e37baa4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e0a041-da56-4dcd-8793-bf6815289b09",
        "cursor": {
          "ref": "562bfd5b-eb4f-47f9-bf86-1b4d28ae5b54",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e23bbebc-36d5-4f29-bf52-ba5622c0442b"
        },
        "item": {
          "id": "59e0a041-da56-4dcd-8793-bf6815289b09",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bdf63615-5b47-4fdf-abab-a87601a9b2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677446c6-85a4-40e7-9329-24fcf4bf27ad",
        "cursor": {
          "ref": "c71cc23f-09ca-4f32-9da9-b08a9a2f17df",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "54036aea-7878-42c6-9c7a-a5341feeb3f4"
        },
        "item": {
          "id": "677446c6-85a4-40e7-9329-24fcf4bf27ad",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fea9c4da-79b5-4c11-898b-feb0cb6a22b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5731125-5e5f-407a-993b-3285dc01789e",
        "cursor": {
          "ref": "d41bb1cc-8800-4845-b664-2eabcb652316",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e2cd6355-1e0b-4908-bf7e-d27918b90d0e"
        },
        "item": {
          "id": "a5731125-5e5f-407a-993b-3285dc01789e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c341b851-ae76-4444-b52a-88e9c2a61025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489b7ee0-daeb-45f2-928c-b09573123b50",
        "cursor": {
          "ref": "7874d805-b632-4428-8928-ebc9f9103280",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6608f108-2ac5-4209-aeba-c02f8f962396"
        },
        "item": {
          "id": "489b7ee0-daeb-45f2-928c-b09573123b50",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "56e8b659-0f9c-4905-954a-8aef8c7e9a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0236fc27-2a5b-48fb-becf-c36e4ef8ae17",
        "cursor": {
          "ref": "ddc1d47e-a161-4858-abbe-060a03bf4d6e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1a8ff352-fb6d-4e67-bf0f-f759dafdb2c1"
        },
        "item": {
          "id": "0236fc27-2a5b-48fb-becf-c36e4ef8ae17",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "903da505-ea36-42db-8cc9-b3eb215560cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3cbe08-43d1-4aed-b85b-b998ff8dd8ea",
        "cursor": {
          "ref": "dfba80c5-74f7-4782-9837-13244e256833",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5e0f623b-5a89-449e-84e2-704f56b5d023"
        },
        "item": {
          "id": "3c3cbe08-43d1-4aed-b85b-b998ff8dd8ea",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c6c31555-f6e0-4d8c-9af2-6ecd06b5d18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742a270c-7820-4166-831d-41acf686df16",
        "cursor": {
          "ref": "44c7206d-75ef-4c4f-88d0-ca52f27e8202",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2a47dd62-2d65-4ade-8491-6184814e58aa"
        },
        "item": {
          "id": "742a270c-7820-4166-831d-41acf686df16",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5263396d-5ba1-458c-9aec-2614581cd4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1142b8-6e8c-4206-9af8-deac9ff19d5c",
        "cursor": {
          "ref": "1538c2df-f5c5-4961-951e-ddbeed94df3e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "33593a06-7ebb-424b-b6c2-71f528e92191"
        },
        "item": {
          "id": "4b1142b8-6e8c-4206-9af8-deac9ff19d5c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5e4a3d80-1371-42d7-8257-cba644646eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692fd66e-370c-4c8e-9cca-2f079141db5d",
        "cursor": {
          "ref": "888069d8-8635-42bc-bdbf-d1fcded13306",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d81c34f-fe43-4fc2-8fc6-55905bcf7116"
        },
        "item": {
          "id": "692fd66e-370c-4c8e-9cca-2f079141db5d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aad0ed28-b23d-4a2d-9faf-9424881c63ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75542e95-fc2e-4ada-9450-80aa9534eac5",
        "cursor": {
          "ref": "ef89253e-8681-4846-a9db-1701eb653f60",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ee86c9b0-3ae0-436b-b13e-12a1f4b6df5e"
        },
        "item": {
          "id": "75542e95-fc2e-4ada-9450-80aa9534eac5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4b71615b-4988-48ab-aa6f-7e2debe97abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37df33c3-d906-4fd9-8f7e-7a512981d3ce",
        "cursor": {
          "ref": "e9f6d3a6-4950-4133-b363-238daf303ac0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fb24290d-dbce-4aad-aa63-44a8c0bfc816"
        },
        "item": {
          "id": "37df33c3-d906-4fd9-8f7e-7a512981d3ce",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fe4819b9-2ef5-46b5-9cdb-3c952f380336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d7325d-2d8a-4bbe-9d90-ec6ecd1c90e9",
        "cursor": {
          "ref": "91f4bc2f-cce7-4dba-aedb-94fd13f27c87",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "62da84f3-5665-4e47-bce5-59ce7f7a335f"
        },
        "item": {
          "id": "c5d7325d-2d8a-4bbe-9d90-ec6ecd1c90e9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3e1deacb-45e8-4fcf-8273-ed568bccf4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3492d895-f7e5-4698-832b-c771c27bd582",
        "cursor": {
          "ref": "45143d6f-8118-4ffb-b374-baa30eeea66c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d78bcb7e-fd39-45f7-93fc-f75a0e3693c3"
        },
        "item": {
          "id": "3492d895-f7e5-4698-832b-c771c27bd582",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a9fcfc44-7021-4963-943a-47bc3662e2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444af3e7-c1d6-4c47-9ca9-7c42422a8081",
        "cursor": {
          "ref": "66c9a919-2a0e-4656-a04c-5fc1047f9901",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f87741ab-4df5-42d1-a954-d2bcee1b18f5"
        },
        "item": {
          "id": "444af3e7-c1d6-4c47-9ca9-7c42422a8081",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d252ad41-7941-48eb-a8d9-a82fdb3e606f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114c2092-4162-4bc5-8040-092a51173f85",
        "cursor": {
          "ref": "9e9b57a8-4cae-43af-9955-90f11179d722",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "db70a2da-297f-4b7d-875e-212ffbb7e896"
        },
        "item": {
          "id": "114c2092-4162-4bc5-8040-092a51173f85",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2ab7e859-087a-42dd-8880-8b56f58bddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef26c1db-2e00-4356-b14e-85df46351d31",
        "cursor": {
          "ref": "0882896c-e232-43e0-a9b6-12a82ea85bdd",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "843aa5e2-de55-4b39-936a-b61b9c7a9f57"
        },
        "item": {
          "id": "ef26c1db-2e00-4356-b14e-85df46351d31",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b71bf278-5a7a-46e9-9b89-2f15e00cedf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d8c5ec-6757-4d98-9b61-0b5549415831",
        "cursor": {
          "ref": "c54ca1b5-cc40-4352-840f-caa2e1b0d564",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d9034722-691b-4a3f-aed1-c99e1d9f4caa"
        },
        "item": {
          "id": "e0d8c5ec-6757-4d98-9b61-0b5549415831",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "544d89eb-c32e-4072-bc7f-46a5ec7b824b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20445bb-04cd-40a6-9e16-cae59dcc2890",
        "cursor": {
          "ref": "24ef4d52-b04c-42c7-a520-0dc5e03c74db",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "39acdc2e-aef4-4fcf-b294-6d42a42f85ea"
        },
        "item": {
          "id": "a20445bb-04cd-40a6-9e16-cae59dcc2890",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ca935976-8846-4b2d-a737-4cf4e8731cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017a25f5-8878-4c6d-82e0-b2f9ba67157c",
        "cursor": {
          "ref": "437d5baf-0969-45d2-b60a-4530dec9dca7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ee010973-63a2-4b18-8a67-dccaf565c256"
        },
        "item": {
          "id": "017a25f5-8878-4c6d-82e0-b2f9ba67157c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8fb56d7d-55c6-4271-b229-e64aedfc144e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4aea11-2595-41e7-a80c-f412bb97cc8c",
        "cursor": {
          "ref": "b4d41aac-30e0-48f7-a8ab-752d61012e2f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "71556f00-41da-4fda-8c1a-b4b5e11033e4"
        },
        "item": {
          "id": "ca4aea11-2595-41e7-a80c-f412bb97cc8c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "61bbf588-6869-478d-9e43-21c5a4260485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12829579-9e17-464a-93a3-85e43059ccfb",
        "cursor": {
          "ref": "e95537bc-be22-4a8e-bcd5-fd198664b365",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "273e2c8a-adb5-4245-89ce-9e162a249c61"
        },
        "item": {
          "id": "12829579-9e17-464a-93a3-85e43059ccfb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "33bfd249-594c-4ee4-b4b4-3e5e4386447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788bb581-5fff-4c71-93e8-81a57f09df92",
        "cursor": {
          "ref": "5e3461e7-7294-426b-94d8-0b8ea6665247",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0b4a4a51-5e34-4b45-9d3b-32f4a61e9917"
        },
        "item": {
          "id": "788bb581-5fff-4c71-93e8-81a57f09df92",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "88c9ca8c-4b13-4610-a636-3763c8efb795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390857b5-a08e-4dfb-b880-af75d063eac5",
        "cursor": {
          "ref": "7b64cf2d-fe07-447a-bc03-92f6df012d57",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "656cf210-207e-4307-9ff7-d09fd5f9ce25"
        },
        "item": {
          "id": "390857b5-a08e-4dfb-b880-af75d063eac5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c27a7998-a946-4edc-9877-c953db7aa77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d3d51b-63cd-4c4d-ab0c-ea4bc55962f7",
        "cursor": {
          "ref": "5ae2a001-9c5e-40b5-84e7-97d5e91ff85c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a63f4509-4883-45c1-876e-8eb8c83d1473"
        },
        "item": {
          "id": "73d3d51b-63cd-4c4d-ab0c-ea4bc55962f7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a6c4762f-b2a7-4a50-a13e-5c808cf4d226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf68ef4b-ddf8-4275-9ff2-cff7419ee16e",
        "cursor": {
          "ref": "c9e3e974-746d-4217-b3ea-b9b1e3d41e68",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "029c8845-2778-48c8-a91b-fb8aa0871dfb"
        },
        "item": {
          "id": "bf68ef4b-ddf8-4275-9ff2-cff7419ee16e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d80a5519-8dd5-40a6-b503-7a611fe08585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa5274b-2c04-4e3c-900f-540dac2c2ae1",
        "cursor": {
          "ref": "5846b845-aeba-482a-965a-860d84cf93ef",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f80c0b22-d13c-4e69-b1a2-3d52d9bce51b"
        },
        "item": {
          "id": "5fa5274b-2c04-4e3c-900f-540dac2c2ae1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cfc5c6f4-b7ab-4dec-81bd-86ee3a830393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deba3f5-69a4-4437-8f78-b42877743c3e",
        "cursor": {
          "ref": "c5390b6f-fa09-46fd-a625-1e12aa9805a1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4e002f93-f390-4498-a3c9-876f0693faf5"
        },
        "item": {
          "id": "4deba3f5-69a4-4437-8f78-b42877743c3e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fe893182-36ae-4b27-98e3-eb7e973878b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58ab407-45d9-46e1-ad52-b99f151a0800",
        "cursor": {
          "ref": "2f6a8ee2-5941-4314-968b-681debdd4452",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9de0cf7f-3b90-4632-a59e-c6b71916437b"
        },
        "item": {
          "id": "c58ab407-45d9-46e1-ad52-b99f151a0800",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "47a3865c-0ac5-423e-867e-af429fc980f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965f1575-c4e6-474f-8721-241c8d56b943",
        "cursor": {
          "ref": "8d98f13c-c7a8-4abc-b024-26d401f28fc8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "32b1dd33-9c22-4680-8b0b-c7f3af52c3bb"
        },
        "item": {
          "id": "965f1575-c4e6-474f-8721-241c8d56b943",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d97ad2d7-f75f-4862-991a-e15e1b121ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb50588-8361-4726-82bd-9d0f06483aef",
        "cursor": {
          "ref": "2f25c9aa-583f-4497-8fc0-571b3f03b31b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5a618f72-016c-45d1-94b2-d0be39ec7e9d"
        },
        "item": {
          "id": "8fb50588-8361-4726-82bd-9d0f06483aef",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2d7404c0-31f4-464c-aa2a-cefa3a0b4a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4567e701-9365-47fc-ac60-96b6254deec3",
        "cursor": {
          "ref": "4c5fa089-f64f-4d0b-907c-4b1a6df54048",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "55b6ae38-f3a7-4379-8387-899938e28d82"
        },
        "item": {
          "id": "4567e701-9365-47fc-ac60-96b6254deec3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b36966f8-d2e1-4d1e-80ca-ce075f7c2fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c0c79b-0c7a-4b5d-a56c-deeea826d739",
        "cursor": {
          "ref": "96f628e8-2290-4555-8292-517d67fecd2d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "906aa3cf-5370-492d-a96b-ee496549f559"
        },
        "item": {
          "id": "c1c0c79b-0c7a-4b5d-a56c-deeea826d739",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "37d0b40d-cf10-425c-8234-f62b4f66a3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886e9be5-5578-49d3-b273-cf8cac1778a2",
        "cursor": {
          "ref": "91e75039-127b-4f43-a390-4a8362c2b446",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2a19ac87-b030-4470-9558-f5020d89d3ca"
        },
        "item": {
          "id": "886e9be5-5578-49d3-b273-cf8cac1778a2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7c74c1ff-8521-43ae-853e-1b746cd026ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b378e5-8376-47ca-a11d-1b1eaf0c8c7f",
        "cursor": {
          "ref": "b98e3b2a-2e11-4d02-942d-e5679ddabcc1",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f7f2c302-5a2e-45cb-b7b6-784decb824d4"
        },
        "item": {
          "id": "b7b378e5-8376-47ca-a11d-1b1eaf0c8c7f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "542f3fce-2a27-4463-b3fa-9764736c88c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6286ffc6-fe2b-4bec-88a2-7d5fc6ac7c04",
        "cursor": {
          "ref": "16acd4c3-4e84-4bf2-bb08-ac0ebb66cf82",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ec2ea284-10f2-4506-bbdf-762bef284f02"
        },
        "item": {
          "id": "6286ffc6-fe2b-4bec-88a2-7d5fc6ac7c04",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c94165d5-2c99-47e6-87f4-0fd1acefcb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0af110-da89-42e9-930d-3e1bdd1183a4",
        "cursor": {
          "ref": "34c5a6d6-0493-4bbb-ab61-756ad4c64e93",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ff8a13bb-cca4-4328-a41e-0d803e3dfd04"
        },
        "item": {
          "id": "6c0af110-da89-42e9-930d-3e1bdd1183a4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "01b607f2-5a39-4855-bd7d-62b7f8200697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6e7f21-fe17-466c-b521-3f0e3fbd767e",
        "cursor": {
          "ref": "86983697-12b4-4fa0-90ef-ea562a22c22c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7210babf-0035-41ab-8542-df6d32bfa950"
        },
        "item": {
          "id": "cf6e7f21-fe17-466c-b521-3f0e3fbd767e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "81054059-6dec-428d-a658-58b58d8f6866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc0038f-d347-4697-990b-022cd475d35f",
        "cursor": {
          "ref": "0d4506b9-43eb-44bb-b402-53261fb0220f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "34946112-3cff-40e7-90bb-0746f426a0bd"
        },
        "item": {
          "id": "3bc0038f-d347-4697-990b-022cd475d35f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c1bdb9dc-2245-4166-917f-0939f932f524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69010167-7b48-4bc3-beb1-4f677605d84a",
        "cursor": {
          "ref": "28279bf1-a3de-4446-838d-f3e3f0f1fdf7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8070c3bd-df81-4567-a195-a20736e567e8"
        },
        "item": {
          "id": "69010167-7b48-4bc3-beb1-4f677605d84a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "84601b0f-0558-4d8e-93d1-c089ce894888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2640d842-d00b-4b01-88f8-091e0b19cd8b",
        "cursor": {
          "ref": "b03d8dee-2f66-45b9-b515-59d1e58ebdea",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e484307f-0268-4c4a-b3ca-bd87bf613b91"
        },
        "item": {
          "id": "2640d842-d00b-4b01-88f8-091e0b19cd8b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0dd3665e-9104-4d64-aa8b-5fa5952af538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38183cd3-8436-432e-8ddc-fc8ec1af853b",
        "cursor": {
          "ref": "4fc964d5-4df0-4545-bc22-7be66b4e841d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f5551292-ab54-49f0-a205-40d17d4eb169"
        },
        "item": {
          "id": "38183cd3-8436-432e-8ddc-fc8ec1af853b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2e6a1909-eb67-4ed3-ab83-45ce8afc820d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76759a73-1073-45dd-afe3-f151155f7363",
        "cursor": {
          "ref": "3a232b1e-e965-4be6-9713-372a2908e159",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f356c922-a3f6-4bc6-9906-9556f1406709"
        },
        "item": {
          "id": "76759a73-1073-45dd-afe3-f151155f7363",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2393ee04-dd6c-4001-8e59-86782a554cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18267878-f3a8-454b-bd51-50e30242c17f",
        "cursor": {
          "ref": "75a02e41-8579-425c-98cc-fbc5d5e26109",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f4f44cbf-c22a-4d47-b1cb-5684c3ab4822"
        },
        "item": {
          "id": "18267878-f3a8-454b-bd51-50e30242c17f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a9b919d2-7194-442b-93b0-6a4eff625180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa6b604-763d-4eab-a611-0fdd07e38aa6",
        "cursor": {
          "ref": "caf806f9-4f8b-477b-95cd-abc9f725fd9d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6ba02e41-4065-4c82-9b09-b468a7bcba54"
        },
        "item": {
          "id": "4fa6b604-763d-4eab-a611-0fdd07e38aa6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "05cdfc8e-710b-4eaa-a044-01db3333c098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20eee40d-0b52-4578-b0f5-9de4007459c4",
        "cursor": {
          "ref": "137214e3-c37a-43a2-9026-755213de6dc3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3006e6e6-1c75-4c11-9514-031f7b07ddbd"
        },
        "item": {
          "id": "20eee40d-0b52-4578-b0f5-9de4007459c4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "da04dfc2-4559-42e9-9758-1275d9b3aaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69aacea-5a28-42a0-b590-fde1e69d6598",
        "cursor": {
          "ref": "aebdf11e-733d-4f16-b9fd-bac386d5ee27",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9ab19d90-524b-4549-b790-e40d6f090a9d"
        },
        "item": {
          "id": "e69aacea-5a28-42a0-b590-fde1e69d6598",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5f8cab33-97ab-4638-8f5c-664bf7748114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11e2d71-193e-44ce-8bf3-611dc8db782d",
        "cursor": {
          "ref": "cb2bfdd8-77c9-4fde-ac49-374339dd0d2a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0807ee19-4a73-421c-8413-6670fd746a9e"
        },
        "item": {
          "id": "c11e2d71-193e-44ce-8bf3-611dc8db782d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d4924600-8b2c-4497-b63f-b80c8f4f33dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9199cd28-1402-46a6-a075-bb852bc89f55",
        "cursor": {
          "ref": "4a8d11e5-d59a-40e6-b9fe-c0805fd42c32",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b1102eb7-2ba9-4d92-81c0-8240fd52dc02"
        },
        "item": {
          "id": "9199cd28-1402-46a6-a075-bb852bc89f55",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e63c5f0d-fe76-44bf-b5c7-dcb720f716af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f99c838-1057-46b3-bb5a-7675c59a9cb1",
        "cursor": {
          "ref": "ee9c7a66-a7c2-44e0-bdb0-73728a60f69d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6cc44c93-12a7-47d6-b9d5-adb6fe96638f"
        },
        "item": {
          "id": "9f99c838-1057-46b3-bb5a-7675c59a9cb1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e2fa88ba-bc23-42e1-a049-f0aac5debdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db2546f-6bdd-458d-a9a1-be76e3ce8c75",
        "cursor": {
          "ref": "6533a70d-f4ca-4ce2-b457-3e71a2c21412",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "96a5ca76-9f70-40fb-8c41-39234c522680"
        },
        "item": {
          "id": "8db2546f-6bdd-458d-a9a1-be76e3ce8c75",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cf34ddf1-b35b-4897-b8c3-020776a96dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdd934c-088a-4978-9ed4-58fa7677ea49",
        "cursor": {
          "ref": "3a5a054b-dc7e-4254-a766-6550d913cd33",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a648c9e9-b42b-4752-b6a1-74679dea0465"
        },
        "item": {
          "id": "4cdd934c-088a-4978-9ed4-58fa7677ea49",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5b79158e-5e89-487e-a3ee-b98590838c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22775e99-c9b6-48c8-8e37-e76f5c88095d",
        "cursor": {
          "ref": "8798c5b3-eee5-4557-8bd5-edb7a63db135",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ed26eb41-dc39-484c-8e7a-8539533e20b4"
        },
        "item": {
          "id": "22775e99-c9b6-48c8-8e37-e76f5c88095d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e9b65487-e73c-43b1-ac78-43fdec0e51da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9f8919-8ea8-4c6e-96a7-65b9f303679b",
        "cursor": {
          "ref": "1402f91a-3b6c-4667-8a67-4574cac8554e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "20fac150-b7b7-4e21-92f0-06e5cccdb3d5"
        },
        "item": {
          "id": "cd9f8919-8ea8-4c6e-96a7-65b9f303679b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6cf911ab-8c81-4ab5-b67c-5df6472f28d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3572f2-5ac1-486a-8cc9-78a3373e093e",
        "cursor": {
          "ref": "da819e8e-3905-4b4b-b85b-d282bbda803b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8fb7f4bb-4e76-42fd-bfa1-973fc640d325"
        },
        "item": {
          "id": "fa3572f2-5ac1-486a-8cc9-78a3373e093e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "211c9d05-7ffd-43f3-bdf8-1691c70b2457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3910e85b-0b1f-49eb-9d30-5a4d195d1ec6",
        "cursor": {
          "ref": "1d4f91b0-522e-489c-85a4-72f8bd9fba84",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8f94419c-9408-4bb4-8360-ebf595d7775a"
        },
        "item": {
          "id": "3910e85b-0b1f-49eb-9d30-5a4d195d1ec6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4b858cd8-efd6-4681-a00c-0074664475f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df560f39-d71c-4ca9-a22a-48b32297de47",
        "cursor": {
          "ref": "93ad32f5-ed5c-4e7e-bb4d-d413d742d0b7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7e732bcc-84bd-487a-b54b-d0a17f815f19"
        },
        "item": {
          "id": "df560f39-d71c-4ca9-a22a-48b32297de47",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "44d1f316-75e1-49b5-be9e-964f13f8c5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fee4bb7-cec8-4729-9c59-82359e9381d6",
        "cursor": {
          "ref": "5d51a591-01d9-488c-bb8b-8ca7a045d33d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d22c6cb6-ba63-44fa-852a-48615ae91a7e"
        },
        "item": {
          "id": "3fee4bb7-cec8-4729-9c59-82359e9381d6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "db5f9a4e-077b-47a1-b559-5cd25e445dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9a9df4-d795-4f4d-a7ce-9a69e5d9443d",
        "cursor": {
          "ref": "1571e606-9e84-43a7-bf57-8fd9b408a979",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d3736c93-5742-4639-9141-badfd41a3f14"
        },
        "item": {
          "id": "1d9a9df4-d795-4f4d-a7ce-9a69e5d9443d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d1a6ed82-71a4-4a15-89f3-2180adc1b9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926cf697-fe3d-4257-aab6-58ba5b6e70a5",
        "cursor": {
          "ref": "6890efbe-8a19-40a7-b6e1-3f73e77fcc4c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9cc1c084-ddb8-4442-aad0-abb31c511975"
        },
        "item": {
          "id": "926cf697-fe3d-4257-aab6-58ba5b6e70a5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5204ce31-ebfb-41c8-a6e8-3b598e26f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b52a670-3e20-4ad5-b804-396ae811ae9f",
        "cursor": {
          "ref": "3c9d8d26-c8e2-4cab-9d8d-42978ac9fd7f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "424fcefc-1edb-49a2-a1b8-95444138c913"
        },
        "item": {
          "id": "5b52a670-3e20-4ad5-b804-396ae811ae9f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "305371ad-e4ac-4a24-9f8d-f52dc48dbff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a67ad8-857b-459f-9160-5bb268bf230d",
        "cursor": {
          "ref": "1ed9ab28-d8b0-4bea-bf2e-118b7fda7a3b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "438dff20-2117-4f0c-afc4-5933d6b6ca9c"
        },
        "item": {
          "id": "22a67ad8-857b-459f-9160-5bb268bf230d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fb048756-8f68-4fc4-aeee-b4a9e6b45950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bb29d5-8cc8-41c0-a988-284e85b96be0",
        "cursor": {
          "ref": "9acec245-176a-4119-abd7-970215242b4a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "51a4ef34-5381-4246-8994-dbcf449f9649"
        },
        "item": {
          "id": "e6bb29d5-8cc8-41c0-a988-284e85b96be0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4464a69e-7870-4c7d-a4ac-577ada8be4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76090350-8052-411e-80bb-b5fadf63264e",
        "cursor": {
          "ref": "44fb1758-a1b0-4f90-b750-fe8cefe49bf7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "01e01442-428d-4971-8439-7a337e2f41be"
        },
        "item": {
          "id": "76090350-8052-411e-80bb-b5fadf63264e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "28cfc9ac-3577-4f27-beb1-51ed1d977e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c5fc60-0496-4a75-b9a3-8cd4f8837bb5",
        "cursor": {
          "ref": "669c660d-95e9-442b-87cb-4f945240cd3d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "acbfad83-5fd5-4df1-90f3-b04ecc339efc"
        },
        "item": {
          "id": "75c5fc60-0496-4a75-b9a3-8cd4f8837bb5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "21756a46-8966-4769-89ce-f97e1726e879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf1d8df-f896-4dcf-829d-d3c039e5f95b",
        "cursor": {
          "ref": "c6c0d765-bc82-4124-a984-673f9a8d0dfa",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b0184c2b-d35a-4d4a-96f2-4cb05e26017d"
        },
        "item": {
          "id": "aaf1d8df-f896-4dcf-829d-d3c039e5f95b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9753757a-14e2-480f-8675-fa441995783c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3062ac85-142c-4f10-b0c4-b315d0a9f2d9",
        "cursor": {
          "ref": "5e6ff5c6-0aee-4cec-b462-e8a31450c8fe",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "275586e0-5b72-4f24-959f-7db3606b4ca3"
        },
        "item": {
          "id": "3062ac85-142c-4f10-b0c4-b315d0a9f2d9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7e2578a3-7405-449a-9c9b-67e6eb2039a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344079b4-e48c-4997-a658-827624f94fb2",
        "cursor": {
          "ref": "71276841-9ae5-4138-a434-e1f7e97da6f0",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f906fafe-e28c-4ffd-97f1-a4b18b93918e"
        },
        "item": {
          "id": "344079b4-e48c-4997-a658-827624f94fb2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4ba45396-4727-4059-8cc0-eda847fcd00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c78f93-2459-4f93-8997-7e4b051cfe1a",
        "cursor": {
          "ref": "ca9a75dd-1d78-407f-92bc-77d295c5ca33",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ffc554b8-e39e-4d7b-a1a3-dc0db68a0be8"
        },
        "item": {
          "id": "95c78f93-2459-4f93-8997-7e4b051cfe1a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7027f474-0de3-4db1-b771-bede7615e6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33408ab8-9845-4f4f-8928-672b9b5b33e8",
        "cursor": {
          "ref": "6ebc6b9f-cfdc-4aca-bf4b-5644a5a8718a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d16c8e81-2237-4919-b6b7-a939d02153df"
        },
        "item": {
          "id": "33408ab8-9845-4f4f-8928-672b9b5b33e8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5b889ca7-a304-436d-8c49-7277feeec9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5c2b3b-a25f-4983-8903-26a2f05ee462",
        "cursor": {
          "ref": "35fd97d9-ce7b-4129-aa6b-295d07a00a86",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6e50f504-1cd6-4091-93ee-9958ead79e8e"
        },
        "item": {
          "id": "2f5c2b3b-a25f-4983-8903-26a2f05ee462",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "50f4ff91-ae48-4847-92c6-c4b8710681da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c038aa41-7b68-4363-8389-448d1c2bc9fa",
        "cursor": {
          "ref": "2ab45f03-3906-4b4d-b001-748b1dfd6ecb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d766d93f-57bc-4b54-a1fc-69eb4ed7ab8f"
        },
        "item": {
          "id": "c038aa41-7b68-4363-8389-448d1c2bc9fa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e95fb25a-e92a-4186-aae1-b5bcb5c5d06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6759e0ff-fb72-43b3-81e0-e5305ee085a3",
        "cursor": {
          "ref": "777bb4fa-fde8-4b4f-8a1c-971f9311404c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "be75510c-5254-4563-80dc-715428c9860b"
        },
        "item": {
          "id": "6759e0ff-fb72-43b3-81e0-e5305ee085a3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4e7f5230-e9f8-4c1b-8d5c-621345b89ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011233e2-3ee9-4828-9277-6b518acebb99",
        "cursor": {
          "ref": "c2bc9153-6947-48d1-a57a-443dd7f344ae",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "59d2e7b9-a238-4706-963e-c91dbec6ba4d"
        },
        "item": {
          "id": "011233e2-3ee9-4828-9277-6b518acebb99",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bacbc71a-6bf1-4f6c-97e5-ab810f9e52f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcc0a69-af48-4de1-a959-a98b3532b667",
        "cursor": {
          "ref": "52e4e4e1-6e5c-49da-a553-516643290a57",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "214c14f1-cbf0-4621-8b74-a0cf2c9ee1e0"
        },
        "item": {
          "id": "ddcc0a69-af48-4de1-a959-a98b3532b667",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "03cbe119-5ffd-442a-8a7c-3005c271737a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2ec161-8971-4a21-a0ef-e67de812417d",
        "cursor": {
          "ref": "08bd7c27-859f-41c4-82c5-f5722762506b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "82fbf560-7773-4c5e-b671-fc28c545b0f4"
        },
        "item": {
          "id": "ec2ec161-8971-4a21-a0ef-e67de812417d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a6a3a949-c71e-48bb-9ff8-4342634206ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3654199-99ba-4a74-9cf3-31076c5b9eab",
        "cursor": {
          "ref": "b28b29bd-8df9-47fd-b806-c598ea55077a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "513d2f1c-0c84-417a-8f78-655e36fc5656"
        },
        "item": {
          "id": "a3654199-99ba-4a74-9cf3-31076c5b9eab",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9d8e9e39-162f-44ea-ae1c-e6408cfcf044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41672d18-53ca-45b4-aba5-5e9b52ffe267",
        "cursor": {
          "ref": "6f00afef-3d50-4455-9b44-8bba52f430bc",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fae5966e-4f95-4fee-be55-282b37f95e18"
        },
        "item": {
          "id": "41672d18-53ca-45b4-aba5-5e9b52ffe267",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9198c50b-3247-4d9f-ad97-271712ade127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c0de2b-3cc5-46d7-a087-eaf3b9a6be32",
        "cursor": {
          "ref": "39964fe9-841e-4eb8-ac42-9bf5e7eff9b0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0e0359d6-47a0-43ae-abe6-159f8a43982a"
        },
        "item": {
          "id": "29c0de2b-3cc5-46d7-a087-eaf3b9a6be32",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e9cd5bcc-5be1-43fa-932a-6af6879cc376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb2027f-5395-4be2-997b-c9b294fea76a",
        "cursor": {
          "ref": "de0c1e64-2ec9-48a0-822d-d17283b83bac",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "942f0b22-6c6f-41a2-9e6d-09f3755bbe08"
        },
        "item": {
          "id": "ecb2027f-5395-4be2-997b-c9b294fea76a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b689d8be-0076-40a8-921a-20fb88944923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f158241-0275-41ec-8fec-ad26dff1e97d",
        "cursor": {
          "ref": "6a46fe00-42fc-4155-bcfb-dcaf27a047e5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ec127ac6-b901-44b5-8f99-81dbb00cd412"
        },
        "item": {
          "id": "6f158241-0275-41ec-8fec-ad26dff1e97d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b82b58ed-7a99-464d-9d10-78c405dcc429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150f0470-1bf0-42d2-bf69-619cc26f8c17",
        "cursor": {
          "ref": "ae617c14-b5b4-4cd2-b706-cd7f04310fa3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "793b6818-7a1c-4bfe-9277-9a57f89f61d5"
        },
        "item": {
          "id": "150f0470-1bf0-42d2-bf69-619cc26f8c17",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bc700c8e-4a37-4d6b-81e1-468fe228c59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43877db-973f-4aa0-aadc-ca1b660cf685",
        "cursor": {
          "ref": "45bf2f99-588d-4150-a92e-d1eb10bc15c4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2aaa2166-4ad6-409a-a1e1-51e2c425f6eb"
        },
        "item": {
          "id": "e43877db-973f-4aa0-aadc-ca1b660cf685",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "36db219f-674a-4884-b0e6-819344235fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8554a583-8e0f-4e55-94b1-d92fcec84ab7",
        "cursor": {
          "ref": "ff4f00f7-ee42-4a2d-a902-9945658bc632",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dad15a15-915c-4f1f-b92c-1af0906fed95"
        },
        "item": {
          "id": "8554a583-8e0f-4e55-94b1-d92fcec84ab7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "800bc563-5030-485b-90e5-d545b66019c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e151b4e8-c256-4b76-9a5b-2d2b1ff94177",
        "cursor": {
          "ref": "3205d26e-a61e-475d-bb46-49a8797a8121",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c624c28d-7896-4a8c-9487-4002d7d3e93c"
        },
        "item": {
          "id": "e151b4e8-c256-4b76-9a5b-2d2b1ff94177",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "72883cc8-a6bf-4273-89cd-0b8d44c61f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d3ffca-0193-4eaa-8b97-2b68da64eff4",
        "cursor": {
          "ref": "f8d187a7-b423-4089-beda-42b09e8b4423",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d20efd29-e033-461b-9647-c8f5e8ed1de2"
        },
        "item": {
          "id": "f9d3ffca-0193-4eaa-8b97-2b68da64eff4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a93c96a5-78b0-4514-b94e-fdbf2788adf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d809237c-7ef2-444d-8cb0-1728c790b5c8",
        "cursor": {
          "ref": "21e0f47f-d6a8-46a7-88ac-c87026ec745f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "06169d7b-ab84-476e-859d-a634b9c115fd"
        },
        "item": {
          "id": "d809237c-7ef2-444d-8cb0-1728c790b5c8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "78468148-a9a2-4ba6-a0c7-9b8c9d32d780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e57105-c713-427b-b85b-6878cf289a7f",
        "cursor": {
          "ref": "4b14a8e7-8c3e-428c-8010-9e961de84ca5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6df2a99b-5796-403b-a14e-1c804defea0e"
        },
        "item": {
          "id": "c8e57105-c713-427b-b85b-6878cf289a7f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dda96bd6-007e-4e1f-971b-6ba3d51dfca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e827e7-5492-460e-80a3-71fc4ffcfaf6",
        "cursor": {
          "ref": "cbfe78be-f678-406c-b62b-8470e422f99f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bc19fb00-2674-4a5a-bcf9-21418676927f"
        },
        "item": {
          "id": "91e827e7-5492-460e-80a3-71fc4ffcfaf6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a5f7f8d6-6e6c-4b64-afda-f62b0b0f79db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869be570-63da-4523-83aa-aa4134c301cd",
        "cursor": {
          "ref": "4c2c6018-8313-475a-8eab-de72cf55ff13",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d9d4cc9c-1951-421d-b710-bc384ef846e8"
        },
        "item": {
          "id": "869be570-63da-4523-83aa-aa4134c301cd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "30f5f531-4c46-4ae2-b152-79568875c040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c336348e-cd3c-4383-8ca2-8ede982e03b4",
        "cursor": {
          "ref": "dcec2258-9388-437f-94d5-16acd19d6ec6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "22917609-23e2-4cc1-8638-c2adb4661375"
        },
        "item": {
          "id": "c336348e-cd3c-4383-8ca2-8ede982e03b4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "68d178c8-c3b2-43a2-a7ee-643b60e185b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979f1ea3-87b4-4be5-8cb6-5d1dd7834c4f",
        "cursor": {
          "ref": "36cd5e62-617b-4017-99cb-44a5296a6eac",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "69304e30-7ea5-4bee-a1ad-65f06ee6f787"
        },
        "item": {
          "id": "979f1ea3-87b4-4be5-8cb6-5d1dd7834c4f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ca30d593-2711-476f-a2c5-20eae923c656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ab890d-c42a-40f3-8886-f0775408aec4",
        "cursor": {
          "ref": "7584a559-fe40-417c-999f-b5ff16bbbdb6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d5bd29fd-d9bc-4bc1-baf9-a444e085f231"
        },
        "item": {
          "id": "a9ab890d-c42a-40f3-8886-f0775408aec4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "42133bb6-c2ce-47c8-b661-ca58c47b780a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef19de7d-9daa-4975-ac43-f19aff2f27e5",
        "cursor": {
          "ref": "0999ba3c-8440-4240-b48b-3d606c4a90ce",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c9d8ff7c-8cfa-4ed0-98bc-1d5a5473c0b1"
        },
        "item": {
          "id": "ef19de7d-9daa-4975-ac43-f19aff2f27e5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9bbd6edc-14cd-4a52-80d3-2e7f142c5168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ce73c3-dcb4-49fd-827f-01f8cf2e67dd",
        "cursor": {
          "ref": "1bfdfbe1-2d47-4003-92ff-e9787cf6e8d7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c942d6bb-58a4-40ed-b859-221e446926c9"
        },
        "item": {
          "id": "97ce73c3-dcb4-49fd-827f-01f8cf2e67dd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "484f77d7-a06b-429e-b734-7d1dcc9b0e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5552b86a-ec2c-48f0-93fd-8ed933613976",
        "cursor": {
          "ref": "30896b31-9741-41f2-b020-63215f2310c7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "023393b3-9cd5-4be7-acef-40d24d8bcb8a"
        },
        "item": {
          "id": "5552b86a-ec2c-48f0-93fd-8ed933613976",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "38a33f2e-e2b8-401f-b0e7-64383d7a48ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294d05c8-73f3-4dae-9678-225537f11b43",
        "cursor": {
          "ref": "7073d1c8-b442-4122-91b8-28b407312446",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9779a838-fdae-49fa-b4ed-43946fb7c980"
        },
        "item": {
          "id": "294d05c8-73f3-4dae-9678-225537f11b43",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ab2238d0-671c-4ab1-bfc1-92b02bc8e26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357e0896-48d6-4677-b0a8-ee9b86e1ee31",
        "cursor": {
          "ref": "4039f5f0-de37-4060-a089-b27d6ab7bae3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f3124c38-da47-483e-93a1-ee970390727c"
        },
        "item": {
          "id": "357e0896-48d6-4677-b0a8-ee9b86e1ee31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4720b419-9fc2-4d50-bbb8-b743a1168b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d795d6b7-dd70-48f7-a070-90836aa90b0a",
        "cursor": {
          "ref": "ee2e1113-5651-4fbb-ae28-31cbc35d023b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "87590475-15e6-468f-958f-158bd82d810b"
        },
        "item": {
          "id": "d795d6b7-dd70-48f7-a070-90836aa90b0a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1758d6db-511b-4ddd-91f0-e41f164aefc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da426ac0-8b88-4d8a-b0f9-b5b8860a8f81",
        "cursor": {
          "ref": "a174c4bb-b3cd-476b-b12d-ca225f67e1c9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "48d43d1d-7d9d-4639-a8f7-8cac866ccf79"
        },
        "item": {
          "id": "da426ac0-8b88-4d8a-b0f9-b5b8860a8f81",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "878849e1-0ea5-4325-b487-95abaafdb545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add5ca2b-7c24-4f25-b436-f6f9f87104d7",
        "cursor": {
          "ref": "edb5aba7-f5e6-4b6b-8223-0e693c0f2451",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3de14a95-afbb-49e4-befd-760d5d30cacd"
        },
        "item": {
          "id": "add5ca2b-7c24-4f25-b436-f6f9f87104d7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "98bab17f-ea15-45e1-abea-b94df966c0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17569b06-0a8e-41a3-851b-a150ef43bfc1",
        "cursor": {
          "ref": "777b07cd-7b79-4da9-bd24-2afe801fc0bd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bc1d02b6-ff95-4b72-a2f4-7b969884975c"
        },
        "item": {
          "id": "17569b06-0a8e-41a3-851b-a150ef43bfc1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bb8c3627-f21d-4b67-a4c9-8bbef8500964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28fc4ad-7fe4-40da-a331-574c6f455ca1",
        "cursor": {
          "ref": "9b7cba3f-3b26-42c0-91a1-4a5c7293e573",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "df07ece6-f77a-4187-95d5-9a514948d52f"
        },
        "item": {
          "id": "c28fc4ad-7fe4-40da-a331-574c6f455ca1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4b071233-5720-4b61-8c7f-69b3ff9a4f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d207287-ee2a-47be-9941-3714aaecd70c",
        "cursor": {
          "ref": "a8aa532d-dcdb-4904-b9d7-4b6f084fb52f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "442005f2-eccc-482e-9757-108007dec85e"
        },
        "item": {
          "id": "9d207287-ee2a-47be-9941-3714aaecd70c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c76e5c1d-eb33-4c4b-a041-798d34e9bd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa9c329-6298-468f-a5ee-359848fae84d",
        "cursor": {
          "ref": "b55c588a-2fb4-46c8-a724-869f54dc3ca1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fb679468-6df7-49ca-acd9-549432f6a602"
        },
        "item": {
          "id": "5aa9c329-6298-468f-a5ee-359848fae84d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a0542c81-54de-4f39-a4a6-fe580fcaa149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d5e3eb-9c1a-4ad0-ade9-52ebe9054fe0",
        "cursor": {
          "ref": "727dec2f-eba4-4b7f-a8c6-302d3a7d7c46",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2a70751d-6ace-4c72-aa46-a48815359f67"
        },
        "item": {
          "id": "a3d5e3eb-9c1a-4ad0-ade9-52ebe9054fe0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cd68e28f-54e5-4d8c-8933-bb590aa0acb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68f875e-c9b7-427e-a394-0206f28f8203",
        "cursor": {
          "ref": "0b54c041-f440-4075-aee0-75078a1bc04f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d1628f6a-a869-45a3-ab31-f3a5cac92971"
        },
        "item": {
          "id": "e68f875e-c9b7-427e-a394-0206f28f8203",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3dbea162-a5de-4c23-a5ce-8b8d0f15c2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6558831c-b927-4993-a97e-926c533e5b82",
        "cursor": {
          "ref": "cdcfe35d-0e77-4c19-8227-c9a67bcabe4d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "376ebf23-1f65-4258-a81c-5926fd1e6a3a"
        },
        "item": {
          "id": "6558831c-b927-4993-a97e-926c533e5b82",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "303170d7-190d-49fe-b7bb-985380f10909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94734d81-399d-4925-9cdf-55563d33926e",
        "cursor": {
          "ref": "be1400b5-7d2d-497c-b76e-e9165fbb14bc",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "060b4565-a325-4c76-9e40-4d486d08e049"
        },
        "item": {
          "id": "94734d81-399d-4925-9cdf-55563d33926e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "271f5126-7e16-41e7-949e-21a4a7b72e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b50e598-0da2-443d-b652-a4d6097047da",
        "cursor": {
          "ref": "4e78e37a-7a9b-42af-8d84-f5f2532d636e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4f066d42-b69d-418c-9fcf-aa73aac6a322"
        },
        "item": {
          "id": "6b50e598-0da2-443d-b652-a4d6097047da",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "edea741b-d2cd-41ce-87b0-ac2462aee173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1153fa7d-838c-4585-a104-ab32a5e5791d",
        "cursor": {
          "ref": "16b828f6-a195-41db-9205-a54f7eb8835c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "70f82124-a6a5-49e4-8d87-0e409a0647a9"
        },
        "item": {
          "id": "1153fa7d-838c-4585-a104-ab32a5e5791d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "09d49cfc-cb15-4603-bec2-59852156a7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84effae7-52a6-4d17-83e8-d76ac9e5018c",
        "cursor": {
          "ref": "2d34301b-9885-4432-9e67-eb1a379967b4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4be35c2a-82cb-4353-8737-fc7c6a00a081"
        },
        "item": {
          "id": "84effae7-52a6-4d17-83e8-d76ac9e5018c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7cbe7f76-70d0-4005-b4ae-2d336d1afe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3280c6-66cb-4bf6-a625-8a3bc390b281",
        "cursor": {
          "ref": "cf40c8da-4479-47d0-bc8a-392f38f8bc61",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d67101c6-63a5-4bf9-90c9-442036b2c5cb"
        },
        "item": {
          "id": "ca3280c6-66cb-4bf6-a625-8a3bc390b281",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "529a0a59-2917-4f91-bd7f-5fd5b9abbe7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00a1e7c-658a-46a4-8c23-d648647f19cc",
        "cursor": {
          "ref": "8d851f0b-da75-487e-bf1a-a5e8145e3847",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b0c055cb-09f8-4949-81d4-f23caa71c320"
        },
        "item": {
          "id": "c00a1e7c-658a-46a4-8c23-d648647f19cc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1201c70c-a304-4055-a210-68e457f19ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b313e8e-3ffd-4b88-80b4-ebeec2b58a39",
        "cursor": {
          "ref": "55829ecf-c1e7-4cc2-acb0-68f6a20e23c2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4f0ea24f-a817-4bec-aef0-db089c7393c4"
        },
        "item": {
          "id": "0b313e8e-3ffd-4b88-80b4-ebeec2b58a39",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3d249307-5673-4150-86bf-d2f73e4343c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b589720-7cf8-48cf-9827-d2d3c8555b29",
        "cursor": {
          "ref": "f4113f1a-df12-4873-822f-44710f77fc7b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f977fc1-b485-4327-b37d-f7a3cf9b3d93"
        },
        "item": {
          "id": "7b589720-7cf8-48cf-9827-d2d3c8555b29",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4701a1f0-a59d-481e-97f1-db89a87ab3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5661e5be-9ef8-46e7-acc0-3aae812242b9",
        "cursor": {
          "ref": "52c51e7e-cc30-4cd2-b05d-81ba939bd739",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b695ad54-6007-415e-aa51-ca587b34839c"
        },
        "item": {
          "id": "5661e5be-9ef8-46e7-acc0-3aae812242b9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4efb9c09-58e3-46e5-afeb-6be40e5bbb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8677d1e-de91-4419-8fc1-5f6ea8dff961",
        "cursor": {
          "ref": "24b8641b-8563-4d9e-98cd-d346874cd3ab",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f7858ac5-1281-4d26-a858-2dd72388fe81"
        },
        "item": {
          "id": "a8677d1e-de91-4419-8fc1-5f6ea8dff961",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f325e6d2-a472-4140-bc23-05169f67d8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375db1cd-a440-4a84-933a-944ecd7dc549",
        "cursor": {
          "ref": "f3504b3b-5d24-4ba5-9a7d-c229c6dd3768",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "952ed399-6266-4159-a866-a9c450646cb2"
        },
        "item": {
          "id": "375db1cd-a440-4a84-933a-944ecd7dc549",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b5d39e0a-82e2-43e2-91ed-2cb4db8f24fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6002a6-bbd2-4325-b1de-efe969088d9e",
        "cursor": {
          "ref": "f05d0ef0-9d25-4508-82f7-132085b47b28",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "093ce712-1e0e-4422-8aca-7ffbd38b6eb2"
        },
        "item": {
          "id": "de6002a6-bbd2-4325-b1de-efe969088d9e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8f526fa0-ce2e-43fe-bebd-1925a098a057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feca264c-4879-423a-821b-13f5e61a3b1d",
        "cursor": {
          "ref": "28b8e46f-f2ba-4140-9446-de935b50a4ba",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "22392802-9658-4a8b-b47e-8050c9bec3d6"
        },
        "item": {
          "id": "feca264c-4879-423a-821b-13f5e61a3b1d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fba33370-d7e8-49ae-8e3d-854a6d68413e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5b64e6-d00d-4dfc-b508-3f5209b746f9",
        "cursor": {
          "ref": "f89d6058-ad21-4e92-8818-bd7493a05d9c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d68d33a9-2f83-411d-b006-dedb53f32551"
        },
        "item": {
          "id": "aa5b64e6-d00d-4dfc-b508-3f5209b746f9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a98fc708-0882-440d-9aad-e139edc3cfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fb9df9-380c-47cf-adb0-70ab27160620",
        "cursor": {
          "ref": "692b1a75-1b52-4a80-a577-32e145d2b51c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "888f9f70-14fa-4dc7-b927-0caef3fbcea8"
        },
        "item": {
          "id": "74fb9df9-380c-47cf-adb0-70ab27160620",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "40269076-ccbb-47c0-a856-97d459b9de0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced6b708-25f7-4590-8171-151a01946ccb",
        "cursor": {
          "ref": "eefa0541-e23d-4e1c-8976-4b19f0b5009b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ee7707c8-04fc-411a-aca8-584b07abc03f"
        },
        "item": {
          "id": "ced6b708-25f7-4590-8171-151a01946ccb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "677d94a3-2ad1-4595-aa24-8e76c2b459bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926ef7ee-b92e-4dfa-9257-9300667fde74",
        "cursor": {
          "ref": "759582c0-429b-40fb-8dbe-e60764995c62",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fd455972-f04e-44b9-9aa3-76198140a9c3"
        },
        "item": {
          "id": "926ef7ee-b92e-4dfa-9257-9300667fde74",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "47b86a72-9a2f-46e3-ae0e-ce280ac9413e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b22d980-7811-4cde-818a-e5e74a488d5d",
        "cursor": {
          "ref": "6a0dc1a4-7278-4b7a-a528-17c203d0ccf9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b759b981-a0ec-469a-8118-834685a74ad2"
        },
        "item": {
          "id": "6b22d980-7811-4cde-818a-e5e74a488d5d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1f60559c-5fca-44a2-8bf3-ee19e2c99eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87019fb3-348e-4510-a4db-27b913cdd331",
        "cursor": {
          "ref": "e80ee681-d947-48c2-a2ff-719661085035",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "533305ce-34cb-43b5-b155-8f0696a018c2"
        },
        "item": {
          "id": "87019fb3-348e-4510-a4db-27b913cdd331",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "833ec3cb-1be1-407e-8939-246d91ecdc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0246fe-3cb2-441e-a67c-406b3059f5b8",
        "cursor": {
          "ref": "1e08b129-bb5e-4ca5-8e9c-c516f9f3f896",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cadb0d7c-03b8-4026-b199-2d8f05d36856"
        },
        "item": {
          "id": "1a0246fe-3cb2-441e-a67c-406b3059f5b8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "156d7429-5c60-46eb-87ce-131e99be1321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "3fbadb75-5219-46eb-95e7-d312a315d365",
        "cursor": {
          "ref": "0e846b5c-7b63-4776-aa6d-b24cdf0f05ef",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "16c6415f-8a0a-4818-ae5a-90b4e11598b6"
        },
        "item": {
          "id": "3fbadb75-5219-46eb-95e7-d312a315d365",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b0272e4f-24f4-4c87-b65f-7a28936c3204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "4755d9b0-ddc5-4571-bd57-ce7a6d8d532a",
        "cursor": {
          "ref": "35c20f67-10c6-4b7d-b3ee-fbb6d1e3bd4e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "09ff7d0c-8033-4a9d-acd9-1f006713ac41"
        },
        "item": {
          "id": "4755d9b0-ddc5-4571-bd57-ce7a6d8d532a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ee85a765-c5d3-4baf-9201-d3867500982b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "0e54c0a4-528c-4cb8-aa58-a8b3dec96d44",
        "cursor": {
          "ref": "99464269-4f1a-42c4-aa56-0281b45f7193",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9dac56ae-f67a-4d8b-a8fd-bc435a75d614"
        },
        "item": {
          "id": "0e54c0a4-528c-4cb8-aa58-a8b3dec96d44",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "62c820bd-a110-42ed-b294-2f1df9421790",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e54c0a4-528c-4cb8-aa58-a8b3dec96d44",
        "cursor": {
          "ref": "99464269-4f1a-42c4-aa56-0281b45f7193",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9dac56ae-f67a-4d8b-a8fd-bc435a75d614"
        },
        "item": {
          "id": "0e54c0a4-528c-4cb8-aa58-a8b3dec96d44",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "62c820bd-a110-42ed-b294-2f1df9421790",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc44cec-2342-4781-a4b7-c8ec1ceb2c9d",
        "cursor": {
          "ref": "4d3f2c7a-1807-42b7-9aca-a6291d42f065",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e6df7754-f6a8-49c1-845c-5c4be93da324"
        },
        "item": {
          "id": "3dc44cec-2342-4781-a4b7-c8ec1ceb2c9d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7c4c1048-15e5-4da3-9311-6c9775835437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abf6852-44ca-4d83-89eb-74db4c0367ae",
        "cursor": {
          "ref": "07cffcb7-3f9c-4781-ac62-398cc4ee36d3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2e143281-bcb7-4823-b68e-157407fe0f09"
        },
        "item": {
          "id": "7abf6852-44ca-4d83-89eb-74db4c0367ae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4842ab68-b929-45cf-8bbc-9f3b8d980721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}