{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e00de9d3-7d8d-4cf1-8431-082dca4b775d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fbd2fdc4-569a-4992-9923-38af8ccfb9d1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46083843-c4b0-4d61-8bf0-932986b503a7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0cb1f495-6dfb-4f1f-bf81-f326ebfcb4e0"
                }
              }
            ]
          },
          {
            "id": "978d9b2e-2cca-426e-b257-4b0aeb990323",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9900f5b-dde7-4014-817d-845eb33b0df0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dbdffdf5-d737-43e1-b4b2-909d1e9db4ba"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8f740422-9420-4e64-a817-2ccd9b3cad9a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "420fae8d-8b95-49dc-8968-44a3a9a5fb9d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed8362b0-fbf9-4958-b065-1adda5e0e9b3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5de103e-4f46-4f2a-8209-4b2fbfb0380f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12844811-9c63-44c8-b86d-37fde0f76df1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f428877-069a-4b52-bed2-aa2855e22170",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "166c19e5-a4fb-4243-82eb-d0e03a0b6702"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "708346e4-49b3-41f5-aa98-214219c04657",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1216b18-dbd9-427b-af3c-4b63d9c2b0d8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "490be7b4-0539-4824-9028-e45a36485cc2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cf81b834-00af-418b-a229-4b4ea74b96c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "939368f5-2602-4d92-984e-6fef656e0387",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcee1584-5404-4053-b454-ecceded5514d"
            }
          }
        ]
      },
      {
        "id": "033ef8c8-cee1-484d-9c6a-5713ed991986",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "da44022f-9b96-4850-81e4-a2f425915c67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c823c716-3c12-4757-9cb8-b6a83e03c107",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb5ca085-e06a-42be-a205-b6d6aef5e5ea",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f34839e-1860-4cfa-95f3-a55042e82979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee63c0b6-3b2a-4d6c-a00d-aaf71887498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f102aca8-2659-4512-b34e-c6716a5ae17c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9737bfc-7eba-48f8-993f-529c7cd275b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53ea6dbb-9111-4322-82bc-bbc87ef58c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89977643-acc6-4849-970e-cd30a2959d69",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa4e613-26e9-4c25-9ed4-d2fb3062aaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e85c5caa-0f7f-4f75-a837-5549b4bada53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e2bace5-45d8-460e-b544-9c5ca93dec27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7ac7bc5-b6fc-49fa-833c-660f59275ce1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fd9360-bac7-455e-b822-40ed365c6ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e645535c-1c88-4fee-b279-722cf68cdb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9833154f-e522-48d3-a64e-2dbd30832b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368d6696-839d-4cc9-ad23-8df600d8989e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "efd10708-dfe8-4315-8799-7760146269e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e885a44-ac46-413f-8a64-7da0b352111a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "339abd83-5628-4883-973b-6722b5b1d64e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d8162eae-3874-4ea3-8e41-8f7c7476767a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30f86585-534a-4035-a58d-c7e5d8cd1a90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c770efe7-7d9a-498c-9a50-26b76877ce6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18b01bd8-aa6e-4118-a809-0530530be793",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fd5fe4c-baa2-4096-96a4-b8fc0d30d55e"
            }
          }
        ]
      },
      {
        "id": "8c3091fc-3bd9-4a1a-a7c3-a2b9bc404e6d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "512ade92-3d92-43d8-b28f-0ca1dc11c827",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27588e55-c58e-47fa-9025-8c2103458281",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ce3c721c-3088-4971-93cb-df7f836e60ce",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775b6498-3e40-4835-b219-0a8d65b701b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413f9a14-deab-4ef7-954e-ed527b54033f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6073d2-b0fe-4b4c-8c4a-8d8db5c208b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f14159ca-58e6-4e6c-aea4-c8612f5966a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2dcdc6-9153-40ca-9b1a-29b4147abc27",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcfdb6a-a172-4901-a4fd-2d8fceb829d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6230d42-73a9-43f6-9e6c-f4a6dfeedc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe64f237-7e16-4078-a792-1d13684afe1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28e305f8-8bc0-4522-b3b2-c6e77df635c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b423ba6-b865-4bc4-ab06-49f16727db0e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d886b70-53ef-4fb0-9221-a797a6c780e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92b49af-f15b-4db6-950b-4cfe1ee9f681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dba73e-f747-4f6a-98b9-189afd414ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30bf90ea-f544-466f-9918-958646863122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73d46ff-0107-4f70-ad2f-042ec50b40b9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53905b2-c576-4802-a9ac-9655cbe2d2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278cdb14-b305-4133-9e41-3da3583d7f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd436817-51a0-44cc-ac0b-76634cd47680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "751ef05d-240e-44c0-bdd4-e4cd6e65300d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f36bae-e415-424a-bb54-502ef0cec142",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dfc001-3f09-41ed-bd15-71434a43e95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d7faf4-2c6c-4190-bf87-0bf3fbc67362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c556e42-aad7-45bd-979c-09ce8bdb76cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e07e22-bbc0-4fa8-b7a9-51ed8cc27b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bf95ea-a822-425e-a608-797d3c7b3527",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5341e3d3-6fe5-4db8-8aa4-cbcc04da8a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168913dd-84c3-493f-b505-fabcada38914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e884d57b-d0f4-4d53-a915-ca437a49d7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c5e8fec-14e6-45b2-b850-bf161d0991f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659117f0-342d-4d76-9c3d-33afef20e407",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbe2a7f-ae82-45dc-ae14-01847d453699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663d3dc6-03c3-4ff4-bcb4-24e1652d86f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1780bf51-d09a-4a89-95ac-ca399385604d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37c98668-372e-4577-b237-b397b0e2e4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e1578b-8d43-4c7a-a038-aae1b24ef0f9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de506c9f-d827-4713-8269-bf95ebc1aced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12444e3e-4e8e-46d2-a0d7-80edc9cbd40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae12088-735a-40d8-ad8e-ac8884f73bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed7cffe3-c9bd-43bd-b519-e2b84934b9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d21364f-e4e8-4253-9bda-f804ab851b11",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda00fa4-0b76-4689-b3a1-5b4f1d82a242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a501cab1-e591-47a0-8c81-4d9cff6db076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec159cc-b39d-4e13-9ca9-e36b864a086a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "169dc880-908b-4915-9911-7466df80be4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872d33f7-ffd4-44e4-a2da-a347b7ceabe1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4eedf68-ac9b-4609-8417-0957b8d50048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37327199-e892-4e5c-9d9b-793792701379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7417c902-c510-48a8-9f93-099e08e74e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1f3aab8-34f6-4e7e-8276-e88966c59f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd08f7f1-286f-44e3-8a8b-59bf53607db8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d33314-4ab8-4079-b5e5-b75e7d85d8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee5f21f-5547-41ea-907f-b7ec60246837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bb300f-7b42-4b1b-9e9a-082287cfa676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25e45a50-18bc-4c55-b0f2-a4e0f1562426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52dc693-8adc-46f7-8641-c929bc41009a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de17cc7-e546-479a-95d1-df43c74a1f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a76f1a8-f412-487d-b07d-8911e69343d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cb56a2-a187-43fe-a0ad-75ad8dbff2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df2dd89d-3b08-4133-8829-2852168ff85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5653bcf5-1f58-4096-9e7a-cc149aed3ea5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5954e1-bced-4e1f-b3e7-b872e7ff5069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c28494-615c-4e08-9fa3-a1c2041fadf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c37a7-f276-43a4-b1e5-dc53b5b3c2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc1b2573-12ad-4ad4-a426-19eebfd5bf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ccf30b-461a-4dc5-b5df-1b4d93ed8e8a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b313ff7-354f-466e-a2b8-7440b10a5564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49700c1e-60ca-4b8b-967d-5f4abbe54554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bd826d-3de9-4aa1-84ca-5931ae9ab6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86e38fb5-9604-44ac-b60e-5368c1b91894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd964282-faeb-481f-96ff-69bcc75cb877",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad56900-e505-4a72-b774-23ee0590537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b03c53c-39a1-4286-a727-e6a3b466418f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c30c12-9e0a-4f6c-9295-c5f672affc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d515008e-a1b3-4936-8c2a-f3493442427f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001d3afd-0366-408b-941c-0dd68d1b7fed",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb9ad25-8726-457b-8761-da8b38051ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8543d8dd-70b5-4bc3-a3f0-cfe9c381214a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106bfa2a-86f2-4a82-9b57-18d6b2a8ae86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6632ba0-2522-4180-ab0e-a01a220a6c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa4304c-ecfb-4825-a27b-c68f65ef3a20",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2134dce1-b74b-414e-9069-958eb15aadec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a525aac9-be33-4347-a7e1-a7f0a49fe0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8db716-e516-4ba9-bf32-7ecf545630a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "011198ef-975f-4ec3-92a5-a11aedc3233d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824defc9-dbef-48d8-8deb-b80bf59ff5a4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30551454-82dd-4ffa-a828-8714fe20eb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a407448-03b9-4a1a-8249-41fb2818eaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76000008-755c-499f-9551-6cba7ae70934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3223b8cd-3027-46e1-adaf-1d7e5bdcb425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc94ec41-96c4-485c-97f8-c4f9b5f01c6b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f56a9b-03d2-442d-8622-f1178b579800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d266a792-a758-41fe-92f1-349472399a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa79837-2c85-4fc8-b897-e1ac62d3c338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5a2a37-44d5-4c2c-8c20-9ac66cdc562f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46197b0-80e5-47bf-9096-0d0e43def695",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d34812-825a-47e0-8678-9b13a1f19404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78fd456-034c-4556-bfe5-64e228eafa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f858413f-3cc8-42b6-a43d-1b614f2153b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a48207-7118-4b50-85c0-59491a1289e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf11d68-d2b0-4241-a16f-03ceccee6a82",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd098d-59a7-4561-9495-233a6f403733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c432457-d72c-42c1-8ea0-ad6deed2a435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f274fa-2cff-4098-bbb4-2b721ac9d052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abebd799-90c6-4026-8a2d-e10f39310154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbeff1c3-e42b-4ed2-b5a5-e0efc89be401",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d60c173-929c-46f7-a29f-224c2bc95179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68613bf-c558-4eb5-9c10-dbeaa242e845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3254c0-1088-4328-b08e-9ba091e5eeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d44230-ec9c-439b-9ae8-b1e99e97e126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d95bc4-7745-429c-92a5-3f0c439f32f6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f69dd5-9ba4-447a-947b-fac539571005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b31127-ae68-4b84-a61e-3877ae411d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a7f160-a81e-43ba-9081-2977ecd00b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "735914b6-eef3-49de-98e7-42b17a5fb0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801f2e37-8704-40a6-8cc4-1cc8981cfa8b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e428cd-f777-4d63-b196-545a30d03556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9344af67-54d1-4f5d-b680-114a98206522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bdff0a-0115-495a-bb50-8d875fe7f5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "99b24690-9f99-40af-a663-fafa16d3b99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307c9233-35c5-4f5f-8819-e820a8f483a2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4353a87f-bb11-4f03-adf1-f4858075675a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104e6704-248d-4063-a215-6a6ffa3dc09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ef83ed-cd86-4dec-bc9c-5fc6fcfb2fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "629c34ab-bdd5-4464-8b8b-886b07d9f108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04749f3-6d27-4601-b87d-8d0c2d4492a4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c18de4b-8a8f-45d1-8895-6920d5627ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1e976e-69ef-4af7-9c67-b74ac1943837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847e101a-0f59-43c3-affe-9c1e8733b280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce2fc4f-fa93-473b-a503-194d46260451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec6c4fa-5dc0-40e7-ad64-276df6e627c5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6ee986-52bf-4cbb-8e62-249b51fc9b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238a6a0e-e4ca-4c03-8927-9a29c58c1ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d530a5-c510-41ea-b342-bb50479f5325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0004b040-4c59-467a-9a93-631c384d440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e159f7-13be-427c-97c1-9427e34522c3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ffeb5a-c1b9-4e7c-b652-a889957038d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9576ba-67a7-4cac-a434-66dec97ce2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eafab35-b031-4d83-8a5a-66bed623755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28003c4d-6263-4b12-9fbc-3d8a1e5ae81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43195de1-f0e9-40b6-be2c-65104faa55b3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61483b1b-e3d3-4112-a9c2-881fdf34411e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e296322a-3f24-4fc5-86d0-3739d59e169b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bea7b0-3797-4928-9dc1-8b09a005acb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84fd2525-0d46-4f94-b6e5-0cee4be4226b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabd4c8c-78d9-4451-8377-30b9ef7865a9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07009b7e-47f2-4dce-9e4e-f0ff0f27d927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd4cb3e-08ee-4199-ab3d-72042ba5315b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd102ce-33c8-48f2-87e1-d906134e1936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b28a6b-c7ae-4872-bdf3-199aba4b1894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35e4f45-213f-483d-b227-7c9013188d53",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96354790-dd31-41b6-8f35-a7befa1d8a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00901d32-b014-4481-8f45-d5014b505210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79e75e2-ddb3-46d7-b340-623d1359c480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d204ea09-d474-4206-8377-e392a4b1e0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8766596a-5ca8-47c4-a55e-7040b327adc3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0033f32-6e57-417d-a648-53de0b4e6287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1859d522-0da4-47b5-9455-d4559bf0c87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9298bbbc-2426-44fa-b326-db9179461246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "922cc5a6-10a2-42ce-936e-e11135475b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afed820f-6deb-468a-a108-285d60ee3393",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f780fc0-6a63-46e5-9fe2-e44f28beb47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2997d0a-e9a6-4e5a-95a3-06f1dfb36aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a862827-40c9-4420-bad4-2e20c68dca0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df1f249-7290-4020-a67f-8e87afe4ffb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0d6348-93d6-4242-92a0-8138e1f95282",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9edca6-90f0-47f3-8213-f957618bded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a3e98b-b0f6-4cbe-8967-7ad301bf1156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fa76b0-ef38-4b46-ab30-b927255ac066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36bf27dc-823e-496e-bc16-ca973e4e6012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccd2ddd-90ca-40fc-9841-c8c014f2d54f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ed270a-35f9-4902-9649-bcd11af2fd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc88ddb-b303-4dbc-a4d2-cbc63776ab92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cd19f4-3c2e-4b8b-9777-06e1f7fa2467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7221149e-65ac-403d-a526-3812a7d959e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3213b69a-e6d7-465f-b521-b16a524c0c77",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75b3b94-c107-49a8-b532-c64eca57ff7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c9d8852-d223-4997-99e8-4ae09a7e4cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9720ae-086f-43f9-8fba-ad382f08c1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36966544-6567-4ce0-9a6e-01774764ec0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d154c4a-b34d-4726-8ae0-fe80692a19e0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339cf5f6-cc5a-4b57-a0bb-31df84452e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44293f94-dbe0-4961-9d3c-fc1a107d0744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db15f393-98ed-445b-8ee1-7902dc8f6083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58071498-462b-41a7-8ebb-6bc267dbc97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae676f0-2dea-4b1c-913f-3b60231f80f6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10784a3b-f1af-4a7b-b9b4-20cdc228d128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b441c1-79ab-4db3-affe-fd36be042787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd75ef63-fab2-40ff-b317-d51a89bedb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8963ea26-05d6-4749-9bdd-daf0649d17ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5db2a24-3662-4db5-9931-158f38d36131",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b732e35-a87f-4d9e-850d-334cbfa87e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4ba8db-c2f7-4961-a67f-86d8f6917035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96da04c-eed4-4ce4-884c-26f64c0eba90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "764510f8-7935-4aae-98fa-bdab9467f974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0d454f-4ece-4b9d-939c-ad64ac747439",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfe0afc-db45-4753-b294-645dcdc7a0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d8beb9-d19b-423b-b187-4b19c12b55d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b16ccc9-d8ea-474c-a865-33349ea3e883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d91c4ef6-7109-41b2-8347-345745b7af95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1191a4dc-e761-4357-a57e-b9b0a62f3d06",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4c6405-5973-4f36-8e8f-8cb696a6e6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37c63de-4312-40c3-a2bf-37aba690f986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caae6541-efbc-4bb4-a449-1d060578201d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3315a07-2f7a-4047-878a-b62df7b72568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020f6437-622b-40a0-8ebc-4746e467c2e0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6cced5-d691-41ec-b48b-a42bdac7fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3136a1-1c49-4a5e-a8e7-2fd1177a9ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfbc5f6-d3da-4b92-a66f-9a22f2d901f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4f332a-0f36-4d4c-863a-ddf08b2a8a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22790822-3a89-475b-96e5-0aaf0355a6d1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388053e0-6e5b-407a-a0aa-0d148252ae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68ff13d-fa84-4c47-952c-ce2750cc3c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d03155-1bc6-4302-ae38-3c5597663988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8247eb-5ff2-4420-9aad-939366419a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250c98a1-0899-4f19-96eb-f13dc83af840",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f64e76-2250-4819-9834-6b864ef7b1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae7d0bc-788c-4dc5-89e1-544f20d4193d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d869132f-0179-4ceb-ba3d-93e3694c591b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "115d0a3e-d186-46ab-8c6d-0c1bb90eecbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ff0bbd-e289-49d0-85fe-6afa1e5a4889",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d69c65-84d2-4483-b630-d1786883b7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc36671-7a30-48a8-b844-4afbade6fd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611bb768-2fb1-4654-81b0-915eac32cdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f47e9a83-db23-4587-b4cb-1773aaecc423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d2385a-942b-4505-8645-dcc40cba8ccc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa69883b-82f5-418d-a7d9-b13e9067cb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34135049-8528-4314-932d-d01e3d74a92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6907a58-9a3b-405e-8e39-37f3100adbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d24d5c6-9790-4c4c-b468-92bd95e4ec9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc150002-20a0-42d8-9c03-22f79062f5fe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a6fd2c-cfe1-4d3d-b292-93f2f8dc9976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f583f38a-2b86-49f9-ada6-98855ccc569f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d009cf18-b66e-4e38-bb44-cd2468316293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c80377-39f8-4a2d-b3e8-cfe1bb524588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebc2720-6191-48e2-adb9-0080a8fd4e31",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a072cdd-94f8-458e-9627-42c9fcba277f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2f3663-fb39-4af2-9b9f-f625dbceac85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7d85aa-1adb-4b06-b0fe-95b7e52e49f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96bf50c4-8a88-4a11-a0a1-16e7914948f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0508d5d-bf93-4488-b89c-3897976692b1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f75e16-0092-4598-b9c1-e73d73aeadfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bcb0e7-a4fb-4fb0-9264-6b33b7b4f0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96da752b-2f68-431b-8ea1-999ba3e2e251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35cfa22f-0234-435e-aed9-8e254c9d72c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420eeca7-3a6f-48a5-a2fb-f9e53aa655ed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7225e055-0cd8-426e-935a-0548e535b030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44e98be-6405-4594-bb68-d2503dfa70c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02efc4b-9143-49fa-b75f-7495709c800a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd984ef-4eac-4e08-a61a-c35a6e04d6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f593955d-da96-42f3-9365-0a27bb85dd95",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1001d7-b03a-478d-9692-3d9035c688c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb53e73-35ed-43d9-b6c2-7788d631f329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a864826a-ccc1-433b-b8f1-3f52f9daa872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c49e51e-bd4d-44d0-aa7e-5683628cdf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50be343c-bbaa-4e99-8c72-93a4b8499250",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1ae239-93cd-49b2-8910-21c6d84ea2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276f6a85-b201-4556-a083-ea699eeaafd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c327462e-8377-4bf3-b4c8-33959000d1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1893b7e-faae-438e-96ee-6c9705784270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95715baa-6184-4ac0-8586-91c04aace0d6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16da652e-0f3b-46e5-9349-67433f97744e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7c903b-ce8c-4834-8458-d2468bde82a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59055be-5f36-4631-a41a-abb3958be019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf25e7b-4b6d-4182-84b4-2d3fd2a33f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5321af-2a40-4e2f-ac86-18573131abf1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987a40cb-4186-490e-88ff-1dbff5fe3e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94762eae-2b0d-4f3c-8b43-a8a4a4f5af95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ded664-e21a-4af8-90a8-98fb63cca959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c81f23f-fc8d-4a88-8517-f4c80af81abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a83ce1-a47c-47e3-87c2-2384e797baf4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22a5c67-2383-4362-9a34-52795819d47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b8d9f6-919e-42e3-a2a6-e3db68defe34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da150ef-c2ac-4ac9-a79f-b4d114d4b599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93063f5e-2786-46bd-a72e-0f4937c90eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535fd1f7-57ed-4eb1-8ba9-1185c3592af0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4b46ce-0122-41a2-a7a6-dcbd14424199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50debe0c-689c-48de-be14-908e5146db58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101d5be6-361e-42a1-98b7-4ea93a17c32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "181af336-97b4-453a-8539-ec8af7ad4847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac00c0d3-a618-4919-9f3f-fc979f266638",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48005ef4-ee6b-4005-a063-2e04819afec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4611f323-ef42-4fa6-bb2b-81f64cb40488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89860148-bc10-4c2e-89a4-45fa8f0eeb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76bc68e6-cf51-42a1-82bf-077af22fafa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc298bb-88d6-4bf3-82d2-57a84def735b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880c1927-80b6-4e18-8581-ffc8f8089fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d142ab-dff4-4553-becb-968fe2847c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec4eb8a-8082-49c0-ad07-9c258b39ec09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e939183-7ddc-43d5-9e19-7efe0a54105a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3583f3d-b5aa-4747-af4c-30db25733f54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d787b0-da32-4586-877d-c0f38af134bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bdfc2b-8b9c-4c7b-a881-ba663884fe34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b30c77b-23d6-4fb5-90e4-62b986b554bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "132ead7f-258f-4cae-ba18-ec39298cd594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fee5c60-efe2-45b9-8c66-8bfa0ee4302b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4434e2a0-a7f0-4d8a-a98b-e64db2ed5af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c9be4f-88c2-4acd-bb7a-7ac34981e8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff5e08f-0676-482a-ad56-22b3cbdaa7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29366066-8db5-4730-9456-b009a56869f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3469d91-37c3-48b8-95d4-0c5b21f14471",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb494612-56e5-411e-95ad-b9453db407f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ba3e0d-6db3-42da-8c87-f85fe989d084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2aa973-a309-4cda-8730-c72751be8d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6225f7-4659-4148-9705-496400ffdd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8544230b-c9ec-490c-b0fd-245ddae36c21",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2930687-bd37-456c-b733-adddc0242017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb775f7-fedb-44da-a6aa-ba6799533cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0780bd-e631-41fb-95db-61ee77c1de30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb74e73-9f7a-415c-930e-daf9dbe47a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01d047e-ba96-4ed1-9286-7938cef58944",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f94a40-0f90-486b-a319-bc1b3b289e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689e91fc-f35b-47dc-b793-0d3933387476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b746d8b9-49ad-40f3-b649-1387c48db23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c41bd3-73c9-4b52-ae71-f8ed4eb39703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abc9c1f-8603-400c-9c92-b679d716604a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70914f95-7b85-4bc0-862e-9873cb09180b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee23fad6-dad8-480e-8a4b-2aedd38acb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7507af8-ac2f-4ab9-ab1b-0764c5482919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6be4423-f440-4845-b57d-4354d5d7b356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637e0a7c-2868-4300-b259-9563cc7ad2c1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6cd9c9-3c21-49a2-97fd-ac8f44687ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905042fc-345e-4f72-91f8-a5d38ae50f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54879c95-0beb-4dbb-948a-d75827111c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "259090b5-ac15-4393-ae14-f3bd88714f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eceff3-9fd5-4c38-9120-5ebe065c2a14",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52780c72-38a7-4714-8e03-8e650f3fb14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddffbd2-8cf4-4bf4-83b3-1f5303849db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a968850-c15b-4844-9ce7-2d307afdb85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2d934c-65b6-4aea-a86c-daba57cd8550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346e6913-bb1f-4e15-8cbe-b94e4e332fe7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fad97fe-9998-4b43-adf9-27dd7cd1021d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdc60ba-f47a-490d-99fa-ebb15cb60ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbea9cb5-abde-408f-aa85-a583ca027497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d244304f-0f80-4e27-bc49-4e2e48710f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eb474f-41b5-420c-b4ea-40c599e79ed4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d9bd8d-b3e4-48e3-8223-15b5c203279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6430dbee-7df7-4e99-816d-8c7ffdc7145d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a112467d-9fbc-4977-a9d7-040115761d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5139f65e-ef52-4fcb-8ff0-32aa63f2f950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876fdb07-9ed3-4794-94df-fef23f67af8f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f733e9-3724-444a-8660-aaf74974aec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d568d3-ba1f-4e6e-b0bd-fde7109effe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217f4ae2-f5d0-45c8-817f-176e26a0ad4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9434fe97-7690-45a5-b46c-408a650186ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176e6793-fca7-4613-b11c-53198365708b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935e9625-e412-4857-874d-202773e35a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9133e46a-1f9f-4a6b-a5f5-1fe00e1b0a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5bfdd6-f3b2-49fd-8db5-3763e764a305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aba0916-ebd4-4695-98d2-9ba9deea2834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f657ae1c-5115-4ddb-ab18-a2104109c808",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9df1b33-8cfa-4492-b382-385e6780fda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4d357a-e827-426f-965c-022632c4db56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad90b41c-8670-4294-bbf5-cc4c479d236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7c8ede-b433-47f2-b27e-3fbcf126538b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c0bf90-f768-4c72-9f74-cf848ef7c071",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfda073a-b224-4fcf-856a-96e37e292f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50639fce-10e4-4cdb-b885-48917f5da835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d592dbb7-a42c-4688-ad4b-7906b725c46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d669b4b8-e138-4b1d-bb81-2456880a679a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5bcb5a-0f65-4fa5-8bc4-8758fd409bb1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435c5d90-ecf4-4a32-a742-2f4fbfa275be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba36ea0a-3c8e-4b99-a416-7b21fce3858c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0d39be-0d8d-434f-9dd4-11492055d9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e56103c0-263a-4cb1-8ba3-8ae6faf4dd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb38b38-2e71-4e60-86fd-f2cb3c4c4215",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5d7868-6840-4db6-99b7-a0d73c22e53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36803f85-18b7-4b26-9dec-9c6bd44bea39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed90472-8880-4700-9e13-7c63de54707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0912f565-7ee3-487d-b436-deae0165bbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783dbbda-d267-44dd-8e15-b3fc39d30b0c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbe78dd-bed8-4e15-9401-36acf8c70fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad82068-05d7-4bed-a8c9-467e501df9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69477bda-18b5-40ba-a145-921572a2dbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f27cf9a4-45f5-4148-8c51-52b90686b86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06596f5-8349-4c89-a9c4-292f5535dc40",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e443595a-601b-4463-9c49-c9f023c19c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a410f2-40cb-45bb-9140-0a700d428799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad920a20-aa51-4821-beb5-8e3053a9bf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d09e99a-5bc9-4d98-97f8-44884f88676c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dabc3df-0b4d-4cac-b7b9-d5a57fdc34a4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87bac6f-9387-40b0-b8fa-8f27ffe28830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e38587-7ae6-4d5c-979c-909e1219d6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a164a8ed-2243-4b35-aa68-ba2c5b80cd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a403b68-e4f6-4930-ab07-230ae1db8bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfec3f1-1c37-43a1-86e6-d2f8905bfd30",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7943b446-c866-4ed6-aedc-d5ee3afa1c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a202e8e8-c412-4fc1-84a9-f2904a86bc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b367be-ba36-4601-adbb-dd87fa4c66da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed19c016-5cb9-484c-a271-bbc368b9a73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f53f4b5-b350-4dd5-824f-2738635d97e4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f43b73-3727-4c75-9fc6-bbbdc4c105e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7430d0-afb3-49bd-935d-84d1ab132d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba2efbf-b179-481a-8a7d-e8b8b7b1991b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02949fb6-ee5b-4e66-962c-c08edfd6313f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c730766-59af-434d-94be-ba487717a5d1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5888a015-7722-4f9f-b52d-7465c62dc2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06abfaae-c333-4619-8b72-880c0fa6d4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a258bc47-6b5b-447e-be8f-7a8770af7181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc2fdb3-f016-4b34-a687-a267ff1644eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2483c8-1d2c-47ac-99bf-0b711c58187e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bca164d-6495-4443-a1f3-7d447adc42cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8facfbea-ace3-41c1-93fe-4015e34658a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a52831-75e7-4970-b49a-e48e3159cd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d2ebd2-dc1e-461e-b9b5-df8a71d74d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b50ad91-6dd8-4136-8624-95d66b91e18e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbb14e0-f71a-4258-9b99-d442e0fe2416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bf6725-219f-474e-b06d-f5780243028a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908e99e6-1b30-49e1-b193-86b389b74179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68085d3d-be54-40e4-aa13-1d5bee85db48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb722b28-da4f-41c5-bf35-5b141f44cded",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ff8094-67c1-450e-bf24-7cbb3f77e34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb56054-2c22-4bf0-8dde-ede563010209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb90275-4890-43b6-9c5d-e6bacccabd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b4443d-fd0f-489e-9e00-190089b40d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459a83d9-5a68-4e21-88e9-6a979ac9c64b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb68b76-24da-4eca-a32b-88363220a994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b42d4c-fcaf-4eca-babb-4806364b9fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c867684-2937-466d-b721-402d2816d48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2182f2c-5faf-4d8a-b9bb-e9733971301e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4683d530-d2f5-4849-a5df-221088ac31a8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36ab3b8-f194-412b-98e7-e535cada3931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9c5818-5c8c-459f-b9e1-96d684108d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa1f6f3-a4c6-4d0c-bbde-f2124c56cac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfa9c5e-3d61-4d11-b2ab-e18c8807cec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ca2b8e-1af0-4c6a-a2c5-013e379426e0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa0ccbf-e5bd-465e-bacd-dc955eeb0dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd7664a-2394-4802-8ce7-da4323c62694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66201a79-7307-446b-b178-15476d15edb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d59fdce1-7a3e-459a-9e91-bd88c768e3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47dc7ad0-95e5-40d1-89fc-89a5b03a1085",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eede4dbb-60de-4d89-acf2-46420dc17e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9accded9-9a1a-4877-9ebe-d8bac99fd8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a47056a-c11d-47d3-8fcd-d3aeed92cbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fed25c81-0ef3-46ae-b245-caccd0da5906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453ce71a-b85d-4a55-aaa0-47a39ce81283",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a44def-63e3-4ccd-ab7e-790bb9a8c0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce24bd4-48c4-4e00-a76c-ee9a9605485a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69a7b9c-5587-41ea-9257-c26a04006f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e69ed1d8-9e7c-4496-bd4c-008928eeb5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660769ac-f4fe-4efa-93a0-cdbe3a01aa1d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fb3637-42bb-42b2-b30f-1c08fdfbf420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcf0b10-f44b-4fb5-8f71-4bc06c7e4781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9497ba43-77ad-42f8-869e-53386386d838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d16ae41-fd93-4822-9952-8081233267ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e76dce6-03de-4a49-be2b-f61adfb967a6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1631e6-e34e-4568-8104-5a6fdd7a80dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa51b9f-1b42-4168-bd91-77371609cce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09593ccc-21e4-4f29-b1c0-1dc7221dfbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe44ec7-7afd-4a6b-af7a-4771b521c757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13b2c96-4ff7-43e5-955e-73bc981cb8f1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdf657c-ba82-431a-96bb-431d81b680b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1964c1a2-f970-4ab3-8e95-158c89131198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec78f57-df0b-4fb2-a57c-3fc51e473cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3746802-69bf-4b93-9f83-035efd4a497e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dfca90-d16b-4f32-b4fa-10944f611724",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811ff449-ab32-40ec-b15f-2d0db69505c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b85b0c63-6c32-4712-b66a-dedc26f11a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa284cf-4db4-444f-86ea-bc0667c0ad42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd832559-5c88-406d-b7da-b48beb694c16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6e95e0c-97a4-4089-a9d2-375ca236d5a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a5b0a95-afe7-4076-a3c6-fdd918d6f638",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dc36eb-d52a-4e97-948a-d672d648036f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33e9525d-2f34-4a41-b468-ac3c5579ced1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3e14eb-529d-4919-b582-f625bf99b436",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4d967de-b9a1-4793-a4ee-3424603ddcc1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2473104f-4d4c-4ddb-9d0c-54399cbd7fee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f942c74f-bb9a-449b-8ba3-eaf43bfe3f6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b171bf9-2076-48bd-ad5e-40fb6d546562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30ea2c95-73ab-4f2e-b6d0-f0c87ec10b4a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3673e54-e8a9-4cd4-9ba7-a3b0fe52d9b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79cb525c-48d7-4c70-902a-3658561f3a63"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee7bacd3-b5c0-4bc9-8f0c-3f0181c90fb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08537f57-6678-480f-815b-ec04aaab7033"
                }
              }
            ]
          },
          {
            "id": "5065e28c-0ce9-41c4-b398-65edcab5812a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18503445-fe07-48ca-886c-3d3ef3830821",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dba30df5-0f62-42b3-91f9-32f8f9db85a5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43cd5a7-21d5-4726-aa41-114962f90e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2c44d13c-9cec-4b4d-a2b5-a1fd32b1e595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58feb37f-27de-4d4c-8a83-145203c8bc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc7e187-a413-4e96-949b-efbaf77c8177"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f86711d4-6b88-4090-882d-3ecdbdd383b6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4908797-964a-4af5-8488-2eab90aafdd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc4ae675-53a4-4363-95c7-64423feaf1cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0798e7f-618d-4d02-8dc8-c3db3ed0947b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c14bea13-5bc5-475a-a61c-508b0bacf9b7"
                    }
                  }
                ]
              },
              {
                "id": "27272487-aa46-4816-82df-e5bf97e76f6c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a65702b-30d8-42da-9db2-ff56e08ffa6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c92f8a75-a3e7-4719-9e14-904fac129fa1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64875dce-920f-468b-b9bb-7ba6a4667b4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66374a32-8562-4f2a-8f0f-419c1ccd153d"
                    }
                  }
                ]
              },
              {
                "id": "ae35683a-5091-4535-9d40-8a93dab4502f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0930b33e-51f0-4494-bdc2-2daf286835f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63bac027-0d5a-43b0-8571-9db15aa35f37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5a6e75f-9525-4824-b149-a57a4b05136f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3ea87f7-9437-4040-893a-cce7dbf217f4"
                    }
                  }
                ]
              },
              {
                "id": "cad56bbc-6b7f-4c86-b2a3-20c9176fde6c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dbc59a7-03c9-4f40-a8d7-acdb7f734c72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c56d7e89-6899-4d53-8f04-abb59919cc0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cae2e97-1692-455f-8dea-ad1e36c817f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "19379204-2746-4178-a28a-a819dc5ba0bf"
                    }
                  }
                ]
              },
              {
                "id": "e64ca276-d6b0-42ee-8946-77c5e1087ef4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1ba723a-8f80-4fd1-8b24-a5b4fc417dc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65544faa-df06-4e74-a1cb-c9114054c8b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7fbb0ec-040b-4b20-91cf-4c406643c823",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4375ca85-45df-42ef-8b3f-f577acf48d0d"
                    }
                  }
                ]
              },
              {
                "id": "5895fd2d-de49-4eee-9a72-7f482c0aa01b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff3e8b2e-62d2-423d-9a41-08fb1aadda7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d93805e-85d9-48d0-9c0d-b583c24ee24a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ebc7e9b-d9a5-4c2a-a924-2ca8828ba13b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5fcb9d42-e55c-4973-8ca3-607b4590d3d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ddd0beb0-f706-4aea-a6f4-0277e89b0e1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72f03d2c-79bd-4cfe-b197-f15ec823c2e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "98f5889f-c821-446e-98bb-40423846952f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c23e200-a51d-4a51-9568-408d943bbfa0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95b7165b-4e83-47de-adb1-12399f20c968",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d9d88bc9-98dc-4a3e-b371-8690afdd90fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7934345a-b8b7-4154-a9ad-f77ccf2dc58c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d0a3b47-8986-4d63-acf3-1042fd305877"
            }
          }
        ]
      },
      {
        "id": "91f1c978-2f66-4e3b-8ecd-f05549fe6736",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "43af5892-23c5-4ddf-844f-b10c8f735204",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ccc3440-1509-4d52-9a8b-80958522d815",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "464e9a74-ef59-488d-bb99-49f8ebd5b623",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34186511-c977-45aa-9d15-f918238a84d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ed5384-769b-47d3-a128-af5d2cc81f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2494155c-a81f-42a2-b9fd-c9f1ed64f323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f94d373c-94e4-4c16-a81d-66b87088957b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2609b48c-a121-4e48-be81-28480a10ab7d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca39a970-981c-434e-88ce-06a6ddcd3f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26c8426-cd5c-476d-81ab-c59855003012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac74e785-8b68-41ba-9ed5-5ee71e339987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4492bfe-efc1-43a9-a4a9-e7c07290f41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66a3095-278b-4f4c-9e20-d99890e1e697",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47feae43-2bf2-421e-9c14-8fc4681d2e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01236f6-5847-46ca-85c7-654a6c0fff5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989a250a-2a35-455e-b9be-edddd9e32842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cec05364-664d-48ed-934b-e24bc58c0b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65520bc-c4f2-41be-aee0-4704f7c9d3a8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b38476-a19a-4ef8-9e97-5f9d965f00a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75bc0b1-e1b4-4334-9aae-644982f56b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f56342d-dca0-4be2-9e4a-c4405f5a7cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9729256a-3c61-4f35-8eb4-72c53e44934c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b007ff-c1e8-454e-ae28-1ee0d2cac59d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c1f786-c2fe-45cb-b689-6cdde903caa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220112b7-b0dc-4e9f-8ba5-9976790fb83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dd1717-b819-47a6-8235-794eecf82a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b7b1d2-84b1-4c2f-8e9c-ffec17cd7d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c263001e-0857-4463-a904-fb3ee8d64b6d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b69ee45-835a-4d9c-86b3-1995406dd8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab77ab8-f1bb-4568-82b0-fc128b1bf3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f82b6e-3a06-4431-a234-5f1fe09b210f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73f2fda4-64c1-4646-902e-c2905159916a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6ad2d7-b91e-456f-97c9-99acc22ce746",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7689ec-39ea-4d77-9932-33f8cb86f17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9be17f2-2c9f-4ad2-afcb-1b31f09ac0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7e077d-7291-460a-8d0a-dc25c5dcdd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1ae1c8-097e-441e-854a-651ea6c08af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fdb91a-d225-4d2e-ace4-73a51ddabfce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2184cd01-3025-4ecb-885d-7cabe0f82de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bced1c94-abfa-4d23-be5a-5957dedaf756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e54a4f-3065-4101-be37-0b7f7b0d1c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "987a7257-0e0d-4957-9ca8-b0396fbf40a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c071716-af61-4c2c-b523-113ecbad5940",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2b5959-db6b-4bfd-b75a-62af6770ad88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7052e8f2-c573-4407-b60d-7fb2bcfdf6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3e13e6-1a58-40fe-954b-b15ce25ce265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79b99fa-d95d-433f-83ab-82548f89030a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73851a7-2947-4a49-ada0-dd380909e3e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5add60c5-c755-4533-8932-cd67e8c2890b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6377aa56-d1ac-4dcd-8009-a22871b5bbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937912c5-2c04-43b7-8ae0-ffc68901d109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b719f3e-ec1a-4636-8214-2645dca66949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dbb66e-8b03-4d53-8227-735ccd4b703a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245cdcb8-9c97-44d2-bbe4-61371c6bcae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de034b53-2853-4d05-8014-5cab3385006e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f777c026-fbe6-4897-ad88-4b3edb72c6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eda7f2b8-41ca-4218-9911-5267223743b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e1aec1-de94-409e-8045-39300626a90d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29aeeb92-f6b8-4379-8275-27a283532f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14db3923-ea2e-4236-bb85-f0071bbe5a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea64865-75dd-4b14-82e8-a473bcd950c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7811be10-b2ab-4d82-911b-268ecdf18125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cfc07e-01cf-41b0-852c-9796a6851e73",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bb4870-774f-4cbc-b07f-80d87fefb583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2611437-4645-49a5-96c4-3083fb0c69fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740f62da-f3d1-40a8-85ac-f2677905bd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc80a1cf-bfbb-427f-b88c-fd50398cb29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb00241b-c5ce-4dc2-801c-bd8d322422a7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e509e727-600a-42da-8a66-4ceeec2395f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13a37e0-a7bf-46e9-b252-19e65e78633c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abe80c9-49a9-4391-9029-53d0d6c4810b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abf0dfe-a687-4861-8df0-fa21d9cc0cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697add8c-1915-475b-80e7-4932aae8ce5c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e43a638-7b80-43c0-ab75-91647cf86ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bff7ed-4756-4381-b885-94cb16f3ea98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f82fdd-fff0-4ba6-8d0e-947249f8e1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8373fcc-7b59-462a-a699-cb16e7d26e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bd0940-c344-4e42-a720-72c23c083058",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddff0c8-9e84-4d29-851b-042a6bd4668a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc60457f-9e4c-4066-a436-117a6bcd334f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8724ea71-23a9-40a4-8e32-c124f0ccb790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0036ca9-3118-48b4-8db4-fc0c9d96cea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64304cc1-ac62-4700-8feb-f40c54eab203",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e322be50-22b6-4974-ad45-da988e74bb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be0d243-6b52-4df8-994d-c8fe6bce5636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9b9970-d288-445e-9017-c9853dda5907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a931b31-07a4-43c1-8a4f-a089a928b639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c338e251-613e-4469-8430-521cea33ddc4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454b11a3-414d-4945-950e-620dd843d108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be15f4ef-c49d-4867-8e94-df1d7b302622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88dc894-b715-45f3-91ae-03e896b9b4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf7aba0-ca5a-4537-ac08-59327b9d5314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eed96a9-358f-4bb6-99f3-8dc6d0c57d69",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15f99bf-b262-4511-851c-4eeedf82614f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b5e005-80a2-48d8-87c6-15c7dcb835c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd9a434-c8ce-40ad-b748-41f46eb3375b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "445f8f0b-1a63-4cda-a15d-4ea328dacc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36df866-6bd9-4ea3-81ac-c241e6d074cd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f9fc5f-b94b-48bc-8932-b3b8e426c814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3e1d01-60da-454a-93ab-f422eb106bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6db2560-0d0c-47b0-904d-312e0d61ef28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e739744-dc41-4344-9cd8-6f11bcfba45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190ea0af-9385-4691-add6-ad9c3eeb13ae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b7837a-9b9c-45e0-8553-76a508051385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce8c597-a70b-46e5-801c-b3e203762253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca6a093-f5c7-49c3-9dbd-87379e1066f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a2be4e-feb1-4d36-a3ec-db9f02352dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8657c55-b3bf-4d1d-b1ae-f93e259be906",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b07a4-61b7-4423-8d70-dea079dca37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bce487c-74cc-4768-ba6b-98181d2b1b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fcdcc2-5762-4730-88a1-961ccc572c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0db1a6f-d664-4bfa-9bfe-0204464d0971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cb9fe1-53d3-45ef-a684-bbf12ed4ed65",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af11122-e584-4d20-a780-7af19f43ee24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b547429c-3e30-47ca-978c-583f33545ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15689444-22e0-45d7-a226-62f4a1f40cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8b0d9c-bd7f-4ca7-b5ce-61af35d8828c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67025de7-1c32-4ce9-95c5-d72628f50d79",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2df98e-0906-40e0-8101-02c52f34bf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265fc47f-6db4-4170-bb64-f89a58d47246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6009571b-98ae-48c3-b6df-5ec0dfbeccb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ead99dd-d48d-4767-87a3-257cb948e94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01218f40-dfef-498e-ac88-8adf230a5727",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d942c24-78c6-47db-88e0-45530113e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec92dd0-f85c-4b5b-a7b8-9705b2a0403e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f76b4a-5c8a-48d1-8223-33e249843ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a95fa8ce-7744-4501-8602-20983c632211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb8d073-4015-4ddc-9011-e4b0fd2b7297",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1569e86-7ae2-405d-8a3d-2ab30a6593aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f396e896-60cf-4929-9165-05027eaf8042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade409fe-6471-40de-a9b4-e1d9f1605ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b458a3df-3c7b-47a7-91fb-474579c6bd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db77d308-f68f-4596-9602-81c840d1ed80",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c47c26-fb1d-461b-9407-a16db0c2ece9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4943f5e5-04eb-470f-9083-b725c5161b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fff60b-57f0-480a-8003-41fbe2c26489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae1d8a6-40be-41b4-aa31-70f0fbe13fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50d7c17-8c48-415b-9a3c-96bed2e530ba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e124ad9-972a-4e71-b87b-7465e76385fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742bd214-f9bd-4569-9cbe-558a6a034bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70245495-beb0-4936-b478-01b0781c9c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02ef0953-0b98-4d34-820b-a17008381aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d1da51-8b76-4449-9d7f-c86762b1281d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ad6523-9190-4ae6-9bce-ee9eacd9d0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba30308c-db3a-4a7b-80bd-e74985d41568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae57578b-a84f-4c01-a676-61f68e7683e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d8efc9-cd10-4234-bdb5-f0dc4687a503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb47294-e72a-4132-b356-ef9afca925f7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6d44a3-a889-4425-beae-fb72f2c87955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f791257e-5f10-4a91-9db6-3c30d024addb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b5451b-8526-4bb5-8d2f-ad53791652d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "571ffdb6-ac72-46dc-838a-cfb36c376fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75db8662-5998-4eea-ba95-953bbd2dc17e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b8f9d7-3d75-4ab3-a667-ef9fafb21615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f8d8a7-f8fc-40bd-a9c1-f01dec5ba8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528f2787-2a4d-4ace-a62a-2da7378ae192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de75e3b-40c7-47d4-83a8-ee9d72c3f806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18cf662-7bf5-4203-b0a2-7398f25151e0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a595d13-cd33-4998-ab9c-95168751f2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f287ce72-0bd7-4016-8b91-dfe1c835ea98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048adb7f-8b72-4ff9-8198-705b6f32fe59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd64d0d-f172-45cc-ade4-491115faf295"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f67a889-9908-4141-a1d8-5deacd386916",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22c0cdfb-9315-43d7-9dde-f0464fcaf3e8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f9feed-76fa-4839-be8b-e37c30f9c546",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3de824-c2a6-4a47-a91a-8b4869cc224d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a045d9b8-ae47-403e-99b1-fe0fc48905b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6a39168-0805-433f-811e-b9ee1e9d7ca9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "861914d2-36a4-4cc0-b011-c56ff5233a87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02a0c1c3-5eb1-464b-99ce-bfb97b955edb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de791bbe-a5e5-47d8-9ae6-8935614491ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7062adf1-775c-4962-9a3e-5bfe3b3bff48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ba8a3f2-d32c-4d3f-8306-a64e78855515",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a6282d1-c149-4c5d-96cc-b4d507d60e33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00d8af67-a590-474f-aaa3-5646ac461199",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1449504-8213-455b-ac8a-e65a12f16a02"
            }
          }
        ]
      },
      {
        "id": "b1d11b7e-04af-4279-b377-fd8d499eff58",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d9351d99-8a29-470e-8f28-db6d63102a42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10ec7167-7c11-4479-a732-495b5b50f269",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e0705bc-b6ee-403f-a191-e7a6a2a0c150",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325f745f-01d1-4c04-bdea-387f65f2148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e957fe-4791-4955-9584-ea37462491ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aabb386-6376-4941-9e05-7422a46195ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "176fe409-bfd2-4fc9-9805-68292c6acd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6a33bf-35ac-4fb0-94bd-00c10ae885b6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05248b50-2f4e-45ff-b987-f5b5d2782324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2850fe9-d89b-48d4-bc73-0831b3f1895f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e320ca00-c808-4c1d-94b9-362385573611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "487039e2-e035-4a0d-bd5d-8defe4cdfa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30acf405-1585-4924-b277-a928cb843ee6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767472e7-6daf-4b88-8ca8-9c37e369c3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5503bb82-6270-40d3-be28-10494ccbf97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcd1f62-63e7-452b-99a2-ade2ce9c3717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0723106f-de1f-4809-bc3a-6cf741f8a501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cd334d-5aae-43c7-9665-b7f067fcbeaf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd967fe-b3c5-40e4-8c61-8b85bfa35050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24aa08be-d144-4668-b380-117f67dc1301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108ba4cb-ac11-4303-afb5-6d0e66560c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56d9ce4b-f185-417f-9290-cb39d92266de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38da4c86-8108-4c04-85ec-a61aa638e6f2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f2e0a7-b785-4241-9bf8-ce05ad34c47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e62d4b-f259-439b-81f2-83a2a011a0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad82e7c3-6d5c-4ae3-abb1-d01edeb68d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d2e83c-47fe-4cf3-b43d-76c7f74f83fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722c2488-d186-425e-a684-7d02b1e100ac",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c2bc1a-f964-4e3b-8084-e60adc6cbdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179fef2d-89e1-413e-823c-a3e33bb0d3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30dfead-9623-4a24-a120-a24ff88e4f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b078beb-375b-454d-92ec-9f411a9cc9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c17aa63-0a23-4baa-bf8d-20b6c444f1d1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b64b16-9c23-4698-8495-7bccca403823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a986bd-a066-4429-990f-59b9bb7c9c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c22a61-deea-4790-9c93-6a8e222777c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9615938a-9abb-4b9e-a8a9-eef01df54d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1d5d77-6e07-49bf-b9a6-fefffa6d58f5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b067c0-747b-48be-9b70-19b494f42c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd79d69-e506-4e85-9943-e40568685e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c0fbef-1544-42fd-8b79-e051f73bfdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77cfa6fa-0295-47c1-90eb-fdf2ae7381a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0dde62-6a93-4b76-83f3-7a784001dd0b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5106dc5f-703c-4b0b-ac8e-e35b216d9a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e05a60-a881-4aa7-a7c4-36d6a97e30aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64377047-8371-4286-a678-0eaee9420bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ab399e-234e-4b0e-8422-fb5d934b341a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec42bc5-6101-45eb-bf27-214cf5b8264f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228d6aeb-00c1-442d-a354-049f0c2f8823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763ce399-6a56-4e22-bd54-ff9ff40b4030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ababe20-43ec-40a7-8ddf-3283baff7b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b738242b-0cb8-4b1b-adb9-fa1204b450d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eff9bd4-4147-4206-a89d-286344deccd4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9338ab94-90b6-4260-b8fa-e73a311578ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7befbc3-af7b-475c-bff2-f0407fe8dbb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62180da-f296-4581-9988-7a8b727199ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "65aea2a1-f4eb-4443-8a76-86cba7ac6ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958093ae-e0da-4dd7-84ef-35db0e66974a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbaae84-2307-4024-83c0-28878b96dc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169e2037-731f-4d33-a59d-6ec04122b6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7832f5-38eb-464d-8a9d-cf52139886c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f61779e8-02d1-493f-8b3c-7522fe655338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d010a395-7756-4d72-be77-960b9ff53f14",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d20f21-6f0d-433d-8aa6-02e0a76f5276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777962e4-c6c4-4c47-9bd2-d1a2dbf6a4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8598ef4-9d2f-4d83-96db-eb4babb5af21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "084cb4d2-63c3-4dd3-8bec-864bdcca68b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69bf2aa-4174-4632-875c-09d4d90328c7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de2c255-0c5e-4aa5-a1dd-203396b27670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54913442-ee39-4e83-aadc-2dfe89097908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c198b24e-2423-4ec2-9251-56fa61197f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "145b1e9b-b626-43dd-b17f-78d6f48bb06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ca03ac-d3ed-4e3c-aa63-8c71c84bf236",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c50f48-a7be-43f7-8d94-b09f1670038c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcc9df9-9d53-42d3-a333-da643d9f5cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25c324a-8e07-49ae-ba6c-c364b6fd5396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "05dce51b-445e-4657-bfc7-1fd5abd2acd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e67da4c-8c74-4df1-b619-460ad1dd9cac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e960ab51-2eaa-40ac-9ad5-ace0444cabc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1bef86-de0e-4d65-b2cb-932089f464ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1be8a9-f3c1-4f5d-b1db-64cdcc2db116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a17320-669b-4df8-b7ce-e1189205a0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135ff265-aa49-42d0-9216-080a8e1a55c7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffa2807-70ad-4ccf-a605-43c1545b257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47416090-3078-4871-b740-9742ffaeab74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdab919-3e45-48db-b2ad-99542b03c018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ea4b62-7e80-495b-9d5f-9cf28928c00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bfcc77-0f6c-49aa-bffd-7d538665857b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5886cb5-1fcd-404e-a2a7-ab2eeab98ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a56d8c-39ef-4fea-b6c5-4ddf9081dfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23616e88-c1eb-4554-ba2d-43721dd35967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c95855d6-d405-4eef-baee-ff6010afa17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe88d41-7b53-4e74-8d48-d46eadbfd52c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3108dd8-9b81-45f8-b8a9-4abf3f0cb903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1786b76-a0b5-42f9-a224-d36401d85a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f392b022-49f9-4849-8657-15946a27c2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c9da07-f415-4897-91c9-514a15d953b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808f638a-e406-45c1-a566-ea1c03940e53",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa8a4bc-3710-4274-850e-b3a21566b7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e7e48b-3f62-4cdc-8abf-b56623d378dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70387c1a-3449-4a77-a70a-4a330abf1bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee26c37-d9ad-4e27-ac81-514a40edfb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937cce36-aaae-4d02-9908-0291804f7046",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87afb7b0-c4e2-4c29-82fb-d4b114c12026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e89683-a5ef-4943-b656-f4aaa752d58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925fbfbf-3d66-4d25-84f9-0ef06c94c218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0861b9fd-5b1d-4c7e-96c8-db6307dd9731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e07131-450f-4a0d-9d29-96da27fa12e2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9431e0d-ae67-47bb-9ec0-191edda664eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6578bad5-bda0-4544-8da9-7b506fdb3cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82100ed5-679a-46ab-8156-0fe59f68bfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf2256d-16ba-4a3d-83c5-bdd3bce837cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fc3128-a08b-4af3-bf83-97f372544da3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649b81b6-603a-496d-a891-41a0b22b08b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f77ec9-c573-4727-ada3-5222cb0dee41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ead660-0c1d-4570-9755-689dac1ad3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2264ca6a-aa62-45fe-bcad-01bfeb1083d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb80258d-4de5-46b2-9df0-c2529289867d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43e981e-a413-4877-9026-88f07fc3ebeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e38140-1869-4b4c-9fb0-5946fcdef028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7995994a-960c-444c-a0a0-6b574a756944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9146a225-b47c-4f12-a883-5045e7b4e788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6c9371-b0f4-4994-9548-aff38c9bc0a9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664e00de-f4c7-4839-85b0-3475c6b6b945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1833801b-9cbf-446f-8b0a-a0b5ede61a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa3a464-f2d6-4f27-a601-d5ad74ff0b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5edd075-30fb-4ce1-b484-dd3817ddbbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3d2e4b-8a7e-4de1-89be-cb20c45b6588",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7e309c-8bdf-4553-b1f0-874a2d29dc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d1366e-6fb1-4c29-adc5-2c3567943cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cafede-6d91-46a6-b38e-9443585a102f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51ff9a6f-66db-4346-9680-816b9c2efce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f895cc-0ee8-4245-af23-7a62088d9cba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d993a6ef-ae18-43c6-a57e-3bd776c557f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2af385-6b0f-4332-8db9-d9cf8359f3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34952a8-9a94-4f64-be70-2f91675487c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4334c3d-c740-44de-b8f8-fe873e1e3522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e3b80b-165e-47fd-8175-0281f483a23c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91132ac9-b567-4300-b469-88651b275f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95efacd7-2c1e-4aa7-8df0-3419f9115b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c21ee42-4161-4aec-9451-1d73c55d0bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d2e2e5-16bf-4b1d-b315-1cc19d560db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca296d1-411e-4eea-b4ba-6d278c832d29",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8936b92-1353-4f65-82c7-ed03e6f0d610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20fe7d6-57ca-4379-8461-df56eff96a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49931fb8-70e0-4fa6-8b7e-9a45b408e1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced11f10-98a3-4024-9783-9d156ccbeed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb0992b-531c-4e0b-8e0e-9c4be9fe3de8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99ba1dd-a4ee-4837-9664-3c173d8323b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e01ff9-20ec-48c8-b903-4bee4c495e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57408a60-c128-4e54-b659-d110d9ff864c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4c7bfa-e452-4b3a-9a70-8491d3b15a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5663da-8669-462c-9d80-b1614ecdc383",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5add2e85-c604-456a-bde8-671ab6a61fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe79341-7902-450d-99fc-a19ed2e01050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae8a644-91b2-44c0-a2e8-fe9e12ca194a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c067deb7-a87b-4ade-8732-d8db8a67aa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6114aae3-6b77-4d35-95a7-de52953670ec",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f9943b-bea3-4fa3-97d6-36cd32f6ec24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fe6131-95ef-4cae-8467-1e597da9d937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdd6da8-7c6e-4faf-b184-8b22d8d45c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "671e14b4-6ed4-4dc7-b186-3e22de21d203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7f6e9d-ea07-4535-91e3-59704a929a8a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012af227-3f56-424e-8f2d-a2ae2e32bb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61777a29-f4c2-4a50-8228-49983351b5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d748087-4bb5-451d-8ae2-dd1e4bf842da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6ec6b8-f907-480d-937a-61c76d1cc391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3641b09-0c01-4893-8b3a-165ca17790bf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604e2455-2eec-457e-8c16-2ed68c0866c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e1bd4e-ff76-4adc-8866-b6438791b732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d78edaa-573e-4d9e-964c-98430d18674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1f8b1e-7370-4d11-beb0-ab1db2287bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c680a433-6f8b-4b53-b3be-5a8f103bf0fc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e2dd78-a016-499b-9d88-e3f4dace041d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17226fc3-c6a6-4a11-b362-483b97f9d728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce4347a-ce1c-44a4-aaee-2e70f549ef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4def549-fd25-4afa-8829-f2a2a7c2cbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a73fc39-32bb-4b62-9dd8-8b1383fec72c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92881b92-e4e1-4ec0-8b51-c901dd205540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b20b4c-6802-40aa-a5cb-ee2e9bca3a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0b6aeb-ed82-4bda-9d28-30d861e16044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea8980d-6bdf-4a83-92e3-930e581d84ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b16046c-3eb0-4bb7-89cd-887e04bb9fd7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43486e8-34af-49dc-96a2-e63123f3bd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf394d05-0e01-464b-836d-e1f2ba34dd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c0650a-ae0e-4451-a69e-a7e239be7c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6da1b2-d9c1-4753-bb5e-fc64b046f0e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d08ba5e-9c4f-48c7-9030-4fce1bed4ab7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85362832-a88e-45f0-934a-40e92b4d4547",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39e6564-ff7b-48dc-87ca-d6bc3e86978f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8dec2a-3cab-4fcf-aaf8-28d410003648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd1c5c5-391a-4615-9aee-92bba6022c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aea0256-456f-48f4-b617-ca24027bba1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c475172-24ac-4e17-888e-76801730c9d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3442d18-04ad-4466-b0e8-1416d8f146de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3e77120-3d91-4863-bae9-6fbf0aafec54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fd93e2c-d4cc-42e4-b40e-75bb98d0da7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed0b6bf0-e2c7-4b5e-89bf-183b1ab4736c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dcafd2bd-d08c-486d-9b79-5156ebf58b87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "022ef816-3626-4fc6-928a-9cfc50473720",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "458d829c-c498-46b1-a9c8-9e248180f829"
            }
          }
        ]
      },
      {
        "id": "cb8a9f4c-3806-4e73-b00b-ecfccd542f99",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b8b00c88-9ac2-458a-a2bb-e0f8a88acbd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6df794fa-bbc2-4210-9541-b6d2326c0bfa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e62055f9-69a0-40d0-9954-56bd81a4b60a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526836db-7865-4b72-9313-97dd8709d9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0653f036-ebe1-4c84-9719-71bbb7973126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0713d0-063a-4d71-bbcc-489367a868ba",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11892d6d-5bbe-445b-85d4-d3653f01bf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cf03e8-c33c-46d4-bffd-8f805422d374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5646fcca-4f0c-4670-9191-64ffea852c85",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c83df9-87e7-450f-a28e-2d1a93b76d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ca9888-1576-47e5-ab3a-3f7c72cdfbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968defd0-030d-4f5b-9bdf-567c9545fd79",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8126cbc-2848-42b5-b6ad-a7e7659d727b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a77687a-10b1-4c49-837d-fe53c784b01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5212ac07-eb4b-4ca1-bb9a-6c152fc536af",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb03dec2-b563-4052-9b3e-2af10c44501a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b28fdb1-4f71-4617-a140-84e0918ee102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516b081b-a962-41e3-9b8d-ac5492e8b15c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5143de69-5ec8-426d-ba16-991ae41091dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa14a1f-012c-4889-8ab7-bdf6efe038ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87af5921-8a81-45ce-80fd-fd4a8ac880a6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840a2550-9107-4ac3-9b1b-3235f00dc3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70c12fa-86ee-4fd2-bc41-0373ad8e7f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e99c6d3-8f24-4078-987f-0c0ca23917d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dc9de3-a952-4386-91b5-48dbd75a2db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a37c8a1-49ad-40cb-a4d5-1156b5d70860",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753e1bcc-fc12-4e0d-9e91-bc267ac68bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5bda7ac-7187-4b35-aa64-013e922cd001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b19cd9-0cd4-4788-9328-af789b29e146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477c00fd-0b3b-4eee-ad87-196468cd2fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b92d83-8e90-494a-8ba4-e2b4257661e5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdfcdc8-c9f3-4de8-988c-aae59616bc64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2adfe6-c55f-4cb9-ab3c-db04249a50ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c49c939-9db0-4983-91fd-64457dd32636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c45d02-07a1-4a35-9702-1ea320e2b635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb618e9-69ef-4521-853b-a6b2311a9d62",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37924de4-a6fd-4aeb-924a-00bc3b3cfb44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b43c5631-440f-4731-a9fe-6f95d2e76360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fb739a-6ff7-4d87-902e-4f480182fb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f812fcf-e66e-41a1-a529-acc15c23e42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192d57fd-5ccd-4695-a1d5-7d485514ba0f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3477538-2a62-4fe8-b67a-cae882f72a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d88462-1c5d-46f5-9325-95297068dbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57a3937-a324-4b34-b317-20c880694971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9067ba4-20a7-4ca8-bd70-eda3bf7c4ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20394778-3b8d-4e2d-b83d-2d747117fdf0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6f42e4-8dad-4ea3-90b4-7fe8384379fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d168b0e-25c6-4bc5-8a5a-009f3e13bb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0500806d-5210-46f2-bd39-58fb35c00e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0b9201-4378-4ec4-be0c-4e56c543caef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc8eabb-7be3-4d50-9544-9dccfa35a216",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc4364b-eb66-435e-ac17-b614e5135b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ea71e7e-bcce-4919-b71c-9ae8ed1baff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40316b06-c63f-4d57-bb63-4e21587295d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123a0592-9044-43ac-85b1-d49f3b6a674e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7b862b-7a5d-4487-b78e-a2e6ac8147c9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f7d055-e57d-4f58-9415-3dc4009bfa20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a1dc7d6-0b2f-44a3-87ca-1e6436b2846e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8a980e-d5b0-49ff-b2c5-e6b74fbc4778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b391d2-1852-4733-9548-9ba51f0044e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575cb5df-4ba1-4441-acda-d993c7bfea5d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d34618e-3cbb-4c62-a73b-dc4f34986eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71553843-bc9c-4c47-b4f5-388480c87fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f8a6ec-d37d-4c8b-afae-fd13ef60ded0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb94577a-616f-460d-a0b4-ebc4d44ebb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443b4c79-5a39-4f8d-8621-4396f9a5200d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f31c860-b283-4369-aa7c-2aefd6db991c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3224b06e-8f14-4de3-9b2e-cc89b3286bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61842826-3b78-4dcc-bd4b-0e151c963acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a845e5-e64b-48de-b65a-b36573ab0baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c8ad52-7316-42a2-99ea-d530aa03b569",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16760daa-4ea2-4b6c-8d91-d1466f38663e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1882efc-957e-4033-8644-4705a9101bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bb3a86-9de6-4864-9e1a-df665b51ed7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c92d22-e69e-4f6e-90d9-af4977589d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054b730f-32e9-447f-b784-9cf026909302",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1333c0-8c08-473c-b3bc-227da6cc92d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e762b7be-0dd3-4145-a16c-f8489ca40382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c99f6f-e3d9-45d7-8ba9-1a2ec2d7ebd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52188cc-200d-47c1-bb53-bf90186a4532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebadde5e-a071-4bb0-9dfd-88b4d0664854",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b2c9fd-cea0-47ea-8fb8-a08ef0539803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddd8daa-32f5-4e0e-bc1b-707b0595bb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ba01c8-bd70-455d-9380-45d9b24cb046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c81c5c6-ee23-41f4-ab6c-16237a3bc78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dc75a0-381d-4901-b17c-9a0c4368c0a9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3002ce28-7442-4208-ba78-f07798660a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3102bc-e126-4180-b37e-4f624a82bc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd61ce2-dc2f-453d-8c0f-9e3788d9d695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a732b1c1-44bf-4d29-88b5-7a97d554ac66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9898b64e-6eff-46d7-a73d-197d0b81cc4d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897bef6a-53d3-4ecd-88a5-8bde10ebfd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a7534c-4cdc-4c95-9899-40e71aed8f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e89db2-2473-4b15-abc3-855a56a9d689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66802c4c-b1fe-4fa7-aa9e-ded1f8553154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a2fbfa-c097-4873-80ac-05d44ae02009",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2702ad-2421-43dc-96a9-1949a1ff5525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d559de29-71f0-445c-ab37-4262982d3eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae18f5d0-8801-449e-82d6-72b03f1f200c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81ac8b6-35fd-4dea-b867-54e947eb94ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3105df03-97d3-41d9-8f67-82356d3b3e73",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beee6ae-f46b-427d-b45d-0fee7ff5296d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a3f6dc-9a46-403b-addc-aee0e421da8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18f2785-572d-4af0-b717-7c801c7405d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6484fc9b-7007-465a-8e27-02e1e3e3d494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f00ba2-e42c-4018-9c88-73e95bfb11f1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b10712-da3d-436e-987d-4bf66791a3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c867a1-82d7-4f99-b207-bf1387e2b679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07242371-ea38-4ea7-9054-f693d125379b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517a2f2a-9b55-43a5-b30c-fc4660b9f1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e370aa2-559d-4d2a-89b2-b0460c742dab",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c724119e-0c1d-4928-b96d-700a7f0eab0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d881238a-5ecd-44c3-b2c7-d150eb64d6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d194c01b-0d30-4135-8b19-609a0c383fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779578b3-1e71-43aa-83a0-7924d5378cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce8834f-517c-4734-a9f8-0a56df3e4d6d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8a26ca-f9b0-4d54-8468-69863390b3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec05aa0-c94a-427b-b69a-f2b13ee70e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196c54a2-12b3-45a4-99f3-ba6b56d719e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83af78b7-0201-4eec-987a-a5eb3d8cdfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6633cbd6-421a-403c-b95b-24135fdf0aa7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dc0692-2700-4c4f-92d3-1c35153afd44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b3b9049-bac7-497f-9e53-1246726731a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684a2806-5afe-4dde-a67b-a463da337109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35059dd7-1d6a-4b83-b7c8-1309e87f0a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039542e3-b400-4d97-90cf-8e04c91a66bb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64d0759-5c5a-4bde-aa13-9bce79333f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad364ad-29c7-4b73-b7ee-13b5b1856ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7b5107-f340-405d-b450-2680c6495d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01152745-d56b-4e61-b14d-0e70a9860554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971f65c0-27b6-4a17-8535-734f2167240b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea76438d-7f62-4e79-8b74-c77f5a37c67a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99397c45-1470-41aa-9838-3db1c772ab83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80fe549-fe09-4ec2-9dc7-a9cb8a0946a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8564239a-70a9-488d-89dc-c7eb0f78fd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ce9ed5-b75a-4e89-9dbd-79f51ff57d17",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6faa0c-5c84-4681-ab1e-d9ae1753d3b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b029df9-7d01-4bf4-9757-8f46bd6aa099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc18e2c-44b3-4ac3-a9e4-e730411d7d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b3b8ff-136a-4ac5-985b-2b9b7094148a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508c744a-9960-4fc2-bbd7-99f1227d07b9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198a3125-6771-4ad7-bab1-7af51f67ee69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0628d413-818c-4b17-8a7c-5827b97ccf0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1ea296-062a-4192-aee9-40e62454a9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01eaaee-5bab-4885-b33b-5766bafc4aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6b6f63-64a3-4c75-a1f3-191c70b7820c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ca4de2-7440-45d9-9c6b-ba84fbe75c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6da142-f961-46d6-b2a8-f3a545e4e418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f20a8e-0a58-481d-9fc9-fb54c718d1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee234f50-0909-43b4-925a-88198c48be8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da06ef6-b2d8-44a7-8ce5-502afa0b8879",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62871dd3-5c3c-4118-9d4e-1d72110e9510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6cf34e-8a45-4a5a-9a83-850d0ce22a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0a7f87-e891-4154-8b03-5a510f85e51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a336691e-a7b6-446d-a67e-983c979ae21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c27ae6-1762-4a19-8995-a06c5ef1afe0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c13f03-d569-4c54-80dc-87ca63d8d35e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21e9917-1eec-4d9c-883f-bc9760ec2965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f9a0ab-745d-41be-b200-553937ff363a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb67c2e-fe42-4587-9a59-73c76e928e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c48b0b-fadb-45e6-84ab-1b0ec6c188ca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39179c1a-9d78-4575-9d18-20a32b43317a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5cbaab-f233-44c9-a981-af2ee65f8380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38665008-46ac-4e0f-a16f-31ecf453586e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f05d8d-7f33-43e4-9b07-0794799da51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec33da6-7e86-4f7f-8222-8128bab4c364",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7716933-7b83-47ce-b055-36de8b3f46c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36dea7b-3ac2-4eaf-acd1-7a9bba580567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac102f53-4fab-4eda-a565-b06f719257fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b9a5aa-2b35-4d92-b1bf-c515511efdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e59dad-e7d1-447f-9b21-429388d17f20",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c34d0b-6222-4f3f-bd00-2f8e1994bf40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c538fff9-8101-4a08-8bfa-de5c8fdabbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb99160-0e51-45d0-90c9-e84386cd0743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04411208-1f25-4b2e-99ea-9c71f50db022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a067033-bf51-4c1e-afc9-9fedbdee7389",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3bd374-ada7-43a2-8faf-4b4ec8f76cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895e1b0c-c3e8-4aa1-a5ca-b2c7dc82e1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b62ba6-a0c2-469c-a176-ef4742d77b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d85636-191c-4824-8b00-cbf9114a035d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb1f4d4-5a52-4afe-bab8-e1f70ec27859",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d63e175-e532-4323-a746-8e1917855e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74de49e-17e4-43e6-a707-5e2810b52ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ef2d69-4f2f-45ad-ba51-5bd95a009ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b157d24e-3798-40a3-9a7e-59bedaebb7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f637e810-839b-49e0-9cad-7bb397a42396",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa88639d-617d-49b2-981e-c4331b447b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32448410-2d80-46f2-85a2-c370b49065b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73720aaa-bf70-4519-98a9-f0b5c236b423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2d91fb-1613-4004-8dcc-e0a0c4fbb32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fc0d29-0d0f-4181-8150-55f59779a20b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0d479c-04b2-4617-998f-1aa42c234e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d704f0e-4d47-4266-80c9-2f81cb719e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2fb7df-bd87-45d3-9278-b2f3481ac947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43595951-cb23-40d0-8088-d9d497d984d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfd2f81-dd59-4d4a-9e56-4ffacee166f6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd727628-34c3-4649-9ff1-32363ebec582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1073fea8-2568-4d0e-a431-1ce00d489604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923aa4e2-a132-463c-b7ee-f0ac65eb36c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d727ca-f0f2-4107-9660-15490df1ac23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c26d528-2ab6-435c-a7eb-b77c04f8cdca",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9416630-de8e-4178-88f0-a238b278cbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254ca605-0351-45cb-9385-b413a4934436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fccfc7-6c6d-4437-955a-b0473db59909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e428223d-2fde-4277-969a-38086694a086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177e5ac7-9d08-4ca3-9978-ab02dce30661",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeb91bd-52a7-4d20-884a-2b8cef627b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2107c506-efc8-4f86-b57f-f35518b01ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad26482e-a7cf-44fd-944b-082a6140866d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802df280-c9e7-4d72-98cf-2192339feb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c258762-bba4-4e54-9a78-114858a2617a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70746f2-c6d8-4e98-931b-351431ace1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501cf7ab-2b52-468f-aa38-dfc0dfac994a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d130e36-1f6d-4691-b25e-dbefa9007f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c12ddef-fb51-4b27-8510-767a3936d0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dadaae-8577-490a-93f1-7bbf1ca3388d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23e7ad7-113b-4dfc-91a3-edb3ff55517f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c8d9ca-51e5-4367-84e7-5c48f38eef6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6664daa3-ceed-4bb4-beb2-c738c7a4f63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc88af3-8a5e-42d8-a18b-0699a0e5caf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dda40e-565f-4693-9413-db1bbe35d19d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9510669-9059-4f31-9b15-0d647d84819b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f762b4ff-72f7-472f-b2f4-44dc1efc6367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98d7583-e68e-4da8-b17a-45d6f2da4c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fdfa03-e7aa-4cea-9d49-7d81b74ef937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2b6797-fd22-4cf9-accd-2dbfa41c3c4f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1456a1e-0a16-4b3c-a0df-9b0f253bbe2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e3cf42-814a-43f1-865c-8d239d913346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2c8947-e21c-4675-9c60-67a210dfd5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3c459a-535e-4932-a6ae-c7149d0403f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc85964-0a9b-44c7-86b3-a7a172572fa6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed72cd-cc1d-4e35-b28e-71c93dd0aeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547cbb68-6e7d-4a36-95b5-54c2c72264d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edb2fd7-a7fb-4b18-89d3-b2c08c694b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe51013-880f-42c2-9a61-c04fdf70a5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2438fca-1aa9-4dd6-b73b-ed1b41c6e12a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6ace16-4dd0-4bac-b357-6057f6922a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518c6bf7-ffd0-4cf6-a679-0f77986008d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ae4adc-de6a-4e18-88c8-35e9596bc835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f58804-639d-49f0-b58c-a4123aa43513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0e64bb-e86a-4240-9ba5-ed641f029c81",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce920d82-c69c-409b-8641-a261d30ff205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d4d069-0cc1-4d95-9d17-08ae52cc4c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6479f3-b25a-4b35-b250-16366465dde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd282fd-2436-40d0-b856-03760113f6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0c2f1b-19b2-4468-a369-9d966a26dc7c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b334cb52-66cb-43d0-b29e-177bd4e7588e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8386308-d6ff-4fe8-86f2-77b8f8b3dbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d2ab9e-ddbc-471c-94a9-569570203996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de145012-4eb7-4514-8d69-b13a5257100e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ea1fac-3b07-4c41-b803-7a227b043bdd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa4a10c-49a4-4738-86e0-2166ebbf70ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce43d1bd-c28e-4d91-8ca6-965a9d122fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b3f35c-3b26-417a-a802-156a6569e91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d258d87-9fb7-4ef7-afa6-664c51efb1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaa2e42-ce7e-49e4-8db0-685107bdf924",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5308460a-8a45-47ff-91a0-8be27da3681b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe4a749-8d19-4e1b-9f31-39cb15416032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a605d9-1222-4928-9b55-917a73d213c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db6c4d9-43ff-42e0-98c5-2f6530bf159f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9759d055-b0b2-4b81-bc48-1a6fb95a6d77",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387c2883-1fa3-4e2f-a2e9-c26c617fe82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415e20f1-cadd-4494-9b34-9c77036b6ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56f6cf8-c32f-45c2-809b-d7c9c9bfd230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f185aaf3-f617-45bb-b082-f72746b9a29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be69466-c566-4d7d-bb6a-83226f67ea1a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da463dc1-e974-4151-a36b-d94bfcf271be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b349772d-8462-4c6a-9b4a-c2df71b1b196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cea782-6dad-4a6b-bd2a-9252b6141bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46914ce-923f-4041-9142-7c1143e7603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc93fe9-f6cb-4a25-a9fa-ec2c974d21e7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c646b1-ae8b-4edf-8b9f-35dec762d089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4e3da2-df99-4df9-b3b2-4a2f3edb9b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392c884c-33fd-4873-b2e3-201ced3e8a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ecf7e1-b61e-4cf0-92d8-814fa89a380d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1066502e-28c6-4377-9e4a-a257c2149d5f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439ed355-301a-473e-ae73-06624d2b3453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32ff9c7-d4a7-4d6b-b92c-6cf235414806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a03c160-3525-4ac8-8e05-cfc0142b3049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0ef805-1987-4ceb-8787-61fcd8d80fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b47144b-7b1c-4773-b0d6-e3ecc2ba888f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e20ed7-fcbe-4258-b10f-538dca1d9327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffda3e00-ed61-453a-ad7d-62e9c7a5b655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767cec6c-fa99-461c-95f7-299aaaddf79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb79ae9-93af-46fb-a744-bbd1b19a563c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edee2d04-5b54-487b-bfb3-44e0a048fa17",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13599f01-c47d-4c32-8960-a41d39bdb180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1865bbbb-3d39-498c-8b10-9e7985313f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bddc00-ca3f-44a0-ad12-2e0642f49f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec21d922-ba9e-4f4b-a006-8d08e26ad452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754eefb6-6617-4436-8193-f9667dc24928",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bec8748-8693-45df-a4eb-0bb05d503e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badf99c3-2872-4b9f-ad73-7ba7dcfa7161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a07a17f-7e2a-4552-8852-3cc1f3390dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89a8fb1-83e2-4dab-a2fd-114db9d50da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9b7305-0e2e-4899-ac22-59cf9af35e03",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad5546b-1cdf-4208-851f-67e01d169c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5d7ffd-a5a6-4892-b91d-ecdf2873ee96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c4df22-8211-4a9e-a2d4-18aa472b5ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e39c75-8438-4be2-9a72-bc9f951e6a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b427b5-da2f-4a17-b7bf-188745a50c72",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33372a53-65df-46c7-ab94-42dba415f21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084f0937-abe4-40bd-83c5-1551d1f08fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c994edc-0eff-4f69-be26-eff6e9772cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c36c8e-ca88-4233-92f2-410a06460b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adc22df-6884-4bc7-b2cb-7463d95f3451",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f488b98-a542-4c69-a3ea-29ee8505dffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893f5216-6998-4544-bcc6-c74658ef0e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a1b8df-27d0-40d8-b693-bc4a666ece4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe1e32c-873d-4ab3-8276-4c6f59012e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7e06ae-ed65-4f9d-8924-e392b4afe529",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560a3929-3983-4f1d-8f97-2f066363561f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5319dccb-469d-4942-93d8-c2ff97221083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee3eeae-1ff8-41ca-aa58-41d6e6c9ea08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29467c5c-b7d3-4e2b-89bd-cfa044cb4d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cf1e9a-9856-41d9-9e04-ddd15cd635e4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e2da3a-9225-4575-a820-31cd0dd7d5f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e2684f-c9f4-44b6-bf69-a2ebeba7d332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c944260-0b84-4264-9fe6-671ef27f77e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46e1293-353f-4950-b55d-1def835b24da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b7885a-85e0-4c6c-8f86-90e7133b8e5f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14728154-1b4b-4f9a-a0f6-747799cf10e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c234ced-410f-4619-b7ab-eeeed19ea187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007ac876-c2ba-4a6f-86ed-8e88525388b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9baf88-653a-4f3a-a8dc-72e4d4e0037d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91d85b8-7435-4c66-aa3b-97aae9222117",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe7128c-7db0-4ad3-b661-cdf2a8ec0c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f8abb9-6283-4231-ab34-c036fd273b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b271bd-56fe-4ce8-8494-7f208da63ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a07e896-4611-46ab-8272-114c0b2566da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4179a212-01ea-4232-b924-530384f7e388",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4ed08c-fa82-41b2-b29e-17f698f61fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d0a7533-0b12-4dde-b079-009ec4a2b1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da08e7f3-0560-4857-bd1d-fcf96fa7b1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bb09da-51f4-4e4f-b86d-0f32d8b10ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb83c50f-01f0-47dc-869d-e833bec76889",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4ea843-733d-455e-9340-97141e792bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb9a601-356f-4790-8c59-2bc59df94eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350d029d-b205-4efd-a925-d5b602676f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090448e5-bf16-42c1-94c8-ed008fbc09bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db735015-8bc1-4721-9b82-fbaacb8fd135",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7df416-3ff9-4024-aad2-606c27259404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0582fc1c-b1ad-4fb7-ab3e-9262453c180a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afbac60-ed74-4560-82c5-85fee2e94409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445cd93c-b782-4d4e-ad14-434e347efa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d550b2-a3dd-47de-8d8c-33b673e1b97b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe67fcc-db0d-41c2-b7f9-e1cdaa6aa32c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34c6e0ae-af6b-465b-b850-60cb9f1406b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6d4cb0-d5e2-4dee-9e9b-da6b84941102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47c423f-5680-4de8-8fff-6a7a52d86bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10430929-b051-4ef7-a6eb-031e5c9ad6b5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b858ea6b-8f4f-44e9-ab50-c85979f47ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "243956bf-55bb-418a-b76c-3845e95e47ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9c2090-800d-40ec-85d4-89a09577eabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0157be0-b067-4b76-81e0-e8073948d046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bfab02-26ff-4ae1-9b2b-7438a70cc2c4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9b6d33-92c6-49c3-af2f-8e97240b2a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9191fca2-8fde-442f-a163-4df02166afc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f4c759-4992-44ab-b668-6ad70ba61600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72201cb2-d86c-4ef6-8b06-c56ef4d5df94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ea89d8-451f-4ac8-807f-eda980b9206a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094edef7-8217-4b49-a017-a84d882e2cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d0ab9d-b414-4920-89ab-6d1c9b9c8558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3125b01-5005-4f4a-a40c-1c1f6fb88d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb7a674-dbdd-473d-906c-1234c02825ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32ca581-7520-4622-8ff8-61c80addf28e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb3a86b-be8b-495f-b74a-30ec895affb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa5436a-f1c3-4c05-af40-64b7427271c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b7f6d4-8fb6-417f-85e8-ab86e6220d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b27549b-1d86-4c11-8797-2c7c2c91eeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa7d664-991d-48b7-8607-7feb8de26efb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb8ff9d-0136-4a7d-a9f4-9e2de77d4a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23dc75a-2b5e-4149-a7c9-3c97fd35c1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf9daa8-f0ab-4bcd-8574-a46ae1401222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769b3021-a92e-4bfa-8821-0023e4923fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f070cb-4996-413b-afba-95c859e4ce0a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ad084c-787a-49f0-a44b-b0c7929b196a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aee70d54-45b7-49f9-87fe-fe034fedd2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beee263d-21ba-4912-a504-0bc0594b42ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68072c30-1e29-4a7a-ba14-78a1d09f6e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a158ef0-bb93-48ed-8d89-f490a664a42f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c441cef1-71de-4763-934b-12788a4754cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1cb20c-efa7-4554-8347-aec98af99e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc3944f-73a4-4a77-a1fb-5b5f48df2d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5d9540-ef7d-48d4-9f96-bc1096d1c4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa55e40-a4fb-4942-8c0d-364bdc302198",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02c798f-dadc-461a-93b5-16478bcfa63f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc09ee2-03a7-41bf-ac8f-32c66c62c6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7710b9ad-9a5a-4a81-8b86-e010a807b890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f929a510-ba49-4eed-8381-3bc4b4478fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e3eb35-cf28-4bcb-b045-f72509b4e9a5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237cd887-3150-4c81-a7f0-07b9e50e6231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdcba2d1-53cf-4f65-827a-c4aa548431c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec65c2b8-e6bd-4923-94c3-5a52bb2c7a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264cfc95-47dc-4e7b-947b-bceb6ab3dfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce4345c-f285-4374-a4fc-27167f9fe93c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8b6ec1-6159-4f84-bfd8-03b81532f26e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b9b3a01-59d4-4e1b-bdb5-5a7e5a21dd06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bfd7fb-5b48-426f-a6db-8970793b56b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4311084-7cbf-4816-ad6d-2673503ad063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aac49c0-765f-4b7d-9364-a1935918d9f4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fad99e7-8827-4a7f-867e-1f8977e85a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4883ec-2a6e-4786-a085-ab903068c794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d996363c-ee22-4e32-9e86-6698ab2d8e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15408c64-6b61-470f-bbb7-8a31c3a6ab46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c61ba8-e3b7-4781-b769-a31656bf9067",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34696009-c210-4572-b44f-c853c776509a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308457dc-62c7-498a-b5a1-3555dd770ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bf7923-49df-40d7-91f9-55676240ab2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b316ffc-f89d-4992-9556-08d02676e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dc4155-0159-4056-8ccc-2e459557f6f5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0054b42d-4b76-4678-a643-7a2136495722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6873894b-5ea4-4178-83c6-85f04824c5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c600f4d-d918-4621-a6ce-853835089926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201ccb21-9208-4e82-8d1a-bfa92e9d98e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc365816-acaa-49cf-a224-aa79f6b2c034",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd99d704-6a41-47c9-862d-28927ce5cb7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e473efe-870a-497d-8f7c-291938c5de54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03a7060-ebce-4918-8104-d7920f44ed3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b04121-352e-44d7-a46e-1e40018329e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b209a8a-e718-43e9-a56d-82ded05bcdeb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed4963c-2a7e-41c4-9f63-2e073f55c0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0cf555-7259-4c7b-a80f-4660a5f1c0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c6777f-4563-40c3-896d-57bb3e7e9fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46f9af7-b6b1-4257-8266-f189aaff3b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a43eaf-395f-47b2-a462-561eda1c45ce",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c444a6f-7c7d-48ac-9987-8d3884db0bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff5557a-19b8-4303-b857-0c21aa33cd29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ded8a4-f71b-4c3b-a927-85c0cf886f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d693603-ee6e-4100-9c9f-4c4322d4517e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a553457d-a0c8-4807-bad7-295a2c86ce02",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d77cb7a-a00f-4c68-a608-5161a8d89d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87e9b5ab-69f3-41c5-9db9-320ad2291fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1c9413-e791-4d27-9aaf-cff9f8db36ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da57711-a4db-4493-a925-5dacae43451f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e4302a-18ed-4728-b109-f73108140f0a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ac15de-83f4-443d-ae8f-48439f76602d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "004b94d7-b339-4cbc-be85-3cf3a0fc04dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887fa1bb-f238-44d4-85a0-e4a6d058e952",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54be31f-9fb0-432a-845f-5bb0372a026b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4782b7-2462-46bb-8ecd-1858ab26c7fd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa53e3c-47ad-4a48-8ca7-1376c7cfdce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef3f1f83-9594-4e24-bac1-ce7840774920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7813997-3ae6-4f8a-b762-8f8786f9211c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc6d2d2-db6d-4468-a2cc-cb29fce7ee56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2c1216-017d-48f2-8735-c9aba466511f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a264130-a1f4-4cfd-b67d-2920055998db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b75afc-df0c-478b-b5da-36c8ebf82a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bad6a5-da2b-4493-b2be-6310ddadd86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca7651b-31ef-41bf-819f-ede2d82e4745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2e8295-73f3-442c-bcbb-a5526a92c31e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dcdc2d-cc80-4f7c-8abf-413d1df94cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150914e1-0e91-4e77-b42b-daf7bbd2b929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208d51f8-f05c-47d0-afe6-32de86a28b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a473fdf-8c12-458f-b8a8-20fc031327ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90e3492-a74b-4d13-ae42-0da9adb3faec",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb1469c-b520-41e4-b53a-25eb83765bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df96494-3a2f-4249-830a-4cf9c7e33276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da89ae50-2061-4849-b6f8-c18046060e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52803117-c24f-4101-a640-31b0db76c153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d67fe61-1608-4312-b365-6dc578c02042",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd3eb43-6fb1-42ed-80f2-4b2215d09c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3a2a89-4a88-493e-8ead-3b0af7e6d68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c582d0-9354-44c5-9d7d-e54fcc831081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c69c55-8505-4325-8f32-24a319027132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eede8f65-eb02-44ee-85be-9ed02c5d7931",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa86471a-da60-48d4-9d9f-8ad9dbb155f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d755ad-9e62-4c9c-b6c7-bc4f69af6a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00de37dd-f82d-49b3-837a-5ae225681117",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70efb9dd-a5f4-43c9-a61b-d3f404666bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50229bd-72c9-4e2c-857a-d8e5f1046f3d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4f7289-f9b7-4e8e-89b6-d0e724c86448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195e9f9b-10df-4fd7-9481-c57c973135e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4150a8-043a-4bd9-8c2e-bd6e42404ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42820dbf-7677-4459-82cb-e099b4a29e74"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df136077-3a89-4386-bfc7-44b03e28f8ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46d8016b-9599-4367-af87-192fdccbf897"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "902afcb0-1d72-4476-9931-4e9057270eb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc7afe03-7d7d-4d6b-bf4f-f100a6c04e13"
                    }
                  }
                ]
              },
              {
                "id": "22ee39f1-045f-4328-a132-070664a91acc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ce018f5-6ddb-4fa4-904b-6e404d06d4bc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5159822b-c791-4291-abfc-b97de8cb5027",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a861977e-2bf6-44a7-abff-ec30a6eb3896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e940962-1cc7-492f-a3a6-83c498af0836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76c2f909-bbe1-4f91-9388-3e4805f75319"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07eaab4e-472c-4c66-8815-77050d280f27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64d567fc-abad-4aeb-863e-2d2cbef3b400"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ba956ab-78e2-4e29-b7bd-46ba6bab8275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bef964ad-ae19-492a-9dbd-2761f521e295"
                    }
                  }
                ]
              },
              {
                "id": "9990cfdd-7f9a-4648-8f1c-5d5b95d67619",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0d8f3212-6d8a-432c-aaef-c7ab0b1c26f9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e1fffa-ed67-4885-91a1-2aee71eb26bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "acb9b2ae-014d-497b-9255-539af14cc454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8617f3d-4677-4e95-ad0c-71938029e567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2ae2ff-9bc1-4a24-b36b-78e01118a2fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3262298c-ce12-4377-a23a-add6f647e340",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b1036348-cb1c-4511-93d6-14081749313e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ac4d3ba-c35b-4e95-b11f-f717f122c8db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5f0388bb-ab06-4154-9c0f-8c859479ea4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d42f89da-d61e-47b5-a648-aa8e4ebb8a06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd45d961-9dcb-4994-9be1-eee64315a0c0"
                    }
                  }
                ]
              },
              {
                "id": "c869970b-06e9-4a80-887c-d9b0518a0b22",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3179815c-f049-4b70-a12c-a435f622765c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a130dbbd-8a42-4b5d-9dc8-75edfadcc55f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12828f0-6ab3-4d43-928e-e18934c01bba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ea54f6c-17df-435a-8046-2658b5f772cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "763cf084-790b-4168-840d-38cf7493a1da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7b14f1c3-4c46-4744-b867-85aa72964612"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "373b41ee-32fa-4f8f-8314-66ce063fe5d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8b0383e-75ab-46f7-9de5-d481cab4ee29"
            }
          }
        ]
      },
      {
        "id": "c2936ad0-ef30-4a32-9941-2d4f2b0f777b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "23232bcb-123f-48dd-b555-46ddc5cacfce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cae7c606-2b41-4bca-95d2-4764b18b4e4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4624947f-411a-49f4-888e-31ba700ff0fd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f29d97-51c0-406e-a872-b28bc09286a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4b4b53c1-a2a9-4692-afaa-0c1e2683ec43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcd2991-1f41-4ca4-84f2-7cdc0efef6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78b6d795-9795-4301-8a0e-95dc462f9101"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a28e959-4cb1-45a0-aa3d-5bd48423829a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "772bd23d-6608-4d10-a068-e2b8ffaa9401"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33cc48b4-27e0-42ce-a859-eef27b1293b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07fc420d-2044-4171-8a03-e45b7ede2381"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45cf006a-888f-4560-a69d-68bb84f99e32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a5e3a098-83a6-4ac4-9fc5-cc8c4655cd49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2e89869-3264-4133-ac6d-c14c34a3b1ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee848db1-2da5-4c75-9142-4459bc46490d"
            }
          }
        ]
      },
      {
        "id": "9937815b-b6a2-4aed-8d29-ef4a7f30ac06",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4c988ae4-26db-44a8-9d6d-c28d089586ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5be2239b-74fa-4f25-a7c2-f6e18a4c150e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4da65130-ad13-4b27-adfc-383eea0788d7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0fca6d-b951-4984-b795-562fa856a701",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b02955f9-e509-4e01-9e7f-ee42783a0c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ba3e0d-6cb2-4940-8b8e-0e821b785f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "458382f1-b705-48b7-9f0c-dac90357d1f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a899a026-12b0-4ff1-bba3-e038bb6e27e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62956dab-77c7-48e6-953c-d854c66d7331"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d09c009d-8fd4-4063-a058-6d8ac89aa878",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a50c45f-de43-491f-b0a7-6ac588e723a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81af952e-d3cf-45ab-b217-2cfccb1b355e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "09f94160-1b87-4fdc-8f31-3fa3811b57c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3c1f268-69dd-462e-90f2-b572b6ded486",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0d982c9-9c5f-44e9-b5ca-ca427c41d688"
            }
          }
        ]
      },
      {
        "id": "50ff17ea-643e-4cad-9729-32930e5cd4be",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d0678c44-d593-472d-9725-ff821ab9edee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a07c4559-f5c3-4b7a-a656-c783852d28c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38121c4c-6543-46c0-9cb6-bab86f085096",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d74099-14cc-4b18-ab1d-6bd46d2f41ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddeb42ff-9a7f-44f3-82d9-e5328ec1d960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e8a93f-c735-4a8b-90f3-08f947b93c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b81edb73-8508-4b2a-ac56-e647b4b72c19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57573858-ca7c-4bde-8020-89b24ba79c9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92503685-4389-4968-9033-4d40d35820d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eaf895f-b062-4653-a66c-14932a1b06fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44fd8f90-07d2-4769-9804-2c056e2a2989"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5d34fa3-5b8b-46d4-bc92-47d73cb1a461",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "123ffe15-b651-49af-bd0d-74be41cf6e16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0920612c-6d98-45e9-adaa-7fca3b2d1dc6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "badb99bf-40f3-440e-81ff-f2ed77741e05"
            }
          }
        ]
      },
      {
        "id": "4ed31e5b-6ad5-4e4c-ae65-d15a291bc699",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79879b98-994c-45be-b749-5fa68e797c72",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02008ab8-5dab-4266-b5ea-6a56772d67fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6c44d5fd-e280-42ab-bbf4-4f35d273879e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d2ee2dc-9602-4055-a602-026297ad952a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf2b5bf9-226f-427d-a8cf-69d3e6dac999",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 136.43157894736845,
      "responseMin": 5,
      "responseMax": 12938,
      "responseSd": 874.3295173832817,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701736585749,
      "completed": 1701736633652
    },
    "executions": [
      {
        "id": "fbd2fdc4-569a-4992-9923-38af8ccfb9d1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "13f785c1-37b8-4185-8627-02d31b398f27",
          "httpRequestId": "42966c5e-78bf-40ce-96ef-aab40fef4ee4"
        },
        "item": {
          "id": "fbd2fdc4-569a-4992-9923-38af8ccfb9d1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "09c7a684-a414-4bdb-a928-5472182e18f8",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "978d9b2e-2cca-426e-b257-4b0aeb990323",
        "cursor": {
          "ref": "2561d1e0-ba38-4158-affd-7320623d4a77",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6ecbbfb5-654f-4f63-840c-914f7a1c640b"
        },
        "item": {
          "id": "978d9b2e-2cca-426e-b257-4b0aeb990323",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d5b1aeb7-a5fa-42ec-8ee5-2271c2e1f53c",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "ed8362b0-fbf9-4958-b065-1adda5e0e9b3",
        "cursor": {
          "ref": "a5f87201-b0df-4220-a422-e1f42e752274",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd434b9f-16d3-4670-ad16-c52c1e61f08d"
        },
        "item": {
          "id": "ed8362b0-fbf9-4958-b065-1adda5e0e9b3",
          "name": "did_json"
        },
        "response": {
          "id": "e09a727a-a7dd-4900-851a-f009d595f2aa",
          "status": "OK",
          "code": 200,
          "responseTime": 343,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5ca085-e06a-42be-a205-b6d6aef5e5ea",
        "cursor": {
          "ref": "0a167c8e-c30e-431e-b785-62826cd3b24f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "751b2f5c-5400-4b2d-8b74-749f059d4161"
        },
        "item": {
          "id": "bb5ca085-e06a-42be-a205-b6d6aef5e5ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "e68c75c2-3a98-4a89-b690-db12d6e28da3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2243,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5ca085-e06a-42be-a205-b6d6aef5e5ea",
        "cursor": {
          "ref": "0a167c8e-c30e-431e-b785-62826cd3b24f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "751b2f5c-5400-4b2d-8b74-749f059d4161"
        },
        "item": {
          "id": "bb5ca085-e06a-42be-a205-b6d6aef5e5ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "e68c75c2-3a98-4a89-b690-db12d6e28da3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2243,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f102aca8-2659-4512-b34e-c6716a5ae17c",
        "cursor": {
          "ref": "7e9eec27-4418-41a3-9512-e658c9d60537",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e6509b6a-cfd5-4c05-81b2-fc2884d629ee"
        },
        "item": {
          "id": "f102aca8-2659-4512-b34e-c6716a5ae17c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5c74886b-dee4-4da9-a67d-213733e5be2b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89977643-acc6-4849-970e-cd30a2959d69",
        "cursor": {
          "ref": "9d2df5dd-267e-44ba-a535-52fbf1708fb9",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d3eae614-e204-4f43-a6db-55ef189a6146"
        },
        "item": {
          "id": "89977643-acc6-4849-970e-cd30a2959d69",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bbfc6a57-5670-4028-9ef7-ecb8a68baf27",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ac7bc5-b6fc-49fa-833c-660f59275ce1",
        "cursor": {
          "ref": "7b35257e-8fd9-4a86-934d-c0823fa597de",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bbced80c-23e8-42a1-a3ab-b55180a6d1b1"
        },
        "item": {
          "id": "b7ac7bc5-b6fc-49fa-833c-660f59275ce1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b4c360e8-0928-4feb-92c3-b3023a8a28df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e885a44-ac46-413f-8a64-7da0b352111a",
        "cursor": {
          "ref": "a384a12d-b968-4f00-b8c8-d1caf4fac2f3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "955ef200-a682-4122-a957-fa544c9bec5d"
        },
        "item": {
          "id": "1e885a44-ac46-413f-8a64-7da0b352111a",
          "name": "identifiers"
        },
        "response": {
          "id": "bbc2ef80-b1c2-415d-bb3c-8ae787bfcc4a",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3c721c-3088-4971-93cb-df7f836e60ce",
        "cursor": {
          "ref": "79e34fd6-1206-4428-8f8a-52dc736acbd0",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ddd9d8e7-056e-46ef-aafb-333334f31cb9"
        },
        "item": {
          "id": "ce3c721c-3088-4971-93cb-df7f836e60ce",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ab078269-cc39-4139-ba4c-6969de7f137f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2dcdc6-9153-40ca-9b1a-29b4147abc27",
        "cursor": {
          "ref": "c85e985f-13a3-435f-b151-c5f06db430c6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3511eb39-bf82-4241-95c4-baeac34b6a19"
        },
        "item": {
          "id": "1e2dcdc6-9153-40ca-9b1a-29b4147abc27",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "97cb246e-5480-4a57-b477-49fdf5aae60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b423ba6-b865-4bc4-ab06-49f16727db0e",
        "cursor": {
          "ref": "48b9408d-9d10-402a-999a-bb51763fe407",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "51e689e9-b885-4fe4-9d68-e8c2bee53788"
        },
        "item": {
          "id": "5b423ba6-b865-4bc4-ab06-49f16727db0e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "60f9e153-41c7-4b9d-bd99-b84142175683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73d46ff-0107-4f70-ad2f-042ec50b40b9",
        "cursor": {
          "ref": "fb12e830-73e4-4b2d-8b4a-54060370f286",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "65e663b2-00a3-4f0c-82fd-4481c153e872"
        },
        "item": {
          "id": "c73d46ff-0107-4f70-ad2f-042ec50b40b9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "09619460-b7ab-4922-85c8-590df152f64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f36bae-e415-424a-bb54-502ef0cec142",
        "cursor": {
          "ref": "e98a1914-5b72-49ad-baae-d3cca937168b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d80840af-585c-43a0-93cf-906e6dbdc433"
        },
        "item": {
          "id": "d0f36bae-e415-424a-bb54-502ef0cec142",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b50462c5-d167-4e59-aaf3-e1c79aee75bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bf95ea-a822-425e-a608-797d3c7b3527",
        "cursor": {
          "ref": "9121e55a-e68a-4139-b9f8-118a2fbc6a5f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "beee4157-7d16-4dcb-9d5d-29f1cd66ced5"
        },
        "item": {
          "id": "17bf95ea-a822-425e-a608-797d3c7b3527",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "91aa6476-9948-4eb5-a4eb-3273c4778141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659117f0-342d-4d76-9c3d-33afef20e407",
        "cursor": {
          "ref": "bd6f2967-7d90-4502-a4dd-ae1c7febdb3b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "037d127d-9ffa-4c48-ac77-e11fe0f0066c"
        },
        "item": {
          "id": "659117f0-342d-4d76-9c3d-33afef20e407",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7defab07-5cb3-48a9-8e25-f5fb4e0114aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e1578b-8d43-4c7a-a038-aae1b24ef0f9",
        "cursor": {
          "ref": "476a180e-3589-4eb3-8de5-2b866aa0ee19",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ee5fc36a-16c8-423a-9f71-96ef06cb35df"
        },
        "item": {
          "id": "c6e1578b-8d43-4c7a-a038-aae1b24ef0f9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "060d2ee3-3407-461f-bb0e-fcc90bc0dd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d21364f-e4e8-4253-9bda-f804ab851b11",
        "cursor": {
          "ref": "e542f016-67dc-4cd2-846f-1334d7b14827",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ece6a107-b4c0-4f8d-bcab-77db9762a99b"
        },
        "item": {
          "id": "2d21364f-e4e8-4253-9bda-f804ab851b11",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "55262d7d-06d0-4cc2-a2c2-f37f3d3e4d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872d33f7-ffd4-44e4-a2da-a347b7ceabe1",
        "cursor": {
          "ref": "822bf603-d89d-4911-8201-ed5ce1176926",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "eca0e969-235e-4b21-9ca2-3b3807c84dda"
        },
        "item": {
          "id": "872d33f7-ffd4-44e4-a2da-a347b7ceabe1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "af25564c-b52b-41d6-87fe-c0e939a6df91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd08f7f1-286f-44e3-8a8b-59bf53607db8",
        "cursor": {
          "ref": "3f21faef-15ff-4086-aecd-14c85ef447ab",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4f191227-baef-4c45-a2a8-74bb20a31fda"
        },
        "item": {
          "id": "bd08f7f1-286f-44e3-8a8b-59bf53607db8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2c154408-9d2e-4524-a520-a473254f1228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52dc693-8adc-46f7-8641-c929bc41009a",
        "cursor": {
          "ref": "cceaeb19-aef3-488b-a02e-03fdb4f0df54",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "76a6c372-8386-4976-935c-df483620f217"
        },
        "item": {
          "id": "e52dc693-8adc-46f7-8641-c929bc41009a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0125fffd-2649-46a5-afb6-c4adeab1928d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5653bcf5-1f58-4096-9e7a-cc149aed3ea5",
        "cursor": {
          "ref": "d81012ad-9feb-4b7a-b5cd-9a5145cb3871",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d8db6d0d-5c9a-4ea0-b33e-f809125f598b"
        },
        "item": {
          "id": "5653bcf5-1f58-4096-9e7a-cc149aed3ea5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6e696236-fc80-47a1-96d9-06f98f8dcdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ccf30b-461a-4dc5-b5df-1b4d93ed8e8a",
        "cursor": {
          "ref": "8a74deb5-acba-44fb-9773-6d4ae24c1bbf",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "321ddd9c-d354-4659-a4d4-57b0b149895e"
        },
        "item": {
          "id": "39ccf30b-461a-4dc5-b5df-1b4d93ed8e8a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "65a37a77-86d4-426c-b5e9-dbcec2297da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd964282-faeb-481f-96ff-69bcc75cb877",
        "cursor": {
          "ref": "4da0beb0-d60b-4a44-9195-30947210704c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2d0e8ac0-2a7d-41b3-aeca-f3225dbe9a06"
        },
        "item": {
          "id": "cd964282-faeb-481f-96ff-69bcc75cb877",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9d72f9e5-b13a-48a4-b11f-d8cf4523e809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001d3afd-0366-408b-941c-0dd68d1b7fed",
        "cursor": {
          "ref": "8a685f9d-6dbc-42af-ba3d-d3fbaa2d7fb2",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ae0937a1-069c-4bf6-bfd1-726fbdfab4da"
        },
        "item": {
          "id": "001d3afd-0366-408b-941c-0dd68d1b7fed",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6601a887-59c2-48fa-b35d-1c34e1a48688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa4304c-ecfb-4825-a27b-c68f65ef3a20",
        "cursor": {
          "ref": "2b4fc4c8-7839-4a1a-b6c0-37ff20859b86",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3203a9c5-2d44-4efb-8a49-c6abdd78592e"
        },
        "item": {
          "id": "ffa4304c-ecfb-4825-a27b-c68f65ef3a20",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e91f1ca3-ec89-40cd-8b0f-a00f547341ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824defc9-dbef-48d8-8deb-b80bf59ff5a4",
        "cursor": {
          "ref": "6e92591b-a307-499d-b89f-910372a7ee41",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "193c4ddf-3bd0-4826-99bd-594d625fa975"
        },
        "item": {
          "id": "824defc9-dbef-48d8-8deb-b80bf59ff5a4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "de10b364-60e0-4d42-b229-4d33bd05b3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc94ec41-96c4-485c-97f8-c4f9b5f01c6b",
        "cursor": {
          "ref": "a35aa235-7b93-47bc-b4cb-3e95e590e195",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "aea28de5-04d8-47fc-a2be-7ea3c0e9303c"
        },
        "item": {
          "id": "cc94ec41-96c4-485c-97f8-c4f9b5f01c6b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0ec96758-b596-4433-b373-40003c41bd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46197b0-80e5-47bf-9096-0d0e43def695",
        "cursor": {
          "ref": "536b8923-eb37-4e21-82e6-1dda9ae9b20b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ad497b8f-caeb-45ea-89c7-d31533096aa1"
        },
        "item": {
          "id": "d46197b0-80e5-47bf-9096-0d0e43def695",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "263e5a25-c5d3-46ce-b9a8-e7491c41cc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf11d68-d2b0-4241-a16f-03ceccee6a82",
        "cursor": {
          "ref": "fc650b6e-62e6-4262-9702-8ae9f2b2bcef",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a7962e52-41a0-4e2b-b12a-86b0fb59f80f"
        },
        "item": {
          "id": "2cf11d68-d2b0-4241-a16f-03ceccee6a82",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5aea7435-790e-4edf-9bbe-4583529caaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbeff1c3-e42b-4ed2-b5a5-e0efc89be401",
        "cursor": {
          "ref": "07ea381f-9207-4cea-b185-52f623b2d1d9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a7a4ab81-7658-4c92-a414-285a5da292c2"
        },
        "item": {
          "id": "cbeff1c3-e42b-4ed2-b5a5-e0efc89be401",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b961b727-6fee-4fb8-8fb7-32e021259cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d95bc4-7745-429c-92a5-3f0c439f32f6",
        "cursor": {
          "ref": "48704470-7fc0-49d3-8454-be68c406e0e2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6497e9eb-ba72-48d7-8be6-ea085e1bce01"
        },
        "item": {
          "id": "a7d95bc4-7745-429c-92a5-3f0c439f32f6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c6b49fe2-53de-486a-b2af-ce669112751e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801f2e37-8704-40a6-8cc4-1cc8981cfa8b",
        "cursor": {
          "ref": "d1d6d524-c3ea-4a8e-b5a7-9c430b86097f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bd0557e7-76f8-468d-9167-74cce40c3a82"
        },
        "item": {
          "id": "801f2e37-8704-40a6-8cc4-1cc8981cfa8b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d3879631-fd78-460f-a4e5-1734507a2b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307c9233-35c5-4f5f-8819-e820a8f483a2",
        "cursor": {
          "ref": "52bc5aa4-c55b-46a0-8dcd-b08a4bdb5488",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "77942913-2c8e-4654-b884-afb275e43f8d"
        },
        "item": {
          "id": "307c9233-35c5-4f5f-8819-e820a8f483a2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8c4bb41a-4a50-4111-acb0-99b9c87cc0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04749f3-6d27-4601-b87d-8d0c2d4492a4",
        "cursor": {
          "ref": "d88c9bdd-8727-4c46-a7ab-abf0c4357e14",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e455c1b3-f8a8-41dc-a139-bc83c630e51f"
        },
        "item": {
          "id": "f04749f3-6d27-4601-b87d-8d0c2d4492a4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8ca7cf9c-be5c-4f59-9659-4bce52c0bc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec6c4fa-5dc0-40e7-ad64-276df6e627c5",
        "cursor": {
          "ref": "f9f56e67-b97b-496e-86e3-4a210f30dd9a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9e0c3993-5d14-4f81-b592-fac3eb075e47"
        },
        "item": {
          "id": "1ec6c4fa-5dc0-40e7-ad64-276df6e627c5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "874baa58-dd34-435b-beca-d317566e622f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e159f7-13be-427c-97c1-9427e34522c3",
        "cursor": {
          "ref": "87f929c1-7e0f-4abb-bc9c-3e96dd239995",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2e434a55-2dc1-439f-970f-222efe867b1b"
        },
        "item": {
          "id": "f7e159f7-13be-427c-97c1-9427e34522c3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a105aa6b-e1a3-44a7-a23c-416d8edac7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43195de1-f0e9-40b6-be2c-65104faa55b3",
        "cursor": {
          "ref": "2461dd77-80fb-4fa4-a4b9-92159cb8f199",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1d7a5247-b3c8-4c92-b950-729546e9d1d5"
        },
        "item": {
          "id": "43195de1-f0e9-40b6-be2c-65104faa55b3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1ffaeda6-7bd8-4a63-955f-430d420f05dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabd4c8c-78d9-4451-8377-30b9ef7865a9",
        "cursor": {
          "ref": "17d52fe3-c417-452b-9180-2e266cd0cec1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1df7009c-0454-44dd-8d3a-f6e343d2b072"
        },
        "item": {
          "id": "eabd4c8c-78d9-4451-8377-30b9ef7865a9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b2fa1a1d-e7b1-4c55-9adf-cb3998f9d1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35e4f45-213f-483d-b227-7c9013188d53",
        "cursor": {
          "ref": "81ba487c-7727-4f66-b3fe-617dde858b3a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a8ecd99d-7be0-4a74-88f9-1d83cddc2134"
        },
        "item": {
          "id": "a35e4f45-213f-483d-b227-7c9013188d53",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fc07165f-60d1-4525-b59d-9392711144e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8766596a-5ca8-47c4-a55e-7040b327adc3",
        "cursor": {
          "ref": "b1a077b8-093a-4fa0-a56d-33bbfb2209ac",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "17d379bb-ab83-43df-b69e-dde962b7a998"
        },
        "item": {
          "id": "8766596a-5ca8-47c4-a55e-7040b327adc3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bd24db4f-7575-453d-9baf-0cd4a013b5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afed820f-6deb-468a-a108-285d60ee3393",
        "cursor": {
          "ref": "4e265acd-b242-4511-976c-56a06c8ee088",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ffed2641-1269-46ac-8432-a7144ce287a6"
        },
        "item": {
          "id": "afed820f-6deb-468a-a108-285d60ee3393",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "da796dda-08bf-4902-8b30-db2ceab90fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0d6348-93d6-4242-92a0-8138e1f95282",
        "cursor": {
          "ref": "b0baaf6c-479d-44d0-9bec-e927728b1e4e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "666148f9-a456-486b-b1ca-4df8cbbca5c6"
        },
        "item": {
          "id": "ae0d6348-93d6-4242-92a0-8138e1f95282",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b56e38cb-3128-4bc2-9f11-3ffecd8564cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccd2ddd-90ca-40fc-9841-c8c014f2d54f",
        "cursor": {
          "ref": "ffd15ee7-7528-4d01-9c1c-9aaf7b9ee38a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9be52a6d-86b4-4acf-8ba4-22422b81b8cc"
        },
        "item": {
          "id": "5ccd2ddd-90ca-40fc-9841-c8c014f2d54f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c33abcd3-52f1-4646-8c49-ed4def4f4748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3213b69a-e6d7-465f-b521-b16a524c0c77",
        "cursor": {
          "ref": "10d82bcd-e615-45c9-9264-9cf264d6fea2",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c6d7f7f4-737b-47fd-9bae-38f202faeda1"
        },
        "item": {
          "id": "3213b69a-e6d7-465f-b521-b16a524c0c77",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "10ee6e2f-3ece-4786-a376-d890109f0cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d154c4a-b34d-4726-8ae0-fe80692a19e0",
        "cursor": {
          "ref": "4c0207e6-e645-461e-82ca-1989b54d7d09",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "01cf6562-bd47-4ca0-ab82-ea88398e0895"
        },
        "item": {
          "id": "1d154c4a-b34d-4726-8ae0-fe80692a19e0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "450e77ac-0ad7-4618-9609-aef7b56a444a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae676f0-2dea-4b1c-913f-3b60231f80f6",
        "cursor": {
          "ref": "70405130-2080-4454-99db-c819c04690b5",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "efdfaeab-b31b-43c2-bde1-6e0032b3a074"
        },
        "item": {
          "id": "bae676f0-2dea-4b1c-913f-3b60231f80f6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "786331b7-6fcc-43bd-b3d5-b1500d48b595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5db2a24-3662-4db5-9931-158f38d36131",
        "cursor": {
          "ref": "df7f64f8-b430-463d-a135-4d872ae01d0d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fd49a037-fae6-425d-9598-4f4603c146ee"
        },
        "item": {
          "id": "a5db2a24-3662-4db5-9931-158f38d36131",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9881b648-db08-4625-a30c-6a82d40e4613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0d454f-4ece-4b9d-939c-ad64ac747439",
        "cursor": {
          "ref": "4ffd21a4-c955-4a70-afbe-343bd705c79f",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0fc929aa-13a0-4760-8233-19c1c4c52c5f"
        },
        "item": {
          "id": "0d0d454f-4ece-4b9d-939c-ad64ac747439",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "65db5004-b2a1-4c98-82dc-1684c190afd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1191a4dc-e761-4357-a57e-b9b0a62f3d06",
        "cursor": {
          "ref": "49595e37-9d5d-47cc-b4b8-28db6fbdee77",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ab9ad69b-e7d9-4ef7-bd8a-7246a32ed313"
        },
        "item": {
          "id": "1191a4dc-e761-4357-a57e-b9b0a62f3d06",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7d9b3486-8f65-4a7d-8a45-b47f74cad94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020f6437-622b-40a0-8ebc-4746e467c2e0",
        "cursor": {
          "ref": "b4844cdb-6bb9-4f16-b69c-6c40d3bd6af3",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6bc42d33-be1d-4ccc-9a17-936652d533a2"
        },
        "item": {
          "id": "020f6437-622b-40a0-8ebc-4746e467c2e0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7dcce3c0-17de-4256-9e1e-4aa91a86e222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22790822-3a89-475b-96e5-0aaf0355a6d1",
        "cursor": {
          "ref": "bfb2b974-1348-4b33-90cd-4bd09bb0af53",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "aa253191-2f06-4a1e-b0f2-20c7e7704aad"
        },
        "item": {
          "id": "22790822-3a89-475b-96e5-0aaf0355a6d1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c311b710-6e59-44ed-9a07-808a823e9930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250c98a1-0899-4f19-96eb-f13dc83af840",
        "cursor": {
          "ref": "d9427083-ccf2-4269-acff-56360e32449e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "791aac17-e416-4a91-a2b7-9ba1b14f526d"
        },
        "item": {
          "id": "250c98a1-0899-4f19-96eb-f13dc83af840",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c960d2df-2006-492e-8193-f2986f96f8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ff0bbd-e289-49d0-85fe-6afa1e5a4889",
        "cursor": {
          "ref": "c5527a51-7c27-41cf-b0ba-dec60babd46e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b022ca37-b6dd-4594-9f2a-9f0683b07d8b"
        },
        "item": {
          "id": "f0ff0bbd-e289-49d0-85fe-6afa1e5a4889",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ce7d9e2-4be1-4394-8c90-c12177da4293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d2385a-942b-4505-8645-dcc40cba8ccc",
        "cursor": {
          "ref": "409dc41d-4623-42c8-a0cf-8fa4266dd565",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bd4cc3cb-5025-4b84-8e36-c84fc1456cb2"
        },
        "item": {
          "id": "e5d2385a-942b-4505-8645-dcc40cba8ccc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7f6358f2-0005-4d51-bd70-121b2e979b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc150002-20a0-42d8-9c03-22f79062f5fe",
        "cursor": {
          "ref": "21d0918a-9a04-4639-8999-a06829336d96",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f11705fd-e76a-45a7-9d74-e6754a4434dc"
        },
        "item": {
          "id": "bc150002-20a0-42d8-9c03-22f79062f5fe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bd244f4e-3eab-4c8b-9359-759805a20014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebc2720-6191-48e2-adb9-0080a8fd4e31",
        "cursor": {
          "ref": "6010fb6e-9f49-48bb-9444-700aed626c7d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "480eb03b-5bd6-49a1-a4c6-96b2b7800d01"
        },
        "item": {
          "id": "eebc2720-6191-48e2-adb9-0080a8fd4e31",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3fb752ee-013b-4b8f-9d8b-d007cd75b2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0508d5d-bf93-4488-b89c-3897976692b1",
        "cursor": {
          "ref": "4baab25d-0705-409f-8bef-97fd2a310733",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "021a419c-0665-4e1c-b1e6-cc98e331b3db"
        },
        "item": {
          "id": "d0508d5d-bf93-4488-b89c-3897976692b1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8ec75094-5917-4e5c-8881-d8f420d972b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420eeca7-3a6f-48a5-a2fb-f9e53aa655ed",
        "cursor": {
          "ref": "3489ec46-0dfe-4bf9-97da-f6a4a2f9ce77",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "43573c5a-f405-46a3-82ac-c9de66729d72"
        },
        "item": {
          "id": "420eeca7-3a6f-48a5-a2fb-f9e53aa655ed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c6225067-f5af-49c1-a3ee-c50bcfbf9f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f593955d-da96-42f3-9365-0a27bb85dd95",
        "cursor": {
          "ref": "c5879a3e-4eea-4d6b-bcb7-6ee38953a209",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ddd78d25-26f3-4a47-ba8e-386942ac4693"
        },
        "item": {
          "id": "f593955d-da96-42f3-9365-0a27bb85dd95",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "54eb80b0-126e-4854-920d-bceaf8a166da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50be343c-bbaa-4e99-8c72-93a4b8499250",
        "cursor": {
          "ref": "74b9827a-9a21-4ab2-aeed-4de95c63c2fe",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d343bc18-872b-47b7-af08-6cd65b369ff7"
        },
        "item": {
          "id": "50be343c-bbaa-4e99-8c72-93a4b8499250",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ed00ea8e-39f1-4d2f-ba1b-7055cdb0e5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95715baa-6184-4ac0-8586-91c04aace0d6",
        "cursor": {
          "ref": "8e0b2376-5d0a-4fec-af13-99a2351e018a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c06b758f-bd69-49ad-9c16-65c7f8572d3f"
        },
        "item": {
          "id": "95715baa-6184-4ac0-8586-91c04aace0d6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a240a13b-a9fb-4c3d-baeb-d9af26e72675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5321af-2a40-4e2f-ac86-18573131abf1",
        "cursor": {
          "ref": "7e337218-7334-4edc-a343-68944cd54fcc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2f9bf787-06e8-4e35-859d-68fb38964d86"
        },
        "item": {
          "id": "da5321af-2a40-4e2f-ac86-18573131abf1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e49185fd-1bef-46de-9441-c42232f211af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a83ce1-a47c-47e3-87c2-2384e797baf4",
        "cursor": {
          "ref": "86cda3c8-72eb-4086-b08e-4ba1aa2432e2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e6761ce8-8b4e-46b3-8251-d5a330ba6926"
        },
        "item": {
          "id": "e7a83ce1-a47c-47e3-87c2-2384e797baf4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "be97b7f8-64e1-40a4-90af-0202af4e3b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535fd1f7-57ed-4eb1-8ba9-1185c3592af0",
        "cursor": {
          "ref": "2f953662-fe66-42d8-891c-cd29661b4321",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "243105fc-f5dd-45ca-9389-792837b5f4c4"
        },
        "item": {
          "id": "535fd1f7-57ed-4eb1-8ba9-1185c3592af0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "28f794b3-7f17-4fe0-864a-11f2b70453c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac00c0d3-a618-4919-9f3f-fc979f266638",
        "cursor": {
          "ref": "82909b05-2766-4b75-b390-eac2254a1866",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e9099308-58b7-4d8a-a4df-c6c270040bf2"
        },
        "item": {
          "id": "ac00c0d3-a618-4919-9f3f-fc979f266638",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fbc568bd-b03d-40d9-b81a-11923a1f6f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc298bb-88d6-4bf3-82d2-57a84def735b",
        "cursor": {
          "ref": "3bb2cbab-3a85-4e1c-981e-77f5375d51bb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "68c16bda-38f2-4d00-a930-65231f831d4a"
        },
        "item": {
          "id": "1bc298bb-88d6-4bf3-82d2-57a84def735b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cde43250-8509-4d93-8901-340b974fe77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3583f3d-b5aa-4747-af4c-30db25733f54",
        "cursor": {
          "ref": "e4ea89f4-43e1-43d8-b059-862dfb7bce65",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2703277c-75d5-40f9-8862-be72a6b27f49"
        },
        "item": {
          "id": "f3583f3d-b5aa-4747-af4c-30db25733f54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "63f54849-c6e5-412f-9619-3eaf265c5ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fee5c60-efe2-45b9-8c66-8bfa0ee4302b",
        "cursor": {
          "ref": "33a50b03-9f98-4426-a463-314cbd653ced",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5b34be73-7680-4ff0-addb-da76f73f508d"
        },
        "item": {
          "id": "5fee5c60-efe2-45b9-8c66-8bfa0ee4302b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c506f962-f6e3-47cb-a588-03515582c390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3469d91-37c3-48b8-95d4-0c5b21f14471",
        "cursor": {
          "ref": "bbfe364a-4848-4e05-8600-19c9dbf81886",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4e4176b6-ccd8-47c8-a2ba-0c093278db68"
        },
        "item": {
          "id": "d3469d91-37c3-48b8-95d4-0c5b21f14471",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2ca93580-db47-42ce-8ae3-d08da7a2ecba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8544230b-c9ec-490c-b0fd-245ddae36c21",
        "cursor": {
          "ref": "c4697fa3-e8dc-45db-ac21-c8f0b7adecc1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0b87e9f2-5d0c-4337-b95e-a2b76031a341"
        },
        "item": {
          "id": "8544230b-c9ec-490c-b0fd-245ddae36c21",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "12e33875-2d8b-4699-9763-aaba010439a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01d047e-ba96-4ed1-9286-7938cef58944",
        "cursor": {
          "ref": "f2b56579-ceaf-4e65-9cc9-501ddc8f14ea",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a724cc68-fbcc-4199-8141-1957100e609c"
        },
        "item": {
          "id": "f01d047e-ba96-4ed1-9286-7938cef58944",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "201a9610-fbc0-44cc-8599-7d170f1db61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abc9c1f-8603-400c-9c92-b679d716604a",
        "cursor": {
          "ref": "c2ad8e3d-527d-41c2-8e4a-6cbcf5c5c07f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "807aea99-3f9d-431e-8f94-e8dca4600555"
        },
        "item": {
          "id": "6abc9c1f-8603-400c-9c92-b679d716604a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "153e4b71-9cde-4263-8cea-002596b7a7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637e0a7c-2868-4300-b259-9563cc7ad2c1",
        "cursor": {
          "ref": "d840b13a-40ae-4dad-9b3a-ed2d509e198f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "708e7303-b617-47f1-8173-11a9dc753d53"
        },
        "item": {
          "id": "637e0a7c-2868-4300-b259-9563cc7ad2c1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7fd9c7ed-7b5a-4b2e-a507-7e338eaeda22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eceff3-9fd5-4c38-9120-5ebe065c2a14",
        "cursor": {
          "ref": "1a7a5f33-7a74-4178-b3ea-76c06419bfc7",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cb356561-98d9-40e9-9fbc-b81339d8fc80"
        },
        "item": {
          "id": "18eceff3-9fd5-4c38-9120-5ebe065c2a14",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9e12ea03-8573-45da-b6b1-d6fb7a64a726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346e6913-bb1f-4e15-8cbe-b94e4e332fe7",
        "cursor": {
          "ref": "d35651a9-0754-488d-bd68-c0da023688c5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "52f80532-115f-4efe-aa1f-17e0af8db079"
        },
        "item": {
          "id": "346e6913-bb1f-4e15-8cbe-b94e4e332fe7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "659cc5e8-b005-4f9a-bc50-8dcaf98b3618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eb474f-41b5-420c-b4ea-40c599e79ed4",
        "cursor": {
          "ref": "162f476e-625d-4f63-94ed-944fadb24213",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8381bb69-ea94-4b13-8601-4261228cc655"
        },
        "item": {
          "id": "f9eb474f-41b5-420c-b4ea-40c599e79ed4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4d9623bc-121b-4403-8525-9906f75ac956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876fdb07-9ed3-4794-94df-fef23f67af8f",
        "cursor": {
          "ref": "47c605f1-3c1d-4bf0-b280-7fb094f66660",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6cb7bf5f-a236-4e37-9a78-dee1549a05e7"
        },
        "item": {
          "id": "876fdb07-9ed3-4794-94df-fef23f67af8f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bb237c24-0c51-429c-b4dc-9042632bac5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e6793-fca7-4613-b11c-53198365708b",
        "cursor": {
          "ref": "7bc9e55f-a026-43f1-b772-35340561ac64",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8a214c82-4a91-4697-b60c-e3e540be54df"
        },
        "item": {
          "id": "176e6793-fca7-4613-b11c-53198365708b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e5ea5c11-ebc3-4ee3-82fc-fb6c4bc4a520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f657ae1c-5115-4ddb-ab18-a2104109c808",
        "cursor": {
          "ref": "c9bac3de-3b55-4db5-9631-06f33c2ccf90",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "71a9abb3-535b-41fd-83b5-54b58091add0"
        },
        "item": {
          "id": "f657ae1c-5115-4ddb-ab18-a2104109c808",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ca4e264b-5b93-480f-85b4-5400d7fc9198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c0bf90-f768-4c72-9f74-cf848ef7c071",
        "cursor": {
          "ref": "f56fcc2f-1de9-4351-a186-4f1cf706d47f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3684d5fc-d7f7-466f-aed4-5c35dbd129ad"
        },
        "item": {
          "id": "05c0bf90-f768-4c72-9f74-cf848ef7c071",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d4def7b5-bc79-48f0-90c2-76f3f8252907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5bcb5a-0f65-4fa5-8bc4-8758fd409bb1",
        "cursor": {
          "ref": "a6beca48-a1dc-46b3-8fc2-d515a535c840",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "47da5f5f-08f2-4315-8e27-9f6140dd7fbb"
        },
        "item": {
          "id": "3d5bcb5a-0f65-4fa5-8bc4-8758fd409bb1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "111c0ba6-0152-45e5-905d-02bd6bb344d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb38b38-2e71-4e60-86fd-f2cb3c4c4215",
        "cursor": {
          "ref": "a9f12acb-9f75-40b7-9cd6-4bd67137a6ac",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "04959dc6-00a2-48ab-ba6c-3ede6611f18e"
        },
        "item": {
          "id": "4bb38b38-2e71-4e60-86fd-f2cb3c4c4215",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4ec71776-bcec-4b55-9c30-dfe0fa9b4bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783dbbda-d267-44dd-8e15-b3fc39d30b0c",
        "cursor": {
          "ref": "660c4040-2257-4db5-b4c0-6509daad6808",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d8ab63b3-91c8-4813-a7e9-d98582a530ed"
        },
        "item": {
          "id": "783dbbda-d267-44dd-8e15-b3fc39d30b0c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "37e056af-ae1d-43f6-b413-9040c2cc0b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06596f5-8349-4c89-a9c4-292f5535dc40",
        "cursor": {
          "ref": "2ee45a42-9301-4dca-8cc4-6b70d4f9ee08",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1be1b333-e735-4e00-ab3c-ab733e69db3e"
        },
        "item": {
          "id": "b06596f5-8349-4c89-a9c4-292f5535dc40",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "980ad3e0-8537-457b-b52c-196b56bfbaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dabc3df-0b4d-4cac-b7b9-d5a57fdc34a4",
        "cursor": {
          "ref": "562171ad-9d12-438d-aa7d-92afa7f90bda",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ac133a45-99b4-46e7-98a3-f66a9bd9a975"
        },
        "item": {
          "id": "2dabc3df-0b4d-4cac-b7b9-d5a57fdc34a4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7ab2986b-61f5-4155-ac42-4cba706fac52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfec3f1-1c37-43a1-86e6-d2f8905bfd30",
        "cursor": {
          "ref": "0853a53d-61e5-429f-92a4-e48d7a251d15",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6c34a6fa-6713-4b2d-ba69-58f49db9003b"
        },
        "item": {
          "id": "8dfec3f1-1c37-43a1-86e6-d2f8905bfd30",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e96ca46a-87d5-4e47-9a56-e7cfdcfc55d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f53f4b5-b350-4dd5-824f-2738635d97e4",
        "cursor": {
          "ref": "b843cae0-e67f-4cda-922b-9d5a917de64d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fd83a737-9812-4b7b-b317-022e4f8101fb"
        },
        "item": {
          "id": "4f53f4b5-b350-4dd5-824f-2738635d97e4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3d17b1e6-71bb-4e9e-8985-4e6cc85d5510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c730766-59af-434d-94be-ba487717a5d1",
        "cursor": {
          "ref": "ff1fd574-1857-4aae-9231-aa61126b2846",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "20006efe-b1e2-48bd-ada9-082ef0d416fd"
        },
        "item": {
          "id": "6c730766-59af-434d-94be-ba487717a5d1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9b327468-bce2-4908-b908-7e34e92340b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2483c8-1d2c-47ac-99bf-0b711c58187e",
        "cursor": {
          "ref": "60f88352-64b9-4ecd-b66c-5ed6ca55e608",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2edfad1c-3a5b-4713-8306-939e9c7a27b0"
        },
        "item": {
          "id": "ce2483c8-1d2c-47ac-99bf-0b711c58187e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d8ba3f5b-57e3-4e8c-9636-eef62796248f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b50ad91-6dd8-4136-8624-95d66b91e18e",
        "cursor": {
          "ref": "b15cf777-fa04-449f-9a12-c68383a231ce",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "306ec56b-b302-408c-9ef8-11c99304d674"
        },
        "item": {
          "id": "2b50ad91-6dd8-4136-8624-95d66b91e18e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "77790d6a-1c62-4440-b999-846e859bfc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb722b28-da4f-41c5-bf35-5b141f44cded",
        "cursor": {
          "ref": "c2754608-bd0a-48b1-9e0a-e1ea2b582623",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0b217d7d-23c9-475b-b8a8-541bb5ba6059"
        },
        "item": {
          "id": "eb722b28-da4f-41c5-bf35-5b141f44cded",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c74ee304-45a1-4ebb-bbfc-eaa64f878a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459a83d9-5a68-4e21-88e9-6a979ac9c64b",
        "cursor": {
          "ref": "5feb51e6-acda-4db2-8716-d2883e4def55",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "822fc9d6-f5e6-4050-8cee-38882b7a41ab"
        },
        "item": {
          "id": "459a83d9-5a68-4e21-88e9-6a979ac9c64b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f1a39bd0-6cfc-46d5-be7a-6dce7fa9b44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4683d530-d2f5-4849-a5df-221088ac31a8",
        "cursor": {
          "ref": "836e341e-ddc2-43bc-ab3a-7b201e0c0833",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ac2bde78-2b83-4f2c-8ca8-0cbfd0c4201f"
        },
        "item": {
          "id": "4683d530-d2f5-4849-a5df-221088ac31a8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "396a9304-dac6-4cbd-bd70-7bdbfd7499a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ca2b8e-1af0-4c6a-a2c5-013e379426e0",
        "cursor": {
          "ref": "50b6582a-2564-4be6-ae72-917bfef6cc9a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "65863898-792c-4f81-a39d-039d3d787df1"
        },
        "item": {
          "id": "f1ca2b8e-1af0-4c6a-a2c5-013e379426e0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "adc284ec-ccdd-4075-a218-07a50c27052e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47dc7ad0-95e5-40d1-89fc-89a5b03a1085",
        "cursor": {
          "ref": "69a51a66-1c7d-4cd5-9919-7f3f94eb169c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4f905794-8dc9-49ae-9eca-03e2698dbfac"
        },
        "item": {
          "id": "47dc7ad0-95e5-40d1-89fc-89a5b03a1085",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "54ad92f7-cfa0-4f88-ac46-f7d59ef1f6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453ce71a-b85d-4a55-aaa0-47a39ce81283",
        "cursor": {
          "ref": "8a99f242-a326-4caa-b062-253e7f6e554f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "42080da6-4285-413e-a208-ce97268d40eb"
        },
        "item": {
          "id": "453ce71a-b85d-4a55-aaa0-47a39ce81283",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d0f8070e-fee9-4da6-9dc1-cba6f1597cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660769ac-f4fe-4efa-93a0-cdbe3a01aa1d",
        "cursor": {
          "ref": "a4dc9308-ea19-4d92-a78d-2adb1eff8418",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d643c56b-9d5f-41f2-b16c-fafe4d36f2bb"
        },
        "item": {
          "id": "660769ac-f4fe-4efa-93a0-cdbe3a01aa1d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f74b31f8-bc95-453b-8180-de1a45b0df0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e76dce6-03de-4a49-be2b-f61adfb967a6",
        "cursor": {
          "ref": "94f8b3fa-a8fe-4a0b-8788-2e843102ac7e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "36dca748-2a99-488e-81dd-fb2e584cf54c"
        },
        "item": {
          "id": "5e76dce6-03de-4a49-be2b-f61adfb967a6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a0c8e4f9-075b-4cc0-97e7-48f1008aa706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13b2c96-4ff7-43e5-955e-73bc981cb8f1",
        "cursor": {
          "ref": "63b3b29b-e02b-4f15-a1b2-26abb90051a8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "09d7758f-b075-47dc-9932-4d75c4a130a7"
        },
        "item": {
          "id": "d13b2c96-4ff7-43e5-955e-73bc981cb8f1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ffeb9059-74a5-42fc-b9f1-bf7fbe296100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dfca90-d16b-4f32-b4fa-10944f611724",
        "cursor": {
          "ref": "f3df9e9e-6ff8-4ea2-aff3-f5ddfb44b222",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c75fb986-d7a6-4e27-89d5-74de3a8f6d61"
        },
        "item": {
          "id": "44dfca90-d16b-4f32-b4fa-10944f611724",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7e3a29e5-7ad8-4a5a-a8a9-ad4a74528d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5b0a95-afe7-4076-a3c6-fdd918d6f638",
        "cursor": {
          "ref": "40c35bb2-ead1-49a8-9450-4864b9fbb6ae",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "566996c9-8b1e-4746-a2b2-94005565717f"
        },
        "item": {
          "id": "1a5b0a95-afe7-4076-a3c6-fdd918d6f638",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7e0746a7-d92a-4d8b-8057-6bd549c07458",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba30df5-0f62-42b3-91f9-32f8f9db85a5",
        "cursor": {
          "ref": "484095a2-f322-46aa-b1d7-f9485cb705f5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "351cc13d-7da7-4b14-94e1-075eb1a7583a"
        },
        "item": {
          "id": "dba30df5-0f62-42b3-91f9-32f8f9db85a5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3d12c59e-9c7a-405b-b498-b2482565c5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f86711d4-6b88-4090-882d-3ecdbdd383b6",
        "cursor": {
          "ref": "b6f6d141-e2a1-4f99-b8a3-182862c0ee46",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "decdd39b-b643-44d5-b369-0049fd104ee2"
        },
        "item": {
          "id": "f86711d4-6b88-4090-882d-3ecdbdd383b6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "832b7bd6-9135-4f85-8493-3e1b8581a054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "27272487-aa46-4816-82df-e5bf97e76f6c",
        "cursor": {
          "ref": "8c4fd7d4-8968-4e4c-8bf8-edad119d2780",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "42592e95-ecbd-4052-8fe2-b26b7f8e1e14"
        },
        "item": {
          "id": "27272487-aa46-4816-82df-e5bf97e76f6c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "053ee60c-271d-45fa-a68a-2c6f6a930b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ae35683a-5091-4535-9d40-8a93dab4502f",
        "cursor": {
          "ref": "548e3c1e-d397-481e-8a4c-0489a7363194",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fec4cc65-a95c-4809-8ba1-d23d7a830fe1"
        },
        "item": {
          "id": "ae35683a-5091-4535-9d40-8a93dab4502f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e1c68a28-b79c-47ca-94c9-0b533027ee06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "cad56bbc-6b7f-4c86-b2a3-20c9176fde6c",
        "cursor": {
          "ref": "12f06bee-5e2c-4137-b7c4-da75c201f4fc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "71542d03-69b8-42c6-a1b2-5c02175ac74c"
        },
        "item": {
          "id": "cad56bbc-6b7f-4c86-b2a3-20c9176fde6c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "89db7bb8-704d-4d03-822e-90653be2a1b4",
          "status": "Created",
          "code": 201,
          "responseTime": 12938,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64ca276-d6b0-42ee-8946-77c5e1087ef4",
        "cursor": {
          "ref": "ba6c7aea-e298-4b51-938a-c2c0caa160c2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "323ad885-e4a0-48a8-902e-5e4c48f77bd0"
        },
        "item": {
          "id": "e64ca276-d6b0-42ee-8946-77c5e1087ef4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "12f4e938-f378-4217-8eed-088b8424e26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5895fd2d-de49-4eee-9a72-7f482c0aa01b",
        "cursor": {
          "ref": "a78a36dd-f2a3-4d99-9f26-b674f6918514",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "33a9253c-9786-4a08-a620-a28a20a70674"
        },
        "item": {
          "id": "5895fd2d-de49-4eee-9a72-7f482c0aa01b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "27c8e29e-7e29-4b53-b065-05bd13889d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "464e9a74-ef59-488d-bb99-49f8ebd5b623",
        "cursor": {
          "ref": "a9953989-7bee-495b-b155-ab11abc4961e",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8cc5c632-b5fd-42ed-9dd3-ccf43852cf74"
        },
        "item": {
          "id": "464e9a74-ef59-488d-bb99-49f8ebd5b623",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "990a63e0-0176-40f7-8a3b-5ce449651988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2609b48c-a121-4e48-be81-28480a10ab7d",
        "cursor": {
          "ref": "56dde7d0-de9c-48ea-bf17-9dce8daf7ec3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c16e17d7-b8de-4467-9e86-a6d1a5f40829"
        },
        "item": {
          "id": "2609b48c-a121-4e48-be81-28480a10ab7d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81219a51-7f6f-406a-aab3-a60b7c3ce30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66a3095-278b-4f4c-9e20-d99890e1e697",
        "cursor": {
          "ref": "68804fb1-c1ef-4fa0-a2be-f52eaf0cfa48",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6126dce5-1887-48d9-8ea5-89bdf6c642f2"
        },
        "item": {
          "id": "a66a3095-278b-4f4c-9e20-d99890e1e697",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2364bfa9-e740-42f4-bc70-1fb254d506f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65520bc-c4f2-41be-aee0-4704f7c9d3a8",
        "cursor": {
          "ref": "aea10353-9a0f-426c-9c2c-b157f2d91168",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c69f21c9-c215-4396-b3db-849bc358222a"
        },
        "item": {
          "id": "e65520bc-c4f2-41be-aee0-4704f7c9d3a8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "22dff65b-68f9-4387-b50a-7a75c84f31ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b007ff-c1e8-454e-ae28-1ee0d2cac59d",
        "cursor": {
          "ref": "0892041a-018f-460b-8409-f20370af0aae",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bf72ca9e-313c-478f-b4bf-116df49dda7b"
        },
        "item": {
          "id": "b2b007ff-c1e8-454e-ae28-1ee0d2cac59d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c0f4ae7a-63ea-4938-93c9-4749a67fbfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c263001e-0857-4463-a904-fb3ee8d64b6d",
        "cursor": {
          "ref": "921c68f0-7334-49f7-badd-ea2dbd7244f9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "884d570c-fb25-43f3-9f15-f093561efd3c"
        },
        "item": {
          "id": "c263001e-0857-4463-a904-fb3ee8d64b6d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cd1bc409-98ab-4d85-976a-6bad9f8a3f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6ad2d7-b91e-456f-97c9-99acc22ce746",
        "cursor": {
          "ref": "30278d36-94ce-4071-ac6a-85bcc25ce202",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "499f920f-9b9e-43a5-bbeb-99b293a2a126"
        },
        "item": {
          "id": "bf6ad2d7-b91e-456f-97c9-99acc22ce746",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "11ed5f59-73de-43e2-9dc8-232e0cc4a920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fdb91a-d225-4d2e-ace4-73a51ddabfce",
        "cursor": {
          "ref": "529a2da1-eeb6-40a5-b537-ee125e0dc836",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9a0d8711-090a-40ec-a9dd-d1947f21ca25"
        },
        "item": {
          "id": "46fdb91a-d225-4d2e-ace4-73a51ddabfce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cc8029bb-c2c7-4d72-8a29-cd339affac77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c071716-af61-4c2c-b523-113ecbad5940",
        "cursor": {
          "ref": "437a14af-03d8-4afa-b946-83930d80dfbd",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c881a8df-a416-4854-addd-2abda7fbb81f"
        },
        "item": {
          "id": "0c071716-af61-4c2c-b523-113ecbad5940",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5d39de21-aaf2-493f-a8d0-ce26a32eba3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73851a7-2947-4a49-ada0-dd380909e3e9",
        "cursor": {
          "ref": "c5d0a88a-ca17-41c9-bfd3-d65ca2a3a84b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "732eb9a6-e89a-450c-a12f-055420ca306b"
        },
        "item": {
          "id": "f73851a7-2947-4a49-ada0-dd380909e3e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eb3eacb6-128f-4855-9221-63b64cd464ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dbb66e-8b03-4d53-8227-735ccd4b703a",
        "cursor": {
          "ref": "db2d0c89-d148-45be-a458-b04d7489862a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e0bb4e1c-eacf-458d-bd99-ce34ff6128a1"
        },
        "item": {
          "id": "58dbb66e-8b03-4d53-8227-735ccd4b703a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "85143ef0-844f-4ff7-a1fc-89f740609f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e1aec1-de94-409e-8045-39300626a90d",
        "cursor": {
          "ref": "044353bc-6f52-4a28-961d-d4c8291877d8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "310f2dcd-6c2f-4f6b-a9b8-8655fb25b41c"
        },
        "item": {
          "id": "f4e1aec1-de94-409e-8045-39300626a90d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b628a263-933a-47dd-8f81-7fc494234b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cfc07e-01cf-41b0-852c-9796a6851e73",
        "cursor": {
          "ref": "a19057ad-5764-4af0-aa7a-dd7872184739",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c9ca7529-9d7f-4b99-80fb-a55d55a45ce4"
        },
        "item": {
          "id": "10cfc07e-01cf-41b0-852c-9796a6851e73",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3caab65d-2b13-4344-963a-1ab955a8001b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb00241b-c5ce-4dc2-801c-bd8d322422a7",
        "cursor": {
          "ref": "8562797c-dd78-4b8a-ac79-e35d26677766",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b02466b2-bc64-409b-a01f-b827578a56a1"
        },
        "item": {
          "id": "fb00241b-c5ce-4dc2-801c-bd8d322422a7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0cfa1244-0d85-4bfd-aacc-a57bce757bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697add8c-1915-475b-80e7-4932aae8ce5c",
        "cursor": {
          "ref": "8abe5b6d-04d1-4ad2-9642-3b8832131798",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0f26dbb4-f15a-4c0c-a20b-f3624e630755"
        },
        "item": {
          "id": "697add8c-1915-475b-80e7-4932aae8ce5c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ac3b2acf-75f0-490c-8bab-1c3fb076bc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bd0940-c344-4e42-a720-72c23c083058",
        "cursor": {
          "ref": "6547bf62-590d-4cd2-a42b-21e7afc1976f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "33c4ecb7-b455-496b-b185-64aa0b53a3ef"
        },
        "item": {
          "id": "e2bd0940-c344-4e42-a720-72c23c083058",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "32318f0e-0c37-4eaa-ae96-c13fef7a775d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64304cc1-ac62-4700-8feb-f40c54eab203",
        "cursor": {
          "ref": "77b19cda-6ee6-4228-b08e-ac802b320a6c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "874d677f-e48f-4020-bc3c-2e69f40ecb1e"
        },
        "item": {
          "id": "64304cc1-ac62-4700-8feb-f40c54eab203",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c1d0b7d0-0351-45cf-8523-bb1a8e4f72bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c338e251-613e-4469-8430-521cea33ddc4",
        "cursor": {
          "ref": "9f72c3da-098b-4d95-8a32-e4fc88bdaf3e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6d7a4974-c1dc-4ead-b66f-bdb10cd7fc2d"
        },
        "item": {
          "id": "c338e251-613e-4469-8430-521cea33ddc4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7e802694-de57-4e7b-ac27-668562d5a215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eed96a9-358f-4bb6-99f3-8dc6d0c57d69",
        "cursor": {
          "ref": "48ad2f48-e75f-4eb1-b0ec-1bee17d91958",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "351093db-a88a-4ecb-bb17-b911b5f1acac"
        },
        "item": {
          "id": "4eed96a9-358f-4bb6-99f3-8dc6d0c57d69",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ffccc78a-9581-46bb-967b-634f10654dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36df866-6bd9-4ea3-81ac-c241e6d074cd",
        "cursor": {
          "ref": "ec4a60f5-727d-466f-9158-4a7e6bc7a2a1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a61f478f-b089-458d-b462-a4d82b7fff43"
        },
        "item": {
          "id": "c36df866-6bd9-4ea3-81ac-c241e6d074cd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "946e7bfd-2b3d-4cab-b04e-12d00c4c7749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190ea0af-9385-4691-add6-ad9c3eeb13ae",
        "cursor": {
          "ref": "7a93c25e-6b88-44ee-abc9-423471e6c463",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "31331a73-18f4-4bfd-8c29-aa412d6e8ffe"
        },
        "item": {
          "id": "190ea0af-9385-4691-add6-ad9c3eeb13ae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6db9ea4a-175f-4218-a277-4ac4071d2ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8657c55-b3bf-4d1d-b1ae-f93e259be906",
        "cursor": {
          "ref": "8a49dd79-971e-46da-b531-91106fc3f90c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "50e2c5b1-8823-4e30-a089-446769339fb9"
        },
        "item": {
          "id": "e8657c55-b3bf-4d1d-b1ae-f93e259be906",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3abd0a82-e06e-4a81-9f5c-36b81d77e618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cb9fe1-53d3-45ef-a684-bbf12ed4ed65",
        "cursor": {
          "ref": "afb8b1e5-ffcb-44a9-996f-62281679877a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2e832ae8-d34a-43a7-b29f-121a1938eb71"
        },
        "item": {
          "id": "42cb9fe1-53d3-45ef-a684-bbf12ed4ed65",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "46765b88-1bc7-42c0-b4a0-d0e009cda03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67025de7-1c32-4ce9-95c5-d72628f50d79",
        "cursor": {
          "ref": "11da7e8d-2e4e-4409-8f53-402906d09121",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "74b8f5d0-884e-421e-b7f2-9c1838ba4987"
        },
        "item": {
          "id": "67025de7-1c32-4ce9-95c5-d72628f50d79",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3960ebde-61ea-4e2c-9c14-69a17dbc7c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01218f40-dfef-498e-ac88-8adf230a5727",
        "cursor": {
          "ref": "98185b2b-0d8e-4502-8508-23c186a3ec56",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "24524e1b-4e33-4398-ae81-121e3479649f"
        },
        "item": {
          "id": "01218f40-dfef-498e-ac88-8adf230a5727",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "59187fb4-1043-46d8-b0fe-0a2d9e9f9fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb8d073-4015-4ddc-9011-e4b0fd2b7297",
        "cursor": {
          "ref": "be2f25b7-5611-401e-ad13-02c619926aba",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "60a00e1c-f6b2-461a-a3bb-960479956ce0"
        },
        "item": {
          "id": "ffb8d073-4015-4ddc-9011-e4b0fd2b7297",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cc34d166-86b5-4590-b950-7e45cb938ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db77d308-f68f-4596-9602-81c840d1ed80",
        "cursor": {
          "ref": "fc9ee122-f0ad-434d-9a87-6fdaf25104e4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e6c6de92-2fea-4b25-a40f-011c29fa4d3f"
        },
        "item": {
          "id": "db77d308-f68f-4596-9602-81c840d1ed80",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0b72d0d7-020f-4845-abba-2e427fbfc0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50d7c17-8c48-415b-9a3c-96bed2e530ba",
        "cursor": {
          "ref": "7e643d9b-8736-4ccb-9e14-9578ed03fb41",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a2f9b931-8413-482c-b17f-c24ac1db495b"
        },
        "item": {
          "id": "e50d7c17-8c48-415b-9a3c-96bed2e530ba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3556240e-021e-4bac-8cb1-fbabf24e6399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d1da51-8b76-4449-9d7f-c86762b1281d",
        "cursor": {
          "ref": "d3355e82-444e-4939-9b64-aad044ea49ed",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "058a9ccf-e1fa-4b4d-a4c4-e2270133c865"
        },
        "item": {
          "id": "e1d1da51-8b76-4449-9d7f-c86762b1281d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e008e825-daaf-4760-999b-2915e2d30bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb47294-e72a-4132-b356-ef9afca925f7",
        "cursor": {
          "ref": "ecdfa800-8f44-4894-a11c-86136be3c68d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fdab8e83-be26-4c0a-8bd7-7157c86424f0"
        },
        "item": {
          "id": "bcb47294-e72a-4132-b356-ef9afca925f7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0f772612-3ce6-49d7-a313-79b82990764e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75db8662-5998-4eea-ba95-953bbd2dc17e",
        "cursor": {
          "ref": "a2c9be32-6e90-4a23-986f-be0df7184f4d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "38876337-547c-4d34-8e1b-a613d1f451dd"
        },
        "item": {
          "id": "75db8662-5998-4eea-ba95-953bbd2dc17e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "58ff6923-8b51-49ef-85eb-355dc1b44702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18cf662-7bf5-4203-b0a2-7398f25151e0",
        "cursor": {
          "ref": "4685fc83-214b-439e-97e2-d673d4ac658c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5293bae2-e2e8-46eb-86a6-9e2be09d6b22"
        },
        "item": {
          "id": "c18cf662-7bf5-4203-b0a2-7398f25151e0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a4594f17-6cc3-467f-9e21-913b84ddf622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c0cdfb-9315-43d7-9dde-f0464fcaf3e8",
        "cursor": {
          "ref": "01e5e4a2-9e01-47f6-8c1f-1bdc6574ab7d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4564196a-1ecf-4495-a2bf-00528f989c1c"
        },
        "item": {
          "id": "22c0cdfb-9315-43d7-9dde-f0464fcaf3e8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4da88160-13c8-421a-a618-4046d22927a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0705bc-b6ee-403f-a191-e7a6a2a0c150",
        "cursor": {
          "ref": "4a810fb7-3cce-42a6-a440-01418959e77d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "33b9d14e-0b1a-4ddb-a4a0-53ec00d29002"
        },
        "item": {
          "id": "5e0705bc-b6ee-403f-a191-e7a6a2a0c150",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c1b4b26e-10bb-44f3-bd66-3c69c291f203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6a33bf-35ac-4fb0-94bd-00c10ae885b6",
        "cursor": {
          "ref": "6d7a1323-4a65-40a1-9f4f-8f3762ac5676",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5b204174-d1d2-49c2-854b-4885dbc52a69"
        },
        "item": {
          "id": "ac6a33bf-35ac-4fb0-94bd-00c10ae885b6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "db4ad997-e312-4d5a-a4b2-54fd145b486d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30acf405-1585-4924-b277-a928cb843ee6",
        "cursor": {
          "ref": "accfda4f-1b25-4b7c-9a06-1ff1982f45cf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "619880ab-822c-4aad-8e95-bdd31f0b55f3"
        },
        "item": {
          "id": "30acf405-1585-4924-b277-a928cb843ee6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "327afd72-a91e-41f7-8572-d601b0bb1c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cd334d-5aae-43c7-9665-b7f067fcbeaf",
        "cursor": {
          "ref": "8160bbc3-cce3-4e5b-b266-69281828e100",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d6bb03a3-0306-4955-894b-8205aaa9979c"
        },
        "item": {
          "id": "98cd334d-5aae-43c7-9665-b7f067fcbeaf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "05fcd8ce-402d-4213-9a67-7127f95d6fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38da4c86-8108-4c04-85ec-a61aa638e6f2",
        "cursor": {
          "ref": "9e2b2e37-c5e0-4633-b8e7-24b22810ca63",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e69154d7-7b91-427e-8159-f2a745d8141c"
        },
        "item": {
          "id": "38da4c86-8108-4c04-85ec-a61aa638e6f2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "55846df6-223d-44e5-b4dd-d05aba0bc669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722c2488-d186-425e-a684-7d02b1e100ac",
        "cursor": {
          "ref": "2ad65e41-fda5-44f7-8a27-ec45085ec651",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3ffbc562-6763-450e-80e5-5ab040c9e7a0"
        },
        "item": {
          "id": "722c2488-d186-425e-a684-7d02b1e100ac",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "142b1afd-e1f4-4304-a0f8-9e3447f8ab0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c17aa63-0a23-4baa-bf8d-20b6c444f1d1",
        "cursor": {
          "ref": "645313e8-406b-4e74-aa9e-575ada89fdac",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2488c70b-29ab-45a3-866e-a5d87b0ab2c4"
        },
        "item": {
          "id": "8c17aa63-0a23-4baa-bf8d-20b6c444f1d1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e6772e91-dbdf-44a5-93a0-a3235325ea1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1d5d77-6e07-49bf-b9a6-fefffa6d58f5",
        "cursor": {
          "ref": "3eeb0e1c-5090-4227-a138-fd083a6d8d5e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "80a17ac2-618d-48d6-9334-9299fc2c6fc0"
        },
        "item": {
          "id": "6d1d5d77-6e07-49bf-b9a6-fefffa6d58f5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "58c46f1d-f393-470b-8858-90ae2f6d418c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0dde62-6a93-4b76-83f3-7a784001dd0b",
        "cursor": {
          "ref": "671e36d2-7e28-44a4-a64f-4aa68e4efd4f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "239cb748-9257-4e2b-ab40-1b0cb48151ef"
        },
        "item": {
          "id": "2a0dde62-6a93-4b76-83f3-7a784001dd0b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6ff8c147-4331-4ef7-9dde-0e5160e3e42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec42bc5-6101-45eb-bf27-214cf5b8264f",
        "cursor": {
          "ref": "fa214e04-8a0f-4af5-bc27-8f3350f3aa00",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e4c10a8b-756c-49bb-b57e-fd5e62cabdaf"
        },
        "item": {
          "id": "8ec42bc5-6101-45eb-bf27-214cf5b8264f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "302ff9b8-3210-4a50-8246-3491eb9a70e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eff9bd4-4147-4206-a89d-286344deccd4",
        "cursor": {
          "ref": "2ad58e47-e5c5-4956-b916-a49ff337ca0a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a5014c29-fb0e-4051-a52a-f9d81e3a2924"
        },
        "item": {
          "id": "3eff9bd4-4147-4206-a89d-286344deccd4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "29c4eb0c-b4ae-431d-b05b-bf6177ff0d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958093ae-e0da-4dd7-84ef-35db0e66974a",
        "cursor": {
          "ref": "6006b814-e6fc-4085-b0d5-b173d68abf0e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bf6c1754-615a-4a11-bdbd-5d242763e1be"
        },
        "item": {
          "id": "958093ae-e0da-4dd7-84ef-35db0e66974a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8224a186-2153-4e91-9787-1b47a0afb1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d010a395-7756-4d72-be77-960b9ff53f14",
        "cursor": {
          "ref": "8fd83021-2210-485e-9d58-1273a7647b30",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "622fb128-9eb0-44a6-8f53-3d5a3f7cc965"
        },
        "item": {
          "id": "d010a395-7756-4d72-be77-960b9ff53f14",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2ea4a68e-1212-49b3-9643-4c7c144dbd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69bf2aa-4174-4632-875c-09d4d90328c7",
        "cursor": {
          "ref": "5ed133cc-aae1-4d6c-8663-46383c8a3dc9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b48a33f2-a058-4c29-9bf8-2232108928d0"
        },
        "item": {
          "id": "f69bf2aa-4174-4632-875c-09d4d90328c7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "452fb310-fc08-4f02-b437-6c67c6b3b494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ca03ac-d3ed-4e3c-aa63-8c71c84bf236",
        "cursor": {
          "ref": "7a48d27c-32c9-4aa8-a25f-cd3b173e16a5",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "50a899a9-1de2-4e75-8806-44db157f24f1"
        },
        "item": {
          "id": "87ca03ac-d3ed-4e3c-aa63-8c71c84bf236",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2793b3c8-b2d4-4eea-bf84-f6b21fdd9f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e67da4c-8c74-4df1-b619-460ad1dd9cac",
        "cursor": {
          "ref": "f0336658-3550-41f9-8e30-8be3315b697e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "13fd166e-e567-4bb7-b06b-acbfd040b00c"
        },
        "item": {
          "id": "4e67da4c-8c74-4df1-b619-460ad1dd9cac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6e4d1cb7-a862-4404-9b55-90fbc0e1a999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135ff265-aa49-42d0-9216-080a8e1a55c7",
        "cursor": {
          "ref": "7eec7d38-4491-4cc9-bfa3-16077a98cce2",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3c4567b7-f368-4b51-8349-92c98ab4ba3f"
        },
        "item": {
          "id": "135ff265-aa49-42d0-9216-080a8e1a55c7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "686b3ee6-e602-4bac-94a8-83db50e36e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bfcc77-0f6c-49aa-bffd-7d538665857b",
        "cursor": {
          "ref": "28cc4a90-39ed-4ce0-b04d-80c4685b5543",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4296626f-ca02-48ae-949c-699ab6f31952"
        },
        "item": {
          "id": "98bfcc77-0f6c-49aa-bffd-7d538665857b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bb26934b-b4f6-4d3c-a284-811bbe3236e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe88d41-7b53-4e74-8d48-d46eadbfd52c",
        "cursor": {
          "ref": "7285a56e-2ff3-4a73-8de3-d2eb91a024fb",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "106b094e-dda3-4748-ae3e-dadd0c8260c1"
        },
        "item": {
          "id": "0fe88d41-7b53-4e74-8d48-d46eadbfd52c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8ded3616-a30c-4e83-89fc-00fef3c44500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808f638a-e406-45c1-a566-ea1c03940e53",
        "cursor": {
          "ref": "8c2cf22e-be8c-416a-ad16-1cc1c04c9e4b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0ecd345b-1f41-4da0-a21b-e9b63bcadcdb"
        },
        "item": {
          "id": "808f638a-e406-45c1-a566-ea1c03940e53",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "796c698b-1edd-445d-b04d-3ce0af8ffc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937cce36-aaae-4d02-9908-0291804f7046",
        "cursor": {
          "ref": "eb38e452-e47f-492a-9d56-773370423d6a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "588d5aab-2d86-4147-9206-be412548a020"
        },
        "item": {
          "id": "937cce36-aaae-4d02-9908-0291804f7046",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "04ca9866-785c-4328-8bc8-90ef6b658823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e07131-450f-4a0d-9d29-96da27fa12e2",
        "cursor": {
          "ref": "7b1f6ced-989e-43ba-beb1-6d487c24a8b8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e5cd6ee1-9930-465e-adcc-b1b37e64bdf5"
        },
        "item": {
          "id": "44e07131-450f-4a0d-9d29-96da27fa12e2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f6f653c9-2e11-4f59-8440-d9680ecbca71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fc3128-a08b-4af3-bf83-97f372544da3",
        "cursor": {
          "ref": "1e547986-4148-44d6-852d-75cf9e8b0720",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b25a69b0-7a8d-4d5b-89e7-f5b9e83ff23d"
        },
        "item": {
          "id": "16fc3128-a08b-4af3-bf83-97f372544da3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8ce37f71-e54f-458c-80c0-0dd1c3045556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb80258d-4de5-46b2-9df0-c2529289867d",
        "cursor": {
          "ref": "ebbbec2a-c705-4196-99c9-ff2387ae12ba",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a2af9757-2d5e-479a-8b2e-93e439875015"
        },
        "item": {
          "id": "cb80258d-4de5-46b2-9df0-c2529289867d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "42279c5b-b4bd-4576-b401-0158dde0f732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6c9371-b0f4-4994-9548-aff38c9bc0a9",
        "cursor": {
          "ref": "f737ea53-34cd-46a2-b0e5-6f49a4f04288",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9fe0266a-3df6-48a8-8861-18969e37d826"
        },
        "item": {
          "id": "0b6c9371-b0f4-4994-9548-aff38c9bc0a9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a8708cfb-246d-4ad3-b86d-c8db0bbab10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3d2e4b-8a7e-4de1-89be-cb20c45b6588",
        "cursor": {
          "ref": "b13d2d5f-52b8-41ae-b7ed-137ba8c7d0f5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "04c10443-e963-4855-b7b5-4c6236c91687"
        },
        "item": {
          "id": "8d3d2e4b-8a7e-4de1-89be-cb20c45b6588",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1f4058bb-eae3-4e26-8c48-cdf27cc80e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f895cc-0ee8-4245-af23-7a62088d9cba",
        "cursor": {
          "ref": "f61fed55-cd22-4efd-afea-2c34f015f890",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f6abf67c-1354-4049-88ac-d854e30f7365"
        },
        "item": {
          "id": "44f895cc-0ee8-4245-af23-7a62088d9cba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0070763a-7dbb-45b0-9918-130e50a98349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e3b80b-165e-47fd-8175-0281f483a23c",
        "cursor": {
          "ref": "0ac70c11-bb55-4986-b6f4-b82586f8e9af",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e1e71ee1-2d6c-4b03-89b2-7d50295f1c48"
        },
        "item": {
          "id": "74e3b80b-165e-47fd-8175-0281f483a23c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "46783dde-dbb7-40fc-8e00-52d7d95f5bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca296d1-411e-4eea-b4ba-6d278c832d29",
        "cursor": {
          "ref": "8c9eeeb4-9567-4dec-b864-be29d7cdb04f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8a8e99e7-2135-46aa-9eda-8233d23ac6b8"
        },
        "item": {
          "id": "eca296d1-411e-4eea-b4ba-6d278c832d29",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1395898c-d918-451c-9541-3a30bcfa52f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb0992b-531c-4e0b-8e0e-9c4be9fe3de8",
        "cursor": {
          "ref": "449f68e1-0fb6-4cde-acd0-347481d72cdb",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0bea3d54-78f3-4fff-a234-e0a44a66ff17"
        },
        "item": {
          "id": "ffb0992b-531c-4e0b-8e0e-9c4be9fe3de8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11431223-c239-4454-aec8-924249a3e787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5663da-8669-462c-9d80-b1614ecdc383",
        "cursor": {
          "ref": "c0b2ac3e-4130-49b7-aa19-5adfca080cb0",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4bb627e7-6baf-4edd-ac48-90ae4ffbf5c0"
        },
        "item": {
          "id": "dc5663da-8669-462c-9d80-b1614ecdc383",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1d57a1fc-e603-45b3-b025-2ef583a420c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6114aae3-6b77-4d35-95a7-de52953670ec",
        "cursor": {
          "ref": "900bcffd-dee9-4240-9cc1-cbbd1ed9826d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "55a48dfa-9ee3-40b3-80c5-8f31ca902b29"
        },
        "item": {
          "id": "6114aae3-6b77-4d35-95a7-de52953670ec",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5d6d0c32-a9f8-4573-8c32-b46b9800021e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7f6e9d-ea07-4535-91e3-59704a929a8a",
        "cursor": {
          "ref": "42fc92a9-60a1-40de-9936-7e400400ec1a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "214fa617-a783-41d3-8fd5-bb08ed504b94"
        },
        "item": {
          "id": "2a7f6e9d-ea07-4535-91e3-59704a929a8a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f8ee534d-8ae6-4750-8d9f-b8009fd7188a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3641b09-0c01-4893-8b3a-165ca17790bf",
        "cursor": {
          "ref": "2392c40c-2268-40aa-86cf-993ab4d6dc56",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "559f93b3-e2aa-4fed-a336-e1327e4602e7"
        },
        "item": {
          "id": "e3641b09-0c01-4893-8b3a-165ca17790bf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "df4eca02-2309-43b1-9165-9a46b188c32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c680a433-6f8b-4b53-b3be-5a8f103bf0fc",
        "cursor": {
          "ref": "d7cdeb64-dfce-4608-bc0a-2ed9cb79d8dc",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "144abc2c-00b0-452d-a789-10da7e7d91e6"
        },
        "item": {
          "id": "c680a433-6f8b-4b53-b3be-5a8f103bf0fc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "069c72c3-8368-4588-a96a-5e0178e3919c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a73fc39-32bb-4b62-9dd8-8b1383fec72c",
        "cursor": {
          "ref": "f1f6c4e2-0181-439c-b033-f00051b1b667",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a612c01b-1b56-4874-8e44-6d0609a32ec9"
        },
        "item": {
          "id": "3a73fc39-32bb-4b62-9dd8-8b1383fec72c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3ae13e45-e5b0-430c-8e7f-3642e4ae968d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b16046c-3eb0-4bb7-89cd-887e04bb9fd7",
        "cursor": {
          "ref": "7aa8f536-3509-48bb-a44e-d3e24a0e1066",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0cd131e5-ff0b-40f6-b4d9-5f6d012caf65"
        },
        "item": {
          "id": "4b16046c-3eb0-4bb7-89cd-887e04bb9fd7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0b72b05c-65bf-4212-8ee6-f259381a3742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85362832-a88e-45f0-934a-40e92b4d4547",
        "cursor": {
          "ref": "4b9a73b1-46e5-4c21-a94a-4e9a4df4e21b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8bea8f1c-c5ef-43fc-bfd0-7ee77b4bd627"
        },
        "item": {
          "id": "85362832-a88e-45f0-934a-40e92b4d4547",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "687dfb80-c64f-402a-ab1c-4e6d6af52feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62055f9-69a0-40d0-9954-56bd81a4b60a",
        "cursor": {
          "ref": "68b5b302-9cd0-41bc-8936-7da9a2871de3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "379eefd6-2aaa-498f-96b7-c676b489f49a"
        },
        "item": {
          "id": "e62055f9-69a0-40d0-9954-56bd81a4b60a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a39fc1ed-27cd-4d39-a025-28b27fd1cd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0713d0-063a-4d71-bbcc-489367a868ba",
        "cursor": {
          "ref": "601aa8b1-50d5-47f0-a9df-71965d8578bf",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "edceb99f-233e-4aab-9767-6f59d4da82c1"
        },
        "item": {
          "id": "4e0713d0-063a-4d71-bbcc-489367a868ba",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ce815fdd-b68a-4084-a6d7-3e57c3759de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5646fcca-4f0c-4670-9191-64ffea852c85",
        "cursor": {
          "ref": "faf212a9-3b56-4dd5-a8ef-2674346b9d15",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8d64f736-d2e5-4397-a566-57614a31a4bb"
        },
        "item": {
          "id": "5646fcca-4f0c-4670-9191-64ffea852c85",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "419b0d27-8d2c-481b-8b3e-e335faef50dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968defd0-030d-4f5b-9bdf-567c9545fd79",
        "cursor": {
          "ref": "02fdcc9f-1949-4ca2-820b-f89eb3b12915",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8c7d2bb4-9941-40b6-bab7-2881fbc43c98"
        },
        "item": {
          "id": "968defd0-030d-4f5b-9bdf-567c9545fd79",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "60b0e812-8845-43d4-9fcd-6ce4a721f878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5212ac07-eb4b-4ca1-bb9a-6c152fc536af",
        "cursor": {
          "ref": "48f90d0c-bea3-4ce8-b5e2-2c423dd572dd",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ef739e51-7b14-48b0-966b-6ff7855d3a21"
        },
        "item": {
          "id": "5212ac07-eb4b-4ca1-bb9a-6c152fc536af",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0546917f-0e78-49ae-b20b-bb320bdd5008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516b081b-a962-41e3-9b8d-ac5492e8b15c",
        "cursor": {
          "ref": "4e488ebe-f756-469f-ac90-be6e9279c7e8",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "424448de-13f5-47c5-b56a-181c0dad8c7a"
        },
        "item": {
          "id": "516b081b-a962-41e3-9b8d-ac5492e8b15c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c0f2e0a9-ab47-4b6f-ab56-85b5c59f66fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87af5921-8a81-45ce-80fd-fd4a8ac880a6",
        "cursor": {
          "ref": "5f3157dd-7376-4d2b-8378-9240c6669bca",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e9d5d9c7-2ef6-4a8f-9340-4c03497584b8"
        },
        "item": {
          "id": "87af5921-8a81-45ce-80fd-fd4a8ac880a6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fb439bd2-4a57-4f69-b999-a48ca6c0ac09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a37c8a1-49ad-40cb-a4d5-1156b5d70860",
        "cursor": {
          "ref": "b8f4c590-44f2-4123-857d-7d07b5a2fd30",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "acb872d6-71f4-4b69-a0e1-8e48f13e41ac"
        },
        "item": {
          "id": "9a37c8a1-49ad-40cb-a4d5-1156b5d70860",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fc9c6d80-0bac-4ddd-a880-fbdfddaff55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b92d83-8e90-494a-8ba4-e2b4257661e5",
        "cursor": {
          "ref": "8e4e91ba-214a-4a23-b6ed-eb0f6df82cda",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fd6861b9-1968-417d-9e9f-6c158233c4bb"
        },
        "item": {
          "id": "50b92d83-8e90-494a-8ba4-e2b4257661e5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bd461761-3892-419d-9c36-22451307ab08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb618e9-69ef-4521-853b-a6b2311a9d62",
        "cursor": {
          "ref": "b9b00ed2-7b10-49db-b704-5e0fd2c7d070",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3778a71f-e798-4671-9cdd-dc4349072f60"
        },
        "item": {
          "id": "efb618e9-69ef-4521-853b-a6b2311a9d62",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bf3610b2-2c6d-4c87-b04f-47f11d1d5433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192d57fd-5ccd-4695-a1d5-7d485514ba0f",
        "cursor": {
          "ref": "62b22ac5-cbbf-40d4-a248-df34de3c120a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "827b0934-9508-4ade-a0fd-6c0766258145"
        },
        "item": {
          "id": "192d57fd-5ccd-4695-a1d5-7d485514ba0f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fe480870-7eb5-4617-b57d-ed87377fc82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20394778-3b8d-4e2d-b83d-2d747117fdf0",
        "cursor": {
          "ref": "4da7b431-3814-46e6-bf64-1a380f4ecd1b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a7f6bcdc-e591-4d6f-a5b4-41e33b2643a1"
        },
        "item": {
          "id": "20394778-3b8d-4e2d-b83d-2d747117fdf0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ba83ca46-163b-448e-ab28-c466da6cb10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc8eabb-7be3-4d50-9544-9dccfa35a216",
        "cursor": {
          "ref": "bdcc8b52-9ceb-4700-95e6-7ee401484d3f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "929386a7-3048-4a2e-b884-39b9a2df4fbe"
        },
        "item": {
          "id": "cdc8eabb-7be3-4d50-9544-9dccfa35a216",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e9fb7556-7b14-4841-8af0-8968011534e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7b862b-7a5d-4487-b78e-a2e6ac8147c9",
        "cursor": {
          "ref": "0a47db81-e26c-4073-8a2c-1214915e2cfc",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4641d5ad-49f3-48a6-89ae-d082a934cbda"
        },
        "item": {
          "id": "cd7b862b-7a5d-4487-b78e-a2e6ac8147c9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f53a64e7-0eea-432f-83ad-ffd1c6c9eefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575cb5df-4ba1-4441-acda-d993c7bfea5d",
        "cursor": {
          "ref": "7d951447-8498-4362-9d8d-0768aec13ae9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9dc25612-00dc-4325-99c5-5e75c308f35a"
        },
        "item": {
          "id": "575cb5df-4ba1-4441-acda-d993c7bfea5d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a72985f1-e471-4ce9-93e8-933834d85685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443b4c79-5a39-4f8d-8621-4396f9a5200d",
        "cursor": {
          "ref": "3ce36a8f-25bc-4beb-bf09-c37665aafbb3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2740f4ab-fe7a-41c9-bb75-ea6ae5ab30c7"
        },
        "item": {
          "id": "443b4c79-5a39-4f8d-8621-4396f9a5200d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "00ed8ccb-0c1d-49f5-8d10-5d84619cf8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c8ad52-7316-42a2-99ea-d530aa03b569",
        "cursor": {
          "ref": "0c64aa5f-7200-4d16-9e36-5cf86e2e0369",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2d02df57-6398-4cd2-a910-aeb4b7b3b177"
        },
        "item": {
          "id": "09c8ad52-7316-42a2-99ea-d530aa03b569",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2fc94566-7317-4b41-8d99-ef9e650d3528",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "054b730f-32e9-447f-b784-9cf026909302",
        "cursor": {
          "ref": "c661acf0-f3ef-4853-9e42-46ba6cdb3c08",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0ec30f85-e1e1-4502-99d3-a2d0e5043e27"
        },
        "item": {
          "id": "054b730f-32e9-447f-b784-9cf026909302",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a98299c5-3864-4a7b-b524-eb4cd09d36ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebadde5e-a071-4bb0-9dfd-88b4d0664854",
        "cursor": {
          "ref": "758ec19f-41cd-48d9-ae1b-04871ecab0f3",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a868c97a-cfe0-42f1-852c-6d9e249ae769"
        },
        "item": {
          "id": "ebadde5e-a071-4bb0-9dfd-88b4d0664854",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "035ed2f8-3b1d-4c6a-a5fe-4f7b8e64d4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dc75a0-381d-4901-b17c-9a0c4368c0a9",
        "cursor": {
          "ref": "210f7557-a990-4168-9ce8-6b665dae70f6",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e93fabb6-6def-43f7-a85d-8602dd50ccdc"
        },
        "item": {
          "id": "e3dc75a0-381d-4901-b17c-9a0c4368c0a9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4d3e57ca-f525-47c3-aff8-7a04938d4243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9898b64e-6eff-46d7-a73d-197d0b81cc4d",
        "cursor": {
          "ref": "055f6c62-51f8-44ca-a742-0961e0a915e6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "26f7d6ca-beef-4eb4-a539-322ce6e17093"
        },
        "item": {
          "id": "9898b64e-6eff-46d7-a73d-197d0b81cc4d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7ae7121d-5926-4162-a931-eec9bbbbb4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a2fbfa-c097-4873-80ac-05d44ae02009",
        "cursor": {
          "ref": "b4131af0-ea1f-4249-bb69-a24dbf9ce5f0",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fcc9505c-898e-4821-bcef-b549edc01bc1"
        },
        "item": {
          "id": "06a2fbfa-c097-4873-80ac-05d44ae02009",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1f91bec1-fc45-4fdb-a897-dc06c0747e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3105df03-97d3-41d9-8f67-82356d3b3e73",
        "cursor": {
          "ref": "be2a5479-2ba5-433a-9c87-c1ff1ab2859e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9e07aeb8-5af4-4cef-b122-9f698c309b9e"
        },
        "item": {
          "id": "3105df03-97d3-41d9-8f67-82356d3b3e73",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3a6b936a-ae72-4626-99f9-905260753b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f00ba2-e42c-4018-9c88-73e95bfb11f1",
        "cursor": {
          "ref": "88101c9c-87e2-4162-814d-a04bede0a031",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3dff270b-bb73-46b3-99ad-6b2b544e40ca"
        },
        "item": {
          "id": "28f00ba2-e42c-4018-9c88-73e95bfb11f1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4cff0225-256d-4bc8-984e-cad1596b3874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e370aa2-559d-4d2a-89b2-b0460c742dab",
        "cursor": {
          "ref": "718c85c5-d709-4d11-9e8e-2535e8b9700e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "87a0d66c-af1b-4e91-9db3-cb7e0175dc6e"
        },
        "item": {
          "id": "7e370aa2-559d-4d2a-89b2-b0460c742dab",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b7ec3e51-ee88-4f22-b152-e5b28ca3690d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce8834f-517c-4734-a9f8-0a56df3e4d6d",
        "cursor": {
          "ref": "54ae2f57-1348-4edf-adec-fe0ca512cd03",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6d15b230-948d-46f4-8128-260069c19bd5"
        },
        "item": {
          "id": "4ce8834f-517c-4734-a9f8-0a56df3e4d6d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8a0ccd63-f3f2-4139-8727-a5972770774c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6633cbd6-421a-403c-b95b-24135fdf0aa7",
        "cursor": {
          "ref": "5968e8b9-9912-4e49-9273-a483f0ab8502",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bcad9389-e671-4ff3-9ce1-254ff0472f8f"
        },
        "item": {
          "id": "6633cbd6-421a-403c-b95b-24135fdf0aa7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8d482f49-cc0e-40fd-9263-a6d1c48a15ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039542e3-b400-4d97-90cf-8e04c91a66bb",
        "cursor": {
          "ref": "b0e48bbf-e2f7-4016-a826-0d5a20214f24",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3f525c78-3d5d-4404-a419-12a5373fc685"
        },
        "item": {
          "id": "039542e3-b400-4d97-90cf-8e04c91a66bb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ad86354b-a29c-4141-87fc-041d9d1ed8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971f65c0-27b6-4a17-8535-734f2167240b",
        "cursor": {
          "ref": "b6d85a2a-73f1-45a5-b423-aeea41da9c32",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d567dec7-ebef-491a-9f32-d41f9c01a701"
        },
        "item": {
          "id": "971f65c0-27b6-4a17-8535-734f2167240b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "639ec4a1-d44e-4383-80e4-bec5c696f3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ce9ed5-b75a-4e89-9dbd-79f51ff57d17",
        "cursor": {
          "ref": "eb664d6b-952f-49c5-b0a9-f73c584fe4c6",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "61d0fa2e-9d10-4b19-812c-09930e512593"
        },
        "item": {
          "id": "e9ce9ed5-b75a-4e89-9dbd-79f51ff57d17",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6e65ee72-920d-48fb-b799-ed7b8ef0c03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508c744a-9960-4fc2-bbd7-99f1227d07b9",
        "cursor": {
          "ref": "5ea48cf5-314c-40eb-8b89-0677bfb080c8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a74769cb-4cad-4282-b6d4-e8cda987c2d9"
        },
        "item": {
          "id": "508c744a-9960-4fc2-bbd7-99f1227d07b9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "854e47cb-8837-41e3-b63b-a010bc7f0c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6b6f63-64a3-4c75-a1f3-191c70b7820c",
        "cursor": {
          "ref": "ad1f6622-a374-4ae4-b9c3-b85827ed1a53",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8c073ea6-d89a-425b-8c1d-ca24afb10ec9"
        },
        "item": {
          "id": "bf6b6f63-64a3-4c75-a1f3-191c70b7820c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f2dca5fe-a6ab-4b2e-9d8c-99ab638fa0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da06ef6-b2d8-44a7-8ce5-502afa0b8879",
        "cursor": {
          "ref": "748c83dc-94e6-4ce9-9f14-a0787894a5f4",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bdce195b-bc30-4d0d-b139-650e7897fd44"
        },
        "item": {
          "id": "9da06ef6-b2d8-44a7-8ce5-502afa0b8879",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "611aa56e-2c44-4b03-9a0e-8c1607c42a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c27ae6-1762-4a19-8995-a06c5ef1afe0",
        "cursor": {
          "ref": "7b60af0f-6ff4-4dd7-86b8-80fa06fba1a5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3e01a2df-7499-4ad6-a76e-f7135d2b29ee"
        },
        "item": {
          "id": "92c27ae6-1762-4a19-8995-a06c5ef1afe0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fdad4039-8843-4f1a-856b-e8186b5b032a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c48b0b-fadb-45e6-84ab-1b0ec6c188ca",
        "cursor": {
          "ref": "d6331200-9d2a-4227-9333-48861e85c721",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "be283757-b155-48d0-a49d-bd70a8a34ec5"
        },
        "item": {
          "id": "b2c48b0b-fadb-45e6-84ab-1b0ec6c188ca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "49a33880-7022-4e3f-b193-c129bd0af52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec33da6-7e86-4f7f-8222-8128bab4c364",
        "cursor": {
          "ref": "65a30374-a088-43d7-b606-c6eeb6b0bda9",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "62c125d6-f7e1-4315-83b4-42989256b9af"
        },
        "item": {
          "id": "8ec33da6-7e86-4f7f-8222-8128bab4c364",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4582f6d2-38af-404f-ac03-edd862d85748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e59dad-e7d1-447f-9b21-429388d17f20",
        "cursor": {
          "ref": "4a93f77c-e3ad-42e1-8605-ebdf453009cc",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d3cad038-f973-418a-a310-8329a3311d87"
        },
        "item": {
          "id": "49e59dad-e7d1-447f-9b21-429388d17f20",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "acc194ca-a4c3-41c6-9457-617c5342d11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a067033-bf51-4c1e-afc9-9fedbdee7389",
        "cursor": {
          "ref": "66efe10c-0814-45da-8939-c2c970548b7b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "de0fe94b-cbd4-4ffd-be80-807c72717350"
        },
        "item": {
          "id": "3a067033-bf51-4c1e-afc9-9fedbdee7389",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "957a631b-3932-443e-91c8-fcc8169f636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb1f4d4-5a52-4afe-bab8-e1f70ec27859",
        "cursor": {
          "ref": "60ffc6f5-e87a-4876-8191-8add95a1b282",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "016b4db2-28c9-4e4a-8b2d-89c56702af60"
        },
        "item": {
          "id": "bcb1f4d4-5a52-4afe-bab8-e1f70ec27859",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c9f9a9db-7481-45a6-9419-a0bbe9f0b2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f637e810-839b-49e0-9cad-7bb397a42396",
        "cursor": {
          "ref": "f07c4b89-1a19-4c14-bbff-aea2177f6659",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "27cf21f9-5a1f-488e-8853-fd9825854a07"
        },
        "item": {
          "id": "f637e810-839b-49e0-9cad-7bb397a42396",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e6742bd9-f8fd-4d6d-b172-934a00107e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fc0d29-0d0f-4181-8150-55f59779a20b",
        "cursor": {
          "ref": "652987f9-df24-4bdd-a396-abbd22a6976b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "784fa1bc-249e-40a3-842a-0fe98b05f0ab"
        },
        "item": {
          "id": "b7fc0d29-0d0f-4181-8150-55f59779a20b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e10edc51-fe94-4677-96d1-00c5eafd268f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfd2f81-dd59-4d4a-9e56-4ffacee166f6",
        "cursor": {
          "ref": "c670e4a0-e6da-4551-8e81-e3a4d1018583",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "abc363dd-7f40-4621-b7eb-0d2811a242ee"
        },
        "item": {
          "id": "ecfd2f81-dd59-4d4a-9e56-4ffacee166f6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5c4d91d5-6d15-4829-89c1-cc9b17ee317d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c26d528-2ab6-435c-a7eb-b77c04f8cdca",
        "cursor": {
          "ref": "f4f7cba2-8e8c-452f-8ace-ef475b3b953f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d9e6f276-296a-40fa-890e-6208bfc49963"
        },
        "item": {
          "id": "3c26d528-2ab6-435c-a7eb-b77c04f8cdca",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "236c8766-e4d4-4961-a049-7468bff0beda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177e5ac7-9d08-4ca3-9978-ab02dce30661",
        "cursor": {
          "ref": "6d4c2157-7038-4a89-a56e-9ab93230f407",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b66cc0a6-7e07-47fe-8c7d-e190d63ef5c1"
        },
        "item": {
          "id": "177e5ac7-9d08-4ca3-9978-ab02dce30661",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d45f2dee-1247-4f4f-9025-57805830656d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c258762-bba4-4e54-9a78-114858a2617a",
        "cursor": {
          "ref": "696bca33-c6f5-4cce-8548-b7ed9280aea7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3810f67c-ed33-48ac-917e-ede5103eba6f"
        },
        "item": {
          "id": "9c258762-bba4-4e54-9a78-114858a2617a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f552a385-9681-4bdf-8dc0-2c04e04e9f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dadaae-8577-490a-93f1-7bbf1ca3388d",
        "cursor": {
          "ref": "7abfb816-4ed4-41f3-85f2-2a5c8d78e4af",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e0ad40e4-9b63-4a56-9361-dc101aebe04b"
        },
        "item": {
          "id": "b6dadaae-8577-490a-93f1-7bbf1ca3388d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cc9e666c-bfb8-422d-98d0-f959c3b21c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dda40e-565f-4693-9413-db1bbe35d19d",
        "cursor": {
          "ref": "673b2acc-75e9-4b85-864f-cb6105ab1147",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e052c5d8-3cf5-4c00-b4c8-71f11b5691e7"
        },
        "item": {
          "id": "c9dda40e-565f-4693-9413-db1bbe35d19d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b75bb877-7323-41c8-bffc-129cc2343010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2b6797-fd22-4cf9-accd-2dbfa41c3c4f",
        "cursor": {
          "ref": "d5f8fdd4-88bb-469f-b446-b607e3a129f0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "64a27e5f-cad6-4255-a4a2-232f78e38d33"
        },
        "item": {
          "id": "6b2b6797-fd22-4cf9-accd-2dbfa41c3c4f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "df967c01-f2b3-4316-9aef-fc8ff27203aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc85964-0a9b-44c7-86b3-a7a172572fa6",
        "cursor": {
          "ref": "24c50386-5153-467d-baf4-060cff34b516",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5a97761a-0d28-4717-833a-71120745c5a9"
        },
        "item": {
          "id": "bbc85964-0a9b-44c7-86b3-a7a172572fa6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e0754eb9-df6f-47bc-90f2-d9714e59e056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2438fca-1aa9-4dd6-b73b-ed1b41c6e12a",
        "cursor": {
          "ref": "8374cb2e-36d2-4482-8d14-3d736b338032",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b15cfec9-6da1-4b6b-ae86-fd9b0158e263"
        },
        "item": {
          "id": "a2438fca-1aa9-4dd6-b73b-ed1b41c6e12a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6711e02a-6b6b-43a5-83f2-a99b38a3d3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0e64bb-e86a-4240-9ba5-ed641f029c81",
        "cursor": {
          "ref": "df37e408-838c-4919-9e5d-1348571da48f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bc0c4a11-638f-41a4-b64d-b40248c59b29"
        },
        "item": {
          "id": "fb0e64bb-e86a-4240-9ba5-ed641f029c81",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bd8fb1b6-9840-4dd3-934e-e15cd5fa170c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0c2f1b-19b2-4468-a369-9d966a26dc7c",
        "cursor": {
          "ref": "eb83e857-460c-412a-9c23-d4cdac8bc804",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "34e47e98-47e1-4eb2-aa84-f30dd2b5d192"
        },
        "item": {
          "id": "ff0c2f1b-19b2-4468-a369-9d966a26dc7c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "57072763-e406-4fe6-a13f-ef4a4b548d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ea1fac-3b07-4c41-b803-7a227b043bdd",
        "cursor": {
          "ref": "3f8a4f1e-d3b7-4700-8292-e59f173791fa",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "22e1a875-1300-4d16-94e0-8e77c1916a3b"
        },
        "item": {
          "id": "d1ea1fac-3b07-4c41-b803-7a227b043bdd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a7c9594e-b371-49a8-88a9-70bd982b7b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaa2e42-ce7e-49e4-8db0-685107bdf924",
        "cursor": {
          "ref": "eccfe826-ece8-4dc6-8f61-bd6d35fa9e6a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0fadf23d-2648-4f70-92de-33b6f3fba53b"
        },
        "item": {
          "id": "ccaa2e42-ce7e-49e4-8db0-685107bdf924",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "85131ddb-b744-4a4c-a0dd-5876ef0bd444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9759d055-b0b2-4b81-bc48-1a6fb95a6d77",
        "cursor": {
          "ref": "4b18dcf9-c047-4dca-8ff9-cddea1129e62",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7e04f3fd-070a-4a85-b630-1ed04772b616"
        },
        "item": {
          "id": "9759d055-b0b2-4b81-bc48-1a6fb95a6d77",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d3296a82-1669-42b5-bf22-c5e1ccb36c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be69466-c566-4d7d-bb6a-83226f67ea1a",
        "cursor": {
          "ref": "9097655d-b1df-440c-b794-af8320496a58",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d80a57be-e1f6-4fde-9132-2092c2f98102"
        },
        "item": {
          "id": "7be69466-c566-4d7d-bb6a-83226f67ea1a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fc4433e9-36bd-46af-b981-47a7ab953db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc93fe9-f6cb-4a25-a9fa-ec2c974d21e7",
        "cursor": {
          "ref": "f072eccf-e965-4c63-b210-3155043aad86",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "874d5218-7660-4d8a-8432-0ab13fe44309"
        },
        "item": {
          "id": "5bc93fe9-f6cb-4a25-a9fa-ec2c974d21e7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2343e891-4122-49ce-8c93-69c60ea33549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1066502e-28c6-4377-9e4a-a257c2149d5f",
        "cursor": {
          "ref": "b642da0e-45fb-4f28-ae9b-7b8c142e687d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ef5c9acf-9e1e-4059-a58c-300cda24b21b"
        },
        "item": {
          "id": "1066502e-28c6-4377-9e4a-a257c2149d5f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "43e23f0d-3466-4efd-86e3-09a4f8ab7d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b47144b-7b1c-4773-b0d6-e3ecc2ba888f",
        "cursor": {
          "ref": "caf32451-72ab-4517-a52e-ea12e61b479d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c00e8f09-6da8-4a7c-af4d-e9b920ea13cb"
        },
        "item": {
          "id": "8b47144b-7b1c-4773-b0d6-e3ecc2ba888f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6d74dfcc-8258-4c00-adc8-6c197a0fb6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edee2d04-5b54-487b-bfb3-44e0a048fa17",
        "cursor": {
          "ref": "411b4fa9-742b-4210-bb31-de59e0543750",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e6fda511-e2ea-4d3e-8f84-c9220fee562e"
        },
        "item": {
          "id": "edee2d04-5b54-487b-bfb3-44e0a048fa17",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9b15e133-db95-40bc-a0c0-1465391e705e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754eefb6-6617-4436-8193-f9667dc24928",
        "cursor": {
          "ref": "15aad2c0-343c-44e6-97b9-44af3cf801d8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fe18b162-f6da-4e33-a1b0-60e881c85505"
        },
        "item": {
          "id": "754eefb6-6617-4436-8193-f9667dc24928",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d20d95cb-c68b-4a07-aecd-1cb6d06b68b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9b7305-0e2e-4899-ac22-59cf9af35e03",
        "cursor": {
          "ref": "ffb67896-6745-4a97-a244-9baff67a69b2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "509a5690-4d52-4f90-a35a-5b34f81f137f"
        },
        "item": {
          "id": "4b9b7305-0e2e-4899-ac22-59cf9af35e03",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "02a2903b-ebb4-43d7-ae64-b624949e6692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b427b5-da2f-4a17-b7bf-188745a50c72",
        "cursor": {
          "ref": "61553568-4120-4077-83be-fe5fc1c6b522",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "63032136-2e62-4a18-a202-3c45d707b3e5"
        },
        "item": {
          "id": "c2b427b5-da2f-4a17-b7bf-188745a50c72",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "adee642d-cde3-47f9-96ca-87099abcf315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adc22df-6884-4bc7-b2cb-7463d95f3451",
        "cursor": {
          "ref": "5f09db66-3d2e-49d2-9641-21986edd29b4",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bbfb2ab0-5d40-4167-b24b-65ee80bd3835"
        },
        "item": {
          "id": "5adc22df-6884-4bc7-b2cb-7463d95f3451",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "97f92e7a-37f2-41c4-8a5d-316ac850382c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7e06ae-ed65-4f9d-8924-e392b4afe529",
        "cursor": {
          "ref": "3a013d4f-2759-4d39-ab30-75414eb1ff2f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c1fc8c2a-24fb-43e0-9a49-05c6bfd45ca6"
        },
        "item": {
          "id": "2c7e06ae-ed65-4f9d-8924-e392b4afe529",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "de009f88-b671-41c3-ac31-a93e0685b11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cf1e9a-9856-41d9-9e04-ddd15cd635e4",
        "cursor": {
          "ref": "c8b905ef-fd0e-4340-9df0-763fa88939ab",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "18ca852d-086f-477e-ac19-4d4415794702"
        },
        "item": {
          "id": "96cf1e9a-9856-41d9-9e04-ddd15cd635e4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fd35ad81-7740-4727-8776-567219cd13ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b7885a-85e0-4c6c-8f86-90e7133b8e5f",
        "cursor": {
          "ref": "bca04d28-5d9a-4769-b049-cf071de0c1af",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aa104ce2-9e0e-4de9-96e8-0b01fdc3865b"
        },
        "item": {
          "id": "41b7885a-85e0-4c6c-8f86-90e7133b8e5f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "219170d3-0f27-45dd-9cb4-bbe30e02135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91d85b8-7435-4c66-aa3b-97aae9222117",
        "cursor": {
          "ref": "1456159e-a5a2-491d-812b-ac5626d5351a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "31f5f470-65a4-4b0c-bc05-685ca7ec2dcd"
        },
        "item": {
          "id": "c91d85b8-7435-4c66-aa3b-97aae9222117",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1ded7310-9fc6-468c-86af-b00af24f9cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4179a212-01ea-4232-b924-530384f7e388",
        "cursor": {
          "ref": "0569e114-c71b-4ec7-b10d-12e45783a1b0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e49bc5df-9e91-4c7c-85dc-648bb5561c4b"
        },
        "item": {
          "id": "4179a212-01ea-4232-b924-530384f7e388",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e5c4d087-0e45-4b4f-a211-91a0c2ec7c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb83c50f-01f0-47dc-869d-e833bec76889",
        "cursor": {
          "ref": "14b640cd-8c24-42f9-8080-037b649dc32c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9eb4e466-f132-40eb-b8e2-9c98171a874e"
        },
        "item": {
          "id": "fb83c50f-01f0-47dc-869d-e833bec76889",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1962ae66-ddc7-44eb-bce9-67777023e0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db735015-8bc1-4721-9b82-fbaacb8fd135",
        "cursor": {
          "ref": "af8f7d82-15ce-44d7-b33a-d3fc9fe4af48",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ea1e9083-bdea-4ab0-b684-cede94bcb4cf"
        },
        "item": {
          "id": "db735015-8bc1-4721-9b82-fbaacb8fd135",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "16af8bfd-33dc-470a-aa34-fa1e9d06906b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d550b2-a3dd-47de-8d8c-33b673e1b97b",
        "cursor": {
          "ref": "f41ea554-6f19-48ac-8db0-84cdc1645bbd",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e6d517a6-7bf4-418e-9d2a-f2b8d8f81461"
        },
        "item": {
          "id": "49d550b2-a3dd-47de-8d8c-33b673e1b97b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5a186d5b-6e23-49c7-aa5a-dcbfa8e85d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10430929-b051-4ef7-a6eb-031e5c9ad6b5",
        "cursor": {
          "ref": "c7d9b522-3e92-46a5-9dd1-30fa470c735d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a6d6f65d-def9-404d-a09d-fe559eaeb906"
        },
        "item": {
          "id": "10430929-b051-4ef7-a6eb-031e5c9ad6b5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5f7a2119-f4da-42c1-bf40-b10620edb72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bfab02-26ff-4ae1-9b2b-7438a70cc2c4",
        "cursor": {
          "ref": "3c69be15-7464-4f41-9bbe-5f95596b54b8",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "aef05143-b725-444f-b36c-1864a16c6077"
        },
        "item": {
          "id": "d8bfab02-26ff-4ae1-9b2b-7438a70cc2c4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "70366020-3495-4999-8acd-ab472c07664f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ea89d8-451f-4ac8-807f-eda980b9206a",
        "cursor": {
          "ref": "def0f269-4f9c-4fc3-bb03-2402db13f386",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2d57ba86-71a5-4207-8511-903213a58175"
        },
        "item": {
          "id": "93ea89d8-451f-4ac8-807f-eda980b9206a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b80674ca-ee5d-4041-aa31-42d9cf8bf07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32ca581-7520-4622-8ff8-61c80addf28e",
        "cursor": {
          "ref": "ad968d5a-c507-4152-9ef2-3d94a0bb677e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d8517b1c-c6e1-4ca1-8147-6540fca25b9b"
        },
        "item": {
          "id": "b32ca581-7520-4622-8ff8-61c80addf28e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "52b85034-8d74-437b-80b0-cb0178376655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa7d664-991d-48b7-8607-7feb8de26efb",
        "cursor": {
          "ref": "bb01bf23-5530-4915-b09f-8d2b4d1d40be",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "12d8cf95-b7a1-4115-8b41-c417603061e1"
        },
        "item": {
          "id": "0fa7d664-991d-48b7-8607-7feb8de26efb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ae96bc7b-6334-4794-813c-252d88ae7063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f070cb-4996-413b-afba-95c859e4ce0a",
        "cursor": {
          "ref": "9770379a-3d65-4e36-850f-270409fcdeb6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "33685380-067b-4fcb-b1f4-da07270af19e"
        },
        "item": {
          "id": "80f070cb-4996-413b-afba-95c859e4ce0a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ca203701-1102-4875-aff8-050c58b6bb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a158ef0-bb93-48ed-8d89-f490a664a42f",
        "cursor": {
          "ref": "41feadb6-f4f1-454c-a750-3755162a6ae9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a753b984-b145-40ff-8039-8a979eee4dab"
        },
        "item": {
          "id": "7a158ef0-bb93-48ed-8d89-f490a664a42f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ab85d4b3-6907-4649-8019-d0e9a45a8d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa55e40-a4fb-4942-8c0d-364bdc302198",
        "cursor": {
          "ref": "41604d66-5d4c-4fcb-ae0d-e0340ef0c78b",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6b4552cf-5a6a-47be-a9ef-442311eb2df7"
        },
        "item": {
          "id": "faa55e40-a4fb-4942-8c0d-364bdc302198",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f0424d33-6d3c-4674-ab97-ef4077f8e01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e3eb35-cf28-4bcb-b045-f72509b4e9a5",
        "cursor": {
          "ref": "db1db8e9-0466-4931-97ab-a664abc6f5b3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1c27958e-e745-4d9e-aba6-b50cd2fe96bb"
        },
        "item": {
          "id": "73e3eb35-cf28-4bcb-b045-f72509b4e9a5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4e868b47-1277-45a5-a6c5-c0f00eb19bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce4345c-f285-4374-a4fc-27167f9fe93c",
        "cursor": {
          "ref": "9cfd35f9-6eb2-42d9-a12a-7cd9c591b8ec",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f300bd4c-9d66-49be-b02e-1647105727ed"
        },
        "item": {
          "id": "0ce4345c-f285-4374-a4fc-27167f9fe93c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2c57cd34-15a0-4ea2-b863-3400d9215707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aac49c0-765f-4b7d-9364-a1935918d9f4",
        "cursor": {
          "ref": "e51f54b9-961a-49e0-882e-6a2a4c526998",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e90a7ca2-d702-4e65-97f0-cfeaf59bb9d0"
        },
        "item": {
          "id": "7aac49c0-765f-4b7d-9364-a1935918d9f4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dfa26887-239f-4bc8-a5a0-582fb303642c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c61ba8-e3b7-4781-b769-a31656bf9067",
        "cursor": {
          "ref": "8338d022-6d6a-4892-b8af-a2ad42d379b4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "95a974d0-79c4-4941-bc8b-54f91c989050"
        },
        "item": {
          "id": "18c61ba8-e3b7-4781-b769-a31656bf9067",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7f7d1303-20d3-44e6-83d3-b7014cd4adb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dc4155-0159-4056-8ccc-2e459557f6f5",
        "cursor": {
          "ref": "83e7ca41-bc09-40dd-b16e-dd2611751796",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "38dd79b8-645d-4377-bad5-b1b31fae25fe"
        },
        "item": {
          "id": "40dc4155-0159-4056-8ccc-2e459557f6f5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f45bff7a-8b7a-4c95-8edc-cfb3e870ee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc365816-acaa-49cf-a224-aa79f6b2c034",
        "cursor": {
          "ref": "db2ab26b-6e63-42c7-9b57-5ea844119405",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "679a60f2-7a41-4386-9c88-862818d1d6ce"
        },
        "item": {
          "id": "cc365816-acaa-49cf-a224-aa79f6b2c034",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4191268f-ddfd-46d9-b152-c40692b2b6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b209a8a-e718-43e9-a56d-82ded05bcdeb",
        "cursor": {
          "ref": "363885a0-3ccf-449e-85ac-f882867a90a3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ec9c87f5-6b85-4411-b674-2d76eee5460b"
        },
        "item": {
          "id": "9b209a8a-e718-43e9-a56d-82ded05bcdeb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8aad2968-09e0-4c32-a9e4-5c49e9caa67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a43eaf-395f-47b2-a462-561eda1c45ce",
        "cursor": {
          "ref": "a2b9706e-5159-4357-be76-42999a8be86d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6bb6f14a-d575-4f40-9a64-91dc900a46f7"
        },
        "item": {
          "id": "c6a43eaf-395f-47b2-a462-561eda1c45ce",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "73d4504e-8dad-4654-988c-ae262c6ae8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a553457d-a0c8-4807-bad7-295a2c86ce02",
        "cursor": {
          "ref": "50fd93d1-c252-41a3-86b3-cbe5ac17c3bd",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8b006765-b636-4cb7-bc8a-583019b659c7"
        },
        "item": {
          "id": "a553457d-a0c8-4807-bad7-295a2c86ce02",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1c501b7d-8801-44e4-b95e-74fe923e995d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e4302a-18ed-4728-b109-f73108140f0a",
        "cursor": {
          "ref": "a9225c87-42da-4529-892f-6408a0edff29",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e38be400-9e80-4d72-99e6-dd371bd6e3ec"
        },
        "item": {
          "id": "48e4302a-18ed-4728-b109-f73108140f0a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7e7dd114-d2f4-478f-bdd2-d74876991783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4782b7-2462-46bb-8ecd-1858ab26c7fd",
        "cursor": {
          "ref": "ca25b53d-86fc-4697-8b32-855ac9536132",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "49cfcae2-8f72-4fe9-a479-6578c441d4a9"
        },
        "item": {
          "id": "9b4782b7-2462-46bb-8ecd-1858ab26c7fd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4899ebc5-7c4b-4d05-adf6-3177c2d8bf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2c1216-017d-48f2-8735-c9aba466511f",
        "cursor": {
          "ref": "f86bb635-c104-4aa4-bb16-1d1db9bc7437",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bf564755-c209-43c4-9293-28974a18161a"
        },
        "item": {
          "id": "ce2c1216-017d-48f2-8735-c9aba466511f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7082fb1e-7acf-493e-bb84-d34ca4efc59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2e8295-73f3-442c-bcbb-a5526a92c31e",
        "cursor": {
          "ref": "b40a8dcd-19f2-42c8-8049-c471ef3d7e6d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b66d921d-d943-4ad0-80d6-0cb29188b7eb"
        },
        "item": {
          "id": "1a2e8295-73f3-442c-bcbb-a5526a92c31e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b957f59b-c66f-48f8-a2d2-814e5aeccfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90e3492-a74b-4d13-ae42-0da9adb3faec",
        "cursor": {
          "ref": "c4e82ed8-6621-4477-b3e7-bfb9abe33a28",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9396159e-a820-4628-8aae-5dd903ea1e85"
        },
        "item": {
          "id": "f90e3492-a74b-4d13-ae42-0da9adb3faec",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c92f06ee-685a-4b71-92b8-5476aa463f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d67fe61-1608-4312-b365-6dc578c02042",
        "cursor": {
          "ref": "71f14f76-580a-417c-92cf-d012fe2340c0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "95174459-97e6-448d-be29-f03fd854f114"
        },
        "item": {
          "id": "5d67fe61-1608-4312-b365-6dc578c02042",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dc5ffce6-0df9-4af4-8c11-6054d001353d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eede8f65-eb02-44ee-85be-9ed02c5d7931",
        "cursor": {
          "ref": "d280bd13-ae3f-477b-bf87-27aa5359f93c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c0ed5aae-72d6-48c6-8968-4e6f4a2ad2f8"
        },
        "item": {
          "id": "eede8f65-eb02-44ee-85be-9ed02c5d7931",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a78ded0a-fe25-46e3-8522-bc336ee69ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50229bd-72c9-4e2c-857a-d8e5f1046f3d",
        "cursor": {
          "ref": "987eb861-79da-47f9-860f-b66226960fe6",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a7f1a0d0-6208-4302-957d-ddc9d734423a"
        },
        "item": {
          "id": "b50229bd-72c9-4e2c-857a-d8e5f1046f3d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "38e4fa9b-bd4b-481b-bfe6-9456ede0e7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce018f5-6ddb-4fa4-904b-6e404d06d4bc",
        "cursor": {
          "ref": "11dd7abc-9658-405c-a9a7-f660bd8bff15",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "57f2fe36-701a-489e-8881-d884ce7c6e0e"
        },
        "item": {
          "id": "4ce018f5-6ddb-4fa4-904b-6e404d06d4bc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b39d3e6d-4c06-4862-9abe-a1a86968f60e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8f3212-6d8a-432c-aaef-c7ab0b1c26f9",
        "cursor": {
          "ref": "01abb8a2-fbb5-4feb-8e38-271f22da392d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "937656d5-a453-4f29-b597-08ab64a772f0"
        },
        "item": {
          "id": "0d8f3212-6d8a-432c-aaef-c7ab0b1c26f9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "36f17e54-fb13-4c29-8102-9055d0f87ee7",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1036348-cb1c-4511-93d6-14081749313e",
        "cursor": {
          "ref": "1c7ee9d2-3cf5-4b10-82c4-4cada1d909df",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "297a88ea-bad9-48ca-8ec9-0b044a84bbbd"
        },
        "item": {
          "id": "b1036348-cb1c-4511-93d6-14081749313e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "55cc1dce-8033-4a5b-a1ba-c0c04a3d07b7",
          "status": "OK",
          "code": 200,
          "responseTime": 3716,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869970b-06e9-4a80-887c-d9b0518a0b22",
        "cursor": {
          "ref": "10124123-4179-41c8-8728-7acf1dccc19a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "204ec54c-7eed-4880-9038-40a6c07fe811"
        },
        "item": {
          "id": "c869970b-06e9-4a80-887c-d9b0518a0b22",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "23b3f96f-f2ae-4b6f-9995-1249525fc393",
          "status": "OK",
          "code": 200,
          "responseTime": 4238,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4624947f-411a-49f4-888e-31ba700ff0fd",
        "cursor": {
          "ref": "0906de4c-9b16-43cd-b4fc-3a82598b0adb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1e50fcd6-74bf-45ad-9ed7-ee6373559849"
        },
        "item": {
          "id": "4624947f-411a-49f4-888e-31ba700ff0fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2f6e5c4a-3802-4726-af16-254062474304",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4624947f-411a-49f4-888e-31ba700ff0fd",
        "cursor": {
          "ref": "0906de4c-9b16-43cd-b4fc-3a82598b0adb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1e50fcd6-74bf-45ad-9ed7-ee6373559849"
        },
        "item": {
          "id": "4624947f-411a-49f4-888e-31ba700ff0fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2f6e5c4a-3802-4726-af16-254062474304",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da65130-ad13-4b27-adfc-383eea0788d7",
        "cursor": {
          "ref": "1f6fb5c3-3b20-457a-8086-2c5818164103",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6c1d7aa3-7e78-480a-aac9-79344399019d"
        },
        "item": {
          "id": "4da65130-ad13-4b27-adfc-383eea0788d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a366f598-a80b-41aa-a092-5859e4459a14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38121c4c-6543-46c0-9cb6-bab86f085096",
        "cursor": {
          "ref": "e00cd073-6d3b-4ce5-a987-802453144ea9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ea5f429d-2415-4522-a788-3c31ded31e33"
        },
        "item": {
          "id": "38121c4c-6543-46c0-9cb6-bab86f085096",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0be93672-9b8c-4cd8-86bc-9fdf41280911",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}