{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c9dbb808-02f2-41a4-a612-8caff640803f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d3b0e24d-aa53-4548-abef-4ce08e1a6d50",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36920068-58d3-42aa-98b1-a0337a5c5881",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c8f6f29f-0525-432c-b2a3-7c84f4f6c56d"
                }
              }
            ]
          },
          {
            "id": "4e2b6287-facc-4822-b430-1dc65bb02f3f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ead657f1-4d78-41a3-b23e-dd1e279987a5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ca0bec31-317e-47d4-907a-daa69eb6a55a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "84df787c-a433-48b7-8803-be30e6d3694d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a5162647-f800-4cc4-8167-6655f9cc53ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4834a1c-4570-4b42-9345-3f1496c47237",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "471cc217-02b0-40ce-a48a-fe8dcbe83e39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1abe1f59-d11e-4872-9218-fbd4e450062d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7667f9b-9a85-4bfe-972d-32b1b879ec8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45c9fea3-2b48-4016-9e6b-c42588046ff5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e65805a-5a01-4b2b-90ec-9d29de3f6310",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44bb12ba-60db-40c7-b505-2e8ac9e7009b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "737e93d0-df5a-46fb-8156-d597fc1db0f6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "057fdbcf-4190-4ed2-a8d8-9f90d14d98de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f418f82f-661a-48a6-a42b-0dc2791dff15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8831c6b3-51e9-4572-ade9-10f0c03330a1"
            }
          }
        ]
      },
      {
        "id": "3ffb7f2a-1a3b-4ad2-8433-b733b744c1da",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9969d341-7383-42d3-a965-03ecb8f638b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d3d589e-f8d1-484b-acbc-1b5f4611a319",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf977e41-e3c4-4211-b27c-8ee2c39981ba",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c70ae37-7dc6-44e8-8601-d55022acf27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f128f0a-d8bd-4bdc-a1df-04fd8f54f489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfeac26-89af-42fe-89df-9ba8889cb346",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de5c465-8d72-4788-83c5-dbdcf73f8297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94487277-805d-42d6-b3a7-057c19c35f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19d48f0-abb6-4805-98da-4f03f1424712",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52954aee-795c-45fb-94c1-0370f8636a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8900b6e1-4a78-4168-a52f-f62099a706af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62f6427f-99ae-413a-98af-6553a9e6689a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0974576-6d1e-40b7-b197-997dafc3bc12",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c4a37e-6a1c-4f2a-9717-b868d6cb039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cc2addf-bf40-479a-ad66-ea5eb99b37fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc959a-675c-4720-ba6f-3af0e8c7456a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a954368-0530-4d4a-b77c-7915fe2c1e6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "767dd8b5-fd6f-4892-9520-6c97094e2704",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01248250-091c-4520-bf17-1b4881aede76",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fd4c5bc-116f-4a7b-add0-0c9560dc2f40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5bdb42fd-4a58-4da5-8120-5d7649aa62b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f5f1cb6-d9c6-448e-8aa5-b87581473846",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "17459815-8ec6-44cf-8cc6-166cc305392e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9c9597b-784f-4219-9a66-bcc9b5ebe3a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f65b09a4-9ca0-41e7-a4b9-de85ad34182d"
            }
          }
        ]
      },
      {
        "id": "d1c6f59b-1f15-45e5-952f-89932dcd67d2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2e9fb2d1-d718-4695-8e93-50e752e3255e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79dff020-e865-47dc-905b-2972393c823a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e5f4348b-1e0f-48f5-a904-7392b73c0391",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac6cc95-576a-4582-a970-1fec71c5cf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c74d4c-2aef-45a6-96ff-cbefbedff026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0b4894-70ba-4b84-95a3-769a79c30f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06277fce-8580-4d20-a73c-428150de4571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477d7b49-637c-47c4-be0e-7ce44d7eb976",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498b6bc4-7cd2-4eca-8051-d560c93f5961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56169426-2de3-4644-a89e-38a7b22ac0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3fba63-45c0-4717-b735-f629ceb45ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ed6d867-6910-4957-a6b3-285704f0fadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce9b9ae-1057-46cb-be54-0c8e4e86d16d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58c22d5-9e51-438c-9077-fbe3c0ea1ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402cef42-e574-4621-8767-b705952c5c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05ae4da-30d1-467b-8381-0d9d1ff6930e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fe78921-d822-40f7-ac42-e836f88f0cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a61fb40-839a-4f08-a267-fc9a3c8e7379",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f4719a-2508-4e04-bd9d-50c8261c2d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cad996-1b17-417d-a734-c61d408a599f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afbb835-b0d8-4011-9616-e9f998b15e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4a44cde-705a-42ef-a906-2010c242beef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73204df3-d0d0-496b-a0f6-60155fa96c68",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90de3cc8-28b0-4df6-9cdc-814eb4fe7c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22056d4d-759f-4f03-a76e-a87436a3f686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f47a86-2f61-40f5-9edd-a16589e452da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83b51bd5-9f92-4015-9342-3016df935029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a157ef98-c9a1-407e-9bbb-76e0f59f0434",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fd3045-3c25-465b-bcf1-c40a8840ac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed11a564-f2da-4dfb-a312-f598eb4e5766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dbec52-6eae-4f5e-86d7-e3f9e0b5d294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d403c92-e0fe-41f1-a692-0a0c73122143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a16a6a-08f5-4609-a015-454c1cdf7e08",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a47759-6341-456f-9739-8ba2a019be5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259a1d95-fe01-4583-a2b0-4232647f5d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cfbb62-913d-4679-884b-e7bc9509563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36e0d528-1328-441e-8526-055e1361d5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eab8c6-b37e-4625-a486-eb8c3a647e1e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d38c798-20dc-44cf-8449-c8a41cba10de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d378f56-d3c3-4e10-ab9b-ebc8dd411b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5378f5-4d5f-4d44-bffa-398963aff8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7528af41-e6c4-43cf-a925-7f7fa7ef9648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2f05f9-3afe-42a3-8d3c-f4430c586d3a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03550239-87e9-4e93-9944-14a50c5c30c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34879d6d-f084-479a-b988-13b61cd0e390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc946b8-8a6f-48d0-8ca3-782b279441af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1f94945-9171-4c92-b99a-fb6f10a5a46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76729e39-8ad7-44ce-9be9-d7c1ff42ed97",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6e9f33-6242-495a-b6e2-64558775acef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e671ef-cdce-49a9-9248-a950a6d6b3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba746063-3e9a-41bd-af6e-0a392af1f8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20cafcb4-9f11-444a-94dc-c0d8838ed216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64606d4-46c1-4b3f-b120-8cac9c88e733",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfa424c-e0dc-4599-8b55-4b1fd5a45b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6015520f-4a61-4e72-a0ca-954b3bdc3a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b72c4f3-d42c-40b8-ba13-9bdf8caea4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d93a347-5971-4942-b88f-3e84beb7e4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d0d627-bd71-4bcf-83e3-634bf3698ed1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21ef133-f641-4627-9588-9dc5f6ec37ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7516d0-9017-4818-8160-759bc56f1da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8495abf-f4de-4a20-8ed6-8c117fac5ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "436b21c5-a160-459e-86e0-9e6cf674c246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2997f8fd-6317-40b3-b5f8-cabe96e50318",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8405ac9e-6998-4150-b281-f42baf8a91fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb91b11-3306-4793-aa6e-b2edffd068b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a46ea4a-aaef-49a4-a50e-9aa9b9569b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f2fc1b6-8785-4d6c-9bdc-a07bb91e8502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49422f3-7a04-4a50-b2b6-201ec5a675c6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95879b45-ce30-4852-8c9f-314cd530966f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aea1bc5-b96b-478f-9be9-d5858d195baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00437af-d733-4cf2-9f96-3139e6e4a488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1504565b-004b-4bfd-ae50-1f1cae909952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff470f2e-58e8-458e-ab32-27ddd3282766",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a36b3f-d9d7-40b6-be60-97754ad09a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a78134-1765-46ca-9a8a-88e4794eee44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4b09c8-994a-43b8-addd-a3e72910c4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb15a7f3-6619-4f9c-bf29-a5c347432ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8ee2d0-58fc-469e-a832-c9426fa7895a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9812ffc-59a9-43fa-8c49-59a5dc5d36b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d9996a-a72a-4d27-971e-e16d2d624c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174586d2-fdad-4ac6-93c3-e6806e9257fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1470137-6eb8-443a-9960-c4af688e25c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b778e5-fee2-4a19-893e-4b75c2185247",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de80722f-bc16-4e40-84b7-491329c9505b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470976c7-a9ea-45bb-9b88-242cb9fb5c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ec8e1d-6408-43f7-8dfe-492f7efc1c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e96e9d7a-ab84-45e5-a306-c797c2797f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72abfc3-ddd5-4df3-8f9c-6c42495ac5d7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149e2304-f91b-4685-8375-0c84ad6ccf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e653c805-51b3-45de-afbf-34a1c844bf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c58fd0-3b50-4f3d-9d49-ea9cabbaf858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "75639a54-314c-491c-9903-b348e42c0cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcce88c-a0ed-4a1c-94e1-cd4f1a258333",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6e98a6-caac-48e2-bcc1-d8da71381f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527b6a2e-6395-463a-a5d6-573ff4a8e175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c17d78-b00c-4262-8ff6-12d96ac61850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d3b8c9-9ca5-4d3a-8519-0dc1c2781575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6807b5b2-2fed-4488-85bb-faed723882cc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d407e6-54a7-433f-8940-39a24cec46a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbea957-d840-4baa-a1e4-14f0ffa6e805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875939f5-54a4-43f1-8138-1ac7a242c980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56e49ca7-74d0-4dc7-8df9-5a45de5c9339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab03200b-7c52-44e9-98cf-a85079cb07a4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915435cd-5241-4854-bf17-eade5475fac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f813d7c1-f478-4144-bbcb-de6ee12f99ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfab04f-d3fe-4f90-bb59-1d970b1e684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95d30483-ebe2-47b6-9bd0-c4996ea6b14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf71050-5cc7-4316-91cb-09c1eaf70ac8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0249209d-c345-4814-b2f7-6d86d111b3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e246188-6a03-4ab9-b913-ab7c443390ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2338ae-c8cc-4ba3-b794-3102f81c6480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e253f04-9324-42fc-be3f-a0a8d08de45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63411dd3-6198-4f8b-9e50-0fb0133151fe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0897217b-6e11-4c81-b7d9-ca830af8cb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5aca082-23f9-41ab-8e5c-7e18260a91f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b7ae3a-bd0c-495c-8bb0-14979e88d7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6503cf79-49f1-444b-abe8-296b1bc0dcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd43b124-3fba-479e-9a79-8a1dda432181",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c8a868-4239-4675-81f7-22c89cbd6a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f534223-cba8-4508-b36d-2087f0953be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3547fd01-a43f-4893-9794-58d09858216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3f16bb-72c2-4dfc-9ada-ef20f6078924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4167816d-c5cf-46ba-ba59-68e18d109c0a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d9d1d4-3cea-4c4f-9d2f-71972e9ddaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ae93d1-0b30-465f-bd94-433607f7c7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8bcddb-3197-4ae7-b16b-cb54f38f2a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64cedadf-da25-439a-856f-99a1585e0afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66fec92-0eb5-4530-a7b4-7c184e7ebead",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fa3b83-6730-4bc3-8ea6-ecc7d10f1478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a3181c-2228-4279-b61d-7d1a05ad32d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb958716-cc14-4853-aeaf-d3ea17f45cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc3fb00-d7ad-4ca9-a5c4-c637046ea771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db20f571-7990-48eb-a5ef-085dfe9a1665",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2f33f5-1417-4d34-8e5f-a64ecbe75550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9b629b-97f0-4986-98b5-e72748e2bbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6088b6f-7402-4d8f-9a38-84e0b53e4cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abcae9ed-89bb-4880-adef-5d00826f8bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905e5465-2a26-4ced-80cb-3b874b1d6421",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e515298-fb75-4a11-a0ed-18d4b3a2852d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8938fef4-d64e-4794-bc8d-b70a3e0873c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69003c8d-4f43-4449-a060-a0e0c33547a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d67739a8-164b-4ea5-ad94-e919f6d84d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c402b2-22fb-4874-88ee-30a9a130721e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c47fd0-237a-48c3-b4c0-58a17ec7d726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e73c4d-cd48-47e7-9184-e2aec9c0f72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3118616-d229-4350-9a1f-839246d3f785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90af1bcb-696b-43de-8fd8-909ac2075dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9f0785-e7b1-4918-a631-78bd1122fe00",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2dd0a6-c2ad-456e-a922-6ffe954dcc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b071fa-fc08-4df0-880f-be07e0f6d461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e5304f-0eb8-47a5-8e9c-289659d3bb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4263d4c1-ce59-4756-9a54-512ee9fdf145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22d5264-9075-4403-a88d-c1d81b1df1b9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51249e4-6042-4fcc-ae8b-087238470b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2f0b0a-fe61-4121-9b5c-82122c4f04b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2451204a-8fb2-4ce8-a992-3710ed021223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f46474fc-de93-44d6-bbe0-0383198d1c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726818b1-1e95-4b61-a4f6-8d1830a3ad3a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fe1fd9-9960-4b35-b683-4131c252feec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5b9cfa-9ff4-4bbd-a78c-0a3508f75097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b458989-2c85-4611-994d-57ca214cd7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8550f13-1a51-4e69-ab28-be3baa22aff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38b481f-adfc-4ffb-afb3-348bc4fdbc74",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8388712-2fb4-4eef-921f-52f72ae19508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a77eacf-29c8-40f7-b9e7-38ff8ff3b34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0273db-ef8b-468f-a475-ab801a5470af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "055f5a79-f861-48e1-a7fe-63d45e9cc7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49807cf0-80e7-4257-bf35-1a2ccbf31e8f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9796d9-d1d1-4190-a25b-3c7cfae73819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f867438-35d0-4312-a212-5449f6f059cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c704d7-797e-427a-b48c-aeb0febb2f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7fd640-a978-4182-85f5-dcaef3edb9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1630d9b-2956-435b-9815-53d2834ae9a8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827aa1f2-db23-4297-b315-3b7c66c4a9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02c50c7-80d7-4df4-b45c-2194264f394c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1936fa-6ed2-477d-8b62-cdb20d8dbe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "54438251-a828-4810-b0a0-1ccaa59bbc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1a5db1-4a9e-426b-91d0-8c791464e40d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d378e7be-e375-498d-86da-ed980804b44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0276924a-e836-4d4c-82ad-329037df5063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538624ec-c13a-4e72-99d9-99ab4b631298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33b93ac8-8617-4a71-9198-0e0b2913508f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adadb01-a66c-4f04-a1fb-c7897c262d14",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecf1137-ff18-43c8-8120-564e8a2735b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4ea831-dfc9-4f89-a983-a0f4ef9779b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a49c7b-debd-48fc-a891-754756f73165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f8ce58-7b75-4671-91b5-791497840130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd736cb-2ab3-4e03-91a7-10f20fb108fb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d8cdf5-fbfa-40d3-a2ef-9fd7b56b3249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7431537d-ef52-44d6-868d-2d764f876b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9794086-9e66-4c45-a824-3348dde3d9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4974dd-3503-4835-b215-05c0c275f240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1c173-c1ad-4b95-a255-473471374046",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f3eee8-1ecd-4575-a824-abdf86ca8858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc66cd6-a1f6-4aef-8593-915196bffaa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df7c58a-0f08-4640-be36-c19ab960b413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cab6d4d0-f78c-4ea5-a6a1-01dc5dec4516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79d6afb-0012-41f9-bf22-7f83c24bfa5e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957f44f3-fdf1-4bb8-87cd-74ddba672e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b023c291-d83c-4698-a7b9-61e512d6f85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e82d15-a699-49a2-bf2c-20c04b965d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8657c0-f8fc-4bc4-93ee-e15192e4e6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25d6bab-fed5-4116-9f2b-68a15ff1b2cd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10261c5-7b25-47ba-b3a4-b9a4201fbd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b04d5d9-1df8-4610-a210-9a59aec77399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e08061-b5a2-4c6d-8a53-81deaa8836b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca779fd-ea10-4e3e-a206-0c3f82afb8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a880cc-ca83-49ee-8a22-612dc0762ebf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d90d2e-45d6-436d-a897-011c2f5659ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cd35aa-15e8-482d-8d97-1d52329b5b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0484d420-dc07-42d4-8579-b520476950fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0c4b00-51c7-4606-ba05-3f9b7c32e457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c424e4-63ea-499e-9339-a912a731efaf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4597c03-34da-4a9f-88f0-96232b6ac85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf8da32-ced2-4720-ae8e-d5da02760069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a7344c-755e-48fa-b2f1-0da9dcb416ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fba500a6-6603-4d04-ae63-32f7ce441d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8920a3c6-b5b1-4e78-b2cf-43f21c958d6c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4501de56-caf1-4bd3-803a-e9c4d2c2d835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ed6aa4-86c0-4310-8494-53fee2bf1e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed0a5f4-2cf8-4315-b09e-c13f9a9bc495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4bfa77f-2941-4843-81cd-fd0574e78b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5bb6d3-57e1-454e-a6d9-5be757e75f96",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a2d909-8867-4ea9-845b-18dfd711f556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff55826a-6cd5-43ce-94c8-e2883a7e9b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41433d6-af30-403e-a32d-33ede8333ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50e9150-c4a5-41b6-830e-0646229b7354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6262a4f5-375d-4981-862c-3076900d720f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bac5420-e987-4eec-b5a8-a50571c52b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd47449-6d52-4d5a-9bdf-c99b7f526a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee96357-3b43-4757-a3f3-9f63ae8e62e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "273e38f4-34a0-4e07-964f-9eff5606a8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aafbaff-b154-4f14-81df-8e2304210204",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eec3376-6702-4293-bf35-cf55ab6e962e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c410940e-436b-4607-a2bc-6de5e06bc2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fd3e4b-3c58-4a36-8df1-0603322eb8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2cfcdc5-49fb-4256-9200-8e34beae69b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef46bd47-84d7-459c-852a-aa6377bb0bb2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede44663-8492-4cfd-a512-cb081e43d12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc37a80-dc62-4152-bb01-6b5a890a8269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a105aedb-fd18-4840-bcf3-babc61dd729f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7440469-7bc1-4517-8172-559999d57b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ed164e-fce3-442f-b75a-bc1122502da4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2a8ecd-52c7-4291-bdef-bf3370c85097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ba1e40-75c0-49f6-aaad-787851d574d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0311bcc3-1cde-4f6c-9a93-41d203614a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed85f01a-9885-411d-b814-e8d7f96a65e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ee8df8-1b94-42fb-9044-2931985bbe26",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b39760b-ab6c-4b04-92f1-913baa6529f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88faa4d1-50b1-46b3-a744-66beb67a7834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da69308c-b617-4e3b-a549-236d015e2c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a34636-f4a3-44e9-b7e3-1a5291d70242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3494ec0-abd6-4780-bc08-7fcbd628e382",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ea8e49-e74d-4a87-abe3-62fd5ec791de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6760f28-bbef-4015-9d89-b08291ae0f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fea8264-2145-4f6d-b804-1bdb7b3e8616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ec2eab-c548-45e5-8a30-c28e5a83b43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4136d1e5-fd88-424d-bd42-58f6e06625d6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdcfcb5-ccd7-476d-84ef-4cbb508e3e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ba4a75-be2a-4e50-a43a-bc7baf5d226b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6872b9-500e-4b9d-b2e5-b284fa866f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c53eef32-8117-4e66-9517-9e833520d9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ca4327-d68b-4daf-9b9a-cb54f352a2b1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0269f99-c625-44ae-a061-85da844a5b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b4c28b-bbd3-43d0-8522-4ab565c3252d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38d8ff7-8317-47c3-b3ba-d50874e68eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98994e3-3eb8-4073-a832-5999974caa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdeedb4-d064-481a-8481-74b6e694de78",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec032e6-ec9a-46f3-9943-f5dce887fc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac1a160-6fbe-4d1d-b80f-7f3d5c22f0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d90386-bd48-4817-9769-0bb4de09c3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f8af92-c4d8-46a2-87a6-30a8241c376c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ec1aa0-94c4-4d0d-aa28-461681a4489e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6988151-eaf1-4ad5-bb2d-61cfb3d77610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7c573d-ca30-4e5c-9d23-223bc47fc581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9d01f8-29af-4c7e-a51c-d44ef155e073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0941f2-aa0b-470a-85ec-5bc62e657ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b23a04-70be-456b-9f37-a12e1351d1b2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd7cfc7-52ae-4e8b-a23b-b5a0a614f740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b06584f-d751-42b0-9725-dd55ba22a5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec111f9-e8ce-451a-9556-dd6cc5c890a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0096d45c-232b-4da9-bc47-661cdfcab0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe8c0b3-64d5-462b-ba3f-974447957c47",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a36ad6-acd9-48b7-b968-5a0516f3a21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2550720a-11c4-4fe4-916d-671fc56b08b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312d873d-057c-4f83-afbe-422b3e5927bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e92da8be-032c-4a09-8e84-b00fd37a67a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00aee640-e6ec-4e10-a297-4cb844c1c598",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db4b6bd-f5c0-432a-bc8d-bd5681ca5a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a883ad4a-8ccd-491a-bccc-709ae04cb0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c851ca9f-b52d-4b3c-8676-ce7460955d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03d13982-6de2-40ab-bc62-75b62bc6ff43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75315846-1ef2-4c71-bf6d-23f339bfce4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9e409b-19d4-44ee-9ca1-fb10b143d173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a854560c-106d-4a21-9416-cfd58655c736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574d4a3c-acbd-43ab-aec6-ec8fda579bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "921db265-5286-49c3-9022-8a6762b593d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa62bd3-1596-473f-b137-ffe522860442",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c39ff5-0e59-401d-8178-4b82927b6e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61d1243-05cc-4f1d-8a6a-6943396c43ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43ff32d-6252-40d0-8afb-f1414ed9674a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64d6c4a9-1391-4e4a-8462-0da5dce75974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9b35af-5dc1-4936-a936-7bf8850cb583",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6c87d1-4ea6-495b-a4c3-df13600b5883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d7de69-bb56-4a1b-bb0b-419f69d371dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0196b34e-a147-4dfa-b29e-5184cb708ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "da16d860-1a8d-45e2-97a0-d7a3e6f3c540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa9f24f-92a3-42f6-a0c1-dc437b1a7635",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399948f6-3aa3-4072-8549-23901929bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231875fc-5017-4b77-ac1f-23c2b6c9d56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d231e373-0cab-46ee-ac99-d3ed90a595c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d23ff436-c7d9-4558-a58d-6dccbd726db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526bff6b-b737-4c76-8cb1-a265b9e3b5df",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7799c204-b369-46f7-8b92-839b88717b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2590324-0bdc-45bd-8b67-693b1d40bd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6c70a2-831f-407f-9bb3-3fc242a6a950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fd96a5-6806-427d-bbd3-b16f6921172a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acc1387-35a0-4c51-9ad2-1eca515bfb2c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd2595e-aa05-460d-a62e-c78b036700dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce92a527-16b7-40ec-a82e-f1e7d5ec6263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f70b0e7-b9a6-4381-b4a5-f01fda0d1fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c13a7a12-300c-4674-8d43-344caa50b9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86532da-8d9e-47fd-b8ca-3f04f7a0fbe5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8834b41f-8b15-4697-b687-1e6ff4be27cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2b0a61-b0ef-4d46-90f5-e8a73b221a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116c131c-d732-405f-90c7-68842389a42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f759517-a161-4cb1-93a0-c5f31f9ac419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44be0f71-9592-4bc2-a3bf-c5cd69b27fd6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2066088-fb58-4c4e-8ffe-30fde152de32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3be2de-9200-4efe-868b-7e5f321a2823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cbb325-332c-4f59-850d-6476e623c9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f5b762-0339-4973-b0f1-5444141a86ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d610426-da47-4023-8495-7e4fa11c869f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b986e88c-effc-40a2-a926-b120761ff6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba6a0a8-3080-4e23-87b3-117d2624f439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118b52fe-fb95-41b6-b41c-ec9d97d76a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6458fd32-32fc-4632-9957-d18776cfe17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d7f20a-3afb-44bb-87fb-2c52f31ceb58",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d0d100-a14c-4810-977c-2d24729ecc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74f1b0d-31f7-4631-ae0a-b8697051e7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ac89c6-275f-41cd-8064-c7eb63892491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "09f91d71-8bc4-4e7e-878a-8c5dbcb7ed64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac665b3-82e5-402e-ab09-0bde185df6ec",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49836427-40ed-4f6c-ae03-2cfd392daeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ec1ee5-c132-4cc7-947c-e616cbac86cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89d1ede-be0c-4572-bb16-91f9879e6d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f878ec16-b65d-4000-9de8-230530e36fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d1e834-a845-4208-8791-47aa1f21101e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4460d8ee-d819-4ba3-b05e-9bf9b3f7f9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7759cd-7bf5-47a4-915b-6b04aab74ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66483320-0f19-4213-9b5c-ed18f508c04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c21b1ba-1c1d-45d2-83d8-6520aa05831e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee50cf4c-9bad-4456-9cda-e3eab00680df",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd98221-27da-4696-86f4-cd32794bbe7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ac649a-55bd-4c51-9d85-0f9cf8cd3527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6b60fa-db88-4309-997a-6d44a0417446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfdce48-82bf-4582-aecd-523a14cf529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87263e6-c730-4089-85a9-bcb75ffae1a5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b971a16-06be-4550-aed9-3a85923a16c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e19474-bbc0-47ea-8ab8-84067dbd4b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23265c7f-4f49-4634-a413-da834a258409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e04c4a9-4bb1-4486-8ddb-d850ab094fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004bddbc-9f3c-43c0-a50b-6e4d3edc99f0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0b24c4-c424-4875-a2e2-455b2e1c5f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81005a17-775a-4de4-9730-53502aebfdf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddedf05-b204-49a1-9656-efa315d1b9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2eb4df2-bc8f-409d-ae16-b01113b46265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b207c60a-43aa-456d-b806-0fca98535199",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab381704-8093-4a16-a016-df5223178f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c77107-cef8-4a81-8124-ade6371cd267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5ae124-9a77-4153-8539-056fdd225e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32fd6b4f-4224-4671-b8ba-cf7418577ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3959588d-b1e0-4cef-9bbe-8fd12293f13a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0305b570-8438-43a9-9375-e28ebb4dab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b31cbe-01c8-46b3-b313-f634ed58e01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2afd8b0-6e49-46c1-97fa-5496efb60c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c41e2f-8670-423c-b72b-ae855027e72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c705811-97c1-468d-8d34-5668f93559cb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae5831c-9ace-4266-bd1f-df30c9e3e40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdc00f1-e2fc-488e-a2ba-278049df7688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe1ba49-f416-4151-964d-6717e58b83a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a264767-dfd0-480c-8ace-f7b79d28a725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1126918-c1f2-486d-b9ef-61025b5cbc3d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724969d9-9e29-448f-b966-91afdda5b78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c3b5de-af5c-40f0-8fce-22ddac6d5a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d42bbc3-45a4-4de5-97ed-bff013c33593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "149b8b9f-c8b3-41fd-87cc-829fc0b6518e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acb2aa5-274c-4b90-bcab-ea90067546d3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e9636c-8c56-4ec3-a829-01eb5dfbf1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdeae74-71e5-4709-980a-f329011e6489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4523cd6-a54e-4d80-857b-33ba987b163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d424f692-5f02-42f1-b2ad-f669c2ce8d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abd6f25-1c65-47ed-92ec-f3c06987ae11",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f7f93a-2bcb-482d-9331-71683890aee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccacb8d-04d2-4f00-8cc6-066cc8fc13c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05650b62-3d66-43f0-91b0-9302ac447144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55c61758-dad5-41da-84b3-27bb88230025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f366df4-697f-492f-80b8-d098d5768728",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272f76a6-7d3b-4c23-b988-0b5470c6783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dbba79-96c7-465e-85be-fb07632a741c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd4ad91-83f7-4171-b1c8-10dbe49f4b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8787111d-d04b-40dd-bc41-32d9abfb702f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fe57dd-dc13-45b3-a1f3-79375200fede",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80db1aed-f94a-48f2-bde7-3fd415ecc113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae52303-fdf0-40e2-86ac-821ede845dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e0da2e-8b43-4c2b-82ad-7e66ab61ef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01eb7e26-4320-4f7e-a01b-51738cdbe932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d237052-7efb-43c0-a2db-63335e740419",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7507740-c7eb-4551-9f10-fcc22a984395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e33c009-316b-4393-8fd3-5128378e4558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a96cd26-ca21-4179-bcc6-6e0ada66714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ad8fde-996c-4122-a666-b505d458d9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddd53a2-55f4-4ac7-a1b4-c85b3c64fe5a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9448eae0-870a-4955-a702-415819bc871e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d073b7aa-7f9d-48e8-9222-3b3ef8dfcf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e2cf92-7539-4e26-95ba-1b89e52e3edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d39d52-9fb5-4209-a4b8-5ff693bcb326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd70fa7-3fe9-4092-a810-e43e18847a4a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f55ca56-ce6c-4d56-8986-fa240461341f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df01a65-05d4-432c-b605-f35df5164da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7510855-0f64-4e86-8aff-4152519d1288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1457db-d112-43d6-808d-7c00509bb650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e221b8-dd9c-4139-8bd6-b8e1a99bac03",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585e6a9b-d4ac-4593-a102-553fe597ae1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e25f159-1fb8-4761-8a0d-134bde8f9050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed202975-bae3-4e92-a000-9f41ff7dc4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ce2360-11f1-41c4-be62-0a91f1c9f47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909a6824-e220-437d-b3e4-1f8c54a3afb4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89d1542-688d-4fb3-975f-f059b27de72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f6558c-0a81-44fd-9c6c-7d8f454114cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2922c9e5-1576-4f72-a679-e63274da529b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "616441c4-c3fb-426f-811b-7d778ea0c8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224d140f-6914-46b3-aa34-7e2cb6451551",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e072ea15-1697-49ac-a20b-1fde99e92774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e2839c-8ad1-49f2-9ff6-99126ca63333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff22fcc-1b46-43cf-ab51-f278b97aba3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcc4464-f6ae-4683-b83b-993eddd1a23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c0d22d-a919-47c0-8955-e927a38e18d3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b4b3dd-218f-4571-ac91-47cd289745ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0c6b7e-d799-4958-87c4-204aedf66314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9fe41a-4914-4dfe-9f68-76e34efe1e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4b6413-22bf-425f-82c8-9f7bfeda6552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2925d6-ec17-41fe-b2f8-25b6c4557f93",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee46d826-c2c6-4fa4-9c98-3521b09a40e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1886a8e-7e85-432b-9df0-b98e73af33f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cecc38-1fd8-4557-9ba1-1c1795f8693b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b029d3b5-12d8-4841-a65c-5227be6d1384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e1169f-f0fa-4cc4-8569-2d44349febec",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6bce33-fd09-46af-9017-a2177239992e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5979d84-b0a0-40ef-9ff0-18acd04c7f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0691c492-3699-462f-aac6-1d2fb1c7a549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0753d1e8-87e3-40e6-bc00-441610c50519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7d1271-d656-4398-abd9-9bf67d56dd4c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd46dfa0-c21d-4fa8-8688-434046782077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e158239a-0725-4dea-bb5e-bd1d8ad1825c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d96392b-5fc0-4bf5-bd69-0b669885e9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "de85bd85-fe37-4f63-ab43-727e1930c4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178aa12a-759a-4393-8620-414fe4d732db",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec098ad7-ced1-46b3-97f4-7fea7aca727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "40932cea-1c61-40ab-a38f-bf86498de64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a368d6-010c-48d7-92fb-7d9d69a2480e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c7b83d-12e3-42d9-864c-c5afac2e87b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "965c539c-aafc-4ec2-9be2-16a039de6218",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8a926a4-fee0-4d88-a7b0-acae3e56de39",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e92f155-a784-4cbe-af95-9b1705007c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8415c5cf-a1b6-4ef9-9261-fa89cc11fc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e275ca-ff19-4d26-8f08-a2d8eddd4320",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0c7fcb7-bfae-4ef5-801e-148e1fb6e750"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb3508dd-844b-4cf3-9307-ff2a703d24a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82fa63b8-91db-4fb6-a591-6f7f0970e6a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81a3be2c-7c99-4750-ba96-074ff40690a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d56cf8a4-63b4-4a07-a95b-d90d0118b6d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "afbe51f7-168f-4119-bdd7-0fbd94807636",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9adab5e0-a587-4f39-856c-855e478c40b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "511c5edb-541f-460a-8e27-c7d2e4491098",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "994d0001-2192-4cd4-9604-6191b003723f"
                }
              }
            ]
          },
          {
            "id": "5e7b0ae8-a68b-450a-9067-ab3474716e45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8dd47ea-9bb1-47b3-8c69-4136fde218d2",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3fef7f4e-b2bb-4b60-bff0-d5aebafb23ff",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48645250-1257-4d48-ad1a-5a32f9ee47fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2bb78335-a0d4-491b-b12e-b950f02c452f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6bd4aa-e8b1-4575-aa60-f229752800e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d30759-8487-4b06-95bd-8244d3a345dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8d211d6-9131-4a98-8a07-01a95fb4bf9b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d8d74ea-c786-49c9-9844-ea2dfcd2d8ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c78e580d-63f2-4eb9-9cd9-eab193e72dcd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5b1f5eb-54b1-4577-ae91-9cae2603017d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "901109f7-a783-47b1-b78b-5944537ba966"
                    }
                  }
                ]
              },
              {
                "id": "6201354e-1f05-4bb1-a06f-84ace2705fb3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83233888-8de7-4a1b-9a91-6dfa123ff489",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74755ed2-fa51-4713-9e82-dd217172acc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53a80ced-2f9e-4dbf-8e93-7c7ab6b371a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d2b71ea-2d34-4ca9-9041-043fe0cce471"
                    }
                  }
                ]
              },
              {
                "id": "350ef4b3-9a05-454e-9d17-bdbb6ac54cc6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c8061be-1792-472b-ba21-4b41a189e9c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d3eb059-eced-4593-b405-b565e85ffd8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b4b7756-6f18-4df4-bbfc-e2c8979821e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b37f6b8-43d8-49fc-92f2-619eb5315e29"
                    }
                  }
                ]
              },
              {
                "id": "91b8cc04-e266-44ad-a4a8-166f624fbc59",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b676c9b-710a-4a9b-b15f-579b1a916c2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b16e64c-33ca-414e-8993-5902c94af4a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c02b6b8f-dae5-41c5-9109-6056ab7c1fbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "11e48530-58c2-4494-a764-9ade5c77c82a"
                    }
                  }
                ]
              },
              {
                "id": "a355cb3f-a6d1-443e-a08e-0a11c2f1905a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49a9e5c5-6795-4169-ac28-02c0241608a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4a433c1-8055-413d-9c61-9dc9791e8a51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "572d713b-341d-4b4b-989b-b7173812bcf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1a7ab76e-69ef-49f0-be27-33bf09c25275"
                    }
                  }
                ]
              },
              {
                "id": "5fa6025b-0f63-46bf-a692-99d2229385ec",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6626c29-bc3d-4559-99f0-1951f0d3dd24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bebedb8-f991-489d-a5f3-1ff4ae26b3fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81c50cbb-4ed7-46ee-ae4a-3061b5251bb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50ef8dab-2b40-464b-be65-2bef4f921acf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2d052c7-d9a3-4314-983d-e52471fe6a25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aaaa9342-423a-4f5a-96b4-2f9e1afc7bba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "822c4399-518a-446b-99ed-08126e97e50f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cc7b7f1-de7e-4ca6-934f-905db9aaea5a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f21eede-41f5-4ea4-a47b-ac04c9b7307e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9ca835bf-c728-4c3b-a1c4-9bf2adaef9d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a2e21a2-e9cc-4354-91bd-f3075e93b1f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7f51647-bc8a-4d4a-8c8e-6ea4d4d21d0b"
            }
          }
        ]
      },
      {
        "id": "760603c8-f45e-4e20-aff0-fe04f615219e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6623ab0f-0f0f-4337-b183-169de189fedb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be6e823e-c897-40f0-bfb3-5be844cac99f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "408d21d3-259d-460c-b5ec-04e54deca41f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4736e0-9702-484e-9872-6b68e2409026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60aacf64-74d7-4c2a-bfe9-ecfdb4e0e8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874015fb-3a61-4a06-800a-fcf56596e9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a220889-d109-48f8-b6bb-11ae41d29c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549cdf34-8168-47d1-a925-2c504515ef36",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d79b16-1983-4ded-a46a-48ca1e20b001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6587e2-7898-4503-8cd4-843082b5c917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d69b318-e7b4-4e80-9798-71de9eb710ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4163158b-c4cf-4ab6-8679-51bebbbbd997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb279f75-b11d-4655-ad58-595ec156869a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd995d3-e789-4f0e-971d-9251d62bb772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a899bbed-3546-475d-a9a5-2efafb48bb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbad2616-f2d2-4a5d-a850-c5336d4b6dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "798edf70-fffc-4e16-b618-733d5ffee3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973b2334-e2cb-48c7-8403-c1851c25f300",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617c42c6-db6f-4ae9-b525-b1f1526001f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfe28ae-33d2-4287-877d-51eb4ac7421a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f34a1ff-a4fd-44e6-a42a-43b47cb28d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a7c0ad-5dba-4d3c-844c-c20490585aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ae8dd7-b958-4500-b7cb-bfe294b344cf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f56fcd-852f-41b3-be09-94dc66486bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebfb7a9-63e2-4e76-a766-d3e1d40afdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a1740e-657b-410c-b290-0e092534c937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbc6f31-17da-4a2b-8132-85ee9e519080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca278643-b9eb-47e4-982d-a19b88aff860",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee3517c-e57a-48b7-9edb-b8a3d1ff5540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f529cf0e-4812-4fa8-9eb6-0ee599849d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b0a8d6-f20e-48db-92af-94635c8331e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f230491-7c0d-46fc-9397-e75d185e257c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5b48d0-3bc0-4ccc-b82b-6a5ad5c55c4f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bfa448-b761-40e3-86be-08e5250bbf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc0c037-7c2d-45f3-8617-ce4ea02615ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3ff0d4-2d08-4264-87de-c5a7b46e18d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4d989b-763c-4a67-bc7c-266758645e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d27221-56ab-4480-aa2c-25f33f59bfb0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b79c504-4307-4db9-981b-d122fba7fb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89243a62-7d7a-4dc1-ad19-bbb18880d772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff0f079-a496-4ca0-8f5b-8ac9ebf564ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea578834-b8d0-4e28-b648-0441f42f9744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2c5870-477b-404d-b35c-1e265428ec24",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba67d7f-f216-4420-ba25-f3c752179492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2475b55-cf89-40f4-a335-db621d3e600a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501b86db-8765-48b7-979c-21ec0b6a7b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88497fb-d94c-4407-843b-5b499749c0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac14536-0111-42af-9687-a7647e53a38f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417bda8c-7eb6-4132-a78b-d29ec30f9ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30884610-26d7-433b-a3de-e1307d335882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c30111-f4c8-4ce8-b140-ec0d30151d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea22a07d-d0b1-42cd-8c20-583fbcfaf5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18ca9b2-5977-4d1a-943d-3a240cedabd0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80437274-1bcf-4db2-803d-b08ee6e28b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3527d4-ebd7-4024-afb5-54a038204229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3b46e4-e6bb-49a3-aa9c-bf6281e47285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0e229df3-f61c-4e69-905c-40cb8aa6d7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941920b3-5c1b-4c21-93d5-7b130682680f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42104b82-d71a-4129-9d65-60fb20911d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbeec05-e26c-4ed9-9cb2-bc7c3bd425dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10faea79-8c7a-4ba6-9668-26fadbe60575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d9fec9-10c9-4d28-9330-7c52992145d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8144842-d805-4b59-82b0-2ad69ed37859",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fe1ea8-f03e-4388-bac1-0c4bdc84fb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1c640f-d21a-4f2a-887c-41477fa7b35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97eccdd-7d9b-4b1e-b59e-bc99bae00a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0d5228-6cf9-414c-8dc8-29aa59ecec03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47fd189-07a6-42b3-a040-d9249f87b81c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2126006-2ce6-4fd5-a406-b3613262c538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733a9d9a-348c-4966-8bda-184a13f2193a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2207bb66-12e2-49ef-abfe-165c40d918b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "356c1ee3-0d5b-4aef-894d-d65f42ecaa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d74153-386e-4cbf-ad91-35355be9d98b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ee0766-67ab-40c6-a01d-ca8aeb8ecde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa62ab1-862b-44eb-89e1-a14e21999fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d172f52-5dd9-47dc-821e-160e7550909e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "005f904d-549f-4dab-b8cd-792b8a645b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec63540-751e-4bad-bf6e-ef19fca5d172",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81808d6-dcca-4f19-989d-32f2dc850af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cb780b-2873-4ec8-9a41-7767c364b6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd13527-16ad-4bcd-9d56-526d8dcf0ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a17283d5-70a6-4eb7-80e6-d67e32ea66dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d443d2-0b1d-438d-afef-a43302470008",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d45c944-742b-4267-afce-891e9bb63fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733e8b24-092e-457b-9c8d-ccbf7e72bfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe534d15-9366-4a42-8f36-8a2fdb78929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5576f4-806d-4a99-8e4a-a3a8b7d34944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0a2bf4-15af-410b-ab0e-9214d6a254ba",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc04f85-49d5-4bd9-92d3-a6fb967c3ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec1c8df-7bd0-484b-b0ce-90d414777013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d8c4ce-fd23-4a40-9039-16d6f6cc7cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f40c8cce-c94b-451a-80f0-2cd4e373e5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de8f06e-26d7-44c9-b9ae-c018261dba52",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb4ebca-5496-43b3-bca3-1ef20e864e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0a0863-5ecc-4a9a-9710-b132e2181fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f41c32e-0509-4585-81d9-1e80569f270a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bec0aaf-1c6f-4089-889f-f0ad9d96005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3423fccd-151e-4d7b-8b2e-8d5db753ca9e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dee4b7-d6b6-4f8c-afc9-795b64ec9a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97fe2353-7a5a-4b28-9b28-484217e00ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc5f1a5-cadf-44c1-ba07-eac114701030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7456794d-92ce-41d8-ab24-5a5eb35c7216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f384c4-51be-4daa-9eff-ecf8c7cb343d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d965621-0b1e-4dfd-ae23-8401ab4afc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab79d0e-ed4c-4222-8eb3-94984f695dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a2f6fb-a0be-415a-bcf5-3fe0fe25d55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71bb4de0-c0bd-4a26-bb79-21fc4959201f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5539d138-4aeb-4042-9884-717bdd67efd1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5f7f12-3343-46ec-bdfe-1777e125928f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d76039-5b88-4518-b75f-352687ef1a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52ede70-da2c-49b5-b635-f0fc02f11dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "575c42fd-9ff8-4c24-b447-4f5848c9974e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26ae67f-0169-4383-9cba-9f3f051d5a56",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b466a933-da0a-4e24-920c-ef16d874ad12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a8c6e1-b3d6-4f93-aa78-cd8bec50a482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919d7ccf-b923-4956-a4f6-807bdac59601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "436fe59a-c7af-4526-b141-914cd0fb38d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e45a97d-21ee-4a31-aa80-292d5b133c5c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852262af-e2f2-44d5-8dce-78fba212d70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b341670-bce5-4c23-be3d-75a70c78f8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60c655d-926e-481e-ba5a-2633cd223e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1922ab7-90ec-4457-82d0-afbb4dcafe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0e0a89-112e-4300-b917-5e06338dbd03",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84254642-f984-415c-bafd-5ada9f1262aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517689e2-9b0e-44c2-aa81-e9495e45c2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bde90a-9cd5-4584-a737-4b4950fe8320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e126ffaa-50f7-4a63-be74-03c7a08a0ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4028f314-a2e7-4f35-95ac-4628d6a62d99",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7420387-c391-41dd-92db-e67180cba53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1b7028-091f-49ea-8a6e-540b4fad7158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc2e4ac-2be9-4c9f-b836-7a6bcc996c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4648f82-cfca-4378-94d2-c93b203f2250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd74aff-0252-44b2-a813-5aa5d148bbcd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121461e8-f13c-40fb-8c32-01a510ac4a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3e5317-907d-4fb5-8101-e5eb8095c766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a478ea3b-9132-49dc-8383-700c141fdc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25d865fe-1fab-4316-b1e8-f5fd13afffd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61707766-e0e0-4d24-b5e2-4a3475513606",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dd72e5-1123-4eda-9e4c-4a0b38ff4c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81ad169-aef1-4d33-a45e-5fb92c6e5721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559c0811-67d5-4139-b220-4432245eb3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb166a7d-ff35-41ef-be24-34fb70055619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f6590-f782-41eb-b4c5-aad624283d60",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074633b0-6931-41fb-8b54-6351bd51b89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28117fca-f137-4b4f-97eb-c758441ccda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5de0a91-6d8a-44c8-9bbb-01bf04fd6556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d57d17e8-98dd-4efc-b529-1ba734cd8109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee994a1-7d98-4b61-b6e6-b0ce4a9cc486",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd5fce7-3ba4-4502-a333-d1370c358091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89d32df-7a4b-40cc-a30a-4bce4f456771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238eb81d-a2a1-4981-8584-ef6f32757da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3367d73-3870-484e-b1e4-faf37d97e9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e293d2-3739-47b2-9d49-21d18f1438cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5c7eee-3898-4c43-bc2b-e0fa2c2a009f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fce0aa-972c-4500-8abd-a1faa7cb9eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b6ba8b-5a22-444d-b006-5a21374fa7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "217a98f7-3294-4084-81f8-6148e9c569af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a312de29-d18c-4246-b6f5-b8daa12c701b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542d743f-e63b-4fe0-ae80-2c8c71c44de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b93599-74d2-4d1a-8506-deb0bb065aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55ac16b-5e2f-4e4a-8bac-82071810f6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba032b2-dd1a-43c5-a97b-28f21251c809"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4750bb2-2ba4-4532-9677-a66685994360",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "229a4676-d2ad-4105-b3c9-2ca6d3a21687",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f79e85a-c61b-4188-a820-41e424e5b959",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6774c74b-2e7d-4c9f-b079-e11f3b6e5623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a8c3aa-5ac4-460b-bfc8-6efbbe40b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4b61113-ce74-4e41-9b60-264d37e5b2df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd239017-ce36-45a7-b2fe-db9b7e5c8513",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c3ff072-6770-4f4d-a6b8-981c0fb5c66e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47574999-530d-48ba-b058-d17e10fe2ac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62bd58e1-84b3-413b-a8d1-23744b536673"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d39ce477-742f-4c4d-abe6-d1da73ff53e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a24c2ff8-ca29-4476-94e2-0ec1d1a5c2b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "630a6d41-57da-48f0-9510-483ad0807f85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9cfeac3c-74ac-40f3-96ba-808a65377d88"
            }
          }
        ]
      },
      {
        "id": "419d9c8b-e338-46a2-a1ca-fb6daeb7fbde",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "56fbfee8-a31b-4efd-b295-7bc781f4d271",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c34ddeff-25c3-404c-b067-4e5152e56054",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8aa34eef-0431-4a39-8f41-b772a75a484f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a953fbb-e7bd-4910-83ba-d45c1ed0726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa12eac-d3bd-49ee-a42f-a46a9816015e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e61e1f-94d7-44dd-8311-1fd10ffed98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b751149b-b1b6-420f-9520-01f9f0b58f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727ded0e-190c-462f-be1e-78567a3528c0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef776b94-3ba7-4956-a6d7-cccf897c4579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92181dc8-abb7-4eef-959c-a493f3c3659c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae480b9-38d1-4c01-ac32-2b1ba44db76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad8607b-f351-40bd-928f-d2025eafe626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89c3a86-126a-45a7-aca7-de87e0eee2db",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e61b34-88a5-4663-ba8f-74cdc84c3ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16986261-032b-4f20-8a74-3f9e78c83af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4298f73f-042e-4672-9db2-b70969f62751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4033a13e-da15-4b26-84a4-981af12bc8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732358d7-57da-41bf-8745-c8554614ce90",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a7084d-7235-4e5f-90f9-a861800172d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d15c08-aa4d-488e-8713-e3e96b32360e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5879678-699f-41ba-862f-07657819d5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e2caa0-46d7-4554-a328-0fc325a61a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd525cc6-a8d2-4ad3-9812-dfbcfb07e155",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97e827b-50ed-447e-83a3-a5a52c6afff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78624ebd-e002-4a03-8c55-19ae45f060f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f0be5e-130e-4dde-8e62-768d1dac5305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea95deda-6fc1-444a-a8bf-77dd9cc06c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a187c7a-d3e3-4b35-942d-f4f4f20a367d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9461139-4d82-44e3-99d7-1cd72ddef1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97117a79-0734-4a26-94d4-e81919f9a540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fa3a8d-8766-4369-8a0b-169f58d200c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "108934d3-592c-49a2-b113-80f1affdb789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82a9839-a878-43b3-9013-89ac38153164",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d31a1cb-3f92-4bf4-9f10-07ba286c36a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c10d3c-3fb6-4dea-8226-37062c55d131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98598bfa-b24a-4cd0-8cc8-3e705bc0c479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4c1223-43d0-4735-a802-cedd034ee1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f67aab4-a2b5-4b1d-880f-9606c6f57637",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b3c9f2-30c3-44f4-be74-c73f0c9decaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3088663-d49c-4d5e-8ed7-6cdf44ef81a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf431f16-1ceb-412c-a4ab-1347c397bff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f13b3465-c995-47b6-895c-61c38a3151c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ff0baa-a900-4069-b192-f634b63ca224",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc45a3b-18df-4724-bfca-8ac3e01595d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f64b288-82e0-4d8e-9037-b19b0ec87a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afd1f07-4c7f-43cd-8062-2f85739a35bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69efc21f-9df0-4b9d-8e2d-6f15c97c8e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a3c059-393f-475f-865c-2cc684f53779",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2353cd9-0c92-4862-be4f-a66d0246c026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ffaca9-5969-4e54-9d38-58d2a86bdb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9757d7-2110-42c6-90cf-09c34696709b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc711bd-7506-4218-aabf-a3d4f54ad4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3586fe-13c1-48a7-a142-e2347be154b4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579c411c-36e3-416c-bd61-9c69babf0fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36363bd3-f957-4004-8660-9014d3a7e81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3937b727-c32a-4afe-8a9e-7c5150efc654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7e50dcd3-4ca4-4458-9521-23bb57b9fb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0aec4b-1ba7-4855-9956-2db070a2ff11",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c522ad9-5800-4040-a7e1-712951bbb4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d1a582-5d60-45ae-b24d-f2514f6f678c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce18327b-3b2a-4f26-9a7d-95c10d9871a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "695b1e10-1e24-4e2e-90e6-885abc3926d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8512ef6-e74e-4c00-8127-4cbb5c758a02",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0924f7-7d1d-484e-88cd-d21307c6586a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3de06b-1b8c-4bfc-a179-01e0eee1be1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8daf26b-68d8-49c8-9628-3d444706fbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4426ecc6-fc16-4104-83b2-955626073c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661c1b88-6dd8-41b2-b975-64d7d80c3bc8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a45418-6728-45b2-9e96-1682d2511c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a60376b-a2e5-4ef1-b338-f6ca7870b4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b5a6b0-b56b-4166-99d6-ddaaa4e02de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8804be4a-d1ed-44e4-9efe-9647bcda5b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f4f587-5b9e-42b5-aa55-07c8b801c064",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe4c3be-25de-449f-b858-ba7e771f191e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3c65a8-0ee7-4f17-92d0-354d6bb6b713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88490dd-a6cc-47d3-9380-2496b5b4fa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c093d61d-ac04-45cd-a9e7-fa92c844859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648d6f06-b5a0-4507-8f97-d194c4d8c81a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cca2ce-280f-49d2-bca2-16c9a1baa353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cd2af8-a307-441f-88c4-8e6dda69127a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd23393a-69f2-4732-ac1a-1a858e846738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c8daa8-e365-4e0c-92ee-4a99bb51f315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e4cb53-0b17-44eb-8eb8-00d8dc3de587",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769bbd4b-9361-4f53-b7f2-5eae3346fa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6b6552-9053-40f6-b8f7-75be4cd62a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da77fd0-7dd4-4a08-9983-05b9f10e1d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfd5a94-6563-44b8-960a-137fd462360a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb18d34f-e636-4273-b8a8-731dd5318fc6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797b573b-1ae6-4c1a-af29-3b58edc516eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1099989d-1143-4455-ae9f-16fe6b155280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52c8cac-6038-4766-9327-5d7ad75916a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db40809e-ce72-4104-84f5-f233330d893c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324e13bd-67d3-47d9-9dc3-844e166334ea",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8d8f5e-4a6c-4da0-b6ef-6576b577a93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad67817c-2f39-47ef-8dfc-13e64d2352e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22f5fe7-07fd-4f30-8be5-b91fd7e3a635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e44b2a5-406d-4bee-ae48-ba991190cce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24259860-e84d-4741-b852-dcc3418caaea",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b26afe5-1c55-4b48-a058-b6380f0386bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c21f0a5-af7e-40ac-809e-202e7edd919a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9d7336-0282-457a-80b4-db1a5b3985d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15045bf4-ea84-4905-9c97-7e4026790c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3bce8d-2226-4869-a09d-ebe6c7092085",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61862fd7-ecdb-4413-b648-e80e3a18939f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54b36d6-027d-429e-a7a8-fcc8c80d45ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad787ed-b64b-489f-bee9-7268b16f14a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dce784e-931d-4f75-b9dc-6f47fa375a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1c707c-7c39-4eec-9be0-a73fbaaae6a2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837ad719-ebd6-4b8b-aeba-9f08f2751401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1c0ebd-8419-44e5-acc0-bfe05291af58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8e45b5-1253-4866-9a4a-a2517e218d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "613cf608-45b7-49af-aaa2-042417ba339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d472fb-7a6d-4783-88db-456d2dae2f19",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcbbce4-a400-4c38-ae2a-b5abe2ac8e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28729512-a738-4d40-9565-f92e78bb312a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59c7efc-e271-4aab-a49b-f96e97a1bc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8446da69-51bb-4724-9100-375fa0a17dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ff44b2-f80c-4edc-8de8-eba4b5c2892a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bfd2ca-f4ea-43d1-a6b3-101fff3e31f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65c66d5-591e-4eb6-b95a-4b38228aab75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44c0dba-d0d2-4d81-8f5a-b8710bc1543a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d41a4d7-01be-4bc7-8b39-27a70b9d8790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd89f62f-20ba-4931-8ecc-6f062673770f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44673cf8-7e71-4d33-96ae-19f21a77f91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba88871-719e-4cd8-8343-0c968a834685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6941969a-d136-423b-bc6a-37e6807d2573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25d4bdd7-e285-4eb3-8614-2c2168aa1da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28499cde-1252-454d-91d9-77e69eed8f84",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865ee2c2-8204-4644-9e7d-429007d43c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a038146f-5816-45cf-9a76-70759b9c5ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9c3e5d-187d-4254-9250-157b2ff4e2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8380b61b-b61e-455a-9459-73c985143e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26376b3-5aef-4116-9925-64a5edce7fbc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e31443-011c-4038-9b1a-7eebc5bd988d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798c6aee-de0c-471a-940f-5913f9524760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e9a0e8-c49c-42dd-8351-5a1b49f6b6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f53047-b391-4926-b061-b64e2591bb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ee61e7-c625-45f4-b780-d03463f3fb24",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa4969b-6bb8-43d2-be01-80a554c9dd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81911cdd-2092-4a6f-a073-e51c3689d801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb5ff57-3e53-4380-bf7f-f7c5e9a5d8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e4c038-ca3c-4770-a0f5-71cd5aa81064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0bbcc5-356b-4fec-bbf8-071168abf3ec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2f0f88-f974-46e4-a3f5-a00a835cbdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccca768-e9d1-49eb-bb0a-8722b6ee2433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8e4684-a3cc-48f1-a941-efa4ce664a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea90900-5c38-424d-9aee-aa9a051fb68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6a0dc6-5a6c-4225-82ce-bba317a1eac2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11891cb2-1345-4a55-983e-5fd368f0b940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2115a71-9b51-4a4d-9c4c-f663c0fac861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fad65e4-207b-4cbc-8375-971d607a6135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb2c17e-7f0e-4a68-a39b-3065f21d48e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9283bb-e990-4f2c-9024-fbeaba79b6a5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f84ec1a-49f7-4541-86bc-ab7bfa0a8327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983fefbe-a619-480e-bdfd-e193f7f8adaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04dfc67-d55c-4b6f-aa3e-b8f00a80ff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2fd6720-2f3c-4815-9aa1-f0ac67aa063e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba1342a-8b15-43e5-a7e4-5fda23f9a125",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b95c1ee-f10b-4166-9dd3-98df33e13528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61670703-8ca8-4889-9a9f-56ea390a0b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6447b927-c4f1-4d00-a764-1cbce7d4b415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c56fc3e-e22a-4fa2-b786-de62e0ad843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a26cb8-0d59-4bf4-a134-afff9f92495f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0772a82-31d9-4700-9e71-9fad9e8920fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21efc82-02f8-41b6-ac7b-59ac94c51a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf520aee-1363-4de1-b349-dd7593b2a263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb9973a-71cd-4eff-aa66-dc7e11f70aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94d534c-daf1-4f34-8485-2bd69be781a1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d706ac-305d-4db8-b0e9-b5a65862af88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71257b3b-0457-48ef-94de-d76b6e312932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535c2bd6-ff61-407e-8a03-8285082cc5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3455e89-b012-42f2-80f5-13428e4baed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7faed45c-6540-4473-a36c-e5fa401bd147",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18115f40-7967-475a-94ae-c02d739b766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6b27d0-e99a-433f-9234-6798b77cb306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac90f0b-2539-4057-8a71-f97a5e8b7765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f288d28a-5ed1-48c9-b536-542f5768d6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68672c7f-beb5-40f2-9c4b-e67c378d6bc4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b256e136-69f0-44e7-9cc5-6adf9973716c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0825f2-a6ae-44e5-857a-b98c5828ba89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ebe039-53d4-49f0-bd2c-e1774be57040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80cfd0f7-b0cc-446b-ad4e-9ab38fa259a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d272806-d352-4322-b0ca-d22a726ba164",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448302a4-28fa-4a58-b8b6-3d2d2326303a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4b4ec7-6aab-4526-85ff-90486664e99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e925c7-0cb9-4557-b9f2-bafd86c13947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682cbad7-0f9b-4b2c-b176-a69660e61835"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44c7a4d4-b35f-4d6e-bb9e-00e305dc3832",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83447289-a9fa-4cfd-bd9f-80a98fa3121c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd60f1d4-1faa-4310-ae3e-90edfa391b9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4f89da0b-9f66-4e25-bc39-9dcca2d84e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0edb36-a06d-42b4-8b55-5ec9466c1257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9f80e07-a943-425c-9c37-d74f6cffe94f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f645693d-fa87-4980-a20d-9b35e6eb50ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98f55b68-14e5-463b-9614-e8626294af30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f84eb3b8-3b18-4373-9bcd-aec463633b54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35ca857d-f505-4220-a049-6ff8a4ff72dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16762e3d-482e-4490-83f7-c6c221958ae2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "da221bce-d43e-456a-adca-9aacce01e8f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9acb8376-85b0-43ff-be97-3069490fe5d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d5b279a-bcf3-4bd2-9e43-bdd1d2c59b01"
            }
          }
        ]
      },
      {
        "id": "878e2cf3-4ccf-44c6-b310-bf41317017fd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "92a63df6-9469-4ac2-8868-9e04ec03aeea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6caede21-d6ba-4f68-95f0-4ec135029818",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf9df12b-3a66-427e-be74-dc61c520683a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b20dea-a8f2-45b9-bc5a-197ebdd6b641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015152d1-8e24-404a-80fd-3a2d8efae14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdb12c0-371c-4502-8c3d-60648e313932",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ed1494-0605-4b9d-8416-eea27534dc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd43fdbf-4a2b-4c12-a6d3-2c551d8ad067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b63a6c-9068-49da-ad11-0b4d0e547ed9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cc4b65-ce42-4149-832e-306c2931ffb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a2d42d-356d-491d-a506-0645493e69d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a01c578-81a3-49a6-842f-a9f6b076b5ec",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb522b54-e337-4dbe-9388-a0a2256d885f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bdc59f-46ed-485c-a924-f4011eed8381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3406f51f-f639-4294-81ac-7c31a0884cf4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6717463-64f5-4c93-9f4f-ab7c7744cc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1337e09d-460a-451f-bffe-f2d6c74ae95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd72a1b9-1d7f-4b12-84af-eb697cb14d00",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d4c225-8bba-40f0-9c95-28484046970d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a60f7c7-dfed-41b8-abba-ac49787467ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56680d6-a10c-4a33-a34f-f656e3ce0de7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fefdda-679e-44fb-831c-b62f58557126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b76baa-a05e-4278-b960-91d64575bd7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4a3c40-bb79-4c59-83dd-49afd08da66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36ded37-2f23-4246-8cc6-0b94ad743bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bd7af5-5ad6-4c4e-9841-664e1393cc2c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0892185-aaeb-470d-b226-fc2bee36aa71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a08e5c-abc0-4383-a9cb-251d387e7779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ae7f10-602f-4552-b5cd-00c008b79916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba560b3f-c9b6-46d9-b822-a7e6b3a77cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328278e2-898a-401a-aa6e-ac4831004ed7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caa3440-5cd4-45d9-ba16-634ff65203fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79078565-32c3-4b22-aca8-6edd67bebe1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa070a47-26b0-42ff-ba66-95c74dea2a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ace2df-f5ad-41f2-8542-63c92f99e0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fa07d2-1065-441a-8b90-3805fc162a52",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bb072b-de0d-41b0-a907-af7dd300ed72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd2b652-3322-4020-b6ee-61467f7dae9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fe369c-136a-4ae3-8ed8-8b8b3249b8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e08da9-2438-4602-ac58-0b6574e73691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c69a79-286d-4858-9167-790245ae6f76",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b612c7f6-2790-4aa9-8417-2233338860f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899dbcb2-fddf-428b-a766-3b73b8e1f0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab169a91-05a7-4a93-ac31-788474f314cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e03278e-d27e-4d2f-b10e-eb72a429ae2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39de9fb4-0474-4548-b633-2932b058ad1f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec735ea4-fb0a-4bde-8daa-1c85eaebc6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a84c9d1-8abc-4b68-851c-dd8e065fb827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f1ecb9-4bd8-46de-b34f-4dcd98ca3fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdddf12-39e6-4b03-a617-155b6995b4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34186b01-6e23-4dfa-bdd7-86e9aca35379",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea4bcd4-299d-4c7d-b43e-6c594fed691c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c4ea79-0591-4605-97d6-c4c0704d2fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7769b4f4-2747-4517-84d7-017fd1245435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8cc4de-3bc7-4610-b294-06c32b8da806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7316387-6fb3-431a-b528-202483d0b72b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bd951b-eba2-4ab3-86ee-7553592e2cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3291c01e-2b86-4eb5-9b85-c96656330692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee935077-3b81-4d82-9edb-a088ff3b7fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c0a3c6-f282-4fba-a10f-0838cd7767f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d1b5dc-2240-4c46-9382-12ffe2dcac7f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f75e72a-95fb-4be2-87a9-cb144a1d6c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c0ee45f-d401-4856-b069-5989d630d2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9732d69a-9e7b-4c84-9835-17d49137b31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815d3eee-3a6e-4cc3-844a-81618d2d44cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9ebc56-46f2-4674-9241-1030689fea89",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757de2a4-1038-4d15-8e74-fa1ee1402b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ed06d3-6fdb-40af-94c2-0bf252e1c509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e03a84-93a9-449b-a0dc-5d837ba0344a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29e3592-021c-413b-803d-e983d05cc6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2f250b-df2b-4da1-a3cc-016cc85963a3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8c0fa8-1fbb-4f4e-b613-a815ceb1a9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4a7310-e839-4893-b031-9c7c20054883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27248bc0-676c-4a28-8062-6e32dead9ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b571132a-977e-4a8d-92e4-63f391516435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75362ae8-5434-4d5b-96c1-abc7a9d16193",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad427103-1be9-44b1-b029-6c062d0322dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca106a5d-08b8-4130-a535-c120bd527e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a959f6-1e31-4d36-9469-6845b8c0c7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1acee8-bd51-49e4-8e38-bdd27fc69aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f9ac77-0965-487e-ac99-0d19968a3bf9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03e1e45-fcdf-4160-ad78-2c2b514e97a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b407ac-9296-4706-8b67-60beee4970ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad40ad9-a701-4463-a8f2-c56cf0ba4015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d52a7ce-4a36-4412-a65f-f5d18733b72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57ec3ef-cc63-4c9f-9d58-74dddde6baea",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b914666-46c7-4c1b-b362-fecac8d2b8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c63d556-31e8-4970-932c-66a1bd098d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38a4cfb-c772-49a9-a9c0-4b2cffc553b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6c08e3-681a-484a-8cf0-8d84db0bdd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81a8217-8f2a-4234-bfb9-c64feaaa2cf2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74693e5d-9ffd-4184-8d9d-1292b7409835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98bfa5e-0d57-403c-88e0-531a4b959a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb04043b-2511-46ca-9461-905966adea69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991527a6-c4d5-4208-b018-c70e61a85ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32555751-2630-472b-9413-c71b428e74a3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eca194-58a4-4a16-abb9-b39261bfaa0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6196f84e-8adc-4f0e-a72c-74a6fa0d7db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f3c58b-550f-4030-9743-49875fdb039c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0afe21-5b3c-4094-b0f3-55d25baa5fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9780374-2baf-4a54-b622-d0fdd3edbacd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f27a18-e8ad-4502-b1ef-c19e4ecd24de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8100349-3074-42ed-8557-e20bdc6c256f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c233ad27-f801-4b08-ac89-2674c2d0625a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3e5838-781a-4c2c-adaf-ac45a5a3e499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb553cf9-3b2f-4d42-a767-037721cee71a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844a6394-0731-4f07-b2dd-a455de921376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c76709-b856-4c05-a38d-f26290f23aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e371d5b-61df-42e3-a423-5165ef58e415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1db530e-f70e-4f82-8eb6-9475a1734f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6859df-308d-4336-91f4-d542b227f7b0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b34eed-5d69-46b8-b8bb-414b99fd828b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc2a8ef-d430-473d-bba7-aee87c9056f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356feaae-7411-497f-8452-9b93fa0287ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19b4906-fa45-488f-8a6d-9ea34d925d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9b4cfb-9e1a-45d1-ae66-e575e2004c7d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d062179c-e0d5-4ee9-904f-d0c2d0c2fd85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d966a9-2fc8-4921-a624-6634b8d13577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379ed1c3-ab53-4c1e-b992-876972790a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181a08e9-c509-47cc-bf9a-5a140235f4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b860011-c37e-4cbf-a754-3c3806e6176a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb00d61-4a15-41b7-bb38-28aed41d51a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aea83ef-f1b5-4e0a-8414-0447f0f9febc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0e620f-e1ff-4cef-84c4-38c7c06b454d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a025255b-15c2-4bcd-a65d-5eb9f8418246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2724edd2-b9f0-4b00-9bde-b1f840e07f1f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a307b3b-ffa6-45df-aec7-10468c3bf621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1651833-01c8-425e-ae84-c9a1b8673d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86760e9b-9cb5-43a5-9744-c7543a694bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d628f8d-ecb0-4369-b484-3cfe0c3974bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93d67b7-bf0a-4b7d-8f77-206efb8ac639",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52306f0c-1dfe-4ef3-858d-afe88af8f326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a05e9e-1d16-4e2b-a1ca-196204270fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63faea6e-c8a6-420b-9347-12ccac3ab8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6e1538-aac2-42f1-9feb-11fcadb14bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae4093e-ee56-4736-8cc7-7b711d4f4f96",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c9afaf-d9bb-48d0-8605-cc16480e1b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9157bdda-2333-494a-ac05-5b52b8df4991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e37a52e-54f9-450f-a870-529e8214204b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcadf0cf-3bcf-4dc7-8060-75178ec980da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2b36fd-cdad-475a-90e4-21fd1d4c1f6b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616a8d11-a720-4133-85be-09cf9e76e847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137e826e-bc10-431d-8af7-4f260df83a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e32e61a-76e5-4a77-b9b7-617d033479ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3f7d0f-dd98-4f90-a440-32249a1b4bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b098e65-e8fe-494f-a45f-16e94f62bf26",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1d77c7-82c7-4ce6-8e59-3ebe0cf4db74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a86680b-d679-4fb4-ae33-aa3d15340e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870f7c8a-9a02-41cf-ac1b-103e7b4e26b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0664b4-c1b1-4924-98a4-e79e433c5f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7273ad9c-3025-4e7b-8667-8fa6e0c6b8ae",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c343a74-b425-4836-9f67-62383be9e398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "726f06b1-1aa6-421b-8900-adc118b84446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4b1798-65d1-4c3e-b85d-072fdb0e7666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6b092c-aec8-4845-b674-6eb0af023e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ded90d-0ea3-40b2-8281-b0e4bec462d6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8757f46-6783-4ae7-8ed1-4acf13b6c5a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f147de56-753d-4c5b-a7c1-c55b7fe83a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f65b657-38d7-4677-84bf-b4e8b7763a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9980485-1345-488b-912e-44c08726ece1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8703149-11e2-4ae6-b078-300d736d1a9e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f3cc3f-5533-4a22-bb7d-b5c503678299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b763dbff-9fce-43c4-8e02-ccb7480bf80a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bd79d3-3153-49f8-9b1a-7482d2ed426f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c25d9b0-e862-4591-b3a2-3cb7e4b66c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258d4bd8-99f1-4970-8640-ffd40b6a2fa4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ce65c9-d080-4de1-a407-5af04c7082f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479b0c72-97c4-4326-887b-e972ffb5b85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fac9b5-7e15-4aee-aca6-5903a6bd26cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c2c6b2-6eb7-42ce-888f-b80036b8b57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4098c7ce-16d1-4d4b-8587-79aca20c2e9d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b90a9a-36a7-4a1e-b4c8-faee01a53a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04cee16-12b6-40ed-9c9b-9d323a6d0ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5211c9d6-f28e-42c9-8dfd-112793c0f612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adec9f18-2597-442c-916b-f29cdb8a9ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed80a86-782b-4053-bac9-6aede6c4f31d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81190278-f1a0-45d8-b186-43dfc1b68e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cb9d5f-8b1f-4fbc-bf4e-9ee40274b763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e64d76-660e-4ebd-9f92-052dd134092d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65967792-55f8-4fd9-abc2-51c69a7994cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122c8404-1022-4f51-bc30-7af3df5c15bb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6990cda-402f-4765-afea-c2b9d22e0ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da023e1c-3b06-4a31-a39f-b3aafdef1114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e73738-830a-4595-8522-9b3c7dc5aa34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fa07a0-e1fa-4757-94de-32c84663291d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916ffff3-ee5b-4456-8ad3-7d0e91886cb8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99c8ef0-9460-4e4d-8505-17a5fe7714c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e4e948-eced-4f93-93a7-95683fd84592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62be835-f1ba-4929-9b94-a2119edec1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840164ff-cc22-4e92-b985-c248d7746ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e89f5d8-677e-480a-ae65-27cdfb3227f0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d596f65-8b50-4678-854f-e1c05bd0094e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbcd2fd-3e00-4844-be81-730af278e21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87ae84f-5728-4137-8084-ebb1a09c824c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0254942-144c-47bb-8598-3b1b1a576c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30374a8-f9da-41e1-8cb6-b36d5c889c01",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691b2068-5937-437e-9770-2c48659f70f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40578e44-56ed-4fd7-8379-b1c169f25678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a299b2-2ae4-42f6-bf37-0bbf72550a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ab2f22-a221-4f9f-9194-22e61c32e624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6100b7-4909-4667-ba72-6e100159088d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66e9491-4c81-4507-a843-4d36d53132f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a64e1c-c5c5-4b2e-9879-fbfc6b892840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15d1a1d-4d6b-40a5-8780-7fe95c00ecf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2138706a-7f96-4ab3-bad9-6e03b60cc40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc044ba-446d-46cc-ae1e-ee1cf24aa033",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f93d0ad-c84c-479a-afab-0aae53297301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1aee6fc-cf51-457b-ab33-71b627ac64de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6960c78-20a2-4111-99ea-1070684f1f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cefc93-a65c-4cdb-bdab-7a8cccb90b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7812e29e-8ef4-4feb-a194-fa991d2e6889",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d96a12c-497a-4a45-acf1-1c8e62c2f55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6239834-c4c5-4301-8c32-ca0c8941d35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdc38c1-1c95-48bf-b12f-c75df7b6ccb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab37773-5104-499e-9abb-36c677adb1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b18ec0-9d73-4543-88a1-7096c155b4b8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d98f99f-07d1-4b6a-8b3c-5506988e6f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e5575c-dbf2-45b5-8ac7-656dfb5cccce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0445287c-191c-454c-88d8-fb6c62eb7f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5d23f7-ac33-4aea-8a2f-0005efb19b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904342b7-65f2-4abc-afc4-836c360708bd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708cbdb1-3904-47de-91b4-2ed988d1cd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b3f4d4-a1ac-40d5-8b4b-27e6cb451444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bfca0d-950f-4bbd-8416-0b1298f560c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219f0bba-f095-4b55-8c26-a64487539fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e20692-ceb8-4e2e-adbb-bdeeaa0b886f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615ef963-49ee-4eb1-b723-b368b8e4ca4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72e7115-4d50-4186-8f70-ddf797db33d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a92846e-ebfb-4374-a05b-4863b052e1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cd7217-94b4-472b-ad33-2224e0ab19b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967c5cc0-17ee-49bd-adc8-702c8d16ec8c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15181dc4-ff86-4ac4-970d-162a08fad35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40c8f79-70fc-44d9-937b-651c7cb353d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c173b7d-34c4-46f3-93f8-0bb289a1725a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e6cda7-936b-4e0c-84d7-0f3435375bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d10ea2-0887-4112-8915-fc1c5d57bd59",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2388e0-510d-4eeb-829e-90817ddecb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e3b606-ad7b-4026-91e9-a5162aa36c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d534d6-b4c1-49de-b816-1fb66ce1fc48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b86b4c-a4fb-4a0c-b3bd-56b77a34c8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3f9844-541f-4676-8bb2-953298c4db5b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beedac3d-eee4-4e97-a7cf-0762e04b4061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251944f7-d024-4a79-9b39-2356b62f5cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83b706f-f666-4789-8677-062b1f179afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa39fc0-fb50-401b-bb89-01a305d34786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b85ca8c-bf67-474b-aa71-835f42b1495c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc2f2f7-a9b8-4b9f-a39c-6f6dab4115ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddc9e2d-c6e6-444f-b696-32bbf06ecd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7fa7b8-e17d-4020-913b-172a5a38ca2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05260b3b-4e6d-4f64-b47b-0d9a07ff1993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c870640-13b3-4f89-bee2-c78ce960b92f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c0a2f7-b625-40d0-a97a-77517154a352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bd141a-3235-40bb-a709-be7a107bdb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ef93c2-7f86-431b-90aa-ae43e847e0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdc9b56-c35a-41bc-bdf7-bac8b977a670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a8be10-bb8e-4206-ba88-7f066a89441a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c220c4-e803-484e-99ac-321f59c76063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079a025e-a6f0-4325-bdef-b09ab9106230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d68f98-2b3c-4982-b1fc-5bb516f8f3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2a2b90-3468-44a5-a585-e5bf1cc4b4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f0cb93-de06-4dc5-add5-ea7de6c6fc1e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3aa6348-a010-4bde-9a59-5ebfa480671b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e566ba16-208f-4f91-b0e2-abdb32f3eaad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2057b5-6465-4d2f-8c07-58ef47802da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50df7494-1537-42a8-8b2d-21235965ef06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc3d155-bbdb-4551-a718-acf4d737e6db",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cba79e-9112-46be-9275-f34b76409444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f944fb-1f05-413c-a99a-d078b906c1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5d94d2-1302-45ff-8f65-3c7f1986639e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbf1bc2-8499-42c6-aa03-656e07481dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc131156-e36c-4fe7-b135-44bd5b01b69f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f035a7-84a5-4e10-aa07-e5ff4d9f3bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6802512-3e60-4410-866e-fef009eb69df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5227a3-8a03-4a1b-8233-431457396598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5b92f3-2533-4900-b9c3-e35a827a1d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f9165e-d0ae-4af0-a808-a9f46ab00f45",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d0f938-8f6a-4fcd-aead-c9f99dc4abad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d26f8b-c3ad-434a-a772-72a5ecdf1115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c8c2a9-9f20-4adb-bf6f-759c7696f5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3af6418-0ecc-49eb-ba74-57e38c33dc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce67143-5cd4-4ffc-bf4e-2ba8bda9dc70",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef6fc6a-ea50-4bba-a658-3143bd616dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c68236-a68d-481c-97bc-2ac1da4d1bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847edf53-9007-4611-9681-fa51ab862565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a067bc-9349-4ce0-924b-20df848adbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1008131-183d-4469-897d-d8635e0f0972",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e3eaa3-cc40-4530-8300-e0234d35b455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79057b15-4dde-4ec9-99c5-e4d3c627aff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5152556-4609-4b02-aa60-897ebde5759f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d47ba32-3870-4085-b61e-7dc73b2bd6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a210512-28d7-4fa0-9750-b42a10d8ce60",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf08f687-b8f5-4f3e-9b48-ed7d1a7c4e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac13de5d-c33e-49a8-b08f-5515efe29e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d5a5d7-320b-4813-abe6-e22b78b8ce0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8d43fe-3654-4808-97bc-fcedff0a3c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3547b8-3a0d-4827-bdc0-c2929c489c11",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7f7a7a-2dfc-4c97-ba94-3b3c8a701001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf890ca-069a-4581-a4fa-44b539ce55ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3e49df-b3e0-44e4-8eed-78fd3690d063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227c438f-1c74-4915-b64e-80459c0a3070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472b5b00-79ee-4428-8405-52efe598c143",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c85d7db-a011-4983-8c8a-72d8f213633c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d01648-ad00-45ad-9166-9d2361b362a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9bbf6d-4900-43c7-9928-84ea9aa7bdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafc75e7-3021-480f-8e45-bc5028b36bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadee88b-86d3-445e-afea-45b055ebb86f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754d5772-050f-42e4-a842-35fa1836d049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a29318-f508-4f5e-b5bb-286862659363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dfa54c-c501-49e7-88a4-529667cfa5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe03489f-75d7-4141-9943-62703a513259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d3a56f-4037-46ee-8908-5cf122dde418",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af6bfd5-8181-4c52-97da-61a1240b2b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96fabd25-2464-4d34-8338-2377aefad2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddebaa0-73e5-4309-9565-c9adf5a59869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59069e4-fa31-48ee-b708-6ede269ce419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1235c68-0ae5-42ea-bca7-ab6fd95f4bd1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced88610-105a-4cd6-be4f-7bfc8b5bf2bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd3b9d1c-a959-4b2d-8563-cc1f4c20ffb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e55fb95-40e3-4c8b-bf09-2a1b34066a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8c6383-2db8-437a-94da-726fc791a43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fd3fc6-345b-4167-8f7b-95a64e3e08d7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14a8bea-96b7-49a1-9ec7-4c33eb7a7a89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d656c1-36ec-4a94-bc96-dfc4264f4a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4ddb97-e48d-47bf-a7ef-6b1c40b339ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de36c5ec-f3b5-40ed-9e3d-10d05a4f63f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4c09bc-d797-4be7-9d15-b3eebd3607e7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57a6463-b712-40a4-9fcb-96181a48d9df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f3b048-b082-49ca-a65f-1fedd3ce5301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a092c4-383d-42df-8945-94717e53633e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e27d703-adaa-4c2c-bd75-ec44e69e870c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05272a1d-8165-4ada-b618-a28e94b5522f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c8bfd5-f1c0-4e1c-8bed-269c7f9c887f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e396fff-5be8-4793-9c42-3c7f2d6a642d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f32684-42ea-477f-9c0c-803e12896f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5854775a-5976-464b-bc0d-d475f4a32640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76086ca5-e682-4430-85ca-71844f55d08e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6666d676-3ad4-47b6-aaa0-51f54ba9b973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e240c77-e2e7-4575-afa3-f4846f5561a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13e665c-ccae-4c88-8dd2-62fbc25df8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb99171b-4ef3-4675-bb1d-60b3b3841ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cb0314-c10e-41bc-acc0-87b9f8afe196",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47977504-ee9f-4dbb-bddb-4f3515d7ab1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "764b6dd3-3890-473a-bc3f-0cf4f9011f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d101c0d0-ec15-4352-b2df-c714b9cfb9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e730ab-442b-4f78-816e-1d6ece2d372e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bb5ee9-5525-4323-ba60-757368a2a84e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6b1da1-a3eb-4e49-9b62-62a90d394cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "140f3bfc-6f5a-44f9-bcb8-c5bed7528a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89354aee-f078-4a21-89af-bfcce8dffd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c135c5be-12da-446e-be82-c48496104747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fe3d4c-babe-4949-b055-79d897e2b586",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9a7691-b15e-49d7-86d9-2eab1c3ee252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc6b001-7f30-4173-a065-7de6a8285773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90d384f-e35f-4596-8b58-c49da2fb15f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3967dd08-657e-4279-b896-1a351627e894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ebfe80-bc1d-41e9-81cc-c1ec99364370",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11357b57-2992-415c-ac0d-795ef7917f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc47dc01-9daa-4d29-88cd-93dd39cb009d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be78e32d-3561-464f-9143-11188f76a6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec87611c-574c-4805-9a34-39e43c28e10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbced504-1be3-4eff-91ac-bf0717558ff4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229e99bc-bd33-4fc0-a5f5-ae09d385cf3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a54bfce8-9054-4743-90d7-5229a3716895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7a8c8e-8925-4dfb-99ee-07114f1f013f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12c46f6-46c5-4cf3-b2d7-edbb344986ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534069c5-50cd-4661-8538-06d097defef8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37739ef-ed82-4a58-932b-53f5866070cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff5feef4-ec54-48a9-a972-1a814545052c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb835e1a-8b60-4037-b456-c366c04151b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa41a112-fc64-4a35-9eb0-6c628ee5be75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1e77c3-d663-4db4-96ab-0b73981d1646",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff32e000-7de8-42d5-8031-aad04c264cf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd46871-5a69-4377-b52c-aded1d70f9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf901f4-48a3-476d-95fb-c93c3c0d0d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c47c59c-35f8-4ed0-92a0-0db182716390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c3abe4-f3a7-40d8-b342-16e53c96bd42",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f90ec6-7486-4246-bf58-b76fc1a5096d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b838fe-46ee-4cce-bd2d-fc0e59847684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d880b96-be1a-4531-9978-4b4569065b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e703093-bca8-4c8c-838d-0e21da1e30be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4414e56-bbcc-4832-896c-ca6a76e1b992",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c6b61d-f6e3-46bb-8c2b-558cf27af2b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64c18fc-baaf-4fb6-949a-c5e3324416ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e236d7-998a-48d6-b7b4-f07c9f0e9b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34719bc-6b07-4523-a73b-b97424ec3255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb13dae8-2c46-428c-b498-49d853fd5cdc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354102e3-1eed-4b86-acb0-8294a96657c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecfeb137-dc48-45b2-a2cb-74909686560b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34dcfa2-bf07-4e70-a505-502b749a380c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f122b5-c967-4815-aada-82c81b7614a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bd1294-55c6-492e-8854-c9e068918acc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381b1b7d-f242-4819-8d12-d58d3679cb89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1257d4e-abd7-423d-b00e-a1f32fd8dc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2800c81c-179d-422e-9768-c29e6af2a06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433b7da4-7145-4e25-a7cf-0da33e9565e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f250b2-7251-4503-b3f3-1c71fae67244",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2168fec-8980-4217-b008-6c613c5d0129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef571f83-88eb-4f58-9d58-af00537406fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20405783-6465-481f-956f-a74a4fd541e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2abf13-1017-4a56-89e5-ada23dba6e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28913840-5298-44d4-8587-4f8fca6b1b86",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388bfff2-201b-46b2-9665-36deb743fea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9d3259-ce6d-4650-b104-4de7606e7645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3553fca-6ee0-45e2-979a-6937675fc292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7854af31-2f8b-430e-a66f-5d75bd72dcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f672a86d-6517-4725-9c24-91b2922eed47",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8551b7-8c92-4670-91a5-3e086dc132ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e555130-d349-4bad-a24e-b381c316516c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac796c70-a04d-442c-aaf0-fdb151dbcebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079d63eb-13d3-424a-b738-0d8d6eddfd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0682b9-24c8-46a3-b0c4-0d4bb89c368f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e0406c-6455-410b-a89b-b58222660b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac38c59-3fe8-4be5-9503-03f9d0d5e07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bb53bc-27fe-4e57-ad21-849f062c5b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9f4657-0340-47b5-8134-6e092858e716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef5813b-58b7-469a-ad8b-3f2a7f6b2e85",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597cbf57-76d8-4a46-905b-45f5b5e743fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b3cda17-332d-4e4b-ae9c-a5dcfab17145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3510761-9625-4880-a6e2-548c37520ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a5027b-79f0-4f29-9bdb-ee00a8d9c8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a241424-4420-467b-b4bd-fb8d9607e476",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50aae639-30dd-4aa4-b637-5c1b5fafc18a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1108be78-5e6b-4480-84a7-31553e8d8c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84717876-d0ae-42ee-8fa0-e6ffc88bb2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b341a36-9314-4d5f-b0ca-92037b298f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52a8ba7-ba40-4fad-8221-b9904b7d7e70",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2a46db-d2c4-4e6f-bde0-531daae51bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302f4f7e-4d76-435f-8e1a-b4164eeacdc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7cdab4-d5d4-4303-a157-e00a9a440442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d302fd-30fd-4fdc-bd88-5b41035c38e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55d0fcd-2304-4dd5-92e9-538825293850",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a737dcdb-2379-4568-90b1-26132f9dc26f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9f7261-f185-4de5-ad4f-d991c8c08f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc6dfe5-730d-4058-a498-2a6260ef1984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e818b1-951e-4d50-a231-54971fba3c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f247adf9-6cae-4e15-b5f0-c285eea48e0c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d84b29-5d4a-403d-8ccc-287f07afa202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41519812-2245-4318-bb8e-843cab891e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6db7f8-20db-4563-bcdc-928249a464a3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e0fbaf-0191-4cc0-8a74-06314be69e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac074ca3-bc10-4d92-8c5f-1dd676076192",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7595e97b-fe71-4871-a29d-d89b0a5894d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c3affd-68a9-4b4d-b8eb-0419b1b0f8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f26eeb0-b099-4754-9305-99e15e5b2c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02aafdac-9ba3-4448-b12e-0abe1c17b1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1884b161-9ce2-4bd0-8287-b3c94500b018",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33659c3-47ec-4948-b96e-8906049ccf59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed4a780-d7be-4a02-9d57-ef15e983477c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bd6696-5cdd-4f94-9d98-71f5704fbd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636fc491-160a-45bf-9a4a-90dc9ffc650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e76be0-906a-4915-91a2-8cf26c9c6b09",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb88387-59f4-47c1-806a-05d59ac889ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e782ca45-7735-409e-94e4-d027ee88a3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae208ce-cd55-49cb-93c0-918c255d4d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad9d44f-3eff-4278-8454-64af245955fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908592a9-e93a-4dc3-a103-981425fe0814",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c91674-0fde-4b0f-b40a-b9ffd821147f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9b14f3-6717-4b24-ad42-ba3c9dd14829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdc214e-c775-40b1-9fc5-045b2c647eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e798853-a701-46cd-9d13-8434d47eab0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f41875d-8d7e-43c5-a6b3-b24a17f6161a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060561c3-5164-4210-8df5-357e6d1a8ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4976e53-f0d2-4fd7-8223-16ef827ef303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10328726-2b77-4a7f-8cff-438aa04f0924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c484522a-371f-4d7c-a45b-20b0c6e7a4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228fb5b9-541d-469a-ae9e-d6de52cfaf7c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988cd0ae-05d1-4c55-8451-1aca74dbcd8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba7acc19-a8a7-433a-998b-76086be81e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8886a4-f73c-4bf7-bd30-9f96f9669879",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa138ba-0844-45b2-9026-2cc0744450f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5ca3f0-84be-4df0-80b8-dcd876396ac7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db4f3ea-445e-4492-a78e-9d53d6d34a88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32686f9b-c792-4c16-90de-2f70fd5c631a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7353800d-9c1b-4132-ae7e-6c8918c24b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ac847b-c941-444a-8cbc-f4159be9eb6f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1e5e352-1126-4a63-8cc3-a8f079faa922",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ed515b1-0d90-4548-95d5-c426a2bc732a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d430e8a1-7477-4533-8d35-54a9b4ceeaad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "021dac87-e127-4ba3-a649-4b533d1bd940"
                    }
                  }
                ]
              },
              {
                "id": "e7714249-ac4b-4454-8629-2fbc139f2f2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae77a9f0-24f7-4747-988f-eb5648c2b8b0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd58947-59b5-4dfd-9372-8127935d4815",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8026044b-d322-4560-b9b0-22f16fa4f52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e898334-fdc5-4dd7-97da-48832f92f405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01ecbad0-75f0-4fb0-89e8-2f57cff862f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f05eab11-8c18-4f5a-9df0-b7a6a8adb813",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bda5436a-49dd-4467-a732-3dc665b6bfaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "972a22af-4e4a-48c3-ba14-2be90b96a589",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52aab637-3bbe-45ad-844e-693ee506bc55"
                    }
                  }
                ]
              },
              {
                "id": "b9c4f6c8-e556-4b1a-841d-ac4159f8cf24",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5e75f3a5-14c3-4309-bd3b-2a4675aa8054",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666a8ee3-67c0-431c-86e8-9001d0b1ad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a49175cf-8007-4922-9064-5c4ac2e2b8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6167885-5188-4978-8d6e-7ba875007e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78706435-fb26-4cf2-9f3c-b4698a6246ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a0a6c7dd-b8c9-45a3-b90e-f950abe7a36f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e627cdb-773c-467e-a8ee-3108dc9b369c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bd35d45-db7a-4297-a196-ca736c2c519a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9a5c44d-6ea4-4440-a2bb-7009017ed4f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb2d88e7-3850-404a-85db-93e31495d2de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b688babd-8f18-49c4-b878-2e298196fd5f"
                    }
                  }
                ]
              },
              {
                "id": "6b2858e5-696d-45cb-a9dc-841d76e49baf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1346428-0c04-4c9a-adf1-ac30c1ed97c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "600eefea-59de-4784-8943-3857ecdca85f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8393a6b5-1700-4b86-b42a-24c6e6640a03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaf88316-bfdb-4211-b17c-2c5cf0f580f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1be95d9b-91ed-44ef-b254-cc64de4cdfd1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4245f483-a4e8-497c-9519-d953396bdb3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01ebdffd-9412-415f-be6a-430db90733c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b65e168c-5f32-449c-bb94-8d9f6efb1c58"
            }
          }
        ]
      },
      {
        "id": "6ab60459-c83a-4eee-bccf-1b0a69a80ae5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "08d09fe5-f1e0-4a4a-bfac-8fde59ffb3d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ea6b77d-4e5c-46db-a57a-2f84fdd3376c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ea036c6-dfb2-417f-b3b1-cf80db136b86",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca320c47-2525-47d0-b139-4272b363da63",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6b41daa5-f461-4424-9663-fc900927506c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5206b8a-9bbf-4ec5-8c3a-71faf0785df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "916d3c27-d657-4026-bf10-9f2e5eb32309"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c57326fe-6d35-490b-b9ca-3eb830a012ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7edda37d-3820-4f09-8602-8bcbe95bf150"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8d4455d-dc3e-4c5e-bbbe-624e202c1b84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f558d2dd-5e4a-44ea-804a-9b4212b72ad1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3319532e-2be2-44b1-ad4a-176ad50de0d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b969135f-76b3-4b71-99ce-f79199c7b336"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbc4d13d-7786-4f95-978d-8ed2a04f197b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c579e97-f829-4ab3-8027-a75293d33bdc"
            }
          }
        ]
      },
      {
        "id": "205fa489-f4e0-4e0c-95c4-4352947d7467",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bcd59ce7-a2d9-48ed-9792-aa5f38a3a44a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ec7f05c-4b62-4573-9e53-93d47364781d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "680378ff-b5d3-400c-9f92-b3a03c4af3d0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49117fa2-897c-471d-b6cc-67e2f4905b08",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d954ea2-92d4-40d6-8b61-396e258462c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91682950-9ee6-43bf-935d-0892778ab91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b1eaf24-8fd1-4b50-be56-5d81a0a2f0cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e6cdf6c-bf78-44eb-836d-95385d8f1bfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92d5bb82-e881-45c7-a64a-687236fa8e39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9376792d-d165-4ebe-928a-9c09d17395d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e77f58b1-428c-4178-bb2b-38bb507be31a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "017f2089-ef00-4e5b-a629-ad64e555d1a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "26ddcaa2-0e66-44d4-b4dd-1a9edd9011db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f338f395-5b5b-446d-ab2c-00121c6982e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1618b8b-7c0a-470f-af66-509a3627464c"
            }
          }
        ]
      },
      {
        "id": "88536f75-e75b-4b50-b883-c51e25c50c4c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "38ad2b05-9315-4d5e-af1f-6f4bb54dd22c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21dbfd41-00b6-48a7-9c48-4f8cbf563797",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e142b9b-9cd2-46ac-9808-33092ff83f6e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a12b962-7bd3-4a33-a1fd-bf3b27d138d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10f12073-2b3d-4bfc-954d-3000f877bc41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671b6f14-6d28-4a8a-8d98-49c3a796f385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "221c0c09-134d-41f0-9013-e4811bb8e342"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc5b791c-7d00-4d66-859a-c72699e8f43a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a280591-8ed8-4e72-bdd5-efe36fcad11a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6354876-6e99-45b1-942c-f3231ccdaed8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c909cb6d-c38e-4c50-84e3-9462dc788086"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c30ba274-c218-4651-90e7-379728000468",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98eb2636-dab4-4b29-9509-b1ba5c91da04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0788deda-9a4d-4bfb-8255-bab17f70ed74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6554274-4280-43df-a2c7-7f36588ef14f"
            }
          }
        ]
      },
      {
        "id": "ecb04381-79d4-4685-830a-caa71efbe22f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58221c0e-dd43-4159-bf1b-0a7e9c966a68",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da045f12-3470-4cb2-9766-96ff11388455",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "950a1915-585e-4a43-8da7-fed07809170a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62d1c944-14cb-4b6f-b49e-b015bf67080b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5549fe16-70d6-4cd7-8309-55e73a86c8f2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 140.44912280701755,
      "responseMin": 20,
      "responseMax": 2985,
      "responseSd": 329.85183549045723,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701736589295,
      "completed": 1701736638644
    },
    "executions": [
      {
        "id": "d3b0e24d-aa53-4548-abef-4ce08e1a6d50",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "39278c0f-5c10-4413-9728-f288f6fc3875",
          "httpRequestId": "80558091-734e-4485-a66f-4c193bbc5c6c"
        },
        "item": {
          "id": "d3b0e24d-aa53-4548-abef-4ce08e1a6d50",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a1c6d19-371f-482b-8e7d-d005c50a8c4f",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "4e2b6287-facc-4822-b430-1dc65bb02f3f",
        "cursor": {
          "ref": "cb4423cb-186b-4269-bbf7-0adfbbc85b59",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f4ccaa8c-af7d-4205-8a80-99552f15193a"
        },
        "item": {
          "id": "4e2b6287-facc-4822-b430-1dc65bb02f3f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "68f99f96-e4ac-4cb5-9e16-ccb763373067",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "c4834a1c-4570-4b42-9345-3f1496c47237",
        "cursor": {
          "ref": "d7856e49-c967-4f1d-b349-1984023769f2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "84e6a995-eb62-436b-83af-38571b48565b"
        },
        "item": {
          "id": "c4834a1c-4570-4b42-9345-3f1496c47237",
          "name": "did_json"
        },
        "response": {
          "id": "46616a4a-1770-4944-99f3-fc01ce95df36",
          "status": "OK",
          "code": 200,
          "responseTime": 664,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf977e41-e3c4-4211-b27c-8ee2c39981ba",
        "cursor": {
          "ref": "64a3e71f-2403-4933-bac8-db59ecbd2468",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a84ef858-5960-4f7d-a64b-44cf948ca769"
        },
        "item": {
          "id": "bf977e41-e3c4-4211-b27c-8ee2c39981ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "a3b915d1-f484-4731-be86-cdbbb80cab74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf977e41-e3c4-4211-b27c-8ee2c39981ba",
        "cursor": {
          "ref": "64a3e71f-2403-4933-bac8-db59ecbd2468",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a84ef858-5960-4f7d-a64b-44cf948ca769"
        },
        "item": {
          "id": "bf977e41-e3c4-4211-b27c-8ee2c39981ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "a3b915d1-f484-4731-be86-cdbbb80cab74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfeac26-89af-42fe-89df-9ba8889cb346",
        "cursor": {
          "ref": "20eabeb3-516e-44c3-8d7b-b9c7d2923467",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d7b24cd6-1738-4fe4-b623-298dd94e2d21"
        },
        "item": {
          "id": "bdfeac26-89af-42fe-89df-9ba8889cb346",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f041c327-5e22-4da7-839a-bfa6cfecc813",
          "status": "Not Found",
          "code": 404,
          "responseTime": 148,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19d48f0-abb6-4805-98da-4f03f1424712",
        "cursor": {
          "ref": "b17fe0ef-ca2b-4203-9c59-1223e291d8d3",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dbdd1bc8-1054-4efd-b8ea-e793d9fc02dd"
        },
        "item": {
          "id": "c19d48f0-abb6-4805-98da-4f03f1424712",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7ea785fc-f68c-4ebe-b6a8-fff925987777",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0974576-6d1e-40b7-b197-997dafc3bc12",
        "cursor": {
          "ref": "c22fcb27-7915-4fb0-a9b9-7452190f6586",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "416a9be0-74eb-4940-871c-44e4f161c027"
        },
        "item": {
          "id": "a0974576-6d1e-40b7-b197-997dafc3bc12",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "66558805-865a-42ff-9af2-7e9d5112740b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01248250-091c-4520-bf17-1b4881aede76",
        "cursor": {
          "ref": "924d6f25-060c-4774-9e6c-6e304142cfef",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6bf2b789-9d96-4301-b9a5-33f63c2f3dda"
        },
        "item": {
          "id": "01248250-091c-4520-bf17-1b4881aede76",
          "name": "identifiers"
        },
        "response": {
          "id": "4138771d-e18a-4ef6-a5ac-6fb45685c367",
          "status": "OK",
          "code": 200,
          "responseTime": 327,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f4348b-1e0f-48f5-a904-7392b73c0391",
        "cursor": {
          "ref": "813f80a8-5476-42d6-96cf-2321aedb8020",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c9806d3c-c768-4670-a0ab-9233c66c05ce"
        },
        "item": {
          "id": "e5f4348b-1e0f-48f5-a904-7392b73c0391",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a34a974c-5f80-44c9-84e2-f2cf96d90355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477d7b49-637c-47c4-be0e-7ce44d7eb976",
        "cursor": {
          "ref": "2f4b9a10-71a7-449e-ba71-e21795754775",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e009017-6750-40c1-8ad7-26b47b33ba54"
        },
        "item": {
          "id": "477d7b49-637c-47c4-be0e-7ce44d7eb976",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8b99ac0c-585d-4e86-8b04-964a66e4511e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce9b9ae-1057-46cb-be54-0c8e4e86d16d",
        "cursor": {
          "ref": "3bb983c3-c504-49cf-bbd2-46a39b9c1f9d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9645ba79-38c5-4027-865e-28a793c4ffb2"
        },
        "item": {
          "id": "cce9b9ae-1057-46cb-be54-0c8e4e86d16d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dca67d9e-74dc-4eb7-b6cc-3729ebc7f587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a61fb40-839a-4f08-a267-fc9a3c8e7379",
        "cursor": {
          "ref": "f8a7a7c2-f39d-472a-ad63-b0d1c7f8c64b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fd073c35-be62-4de1-b23d-aaf97e95118d"
        },
        "item": {
          "id": "2a61fb40-839a-4f08-a267-fc9a3c8e7379",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d7df7dd9-b727-47f5-9781-348263be1b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73204df3-d0d0-496b-a0f6-60155fa96c68",
        "cursor": {
          "ref": "ca62e71c-f070-4bcf-ba4d-3c554fea8b22",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "014c096b-ec8d-4a84-8aa8-d5cbc5499442"
        },
        "item": {
          "id": "73204df3-d0d0-496b-a0f6-60155fa96c68",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0f45dff3-0503-47f8-aa41-7b907a84c453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a157ef98-c9a1-407e-9bbb-76e0f59f0434",
        "cursor": {
          "ref": "d7224710-bda2-4abc-b222-53624dd9edcf",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "958558c6-0a26-4fc8-977e-0d90067c752f"
        },
        "item": {
          "id": "a157ef98-c9a1-407e-9bbb-76e0f59f0434",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1b33c7dc-106b-4c83-98a7-a97c82edb0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a16a6a-08f5-4609-a015-454c1cdf7e08",
        "cursor": {
          "ref": "9e05c3b9-b23b-4ed0-be9d-9a5ade03fdf6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "25d80842-ac55-49d2-afd0-9122c3760597"
        },
        "item": {
          "id": "84a16a6a-08f5-4609-a015-454c1cdf7e08",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bcd441c2-c9a0-405b-8581-0c7c8361ad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eab8c6-b37e-4625-a486-eb8c3a647e1e",
        "cursor": {
          "ref": "c4b10056-fc83-4e9c-8f5a-daf0777eb940",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc8e4516-f483-40b1-9c02-6dba65271e42"
        },
        "item": {
          "id": "f9eab8c6-b37e-4625-a486-eb8c3a647e1e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "011ea641-4e20-48b7-81d8-86dc56ede9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2f05f9-3afe-42a3-8d3c-f4430c586d3a",
        "cursor": {
          "ref": "21b08a57-d927-4e10-8453-a4c40836fc22",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d7de0e06-d97c-4748-b2fe-3d653b8117bc"
        },
        "item": {
          "id": "9e2f05f9-3afe-42a3-8d3c-f4430c586d3a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "61c933b5-e2b7-4ec6-b5bd-e94234026363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76729e39-8ad7-44ce-9be9-d7c1ff42ed97",
        "cursor": {
          "ref": "80546f4c-87b8-4b1d-a3ea-ae0de3d115ec",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8b3667a7-21c5-44e4-9808-1b59f0bc1f6c"
        },
        "item": {
          "id": "76729e39-8ad7-44ce-9be9-d7c1ff42ed97",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1a5fb36c-1ccb-45e2-a9e8-0c2a28147d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64606d4-46c1-4b3f-b120-8cac9c88e733",
        "cursor": {
          "ref": "809a38eb-c1c6-4172-b0bb-fcb9f95b8d6d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bc74232f-ff0d-44c3-afdd-6dae26bb8c9f"
        },
        "item": {
          "id": "d64606d4-46c1-4b3f-b120-8cac9c88e733",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ed6a41df-fd08-4aa9-91c1-271e6eef860e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d0d627-bd71-4bcf-83e3-634bf3698ed1",
        "cursor": {
          "ref": "0e9d528e-f961-444f-bb85-9cf3f66a2f3c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "453ca77b-c3ac-445c-87d6-2c1a81ed2b3a"
        },
        "item": {
          "id": "86d0d627-bd71-4bcf-83e3-634bf3698ed1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "58f1af3f-a01d-4e26-9d8c-10946ff974f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2997f8fd-6317-40b3-b5f8-cabe96e50318",
        "cursor": {
          "ref": "58f7c878-0401-418d-acbd-b3824c4bfc70",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "43a91b83-aa92-426d-8a36-9a514efccd45"
        },
        "item": {
          "id": "2997f8fd-6317-40b3-b5f8-cabe96e50318",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c8b0dd38-9c4b-43ab-90d8-ec5bfa7031f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49422f3-7a04-4a50-b2b6-201ec5a675c6",
        "cursor": {
          "ref": "3a139c62-5938-4b08-9bbf-2f2615349c48",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c9b8eb61-48e0-4701-9f3e-af87447c1302"
        },
        "item": {
          "id": "f49422f3-7a04-4a50-b2b6-201ec5a675c6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "12ab54e0-aba7-4806-88ea-07831423e372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff470f2e-58e8-458e-ab32-27ddd3282766",
        "cursor": {
          "ref": "5e1f498f-35a3-413c-8caf-574dfb5f4b2a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a22a9d70-704c-4e56-b063-11e36c56011b"
        },
        "item": {
          "id": "ff470f2e-58e8-458e-ab32-27ddd3282766",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fdd66f9b-6288-402d-9088-7061ac8012cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8ee2d0-58fc-469e-a832-c9426fa7895a",
        "cursor": {
          "ref": "127b9300-4c57-41aa-8d48-2147c5b445e4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "293632d3-3086-4ed4-a639-32a6dcfde7aa"
        },
        "item": {
          "id": "dd8ee2d0-58fc-469e-a832-c9426fa7895a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b9106e59-e689-4b9e-b793-3d770cbfd6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b778e5-fee2-4a19-893e-4b75c2185247",
        "cursor": {
          "ref": "51b091f4-2347-4264-a087-70ea726af91f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "350e973f-c763-4e86-9eee-58d7614e4153"
        },
        "item": {
          "id": "81b778e5-fee2-4a19-893e-4b75c2185247",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6df93aa3-6e63-46ab-8adc-74016e3979be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72abfc3-ddd5-4df3-8f9c-6c42495ac5d7",
        "cursor": {
          "ref": "02890d1e-062c-495b-9ac0-6af7e06884f0",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ff9678d1-ef0f-4442-a650-764890eb996a"
        },
        "item": {
          "id": "d72abfc3-ddd5-4df3-8f9c-6c42495ac5d7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e8cf9c58-fb90-421e-b31d-48b27e5d47be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcce88c-a0ed-4a1c-94e1-cd4f1a258333",
        "cursor": {
          "ref": "5ef2da9b-c255-4384-8340-9c198dd130ee",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0215f4a0-3818-4def-b33a-358a31625882"
        },
        "item": {
          "id": "4fcce88c-a0ed-4a1c-94e1-cd4f1a258333",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fa9cf3d4-82f4-4693-a37a-ae6b6b72606b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6807b5b2-2fed-4488-85bb-faed723882cc",
        "cursor": {
          "ref": "41d886b9-850c-452d-9f80-47549eb2c88c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f0c2d6d0-8629-41d2-9c50-4972a777344d"
        },
        "item": {
          "id": "6807b5b2-2fed-4488-85bb-faed723882cc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "93d2a117-9841-40d6-8899-b9c8c68abb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab03200b-7c52-44e9-98cf-a85079cb07a4",
        "cursor": {
          "ref": "06b4d244-78fa-47cb-9b20-f811ef1e3036",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ea890959-2132-4747-bede-8e64b7665bba"
        },
        "item": {
          "id": "ab03200b-7c52-44e9-98cf-a85079cb07a4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fe83ad64-84f8-4e6d-b84f-edcfe2b3ae44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf71050-5cc7-4316-91cb-09c1eaf70ac8",
        "cursor": {
          "ref": "854ca9fb-7999-488c-b4b0-a28cbe427ce7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0d015464-44ae-4e85-9ab1-0116ada51ec2"
        },
        "item": {
          "id": "6cf71050-5cc7-4316-91cb-09c1eaf70ac8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9e04ed40-8dc4-4d0c-83c4-5887ea2aa26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63411dd3-6198-4f8b-9e50-0fb0133151fe",
        "cursor": {
          "ref": "a144028d-40fe-474e-89b7-30f903d09e6d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ad26db8e-2cc4-484d-9b0e-5dc12de3cf49"
        },
        "item": {
          "id": "63411dd3-6198-4f8b-9e50-0fb0133151fe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7d34b02a-14ae-4a1d-8931-3e4b33cf5367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd43b124-3fba-479e-9a79-8a1dda432181",
        "cursor": {
          "ref": "174cdecb-4cc6-49c7-8743-fa3cf3fc8092",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "65caf77c-17f8-4c43-8b4f-7778ed220b75"
        },
        "item": {
          "id": "cd43b124-3fba-479e-9a79-8a1dda432181",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6493659f-be04-4f5a-b639-82d5026daa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4167816d-c5cf-46ba-ba59-68e18d109c0a",
        "cursor": {
          "ref": "e7f4c561-0a22-4096-b85b-972ef653e76c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "04ae7dbe-2aa2-462b-ad80-ff1dc2470f52"
        },
        "item": {
          "id": "4167816d-c5cf-46ba-ba59-68e18d109c0a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1187d0b9-ca41-462b-9d6b-3c0d1708fc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66fec92-0eb5-4530-a7b4-7c184e7ebead",
        "cursor": {
          "ref": "f210ddce-ef55-42c5-8096-58b47abb7994",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "27a0bd96-b204-4911-8564-196e10eefb83"
        },
        "item": {
          "id": "a66fec92-0eb5-4530-a7b4-7c184e7ebead",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "27d14178-5926-440a-b716-e251b0a2d5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db20f571-7990-48eb-a5ef-085dfe9a1665",
        "cursor": {
          "ref": "b8c715f0-db6c-4d53-9401-0feb092658b3",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f5752493-e339-4e72-8e3a-0b808c7658e5"
        },
        "item": {
          "id": "db20f571-7990-48eb-a5ef-085dfe9a1665",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "590c85bc-2008-44d1-912c-0d2d707d6c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905e5465-2a26-4ced-80cb-3b874b1d6421",
        "cursor": {
          "ref": "1bef9940-13c3-4caa-b722-62ed2331a6bc",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d9d472e2-fd1a-4a0a-a028-da63a6373e67"
        },
        "item": {
          "id": "905e5465-2a26-4ced-80cb-3b874b1d6421",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "18ab4f38-2afc-4897-9594-29852ea61bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c402b2-22fb-4874-88ee-30a9a130721e",
        "cursor": {
          "ref": "4eb72353-d37d-4803-b0fa-c16d0670efa9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b29427fd-6725-4aaf-a96c-c466ab8ce725"
        },
        "item": {
          "id": "25c402b2-22fb-4874-88ee-30a9a130721e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "19fd02a0-f0bf-48b5-989f-c74d9948a1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9f0785-e7b1-4918-a631-78bd1122fe00",
        "cursor": {
          "ref": "54b0c717-2c9a-4a40-845a-12201efb30a2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d23a135d-19a5-4bee-b6c8-441d92508af3"
        },
        "item": {
          "id": "fe9f0785-e7b1-4918-a631-78bd1122fe00",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2dca64aa-ca17-4286-9bbd-1737cbd5597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22d5264-9075-4403-a88d-c1d81b1df1b9",
        "cursor": {
          "ref": "f5a858df-be86-4e75-8111-ddaacf2942fc",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f202694d-429f-4e19-bd13-4c5261529038"
        },
        "item": {
          "id": "e22d5264-9075-4403-a88d-c1d81b1df1b9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "801bf280-62ae-465c-8098-20c96dde8d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726818b1-1e95-4b61-a4f6-8d1830a3ad3a",
        "cursor": {
          "ref": "7be7c09f-4371-4617-b3b4-5cf94b1a1340",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1d4a0759-1a34-4a4b-bc3d-0893eadeb4ad"
        },
        "item": {
          "id": "726818b1-1e95-4b61-a4f6-8d1830a3ad3a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ab46d04e-41a1-4d19-a9f2-743ccae5fcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38b481f-adfc-4ffb-afb3-348bc4fdbc74",
        "cursor": {
          "ref": "f416eb35-4bfb-4a6f-9319-ecb37ae22a03",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "67aa4042-5427-4259-9848-02dff0eee80b"
        },
        "item": {
          "id": "c38b481f-adfc-4ffb-afb3-348bc4fdbc74",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "32142711-dbe7-4616-b73c-cefded3c8171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49807cf0-80e7-4257-bf35-1a2ccbf31e8f",
        "cursor": {
          "ref": "0cd5a440-4a4b-4bfe-924b-3007ebbfeb03",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "edccf48d-3a4b-44a2-aea5-02249873bdbc"
        },
        "item": {
          "id": "49807cf0-80e7-4257-bf35-1a2ccbf31e8f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1bf45b01-523d-4661-a7ef-c0893bab7061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1630d9b-2956-435b-9815-53d2834ae9a8",
        "cursor": {
          "ref": "e574fe44-0567-4a8f-bf52-203ae06b799f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "750bb91d-c4db-4f79-baab-f991f194fb04"
        },
        "item": {
          "id": "a1630d9b-2956-435b-9815-53d2834ae9a8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1a61dd83-d6a6-47f7-8a07-62e5080a72cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1a5db1-4a9e-426b-91d0-8c791464e40d",
        "cursor": {
          "ref": "5c416236-de58-409d-a2fd-a9963a3d21f6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1a387aeb-f1e8-42f7-8602-db49b9d27f1a"
        },
        "item": {
          "id": "db1a5db1-4a9e-426b-91d0-8c791464e40d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9fb6e0bb-2a39-4133-950c-cb57ad9bb784",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 355,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adadb01-a66c-4f04-a1fb-c7897c262d14",
        "cursor": {
          "ref": "f1143296-09b6-4014-ac4a-86a0d32c4e7c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7e3101e7-f696-4674-8b4e-5faa2ce310a7"
        },
        "item": {
          "id": "2adadb01-a66c-4f04-a1fb-c7897c262d14",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fc2aa589-55d8-447a-ab68-c2c563f8f42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd736cb-2ab3-4e03-91a7-10f20fb108fb",
        "cursor": {
          "ref": "c5641ace-113c-4da2-b467-942bde85d429",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "03a9d9be-74c1-4151-9c99-e366da18df27"
        },
        "item": {
          "id": "7fd736cb-2ab3-4e03-91a7-10f20fb108fb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "639c54f6-ea65-45d2-b9d2-4f1ed2b75e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1c173-c1ad-4b95-a255-473471374046",
        "cursor": {
          "ref": "06d4d72e-7a57-449f-9981-e48206fbc41c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a2cb848e-dd7b-4450-a494-a52f04744977"
        },
        "item": {
          "id": "baa1c173-c1ad-4b95-a255-473471374046",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fa32aeb8-df17-4578-9d97-7c722f277469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79d6afb-0012-41f9-bf22-7f83c24bfa5e",
        "cursor": {
          "ref": "4cf0006a-a1ea-4154-9d34-967364990e2e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4488796e-df67-4941-b8d5-5dec156e67f9"
        },
        "item": {
          "id": "c79d6afb-0012-41f9-bf22-7f83c24bfa5e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3300fe2c-1640-4106-9434-dee7a8e96c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25d6bab-fed5-4116-9f2b-68a15ff1b2cd",
        "cursor": {
          "ref": "0e6b60cb-30d0-49e1-b6d4-eae1019491f7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b6a8c8ae-9758-4085-acec-cfc11b517927"
        },
        "item": {
          "id": "a25d6bab-fed5-4116-9f2b-68a15ff1b2cd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "efc3f1d7-9d54-4539-8159-400d50ea0f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a880cc-ca83-49ee-8a22-612dc0762ebf",
        "cursor": {
          "ref": "d599f55e-fc0f-4b9b-9c24-07d5849df3e9",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "52646957-9071-4c72-a862-179aa42b882c"
        },
        "item": {
          "id": "e0a880cc-ca83-49ee-8a22-612dc0762ebf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0d718851-c11f-4dae-972a-ead5768f425a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c424e4-63ea-499e-9339-a912a731efaf",
        "cursor": {
          "ref": "7ceeaab8-79fa-4950-87f5-08b4ba3dc11c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "27a59525-35c2-4b05-a5d0-22c0b4911e26"
        },
        "item": {
          "id": "33c424e4-63ea-499e-9339-a912a731efaf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "abc3d63f-6ba6-432b-9c98-794da6dfc96b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 359,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8920a3c6-b5b1-4e78-b2cf-43f21c958d6c",
        "cursor": {
          "ref": "5c09fc6e-78d1-47f4-890b-bcfddca7511b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2df25b31-a490-40be-825e-e8297c4aee01"
        },
        "item": {
          "id": "8920a3c6-b5b1-4e78-b2cf-43f21c958d6c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bfc85414-a69a-492a-9a6d-855f26fe6070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5bb6d3-57e1-454e-a6d9-5be757e75f96",
        "cursor": {
          "ref": "7afd2ab1-d4e2-4eef-9128-d4c0394ac6e2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c35fbd29-a36e-4ab0-96e2-7c687f872068"
        },
        "item": {
          "id": "eb5bb6d3-57e1-454e-a6d9-5be757e75f96",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7ae59566-4a77-4fac-8e53-8296b502c4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6262a4f5-375d-4981-862c-3076900d720f",
        "cursor": {
          "ref": "9d74f2dd-de19-4bf0-a248-992512ffabd5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9fdb48a2-18b5-4de5-9d7e-8155c885bcd2"
        },
        "item": {
          "id": "6262a4f5-375d-4981-862c-3076900d720f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "32c1011d-741d-492f-95ab-10570c565071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aafbaff-b154-4f14-81df-8e2304210204",
        "cursor": {
          "ref": "aac42d4a-feb5-4c42-b99b-cdb2276db65b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e037d440-f974-4f3a-9832-2580f5ec1fce"
        },
        "item": {
          "id": "4aafbaff-b154-4f14-81df-8e2304210204",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8dcee33a-ed98-4956-a316-0e974665d7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef46bd47-84d7-459c-852a-aa6377bb0bb2",
        "cursor": {
          "ref": "4a3f32d8-4670-42ce-94c1-9c6595c28095",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ff1fb207-1ef1-49a8-b94c-c83ad6af6d16"
        },
        "item": {
          "id": "ef46bd47-84d7-459c-852a-aa6377bb0bb2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ba522982-50ed-4672-bfc5-af9f04add0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ed164e-fce3-442f-b75a-bc1122502da4",
        "cursor": {
          "ref": "d70e53a7-a08a-494e-b399-e1e2424be579",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cccef4cd-7b95-468f-8c99-e1555e8debc3"
        },
        "item": {
          "id": "81ed164e-fce3-442f-b75a-bc1122502da4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9b2368ef-3db6-4528-ad3c-bfa084e4b873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ee8df8-1b94-42fb-9044-2931985bbe26",
        "cursor": {
          "ref": "223133e6-7625-4556-916b-97a3ccd47ec3",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a93f3f34-ede5-48e0-8ab6-498bc75bfeda"
        },
        "item": {
          "id": "e9ee8df8-1b94-42fb-9044-2931985bbe26",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "96153615-119e-43c6-a960-5f9e7bf8ede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3494ec0-abd6-4780-bc08-7fcbd628e382",
        "cursor": {
          "ref": "67133893-a4b6-48be-a8af-2fb4bbce5e3e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "86770c60-7e85-4a00-85e6-8e84610b4049"
        },
        "item": {
          "id": "d3494ec0-abd6-4780-bc08-7fcbd628e382",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c42755df-dd7c-4123-9b72-b743655a94a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4136d1e5-fd88-424d-bd42-58f6e06625d6",
        "cursor": {
          "ref": "f1211cac-500f-496d-ad61-d3369fe1c881",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ac7e307c-4186-47f6-aa2c-dacec573cc39"
        },
        "item": {
          "id": "4136d1e5-fd88-424d-bd42-58f6e06625d6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1df70a76-5ec5-42d5-aade-124ce5d6b18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ca4327-d68b-4daf-9b9a-cb54f352a2b1",
        "cursor": {
          "ref": "8b282b24-1f89-4a33-bcc9-edf71318be55",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "53a0e1d9-862b-4a2e-aedb-efd08b551428"
        },
        "item": {
          "id": "c3ca4327-d68b-4daf-9b9a-cb54f352a2b1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "777ccb66-a4a2-4126-b7fb-5c4a6404ced3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdeedb4-d064-481a-8481-74b6e694de78",
        "cursor": {
          "ref": "21f8df6f-d370-4e8c-a8fe-4ac154838cd7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b8079f58-e91f-4f1f-80bb-6f7f548cbdfa"
        },
        "item": {
          "id": "3cdeedb4-d064-481a-8481-74b6e694de78",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "03c058bf-972e-4f9d-8b2b-bb6568245b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ec1aa0-94c4-4d0d-aa28-461681a4489e",
        "cursor": {
          "ref": "b2c017e9-a408-4c4a-a02e-0f01a50590fb",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e08dfdec-77a9-436d-b100-47dbb784ee11"
        },
        "item": {
          "id": "c2ec1aa0-94c4-4d0d-aa28-461681a4489e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e3f87c2a-325c-4ec4-9cf7-d196442a09ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b23a04-70be-456b-9f37-a12e1351d1b2",
        "cursor": {
          "ref": "36486747-1026-43a6-905e-c64aa7bf57d0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "acd202ee-8350-47e1-9135-10598918fac6"
        },
        "item": {
          "id": "b0b23a04-70be-456b-9f37-a12e1351d1b2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fdf18e4b-03cd-4884-8249-8a1adece48e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe8c0b3-64d5-462b-ba3f-974447957c47",
        "cursor": {
          "ref": "fab7293b-be6d-4630-ba66-7391c03674af",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "df6bcbe0-c74a-4cfc-ae6e-df23a0356fb6"
        },
        "item": {
          "id": "bbe8c0b3-64d5-462b-ba3f-974447957c47",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b6c1422c-faa5-4700-9ce1-ebc285dd5c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00aee640-e6ec-4e10-a297-4cb844c1c598",
        "cursor": {
          "ref": "72334f50-49d1-433b-8f02-b957c8e20f72",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "45492ee0-a5fe-4ac7-b541-193bdc9b91c7"
        },
        "item": {
          "id": "00aee640-e6ec-4e10-a297-4cb844c1c598",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8828f9ac-ac6b-4662-b333-b1301919c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75315846-1ef2-4c71-bf6d-23f339bfce4e",
        "cursor": {
          "ref": "743f437a-9de4-45c3-a95b-3d0bd33ce27e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4d6b01fc-ffd4-42c6-aefd-ac0d5a927fb4"
        },
        "item": {
          "id": "75315846-1ef2-4c71-bf6d-23f339bfce4e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ab0429d2-9a3f-4486-b48c-b321b8334a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa62bd3-1596-473f-b137-ffe522860442",
        "cursor": {
          "ref": "0e3839f4-d0a6-44af-80de-cafd682654ee",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c63624ce-f5db-498b-92c5-30a9545f9700"
        },
        "item": {
          "id": "dfa62bd3-1596-473f-b137-ffe522860442",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "abc05ac6-7c1f-447d-b585-5504bb1a875f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9b35af-5dc1-4936-a936-7bf8850cb583",
        "cursor": {
          "ref": "fcfb8ea8-e83f-4a58-9d84-2b40bb544b02",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "349af619-a732-4655-a8b5-dd0d7df04e5f"
        },
        "item": {
          "id": "cb9b35af-5dc1-4936-a936-7bf8850cb583",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5aca1594-745b-4c40-95cd-c7124606809e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa9f24f-92a3-42f6-a0c1-dc437b1a7635",
        "cursor": {
          "ref": "8f594909-abdc-4903-8138-5f53d547b1a8",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e61dacc7-f23a-4d1a-a467-eb948312bf71"
        },
        "item": {
          "id": "aaa9f24f-92a3-42f6-a0c1-dc437b1a7635",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1c7a444d-eba5-41a8-91a5-03f207edd31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526bff6b-b737-4c76-8cb1-a265b9e3b5df",
        "cursor": {
          "ref": "ba581b49-1b6b-4998-bc63-c5461cdcd4f9",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "680b6403-7b22-40d6-9b80-d350f42a726b"
        },
        "item": {
          "id": "526bff6b-b737-4c76-8cb1-a265b9e3b5df",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "eaa0262f-0dea-4b7e-84f2-78654b7ae211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acc1387-35a0-4c51-9ad2-1eca515bfb2c",
        "cursor": {
          "ref": "e84ef494-64dc-4310-bbe5-eb4ff957cbdc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "58273bfd-3efd-4b3d-9e32-f5f62b7eb279"
        },
        "item": {
          "id": "5acc1387-35a0-4c51-9ad2-1eca515bfb2c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f5e031d2-681f-4d8a-96c0-aaf642eeecb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86532da-8d9e-47fd-b8ca-3f04f7a0fbe5",
        "cursor": {
          "ref": "28aa6d5b-b7c6-4ecc-847d-44ac915722bd",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "426a872e-1b25-4678-9d83-1b18ccf1febc"
        },
        "item": {
          "id": "a86532da-8d9e-47fd-b8ca-3f04f7a0fbe5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f06d9574-a102-48e1-b772-b4d4d609795f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44be0f71-9592-4bc2-a3bf-c5cd69b27fd6",
        "cursor": {
          "ref": "cdc001b4-b3d4-4671-8a95-b5a8171b9090",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e8430207-8329-44e0-8dc6-60e08b8d51fb"
        },
        "item": {
          "id": "44be0f71-9592-4bc2-a3bf-c5cd69b27fd6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "db387619-0bb4-4a08-8714-0e7d5416fa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d610426-da47-4023-8495-7e4fa11c869f",
        "cursor": {
          "ref": "02a4379b-ccdb-43ce-8352-91e7a020af66",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fbeecd9c-233b-4768-be5e-999283006a44"
        },
        "item": {
          "id": "4d610426-da47-4023-8495-7e4fa11c869f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b1cd0233-b47c-490d-811e-aa79649ba26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d7f20a-3afb-44bb-87fb-2c52f31ceb58",
        "cursor": {
          "ref": "07ab7349-560a-4646-829d-a810ccaa6628",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eed6c975-4d42-4445-b3c5-67cfc727ff83"
        },
        "item": {
          "id": "f2d7f20a-3afb-44bb-87fb-2c52f31ceb58",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a46782ef-997c-411c-b7ae-7553996a10b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac665b3-82e5-402e-ab09-0bde185df6ec",
        "cursor": {
          "ref": "74390d52-840e-4e16-bf92-3843f02f0256",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6d8eebdc-abed-4320-b166-87519c3711a9"
        },
        "item": {
          "id": "eac665b3-82e5-402e-ab09-0bde185df6ec",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8deaff94-106e-4ba7-8ebf-b38e5508349b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d1e834-a845-4208-8791-47aa1f21101e",
        "cursor": {
          "ref": "326261b4-6a32-477a-aa3d-ed35ce245f76",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "61267c7c-28d5-484d-8c57-176d51c27943"
        },
        "item": {
          "id": "d8d1e834-a845-4208-8791-47aa1f21101e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4850cb2e-7089-42c5-ad57-17d525799792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee50cf4c-9bad-4456-9cda-e3eab00680df",
        "cursor": {
          "ref": "73e0fae3-9bce-40d4-9cb6-1881ce277665",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ee7de424-4f70-4e1c-9ca9-f86f8543818f"
        },
        "item": {
          "id": "ee50cf4c-9bad-4456-9cda-e3eab00680df",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dfe87ded-1231-4a7b-80be-f4fefb13855e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87263e6-c730-4089-85a9-bcb75ffae1a5",
        "cursor": {
          "ref": "ab803874-cc7a-49c5-a246-83d028570a98",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "634bfb7a-862a-45e7-ab89-30d5a7687c10"
        },
        "item": {
          "id": "f87263e6-c730-4089-85a9-bcb75ffae1a5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2278ad23-e2e3-4f42-ac98-bd3774d90d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004bddbc-9f3c-43c0-a50b-6e4d3edc99f0",
        "cursor": {
          "ref": "47b2a928-23ca-4696-98f6-be0b529ac9f1",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b2614683-c68c-4d41-a8ec-d6bc82303974"
        },
        "item": {
          "id": "004bddbc-9f3c-43c0-a50b-6e4d3edc99f0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "773e426d-e0b9-4021-b997-847cdc8e9054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b207c60a-43aa-456d-b806-0fca98535199",
        "cursor": {
          "ref": "bcc400fb-483f-4e06-9012-923cfeb1237e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ffe5e26a-6b0d-4b05-993b-8da9d1e1b69b"
        },
        "item": {
          "id": "b207c60a-43aa-456d-b806-0fca98535199",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "43041e97-b155-4bcc-9cc4-289941336591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3959588d-b1e0-4cef-9bbe-8fd12293f13a",
        "cursor": {
          "ref": "deaadecd-22d7-4b86-a0c5-213797b1aeb0",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f4ca8cfc-971b-413b-856b-db91a6a5c4e5"
        },
        "item": {
          "id": "3959588d-b1e0-4cef-9bbe-8fd12293f13a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a7277352-ca95-4f64-bf07-d8693348bacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c705811-97c1-468d-8d34-5668f93559cb",
        "cursor": {
          "ref": "06e14549-8fe3-4242-bf07-ce0f6338dd1e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0e846acc-fd65-45df-bb0c-bb385830339d"
        },
        "item": {
          "id": "4c705811-97c1-468d-8d34-5668f93559cb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "54d65500-63ae-4515-a2ed-5241c93c7404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1126918-c1f2-486d-b9ef-61025b5cbc3d",
        "cursor": {
          "ref": "dea1caab-6e15-43a8-af85-c721d4364825",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2ce384e7-863e-4d9c-a914-61cc5328a847"
        },
        "item": {
          "id": "f1126918-c1f2-486d-b9ef-61025b5cbc3d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5af3e701-e786-4f15-b1a5-9890c99c4720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acb2aa5-274c-4b90-bcab-ea90067546d3",
        "cursor": {
          "ref": "434e9bac-5102-475a-878d-f2230977f0ba",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1a017f0d-9828-4766-a067-feb1032756c8"
        },
        "item": {
          "id": "3acb2aa5-274c-4b90-bcab-ea90067546d3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8d8e6d96-0708-42ae-a2a7-693ed21f4774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abd6f25-1c65-47ed-92ec-f3c06987ae11",
        "cursor": {
          "ref": "58fa1b7d-9867-4674-993e-bd323e5321df",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c00bb6ee-5427-4f0d-8d03-e13b71b0000b"
        },
        "item": {
          "id": "9abd6f25-1c65-47ed-92ec-f3c06987ae11",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "80a5137b-96e2-4077-a92f-983d08ec923f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f366df4-697f-492f-80b8-d098d5768728",
        "cursor": {
          "ref": "7103f50c-0d01-4151-85b0-40d977099f2f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "54eefd75-eebd-4683-a326-071ae23feb8f"
        },
        "item": {
          "id": "2f366df4-697f-492f-80b8-d098d5768728",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "981bd591-ae5e-4f3e-adf6-895b048cdf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fe57dd-dc13-45b3-a1f3-79375200fede",
        "cursor": {
          "ref": "0656880d-fa42-4d18-9f18-f9fc6482564e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "33be28d9-cdfd-40f9-bdd2-7591b4e61ef0"
        },
        "item": {
          "id": "81fe57dd-dc13-45b3-a1f3-79375200fede",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "19daa099-c2fc-4334-85d6-e9b0dc3f100a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d237052-7efb-43c0-a2db-63335e740419",
        "cursor": {
          "ref": "c56d0970-f71b-485a-8a77-4bb2d8781c92",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d93154f3-fc6c-4101-a28d-24e2fce2ff0c"
        },
        "item": {
          "id": "2d237052-7efb-43c0-a2db-63335e740419",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1d0b45e8-f2df-453a-95af-c5e24ed70646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddd53a2-55f4-4ac7-a1b4-c85b3c64fe5a",
        "cursor": {
          "ref": "cad474c1-8435-479f-98c5-554a10546944",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4e8ea872-1432-48fd-9962-1cdf9e9c020b"
        },
        "item": {
          "id": "7ddd53a2-55f4-4ac7-a1b4-c85b3c64fe5a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d4be1553-1ee0-45b6-bb58-a0f21b37b9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd70fa7-3fe9-4092-a810-e43e18847a4a",
        "cursor": {
          "ref": "e4e8026e-7c13-455e-b307-9f959ad22499",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "06d50ca5-80d0-419c-b05d-64600bb62fa0"
        },
        "item": {
          "id": "0cd70fa7-3fe9-4092-a810-e43e18847a4a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5fdebfa1-3999-4723-921f-a9358b4d544a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e221b8-dd9c-4139-8bd6-b8e1a99bac03",
        "cursor": {
          "ref": "be0a6c2c-344e-4ff3-a1c0-a90e5d9c50bf",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d023d245-114a-4ef2-828b-970c4407079c"
        },
        "item": {
          "id": "00e221b8-dd9c-4139-8bd6-b8e1a99bac03",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1a507d39-fa6e-4338-aae0-2d0d5ece7d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909a6824-e220-437d-b3e4-1f8c54a3afb4",
        "cursor": {
          "ref": "a5ea0103-e396-4cbe-b848-4766ac725d23",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "df509cb6-2319-4667-b606-56d25fd70512"
        },
        "item": {
          "id": "909a6824-e220-437d-b3e4-1f8c54a3afb4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5ebea090-10c3-468d-86fe-f39e100914d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224d140f-6914-46b3-aa34-7e2cb6451551",
        "cursor": {
          "ref": "7b7c5aaf-6295-4805-90a6-63bab8e5db06",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7bf57382-6344-4dd0-9075-764d3ae6e360"
        },
        "item": {
          "id": "224d140f-6914-46b3-aa34-7e2cb6451551",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fc9c79e2-5fc5-4780-94e6-9a4338f195a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c0d22d-a919-47c0-8955-e927a38e18d3",
        "cursor": {
          "ref": "fd27fcfa-813f-4e3f-a5ba-116528284f16",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "290d7155-fe62-4005-99e1-1984ef290556"
        },
        "item": {
          "id": "a1c0d22d-a919-47c0-8955-e927a38e18d3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c27f727c-d005-436c-9bca-801da8cc5dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2925d6-ec17-41fe-b2f8-25b6c4557f93",
        "cursor": {
          "ref": "9e42681d-344c-4872-bd6a-63e32033ebcc",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "26f29a74-dfdb-4951-830e-87ac5f203f05"
        },
        "item": {
          "id": "2a2925d6-ec17-41fe-b2f8-25b6c4557f93",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5c83530a-b934-4fb3-a65b-fd7798dc62ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e1169f-f0fa-4cc4-8569-2d44349febec",
        "cursor": {
          "ref": "5935138a-b54f-4c11-a996-dc07e0464cdc",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "10b48a03-6e87-489b-bb3c-03afea3d0230"
        },
        "item": {
          "id": "f6e1169f-f0fa-4cc4-8569-2d44349febec",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ed53f09c-6760-4f51-a589-88f45ed9a525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7d1271-d656-4398-abd9-9bf67d56dd4c",
        "cursor": {
          "ref": "d8c94c35-4ebe-43a1-87a3-75a567b4093d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "639938d7-04c4-45dc-98f2-3dfab24f1a42"
        },
        "item": {
          "id": "8d7d1271-d656-4398-abd9-9bf67d56dd4c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "822b680b-7ebf-46c6-ba5b-cf672b6555bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178aa12a-759a-4393-8620-414fe4d732db",
        "cursor": {
          "ref": "f4e51a85-c4e3-43dc-9a57-c214ba53b78a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "eb1fde9e-72e1-4487-a5fa-abd8a4b6d654"
        },
        "item": {
          "id": "178aa12a-759a-4393-8620-414fe4d732db",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "61dced53-4bf5-401e-ad0f-658bdb39ef72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a926a4-fee0-4d88-a7b0-acae3e56de39",
        "cursor": {
          "ref": "692f4f3a-9654-4def-a732-03088565232c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ac3a6591-8996-4eae-9f64-8b41c3743fe2"
        },
        "item": {
          "id": "d8a926a4-fee0-4d88-a7b0-acae3e56de39",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a2e062ad-dd1b-48ad-a219-98b1a08f8b17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fef7f4e-b2bb-4b60-bff0-d5aebafb23ff",
        "cursor": {
          "ref": "8ee21a1f-6ced-44f8-b727-918f44af9eab",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "59132d60-1a61-48c3-b57a-6622a9d62138"
        },
        "item": {
          "id": "3fef7f4e-b2bb-4b60-bff0-d5aebafb23ff",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dc072376-6343-4e83-b721-47923e1618dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a8d211d6-9131-4a98-8a07-01a95fb4bf9b",
        "cursor": {
          "ref": "3a6d64c6-4a6d-4818-ab51-fe0f2047ee6c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "db57a709-f782-460d-95b3-f8dafbb8ad8c"
        },
        "item": {
          "id": "a8d211d6-9131-4a98-8a07-01a95fb4bf9b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "051bd09d-21e0-4863-b637-11c4c8a781ec",
          "status": "Created",
          "code": 201,
          "responseTime": 2616,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6201354e-1f05-4bb1-a06f-84ace2705fb3",
        "cursor": {
          "ref": "70274e31-e703-406b-b96c-4b0835e7ab19",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4ccd96ed-a5b0-4d89-93ab-ecf8aad0218e"
        },
        "item": {
          "id": "6201354e-1f05-4bb1-a06f-84ace2705fb3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "744315e4-cbba-4e90-9fd7-6f9d4584e3f8",
          "status": "Created",
          "code": 201,
          "responseTime": 2985,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "350ef4b3-9a05-454e-9d17-bdbb6ac54cc6",
        "cursor": {
          "ref": "df4e32ac-9bc9-4c7c-9837-a2d4ea43483f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e5cb5e16-88f2-4765-afbc-abcb9ee6c6a5"
        },
        "item": {
          "id": "350ef4b3-9a05-454e-9d17-bdbb6ac54cc6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "414d6a11-8c28-4bcd-8497-0832d6c16f2b",
          "status": "Created",
          "code": 201,
          "responseTime": 2182,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b8cc04-e266-44ad-a4a8-166f624fbc59",
        "cursor": {
          "ref": "52642919-26f5-493d-9898-25001bab7f02",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d51d6bda-2645-4475-bc50-a2630107d252"
        },
        "item": {
          "id": "91b8cc04-e266-44ad-a4a8-166f624fbc59",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bf9cfff9-fbe7-4054-a9fa-a16b20979e5d",
          "status": "Created",
          "code": 201,
          "responseTime": 2046,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a355cb3f-a6d1-443e-a08e-0a11c2f1905a",
        "cursor": {
          "ref": "a76b96df-0a2e-4352-8973-d7535ad63795",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ceb0548d-b061-4227-8eba-ab89a822ba8c"
        },
        "item": {
          "id": "a355cb3f-a6d1-443e-a08e-0a11c2f1905a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a72f39db-23d6-4561-9236-5503e41bc88c",
          "status": "Created",
          "code": 201,
          "responseTime": 2047,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa6025b-0f63-46bf-a692-99d2229385ec",
        "cursor": {
          "ref": "497de778-3f08-487b-8406-c7a97304a308",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c0db2d50-1f10-4dc2-861d-20b8c4705b6f"
        },
        "item": {
          "id": "5fa6025b-0f63-46bf-a692-99d2229385ec",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4d58d6e8-6dda-4c95-868d-eb2ea22ba2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "408d21d3-259d-460c-b5ec-04e54deca41f",
        "cursor": {
          "ref": "2cbbbb50-504b-4781-98f5-fecb08f52be4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "904c4430-eb05-48fa-aa6b-25b421ffcdb5"
        },
        "item": {
          "id": "408d21d3-259d-460c-b5ec-04e54deca41f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3169f5e6-220e-4c42-9df6-c5e80f5f79c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549cdf34-8168-47d1-a925-2c504515ef36",
        "cursor": {
          "ref": "804d3d43-8d24-4667-ab5d-cb2a0d63128a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "17e09744-437c-452b-9880-5cfa82c6a2eb"
        },
        "item": {
          "id": "549cdf34-8168-47d1-a925-2c504515ef36",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "077fe8b3-80d5-4556-ac32-8719e7f0d3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb279f75-b11d-4655-ad58-595ec156869a",
        "cursor": {
          "ref": "7a0b1fad-d2ed-42c9-bc03-06bce9f212a0",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "01b836ad-afe0-4c3d-8b07-7ab6815d41dc"
        },
        "item": {
          "id": "eb279f75-b11d-4655-ad58-595ec156869a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6c4afac3-f147-4e0b-98ee-0da2bef7ef90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973b2334-e2cb-48c7-8403-c1851c25f300",
        "cursor": {
          "ref": "e9e807fb-b278-43a7-8018-9c30b3df48e0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "517206eb-aebf-4587-9b75-3913d2466e04"
        },
        "item": {
          "id": "973b2334-e2cb-48c7-8403-c1851c25f300",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9b26c464-25f0-4151-bd34-aa69b54300d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ae8dd7-b958-4500-b7cb-bfe294b344cf",
        "cursor": {
          "ref": "5b3ef7c3-e9c8-45c1-b6a6-2ba569454dba",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "36a20691-2108-4c74-9e94-066d309bcab5"
        },
        "item": {
          "id": "39ae8dd7-b958-4500-b7cb-bfe294b344cf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "def97e4f-7ca1-4293-b41d-7e191679bc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca278643-b9eb-47e4-982d-a19b88aff860",
        "cursor": {
          "ref": "30967311-60cd-477d-bc6f-888bb7813617",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "eb9d023b-34db-4e3e-928e-8e601132e7e4"
        },
        "item": {
          "id": "ca278643-b9eb-47e4-982d-a19b88aff860",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8a38ee55-8264-4592-ac1d-9e758cca703e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5b48d0-3bc0-4ccc-b82b-6a5ad5c55c4f",
        "cursor": {
          "ref": "fd0fcbd7-d0a5-4293-9fc4-033efda754bd",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "49c938d0-7f3e-4306-b8b0-86c2b82b8f51"
        },
        "item": {
          "id": "7c5b48d0-3bc0-4ccc-b82b-6a5ad5c55c4f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "94659b43-b6d2-4cc9-9d25-f408969ee282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d27221-56ab-4480-aa2c-25f33f59bfb0",
        "cursor": {
          "ref": "f76415a2-9fec-415f-8c5b-0ff2471dafed",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "31ee9cc2-01f6-4f6e-a393-38a449d7e3f9"
        },
        "item": {
          "id": "76d27221-56ab-4480-aa2c-25f33f59bfb0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ee9e0b26-7986-47ae-97f5-4997ab6168b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2c5870-477b-404d-b35c-1e265428ec24",
        "cursor": {
          "ref": "c3e647c2-832e-4b98-9754-e540f7714cbd",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "58c6e584-1fa6-4596-b03a-c2e93cd1b582"
        },
        "item": {
          "id": "4e2c5870-477b-404d-b35c-1e265428ec24",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "539abbf3-2e46-4974-a621-2f1ad6434c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac14536-0111-42af-9687-a7647e53a38f",
        "cursor": {
          "ref": "f4a9565b-4c8b-4f36-88a4-3542009892b7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2fbaf74a-c2d8-4bd3-9bec-31a421250e25"
        },
        "item": {
          "id": "3ac14536-0111-42af-9687-a7647e53a38f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bc9885cf-fddb-469c-b7cb-b36b98d79bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18ca9b2-5977-4d1a-943d-3a240cedabd0",
        "cursor": {
          "ref": "f92957b1-7dfc-4543-8c94-6ceae4b8854a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "660a189d-c2f8-4145-8f5f-10be76171ce2"
        },
        "item": {
          "id": "e18ca9b2-5977-4d1a-943d-3a240cedabd0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "29785d12-b51a-4613-8301-cda6e4db9278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941920b3-5c1b-4c21-93d5-7b130682680f",
        "cursor": {
          "ref": "ac41595c-d548-4de3-8e0d-1113ef381905",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "298e8e0b-1635-4f88-983c-adf5f43aec4c"
        },
        "item": {
          "id": "941920b3-5c1b-4c21-93d5-7b130682680f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d1f02203-ca24-475c-b48a-0e3414d53ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8144842-d805-4b59-82b0-2ad69ed37859",
        "cursor": {
          "ref": "78551b68-2505-484c-9ffc-a76e39b42d0c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f99f44bc-aa30-49d9-bab5-7783a71351ce"
        },
        "item": {
          "id": "f8144842-d805-4b59-82b0-2ad69ed37859",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2a26edb1-3540-4079-a743-2159542f7aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47fd189-07a6-42b3-a040-d9249f87b81c",
        "cursor": {
          "ref": "c2cdd46c-6b62-4f60-9de2-a37fca111e9e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "03d9800f-0303-482d-b98d-9ed4b42310c7"
        },
        "item": {
          "id": "d47fd189-07a6-42b3-a040-d9249f87b81c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4bee6458-cb4c-4d72-87b6-467bc83f4351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d74153-386e-4cbf-ad91-35355be9d98b",
        "cursor": {
          "ref": "b804028d-1625-4ac1-84e6-57dae1b3eabd",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8dbbea5b-4645-4571-86c6-c9651873b80d"
        },
        "item": {
          "id": "55d74153-386e-4cbf-ad91-35355be9d98b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a472203d-f20c-4ba1-9d23-a9de5fd69a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec63540-751e-4bad-bf6e-ef19fca5d172",
        "cursor": {
          "ref": "7cee648f-9310-4deb-b159-a6d0c096977e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2628c1ae-e84f-4ea0-961a-5aef69f932a6"
        },
        "item": {
          "id": "1ec63540-751e-4bad-bf6e-ef19fca5d172",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d481e784-9474-4b8d-a820-ae36b17ffb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d443d2-0b1d-438d-afef-a43302470008",
        "cursor": {
          "ref": "bb51b03f-d28d-4da4-b43b-0feebff2cd4c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4a8665e6-cb59-42e6-bd4d-8683d856c734"
        },
        "item": {
          "id": "57d443d2-0b1d-438d-afef-a43302470008",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "16e4f4da-4810-4b4c-9676-ef33bb1e1ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0a2bf4-15af-410b-ab0e-9214d6a254ba",
        "cursor": {
          "ref": "c0a2fb92-156b-4015-b7c4-ce0e93b4057e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bff896e5-1c9d-4279-b80e-334fdb5a56fa"
        },
        "item": {
          "id": "fc0a2bf4-15af-410b-ab0e-9214d6a254ba",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "581860ab-ec61-4048-ba21-ed41673c4aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de8f06e-26d7-44c9-b9ae-c018261dba52",
        "cursor": {
          "ref": "eedb1208-9238-40bf-abe1-4a2e5e37ffcb",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a797fe48-d961-477a-b97f-257e9740168f"
        },
        "item": {
          "id": "6de8f06e-26d7-44c9-b9ae-c018261dba52",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "24960e41-d134-4c4b-9478-160d1c49f690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3423fccd-151e-4d7b-8b2e-8d5db753ca9e",
        "cursor": {
          "ref": "c146ecd6-e708-4f7b-8bd8-d498268808d4",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3f6b922c-8fe7-48e3-8207-788f8b3a6cf0"
        },
        "item": {
          "id": "3423fccd-151e-4d7b-8b2e-8d5db753ca9e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a33b48b3-48e4-4677-a7a0-bce0670c458e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f384c4-51be-4daa-9eff-ecf8c7cb343d",
        "cursor": {
          "ref": "0ea6aa58-3708-411f-a657-586d8cf15927",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1ee6304b-15f3-48bd-bc37-944160aa879f"
        },
        "item": {
          "id": "f0f384c4-51be-4daa-9eff-ecf8c7cb343d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "34591d94-3095-4f68-9fac-db85c5032fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5539d138-4aeb-4042-9884-717bdd67efd1",
        "cursor": {
          "ref": "d14aa5e6-f913-43cd-87b9-b867f8c776b6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "edafa82c-adf9-4f4d-af13-bc4e789f994c"
        },
        "item": {
          "id": "5539d138-4aeb-4042-9884-717bdd67efd1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0db497c8-82f9-41d9-8b64-2da62a07dab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26ae67f-0169-4383-9cba-9f3f051d5a56",
        "cursor": {
          "ref": "de043e05-a177-4a1c-acee-3aafb4b2bbc1",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "24096a87-68f5-4ed7-94fe-1a6b79d964f3"
        },
        "item": {
          "id": "d26ae67f-0169-4383-9cba-9f3f051d5a56",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7d4465cc-dec7-4f63-bb17-4bd16c344823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e45a97d-21ee-4a31-aa80-292d5b133c5c",
        "cursor": {
          "ref": "50ae2a2b-2e08-423e-ab4e-b6420427cbd3",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1e7762f5-70bc-47d3-9aba-6c421a0b3b1a"
        },
        "item": {
          "id": "8e45a97d-21ee-4a31-aa80-292d5b133c5c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "be00dab6-de2d-46db-84f0-f298a11b0031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0e0a89-112e-4300-b917-5e06338dbd03",
        "cursor": {
          "ref": "f6557004-5e59-415f-aa41-0a38f811999f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c0929a2e-4d08-4234-9e33-ebf2b6bfd6cf"
        },
        "item": {
          "id": "cd0e0a89-112e-4300-b917-5e06338dbd03",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "edb547f1-a349-47a5-9faa-360e1ae579e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4028f314-a2e7-4f35-95ac-4628d6a62d99",
        "cursor": {
          "ref": "561ecca2-de5d-4ecd-a93a-55579a2b9524",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e07264ad-c3c3-4b89-81ec-9a5a8f15a922"
        },
        "item": {
          "id": "4028f314-a2e7-4f35-95ac-4628d6a62d99",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1ea297da-12ec-47f8-aae6-4338e5722016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd74aff-0252-44b2-a813-5aa5d148bbcd",
        "cursor": {
          "ref": "817d3d58-fda4-4a65-ac49-c980364bd71b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0349e193-f09f-4bc5-a9b9-e807796abbe6"
        },
        "item": {
          "id": "dcd74aff-0252-44b2-a813-5aa5d148bbcd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f345abb6-8357-46e3-b551-a9686fbfd2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61707766-e0e0-4d24-b5e2-4a3475513606",
        "cursor": {
          "ref": "c6176fe7-dcc0-45e0-ba1a-1f419125332c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "14d43569-fc39-4322-8d36-96d3b0113a5f"
        },
        "item": {
          "id": "61707766-e0e0-4d24-b5e2-4a3475513606",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b912d959-c963-455e-a745-82f0480c3107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f6590-f782-41eb-b4c5-aad624283d60",
        "cursor": {
          "ref": "da59b193-6ec9-4c12-90e6-df3c64a0f11f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "19c0fa76-139a-4df5-9ff6-190b207e993b"
        },
        "item": {
          "id": "b27f6590-f782-41eb-b4c5-aad624283d60",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "efef05cd-b29f-4a22-bdea-d4fb9f2e7629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee994a1-7d98-4b61-b6e6-b0ce4a9cc486",
        "cursor": {
          "ref": "7932592a-9dd2-44a1-accb-6939220b4146",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fb2f24b2-8b70-452e-b0f2-48318734d1e6"
        },
        "item": {
          "id": "cee994a1-7d98-4b61-b6e6-b0ce4a9cc486",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "29e5ed18-5ceb-436c-a7df-b131b2c796b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e293d2-3739-47b2-9d49-21d18f1438cc",
        "cursor": {
          "ref": "cf19fc2f-615c-410c-b56b-46475a6f7d00",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "af9b6478-6eb1-4d37-a6f8-17f2b2db92ae"
        },
        "item": {
          "id": "d2e293d2-3739-47b2-9d49-21d18f1438cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22ac6260-2a92-4acd-b5e2-96c79ccc1b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a312de29-d18c-4246-b6f5-b8daa12c701b",
        "cursor": {
          "ref": "ef08829c-9656-4c97-8b98-2f6db9f05940",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "37446daf-cef5-458f-9ff5-286141aedfc8"
        },
        "item": {
          "id": "a312de29-d18c-4246-b6f5-b8daa12c701b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c09b72a8-a693-4684-ba86-e56d6b8eefa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229a4676-d2ad-4105-b3c9-2ca6d3a21687",
        "cursor": {
          "ref": "1a34a9ae-5105-4918-8234-b4382814de3d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "308adb50-0452-4f95-9c04-5e73b304e2ed"
        },
        "item": {
          "id": "229a4676-d2ad-4105-b3c9-2ca6d3a21687",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8a83d637-4276-43b9-90a4-7b5adad858a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa34eef-0431-4a39-8f41-b772a75a484f",
        "cursor": {
          "ref": "69f6fc0f-a3dd-4a0d-a5af-8a55a82ec7fe",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2e69c250-2d54-4a82-bc52-3136a721b96a"
        },
        "item": {
          "id": "8aa34eef-0431-4a39-8f41-b772a75a484f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "55f248c5-4a7f-4675-bf91-13da0a6c1b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727ded0e-190c-462f-be1e-78567a3528c0",
        "cursor": {
          "ref": "f4ad010d-44d2-4c2c-837d-9cd4b33dd39b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "985a8c86-fa1d-46a4-8360-bdaa978d6a67"
        },
        "item": {
          "id": "727ded0e-190c-462f-be1e-78567a3528c0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8163c600-3575-4561-847f-d4c2d4a39f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89c3a86-126a-45a7-aca7-de87e0eee2db",
        "cursor": {
          "ref": "a0cb961a-9abf-406f-8c8d-d8e16072297b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8df67cfc-7644-45d0-9d52-e28a0ce4b685"
        },
        "item": {
          "id": "b89c3a86-126a-45a7-aca7-de87e0eee2db",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6de9beb2-4fa4-45d6-a57f-6315174f6d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732358d7-57da-41bf-8745-c8554614ce90",
        "cursor": {
          "ref": "8bacf8ae-f6e4-4cac-afe1-43315b1628b9",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "375a089b-6560-485e-8be3-6465fd012837"
        },
        "item": {
          "id": "732358d7-57da-41bf-8745-c8554614ce90",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f6b25277-e77d-49ce-9d11-1b0d4f151cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd525cc6-a8d2-4ad3-9812-dfbcfb07e155",
        "cursor": {
          "ref": "6ee14981-8b90-47d1-89fe-730bfb1e62ca",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "54bd52b8-453f-496f-930e-08c08ec2b9b5"
        },
        "item": {
          "id": "fd525cc6-a8d2-4ad3-9812-dfbcfb07e155",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7a207207-6578-4a7a-a545-ca65f1805644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a187c7a-d3e3-4b35-942d-f4f4f20a367d",
        "cursor": {
          "ref": "039292e9-3432-4da3-b00a-01b718f6fd33",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f76cca4f-6c49-4470-bbf4-aff4728d462c"
        },
        "item": {
          "id": "8a187c7a-d3e3-4b35-942d-f4f4f20a367d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cbf1feb4-3b04-4213-a249-bf3b1fdd1ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82a9839-a878-43b3-9013-89ac38153164",
        "cursor": {
          "ref": "83e90b68-e478-47fc-995c-a718875157e7",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f81c9894-5f8a-49ad-b2e5-6e90d9ca8510"
        },
        "item": {
          "id": "f82a9839-a878-43b3-9013-89ac38153164",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5b08a219-d86b-4f18-afc0-c227270434e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f67aab4-a2b5-4b1d-880f-9606c6f57637",
        "cursor": {
          "ref": "833284ee-022a-4dd1-aeca-0d0456896166",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "35de72d0-172d-443b-94b9-42fab1c92d3a"
        },
        "item": {
          "id": "9f67aab4-a2b5-4b1d-880f-9606c6f57637",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a431bff9-3bc4-494c-92e3-f27b3d71646c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ff0baa-a900-4069-b192-f634b63ca224",
        "cursor": {
          "ref": "d0ac037b-7fba-49fd-871b-6968e8d9faff",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "32bca6df-aa48-45cf-9bee-e91106655745"
        },
        "item": {
          "id": "d5ff0baa-a900-4069-b192-f634b63ca224",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bda88178-83e3-4a11-9449-1a4ae836b11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a3c059-393f-475f-865c-2cc684f53779",
        "cursor": {
          "ref": "29b4075d-f28a-410a-a0c5-1d504b45d93e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "86076f4a-81aa-4d79-aa8f-bd745adb0ea5"
        },
        "item": {
          "id": "93a3c059-393f-475f-865c-2cc684f53779",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d1ea1710-813c-4ac0-869b-31c75510ba80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3586fe-13c1-48a7-a142-e2347be154b4",
        "cursor": {
          "ref": "64f5d378-7c31-497f-9bd2-ab8994b2ba96",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2e57a950-b13e-4d24-8f24-9cf1a60780de"
        },
        "item": {
          "id": "fa3586fe-13c1-48a7-a142-e2347be154b4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f4607179-73ac-49e4-8b5c-d220605cb191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0aec4b-1ba7-4855-9956-2db070a2ff11",
        "cursor": {
          "ref": "16cc3c0b-8838-44f9-9f12-74a00ab2dd35",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "03dd07a9-144e-45c8-85f9-54e9b9e66e3a"
        },
        "item": {
          "id": "0f0aec4b-1ba7-4855-9956-2db070a2ff11",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ff20a037-c56a-4cdc-b80e-48fa569371e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8512ef6-e74e-4c00-8127-4cbb5c758a02",
        "cursor": {
          "ref": "ed0eb849-bc9c-4a7a-af76-ae5f26dfc80f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ca473613-364b-4bb0-996b-a642d050f050"
        },
        "item": {
          "id": "e8512ef6-e74e-4c00-8127-4cbb5c758a02",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6150ddb5-562a-42eb-b16c-886af6cc20ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661c1b88-6dd8-41b2-b975-64d7d80c3bc8",
        "cursor": {
          "ref": "d2c13740-aa40-48a1-9ed9-4ceb124d8a62",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "47d59f14-8e7c-4f17-884f-278749474771"
        },
        "item": {
          "id": "661c1b88-6dd8-41b2-b975-64d7d80c3bc8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0fe8c139-6952-47bf-b968-08668fd9d321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f4f587-5b9e-42b5-aa55-07c8b801c064",
        "cursor": {
          "ref": "0e8818b9-a21a-4278-8477-31ebfdeccb18",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9bd5d61f-6f4d-4908-abe2-2a6d21973bfa"
        },
        "item": {
          "id": "c0f4f587-5b9e-42b5-aa55-07c8b801c064",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d72b3fcc-043a-4dd7-b1fe-8a19140929a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648d6f06-b5a0-4507-8f97-d194c4d8c81a",
        "cursor": {
          "ref": "e496cd4b-4301-4cb8-ac73-63555f2ee5c7",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bfd6e371-dc10-483f-b57f-b35844e01f99"
        },
        "item": {
          "id": "648d6f06-b5a0-4507-8f97-d194c4d8c81a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b3bf0db2-65ff-49a4-9936-655fba8c1cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e4cb53-0b17-44eb-8eb8-00d8dc3de587",
        "cursor": {
          "ref": "48f89f7d-eadc-48ec-b742-c65c84ad5a2e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1f6adf06-a013-457e-ad3d-96377614935a"
        },
        "item": {
          "id": "32e4cb53-0b17-44eb-8eb8-00d8dc3de587",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87a2616b-8607-40a5-999b-f968a0939da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb18d34f-e636-4273-b8a8-731dd5318fc6",
        "cursor": {
          "ref": "989eae79-9745-4405-8053-b949faee1f92",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7340053f-8ebd-4d2f-9ca3-2e3b48e5a3cf"
        },
        "item": {
          "id": "bb18d34f-e636-4273-b8a8-731dd5318fc6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c8ce9ad1-9b73-4103-a9c5-d9cfba22fb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324e13bd-67d3-47d9-9dc3-844e166334ea",
        "cursor": {
          "ref": "9d3d1473-86e4-43c9-bc57-782c1d192a52",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5079ef6a-e11b-4369-8b7a-a679a2ee7dc3"
        },
        "item": {
          "id": "324e13bd-67d3-47d9-9dc3-844e166334ea",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "74cbf294-9f00-48a0-98f7-53c38ba613cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24259860-e84d-4741-b852-dcc3418caaea",
        "cursor": {
          "ref": "ce395c53-edf0-4fce-ac8d-a9770f497b50",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7d8c74e9-c6de-4dab-b76b-abcf25f39c4b"
        },
        "item": {
          "id": "24259860-e84d-4741-b852-dcc3418caaea",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2fae3c07-b680-4366-aa4d-a4f32e65e4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3bce8d-2226-4869-a09d-ebe6c7092085",
        "cursor": {
          "ref": "80cb33ec-8211-484e-ae03-90efc7128d53",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "06a36af9-0c91-4269-9dc8-b2c99ba83836"
        },
        "item": {
          "id": "1c3bce8d-2226-4869-a09d-ebe6c7092085",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e3228cd-76c7-42c5-a33d-d528b905cdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1c707c-7c39-4eec-9be0-a73fbaaae6a2",
        "cursor": {
          "ref": "fe1d8c13-877d-4bf0-ba75-1bac52015610",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f039ed8e-9918-4c6a-94f9-e4f75ebf4167"
        },
        "item": {
          "id": "ce1c707c-7c39-4eec-9be0-a73fbaaae6a2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "55b480e8-cd68-48f1-8a0f-ba03aafd0603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d472fb-7a6d-4783-88db-456d2dae2f19",
        "cursor": {
          "ref": "ab381369-80a2-41b3-b4c2-bb3397c3f60a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d003967e-4674-4989-82e2-8048d710add8"
        },
        "item": {
          "id": "f4d472fb-7a6d-4783-88db-456d2dae2f19",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bd22f089-7912-45ab-aba1-36a62afd4f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ff44b2-f80c-4edc-8de8-eba4b5c2892a",
        "cursor": {
          "ref": "4f69dc43-e1c1-4f8a-a1c1-6b2f37df2cf3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c4ec3450-d993-40aa-b63d-1c3f717260c9"
        },
        "item": {
          "id": "d6ff44b2-f80c-4edc-8de8-eba4b5c2892a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5d3a4034-be50-4c9c-a067-d03aefe71f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd89f62f-20ba-4931-8ecc-6f062673770f",
        "cursor": {
          "ref": "24fcbb19-349c-4737-b199-30c1af429384",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b13f51f3-0972-4d4b-9e68-1c94d0588d71"
        },
        "item": {
          "id": "bd89f62f-20ba-4931-8ecc-6f062673770f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ee7aa187-4f54-4b07-87a8-957f5804e369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28499cde-1252-454d-91d9-77e69eed8f84",
        "cursor": {
          "ref": "db1d11f6-3ee1-4295-8b3e-d58abcffd3db",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aea12682-6583-4a93-a660-c44e6016739c"
        },
        "item": {
          "id": "28499cde-1252-454d-91d9-77e69eed8f84",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ef6a9722-5b0d-416c-b29a-0cf6969ac313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26376b3-5aef-4116-9925-64a5edce7fbc",
        "cursor": {
          "ref": "fbff6ad9-28d6-4a7a-97f2-aaa53d742821",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6e878e3f-3abc-4b64-884a-c5d26db9f0ae"
        },
        "item": {
          "id": "c26376b3-5aef-4116-9925-64a5edce7fbc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0ad30bf1-8f1c-4f30-a1b7-d82ff7d07ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ee61e7-c625-45f4-b780-d03463f3fb24",
        "cursor": {
          "ref": "ebb06373-ad06-4f77-abcc-669f07e574d1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d3449f06-4516-4df2-affe-4c6ca10d9256"
        },
        "item": {
          "id": "78ee61e7-c625-45f4-b780-d03463f3fb24",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a110ec84-d0b9-480a-baf7-3562079f1f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0bbcc5-356b-4fec-bbf8-071168abf3ec",
        "cursor": {
          "ref": "1f5e8f85-af26-4ce5-88d4-e0db525e9f0f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "248f7625-f542-41c5-bfae-15df32f1d686"
        },
        "item": {
          "id": "de0bbcc5-356b-4fec-bbf8-071168abf3ec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9375b087-f231-49e9-ac1f-12c5cb43f8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6a0dc6-5a6c-4225-82ce-bba317a1eac2",
        "cursor": {
          "ref": "d51bd584-7a8c-4b9d-b898-be4c8c2adcad",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4ffac6a4-24ab-403a-9e77-efb96943c3c1"
        },
        "item": {
          "id": "de6a0dc6-5a6c-4225-82ce-bba317a1eac2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e5cc6283-8919-4ecb-a57b-2783ea82a227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9283bb-e990-4f2c-9024-fbeaba79b6a5",
        "cursor": {
          "ref": "506e28fe-d0ec-43b5-8131-6d06c88681d6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3120d4b0-cb83-4cfd-83ff-8cc9004269bc"
        },
        "item": {
          "id": "aa9283bb-e990-4f2c-9024-fbeaba79b6a5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bd063ea6-0e70-4466-be9c-8f7b63a252aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba1342a-8b15-43e5-a7e4-5fda23f9a125",
        "cursor": {
          "ref": "38444eee-98f7-43b8-9c77-d7935d2395ec",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c1dc1626-5f7e-4244-a191-28e047a7d915"
        },
        "item": {
          "id": "6ba1342a-8b15-43e5-a7e4-5fda23f9a125",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f774a788-e7e1-441e-930a-3912b72fbde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a26cb8-0d59-4bf4-a134-afff9f92495f",
        "cursor": {
          "ref": "a88c46c4-0f5d-44de-b987-ce3538986074",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "942269a4-1954-49e9-82d0-1f02aa9d52a8"
        },
        "item": {
          "id": "b5a26cb8-0d59-4bf4-a134-afff9f92495f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "33efc620-4453-4da7-a2bd-9e73ea38024a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94d534c-daf1-4f34-8485-2bd69be781a1",
        "cursor": {
          "ref": "5089de87-3670-4172-af7d-93f9ab19ee89",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "facdbd09-702b-410f-a6ed-f6734c3295fe"
        },
        "item": {
          "id": "d94d534c-daf1-4f34-8485-2bd69be781a1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bebe7668-c527-4157-bd4d-0bb9c88b4342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7faed45c-6540-4473-a36c-e5fa401bd147",
        "cursor": {
          "ref": "8035b97a-c1e6-4c99-976a-de0d6f6a67fd",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "01c5038a-94a9-4ade-b529-a4338def3b54"
        },
        "item": {
          "id": "7faed45c-6540-4473-a36c-e5fa401bd147",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dbac4e98-6ba8-484c-876a-509f5beba504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68672c7f-beb5-40f2-9c4b-e67c378d6bc4",
        "cursor": {
          "ref": "792cebb3-1498-4fb7-94c2-90ff1a15b442",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dd3c7cbc-8602-43ee-945b-e9d3ed415e2c"
        },
        "item": {
          "id": "68672c7f-beb5-40f2-9c4b-e67c378d6bc4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0a6036d6-99f2-4c92-8fb6-293946bd9381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d272806-d352-4322-b0ca-d22a726ba164",
        "cursor": {
          "ref": "b89387f1-c017-4472-bed0-7c0cca548680",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "265b0685-6437-40e2-b6a6-130ebbf3522b"
        },
        "item": {
          "id": "2d272806-d352-4322-b0ca-d22a726ba164",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "77401152-d6a5-4a78-b7d7-0affafb86b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83447289-a9fa-4cfd-bd9f-80a98fa3121c",
        "cursor": {
          "ref": "17d1d8ab-fb97-4b3f-a8b0-3249813e084f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e5949599-c3d6-4855-8333-90106c610782"
        },
        "item": {
          "id": "83447289-a9fa-4cfd-bd9f-80a98fa3121c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c1fbb894-a22a-4735-bba0-61a237b76d82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9df12b-3a66-427e-be74-dc61c520683a",
        "cursor": {
          "ref": "945db742-dd62-429b-9a08-cebf720ea3d5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "afc00695-fd9d-4300-a342-174a37e913f8"
        },
        "item": {
          "id": "cf9df12b-3a66-427e-be74-dc61c520683a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "88e267c2-e6f9-40ed-a2cf-80a9120032e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdb12c0-371c-4502-8c3d-60648e313932",
        "cursor": {
          "ref": "706e2d06-9f2b-449e-9c99-e8476343b126",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4ea44530-fc13-4d84-87a3-13ae3e900a53"
        },
        "item": {
          "id": "afdb12c0-371c-4502-8c3d-60648e313932",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c47ad595-f114-4f62-ba97-391d505d5c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b63a6c-9068-49da-ad11-0b4d0e547ed9",
        "cursor": {
          "ref": "8bf9645e-a17f-4d88-9fd8-53973bba6ee2",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b7e55cf9-1e98-43fa-b2c7-e23091e5bc9f"
        },
        "item": {
          "id": "e3b63a6c-9068-49da-ad11-0b4d0e547ed9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ea7ecd66-6c80-4ca9-bb87-45061bf8fb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a01c578-81a3-49a6-842f-a9f6b076b5ec",
        "cursor": {
          "ref": "d0464487-bfc3-4c86-b952-c18a87d57997",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "652baccb-1331-41c3-9791-80404e5d551e"
        },
        "item": {
          "id": "6a01c578-81a3-49a6-842f-a9f6b076b5ec",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "51c26a22-cabc-4a36-8f8f-c4a49021cfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3406f51f-f639-4294-81ac-7c31a0884cf4",
        "cursor": {
          "ref": "85c1b576-b485-41a9-8cef-d92232a5bde7",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1eb6326c-88b2-4a3d-954d-ff1d4e01a817"
        },
        "item": {
          "id": "3406f51f-f639-4294-81ac-7c31a0884cf4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "df573b6e-f2d6-43e8-974b-e0fa16187cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd72a1b9-1d7f-4b12-84af-eb697cb14d00",
        "cursor": {
          "ref": "692b9d86-2cf6-4085-8c00-017163914390",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "20cbd78f-d256-4f77-be5b-32d73d106b86"
        },
        "item": {
          "id": "dd72a1b9-1d7f-4b12-84af-eb697cb14d00",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b232de8c-55aa-4e83-8f8c-503e7860c2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56680d6-a10c-4a33-a34f-f656e3ce0de7",
        "cursor": {
          "ref": "dbbc1fdf-0315-4ff7-9cca-823f43329cdb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "559d5779-18e6-4419-b7f5-d9775af66ee3"
        },
        "item": {
          "id": "a56680d6-a10c-4a33-a34f-f656e3ce0de7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9ea677d1-2644-415a-b024-ffa47a87f1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bd7af5-5ad6-4c4e-9841-664e1393cc2c",
        "cursor": {
          "ref": "e9c0ae49-7995-422d-93c4-f414b72da8ad",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "13716369-e1b7-412f-8ee0-95553b0ff54a"
        },
        "item": {
          "id": "b6bd7af5-5ad6-4c4e-9841-664e1393cc2c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "50e58bc1-5faf-483f-83da-fd11e723f340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328278e2-898a-401a-aa6e-ac4831004ed7",
        "cursor": {
          "ref": "ffe4f656-9176-49a0-9b44-99334723b34c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "66a852f5-5e6e-41e9-932b-d5c5eb497d98"
        },
        "item": {
          "id": "328278e2-898a-401a-aa6e-ac4831004ed7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a97f4204-dd2c-45fc-8199-74cfd08221f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fa07d2-1065-441a-8b90-3805fc162a52",
        "cursor": {
          "ref": "aaa7665b-4d09-4620-8da5-545210f35a0b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8612625c-750a-4fe0-be63-de01df191167"
        },
        "item": {
          "id": "82fa07d2-1065-441a-8b90-3805fc162a52",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "42d5d009-c82b-4e64-b431-5974d387923c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c69a79-286d-4858-9167-790245ae6f76",
        "cursor": {
          "ref": "33344531-3d36-4564-8d56-68456eeb36d3",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "13405388-1dcd-4d0e-9180-fb5a1b1ebd5f"
        },
        "item": {
          "id": "a1c69a79-286d-4858-9167-790245ae6f76",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "609a5d71-7707-435c-b112-c41247a5003b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39de9fb4-0474-4548-b633-2932b058ad1f",
        "cursor": {
          "ref": "313a906a-15e9-48d0-aa5e-11aa6eedcef0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "454379b8-3ee0-43c4-a13f-7715e3027b98"
        },
        "item": {
          "id": "39de9fb4-0474-4548-b633-2932b058ad1f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4b7f38e9-54c4-4468-a842-c298aec922a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34186b01-6e23-4dfa-bdd7-86e9aca35379",
        "cursor": {
          "ref": "414fb142-1dcf-4024-9f2c-debfcd4aa665",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e5d2f433-0ab8-462c-ba76-4ced35b8d138"
        },
        "item": {
          "id": "34186b01-6e23-4dfa-bdd7-86e9aca35379",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f1d3aa7d-9f35-44fd-9228-322053809467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7316387-6fb3-431a-b528-202483d0b72b",
        "cursor": {
          "ref": "c8926052-c3e4-4a71-8263-d08c41f93b1e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6004ec0e-d7d5-4176-b0a6-daa52cf62e45"
        },
        "item": {
          "id": "a7316387-6fb3-431a-b528-202483d0b72b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2d72dac0-251b-4daf-a26d-3946f0cafdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d1b5dc-2240-4c46-9382-12ffe2dcac7f",
        "cursor": {
          "ref": "b3d16f67-b496-4d41-a712-8ddb60392cc0",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e8596cbe-5148-45d7-ad47-82d0e63d4456"
        },
        "item": {
          "id": "83d1b5dc-2240-4c46-9382-12ffe2dcac7f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c960a4ee-9431-4286-968e-0ed3b6561062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9ebc56-46f2-4674-9241-1030689fea89",
        "cursor": {
          "ref": "520861c6-8f16-438b-9405-b72ef17d2f11",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "89299f4f-9d14-4215-915f-c29af4e4683a"
        },
        "item": {
          "id": "7f9ebc56-46f2-4674-9241-1030689fea89",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0ea318c7-a4bf-4e95-84a9-ebc4556d4a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2f250b-df2b-4da1-a3cc-016cc85963a3",
        "cursor": {
          "ref": "76890129-4b08-415a-a80b-df5edb4ad308",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0e7ed8db-c44e-4f09-b33e-aac96128264a"
        },
        "item": {
          "id": "dc2f250b-df2b-4da1-a3cc-016cc85963a3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cc78ad6c-8153-43a1-aedf-2822218b9c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75362ae8-5434-4d5b-96c1-abc7a9d16193",
        "cursor": {
          "ref": "206e1634-26d5-4692-bb59-7c048fa2b411",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8563db4d-d206-4f6d-808a-8dc339d36cba"
        },
        "item": {
          "id": "75362ae8-5434-4d5b-96c1-abc7a9d16193",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "25abfbd4-2625-455d-b124-5972ed09bbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f9ac77-0965-487e-ac99-0d19968a3bf9",
        "cursor": {
          "ref": "32d92072-e2ee-400b-bc10-7a344a2fb408",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6a9b33b6-634e-4020-8adc-c7ffc26f8e79"
        },
        "item": {
          "id": "59f9ac77-0965-487e-ac99-0d19968a3bf9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a06114b4-8942-44f1-94e4-0181cbeab7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57ec3ef-cc63-4c9f-9d58-74dddde6baea",
        "cursor": {
          "ref": "808b2916-f1e8-40bb-a7d2-5ded909cf07a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "31232901-d94b-49ab-8650-cbb7be723adc"
        },
        "item": {
          "id": "f57ec3ef-cc63-4c9f-9d58-74dddde6baea",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c52f8554-7c12-424f-b71a-0f15b859e9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81a8217-8f2a-4234-bfb9-c64feaaa2cf2",
        "cursor": {
          "ref": "3d34fd2d-449c-4d59-b512-cd3cbb953f83",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b1a4f9af-70e5-4025-8d52-c1966d2efebd"
        },
        "item": {
          "id": "d81a8217-8f2a-4234-bfb9-c64feaaa2cf2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "99141c53-34a6-479b-b547-d012b47896e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32555751-2630-472b-9413-c71b428e74a3",
        "cursor": {
          "ref": "d0e6e4f1-76e0-45ba-b3b9-52963adc110c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4279cec7-8349-4d5b-882b-0093247aa773"
        },
        "item": {
          "id": "32555751-2630-472b-9413-c71b428e74a3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "748735a4-c6d9-4f0d-be40-aca19746b361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9780374-2baf-4a54-b622-d0fdd3edbacd",
        "cursor": {
          "ref": "97141131-3585-4cbf-ad18-ca9b7e52630b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e393229c-a88b-40b1-b9c8-684ea00a7b15"
        },
        "item": {
          "id": "d9780374-2baf-4a54-b622-d0fdd3edbacd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "01f2edd1-23df-4f76-84b8-5b25ee57e1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb553cf9-3b2f-4d42-a767-037721cee71a",
        "cursor": {
          "ref": "9c91b615-9bf2-4a22-8dbf-266d9b249e23",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5216ac80-1313-444d-a7e1-b45ac0700af4"
        },
        "item": {
          "id": "bb553cf9-3b2f-4d42-a767-037721cee71a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fb581a39-2154-40b3-b48a-798fa2eee4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6859df-308d-4336-91f4-d542b227f7b0",
        "cursor": {
          "ref": "987ba455-ab2a-4930-8d5b-01b5b3fddcfd",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d831cc79-340a-4e29-8c87-c53f2ac59d42"
        },
        "item": {
          "id": "8b6859df-308d-4336-91f4-d542b227f7b0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "265c87b9-6e50-4e2a-b7f2-e05b4ab7768b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9b4cfb-9e1a-45d1-ae66-e575e2004c7d",
        "cursor": {
          "ref": "a9e98e6f-ece1-4afd-b4db-0ef4a8ed3927",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6cb2c78d-9ce8-4e90-b49b-a8ce336c4489"
        },
        "item": {
          "id": "bc9b4cfb-9e1a-45d1-ae66-e575e2004c7d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5dd8870b-3ae1-478a-8482-979cbcd6c997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b860011-c37e-4cbf-a754-3c3806e6176a",
        "cursor": {
          "ref": "6b192cd6-f393-4fc9-bec3-b3361eaf2e05",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5e7d3789-97ce-4a68-9aa2-741e79b84aec"
        },
        "item": {
          "id": "6b860011-c37e-4cbf-a754-3c3806e6176a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4c376cc0-1205-455d-8cf9-d5f3378c2d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2724edd2-b9f0-4b00-9bde-b1f840e07f1f",
        "cursor": {
          "ref": "80c6ce6c-aa13-402e-97ac-2f54682dbda1",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "68e54ea8-dc46-4353-8633-87184437099f"
        },
        "item": {
          "id": "2724edd2-b9f0-4b00-9bde-b1f840e07f1f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "32ea71d9-facd-42c4-bd7d-376fee608a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93d67b7-bf0a-4b7d-8f77-206efb8ac639",
        "cursor": {
          "ref": "83f383e3-61d1-48ff-bddc-fb0d0c45b0f9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dc7faa00-384f-4a39-b1be-a4f240fdab55"
        },
        "item": {
          "id": "e93d67b7-bf0a-4b7d-8f77-206efb8ac639",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a1c6481a-e303-4067-9f4c-2e2413b74dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae4093e-ee56-4736-8cc7-7b711d4f4f96",
        "cursor": {
          "ref": "b1c4303b-d630-4120-b30a-a0311a8d14e5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "98797d16-cc57-47f3-94d4-f9456c81111e"
        },
        "item": {
          "id": "aae4093e-ee56-4736-8cc7-7b711d4f4f96",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "057f1592-902e-4554-a360-5a9bc65be63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2b36fd-cdad-475a-90e4-21fd1d4c1f6b",
        "cursor": {
          "ref": "0b8af498-3abe-4018-b0c2-75f0725e2bef",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3c65f640-7e5d-4d6f-8234-88ab0ea8c17c"
        },
        "item": {
          "id": "ad2b36fd-cdad-475a-90e4-21fd1d4c1f6b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "36653e23-3444-49e8-b44f-08315c6cbdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b098e65-e8fe-494f-a45f-16e94f62bf26",
        "cursor": {
          "ref": "6fd5c794-51bd-4d8c-9379-f22d43701f7c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "04898cb5-1fa9-4d2a-9ea4-4931880a389b"
        },
        "item": {
          "id": "3b098e65-e8fe-494f-a45f-16e94f62bf26",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "572616c6-380c-4930-bffc-5d4b350f4870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7273ad9c-3025-4e7b-8667-8fa6e0c6b8ae",
        "cursor": {
          "ref": "ab127bac-c96c-488e-9121-a7dea90382f6",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eb52dff3-8103-4b60-8888-9e56d7de4e8f"
        },
        "item": {
          "id": "7273ad9c-3025-4e7b-8667-8fa6e0c6b8ae",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f007abb0-5f49-4e4d-ae9a-537437624f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ded90d-0ea3-40b2-8281-b0e4bec462d6",
        "cursor": {
          "ref": "5ffea776-cb21-4b0e-aad9-b4609c07bd81",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bfcb4ef6-db97-469a-83f0-b4f62e239f50"
        },
        "item": {
          "id": "21ded90d-0ea3-40b2-8281-b0e4bec462d6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d131f7d2-7de4-445f-af0d-d8db93bfa4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8703149-11e2-4ae6-b078-300d736d1a9e",
        "cursor": {
          "ref": "446033ae-b38f-40cb-a7ad-a0f787ceec2c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e4151179-9ff8-45fc-94fe-80d6ba126d2b"
        },
        "item": {
          "id": "a8703149-11e2-4ae6-b078-300d736d1a9e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0a4e0860-a956-4860-a7eb-a649885d63b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258d4bd8-99f1-4970-8640-ffd40b6a2fa4",
        "cursor": {
          "ref": "16afcde6-3045-487d-8150-0115f4dbdaa3",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4de88c70-c4fb-4870-9d6a-f3a6c60a6d93"
        },
        "item": {
          "id": "258d4bd8-99f1-4970-8640-ffd40b6a2fa4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d40b8605-b2e6-400c-83d2-6f55612af7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4098c7ce-16d1-4d4b-8587-79aca20c2e9d",
        "cursor": {
          "ref": "a0047b08-75c8-4d77-a847-a57c845928a3",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1529675d-3a67-47cb-a292-25e92f172222"
        },
        "item": {
          "id": "4098c7ce-16d1-4d4b-8587-79aca20c2e9d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9ddf7f32-034c-4ea8-a4e3-d7bd1f475d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed80a86-782b-4053-bac9-6aede6c4f31d",
        "cursor": {
          "ref": "71904354-a0ab-4927-b9e3-7163b7726d2a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ac0ece64-cd34-42d4-992d-5ead477dee36"
        },
        "item": {
          "id": "9ed80a86-782b-4053-bac9-6aede6c4f31d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "81e802cd-bf4c-4079-b879-d2b0c9242772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122c8404-1022-4f51-bc30-7af3df5c15bb",
        "cursor": {
          "ref": "d5961ec3-aec2-4570-9d8a-f42438675c90",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "85916af9-539c-46e8-8ece-eb91fe826994"
        },
        "item": {
          "id": "122c8404-1022-4f51-bc30-7af3df5c15bb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4d884be5-ff45-4a3e-86e8-03ad8695bfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916ffff3-ee5b-4456-8ad3-7d0e91886cb8",
        "cursor": {
          "ref": "5d197666-efe5-425e-b056-70e7f9623d70",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "758c7e46-2157-4921-ae3c-c13a42e21f7b"
        },
        "item": {
          "id": "916ffff3-ee5b-4456-8ad3-7d0e91886cb8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "72370009-b864-4797-984d-598a0b735982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e89f5d8-677e-480a-ae65-27cdfb3227f0",
        "cursor": {
          "ref": "1b0d499b-634f-4062-be5e-560dff4c3f17",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0f10eae8-33ff-492b-b8e5-d8f6e3ad18d1"
        },
        "item": {
          "id": "4e89f5d8-677e-480a-ae65-27cdfb3227f0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "df55aa9a-8e58-4103-adac-0d567e12c871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30374a8-f9da-41e1-8cb6-b36d5c889c01",
        "cursor": {
          "ref": "ae58ca1b-0378-4d61-a25e-b614b7a57722",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ba0c057e-0016-418d-890f-5d023404068c"
        },
        "item": {
          "id": "f30374a8-f9da-41e1-8cb6-b36d5c889c01",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f15d7917-278c-4c24-ba1f-87cef1884858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6100b7-4909-4667-ba72-6e100159088d",
        "cursor": {
          "ref": "a81d8146-13d1-44d1-996c-409273e30abf",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "027047ce-fd68-42d9-b919-494afb48d93e"
        },
        "item": {
          "id": "bb6100b7-4909-4667-ba72-6e100159088d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8fb414af-0f34-4c89-8470-b21bd1aa3ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc044ba-446d-46cc-ae1e-ee1cf24aa033",
        "cursor": {
          "ref": "67e344a6-df97-467c-aeb3-cff12218d1b5",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9072f1d6-029c-4175-ba20-6f4b040cb38a"
        },
        "item": {
          "id": "cbc044ba-446d-46cc-ae1e-ee1cf24aa033",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "72c1209c-8e2f-470c-8d13-92c216c3d70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7812e29e-8ef4-4feb-a194-fa991d2e6889",
        "cursor": {
          "ref": "d58cb42f-9d34-4f48-b759-56c722469c74",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aa8a39a1-cf00-48b8-bdbb-650e37998c82"
        },
        "item": {
          "id": "7812e29e-8ef4-4feb-a194-fa991d2e6889",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d18b88de-f261-4bb6-b585-bccd17da003b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b18ec0-9d73-4543-88a1-7096c155b4b8",
        "cursor": {
          "ref": "89495cf5-039a-4361-b541-9f83c35041fd",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "91088f1d-d780-4c9c-b2ec-7a51a528cbed"
        },
        "item": {
          "id": "73b18ec0-9d73-4543-88a1-7096c155b4b8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "34d63869-4c5e-4236-9ee3-4a107c8d1fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904342b7-65f2-4abc-afc4-836c360708bd",
        "cursor": {
          "ref": "5c5fb52a-8336-4220-ab2b-a72806cec183",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d9ad85a1-ee87-4ade-8350-1d6c8070b312"
        },
        "item": {
          "id": "904342b7-65f2-4abc-afc4-836c360708bd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c1176dbf-e44c-4ccb-aa0c-7fba22788ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e20692-ceb8-4e2e-adbb-bdeeaa0b886f",
        "cursor": {
          "ref": "500eb624-9777-40fe-bb81-9ce4ffacfc68",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "56ba325e-25b8-49a5-8533-39af79b91053"
        },
        "item": {
          "id": "c5e20692-ceb8-4e2e-adbb-bdeeaa0b886f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3f70f8f5-d7eb-40c4-9132-2f02db7e182a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967c5cc0-17ee-49bd-adc8-702c8d16ec8c",
        "cursor": {
          "ref": "5000f50a-9099-4c0e-8ae0-5dd42ff53cf1",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b6107d93-9c03-4e49-9df2-10be1b22fa1b"
        },
        "item": {
          "id": "967c5cc0-17ee-49bd-adc8-702c8d16ec8c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "06f249d3-f036-498b-9396-8e71f92b4333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d10ea2-0887-4112-8915-fc1c5d57bd59",
        "cursor": {
          "ref": "bfd043b1-4394-495c-8464-a5149ffca734",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "605051b0-9f3f-43ae-abec-a6bfc79196a8"
        },
        "item": {
          "id": "95d10ea2-0887-4112-8915-fc1c5d57bd59",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a153e3bd-7185-4bfa-9534-3300214f3d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3f9844-541f-4676-8bb2-953298c4db5b",
        "cursor": {
          "ref": "3bd52d42-85ca-4e96-b809-78b730701bc4",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "04df78e1-da65-490d-bf75-e25be2d7aa5b"
        },
        "item": {
          "id": "cc3f9844-541f-4676-8bb2-953298c4db5b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "78706c4c-5bc6-416f-ae1d-36ac0ea97d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b85ca8c-bf67-474b-aa71-835f42b1495c",
        "cursor": {
          "ref": "59b97f0d-e653-4683-bd5c-8e4013016110",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a49112cb-82f4-4578-a08a-cd6634918ef3"
        },
        "item": {
          "id": "8b85ca8c-bf67-474b-aa71-835f42b1495c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "efff1ad0-3ee3-400d-9bbb-ac5fbab95beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c870640-13b3-4f89-bee2-c78ce960b92f",
        "cursor": {
          "ref": "868c85df-ddab-4529-a1d4-d6cd43a6397d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "23e60368-6ff8-440a-a3d8-f0667a1260fb"
        },
        "item": {
          "id": "9c870640-13b3-4f89-bee2-c78ce960b92f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4a41897a-cf71-44f0-9cd1-90626dff45a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a8be10-bb8e-4206-ba88-7f066a89441a",
        "cursor": {
          "ref": "e1d5e42b-da1f-480d-bc90-30a904baf6e0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e66338c7-3f48-4531-8c28-12fc901118d1"
        },
        "item": {
          "id": "30a8be10-bb8e-4206-ba88-7f066a89441a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4ea98ad7-c7d2-4511-a1c1-3ef930acb67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f0cb93-de06-4dc5-add5-ea7de6c6fc1e",
        "cursor": {
          "ref": "b3d67b92-2d0a-4562-b500-b1ab6bdcc26e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ffbadbcc-8f6a-4873-9418-90f3b93daf34"
        },
        "item": {
          "id": "79f0cb93-de06-4dc5-add5-ea7de6c6fc1e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "31bfb412-3084-417b-9fee-68bb7bb7745f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc3d155-bbdb-4551-a718-acf4d737e6db",
        "cursor": {
          "ref": "b7e1325d-ff65-4fa0-9a56-97ac5e1f1662",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c668b78c-7b71-491d-abd6-fae7afd170a6"
        },
        "item": {
          "id": "bbc3d155-bbdb-4551-a718-acf4d737e6db",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8119b1a9-6be1-4682-9c53-59ac9070bbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc131156-e36c-4fe7-b135-44bd5b01b69f",
        "cursor": {
          "ref": "a447c4c4-723a-41b5-bfff-ca125b25643a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b880b788-d8d2-481f-836d-0e124686601f"
        },
        "item": {
          "id": "dc131156-e36c-4fe7-b135-44bd5b01b69f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dab10daf-c337-487b-9214-6b07be2176cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f9165e-d0ae-4af0-a808-a9f46ab00f45",
        "cursor": {
          "ref": "576f8c74-5f01-4017-8746-087a8ae5089d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "022a6bc8-ddd2-4085-a7f6-f1e112270768"
        },
        "item": {
          "id": "50f9165e-d0ae-4af0-a808-a9f46ab00f45",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "de6cc103-3645-4adb-8a4c-c8b127667922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce67143-5cd4-4ffc-bf4e-2ba8bda9dc70",
        "cursor": {
          "ref": "38eda3b8-0d4d-4f83-989f-fde0a72fcd2e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2e364ace-dc20-4b38-89ce-805ee122e6fe"
        },
        "item": {
          "id": "7ce67143-5cd4-4ffc-bf4e-2ba8bda9dc70",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "85b995a7-5f2e-4fb4-9ec7-23b189b50f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1008131-183d-4469-897d-d8635e0f0972",
        "cursor": {
          "ref": "b79b03c6-e93a-4185-aec5-dde3d92368bc",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9cb7483d-8112-4b1d-bb03-9ac8ced955c6"
        },
        "item": {
          "id": "d1008131-183d-4469-897d-d8635e0f0972",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5c27ffc2-ddb2-4df0-bfbf-79b95ac3f27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a210512-28d7-4fa0-9750-b42a10d8ce60",
        "cursor": {
          "ref": "b5de1d70-460e-4231-8d2a-d3834d952210",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f49227a1-5ba9-47b6-95f0-17f03d9a95ab"
        },
        "item": {
          "id": "5a210512-28d7-4fa0-9750-b42a10d8ce60",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "857f68f1-29ea-402d-b72e-52e83d0039d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3547b8-3a0d-4827-bdc0-c2929c489c11",
        "cursor": {
          "ref": "9492d34f-1f47-4578-bb64-8ab290a4eaf7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "83dd7c5f-b3da-4ad5-946d-c395adba5b25"
        },
        "item": {
          "id": "2a3547b8-3a0d-4827-bdc0-c2929c489c11",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "44926840-6f56-42d8-9386-a9ad74ebfa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472b5b00-79ee-4428-8405-52efe598c143",
        "cursor": {
          "ref": "70d6b576-c42c-472c-9119-0e7dfa782d80",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b20d11e7-e709-420c-8d2d-fcfdfb8313de"
        },
        "item": {
          "id": "472b5b00-79ee-4428-8405-52efe598c143",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f2ff6f5a-b532-4f28-873a-2d5ea16890e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadee88b-86d3-445e-afea-45b055ebb86f",
        "cursor": {
          "ref": "c0794d60-53e0-4d9f-bfb1-e2f464fd710b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1238dc02-271c-49f7-a05c-e6d0cba4ad8c"
        },
        "item": {
          "id": "cadee88b-86d3-445e-afea-45b055ebb86f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "208516cf-0128-4385-bd89-f63952e86790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d3a56f-4037-46ee-8908-5cf122dde418",
        "cursor": {
          "ref": "5ef9b9f6-f627-4b3e-846d-95f695aba5b2",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4d7e88a8-8635-42df-ba00-37653e248c47"
        },
        "item": {
          "id": "43d3a56f-4037-46ee-8908-5cf122dde418",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7ecba3e9-a0a4-4044-b185-39b1b6afcc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1235c68-0ae5-42ea-bca7-ab6fd95f4bd1",
        "cursor": {
          "ref": "0758e732-657e-452d-963d-efead11dac96",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1a983009-8aa9-4715-b369-d04a9a5123b7"
        },
        "item": {
          "id": "e1235c68-0ae5-42ea-bca7-ab6fd95f4bd1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "10856da9-3897-48f5-9e3c-77848829df2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fd3fc6-345b-4167-8f7b-95a64e3e08d7",
        "cursor": {
          "ref": "8848abd2-21c5-4b7d-8f62-61c836885f29",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8a92a0fc-a7fd-4b0d-889f-13a6a24f81d6"
        },
        "item": {
          "id": "16fd3fc6-345b-4167-8f7b-95a64e3e08d7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "512e1a22-d4dc-42ae-82fc-fb430e1e6209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4c09bc-d797-4be7-9d15-b3eebd3607e7",
        "cursor": {
          "ref": "50cb13cf-783a-410d-9e6d-101a5d1df6ea",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2fc1abb5-dce6-48d9-9e00-635948295f88"
        },
        "item": {
          "id": "0c4c09bc-d797-4be7-9d15-b3eebd3607e7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4358e6a6-d489-4ac1-a4de-480d8f3b5a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05272a1d-8165-4ada-b618-a28e94b5522f",
        "cursor": {
          "ref": "3487a89a-08ca-4676-bc1a-e4a5fdd58743",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "90b1adbc-15c4-46f5-90a0-9845e1d4eb39"
        },
        "item": {
          "id": "05272a1d-8165-4ada-b618-a28e94b5522f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "103996cb-4353-4978-a915-db7be565b474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76086ca5-e682-4430-85ca-71844f55d08e",
        "cursor": {
          "ref": "0f1f06b0-ecd8-4f35-bb33-c8de637a8ecf",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "16d76bfb-b518-4136-80ab-ff4ff7c04915"
        },
        "item": {
          "id": "76086ca5-e682-4430-85ca-71844f55d08e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6818408b-88c4-4d55-8c5f-8e968f412fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cb0314-c10e-41bc-acc0-87b9f8afe196",
        "cursor": {
          "ref": "cac89abd-46a6-44e5-a10e-1d6eec4d56d8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9ebdcc95-b4a9-48b9-87b4-326fbd976e83"
        },
        "item": {
          "id": "e0cb0314-c10e-41bc-acc0-87b9f8afe196",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "286a011b-35b9-444e-87eb-6d9df3176740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bb5ee9-5525-4323-ba60-757368a2a84e",
        "cursor": {
          "ref": "30bb9787-9e24-498d-9017-0adef6bea827",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "29417634-ef40-4d03-a21e-b1b98b4c8fe7"
        },
        "item": {
          "id": "42bb5ee9-5525-4323-ba60-757368a2a84e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fb1ea739-0750-473a-81e3-1cb045fafb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fe3d4c-babe-4949-b055-79d897e2b586",
        "cursor": {
          "ref": "273d5930-ae0a-4e82-8389-feacdeffff1d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e74a8618-a9b4-4314-a83b-4b8b0009729e"
        },
        "item": {
          "id": "70fe3d4c-babe-4949-b055-79d897e2b586",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "db0b0a74-c856-48bc-b515-a30d035befc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ebfe80-bc1d-41e9-81cc-c1ec99364370",
        "cursor": {
          "ref": "30882725-50a5-43c6-a24d-4b74fb56b7f9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "54c809e6-a6db-4a38-b297-9a61f80a2788"
        },
        "item": {
          "id": "08ebfe80-bc1d-41e9-81cc-c1ec99364370",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1acb20f1-3de5-4fee-9c60-a24fa9947bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbced504-1be3-4eff-91ac-bf0717558ff4",
        "cursor": {
          "ref": "ae6dabb2-06e3-4438-9341-8bf108581402",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "56003801-119d-4e76-90c7-da689cef8f5d"
        },
        "item": {
          "id": "bbced504-1be3-4eff-91ac-bf0717558ff4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a3c89fec-af51-4b3b-b9a3-e1555bd1426e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534069c5-50cd-4661-8538-06d097defef8",
        "cursor": {
          "ref": "20712974-00f2-4037-8349-7b756252957b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "47c38bd7-afaa-4286-b7a0-375cc4295dd1"
        },
        "item": {
          "id": "534069c5-50cd-4661-8538-06d097defef8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4d6d8fbf-7a7b-466d-bb74-1bab8a91b68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1e77c3-d663-4db4-96ab-0b73981d1646",
        "cursor": {
          "ref": "6d59b137-420b-4c6b-aa93-6dd09ee67271",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9eb485a4-6442-48ba-a7a0-d969cc2e3523"
        },
        "item": {
          "id": "ca1e77c3-d663-4db4-96ab-0b73981d1646",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "38b2b1a0-645c-4b03-8336-f4d840b1f690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c3abe4-f3a7-40d8-b342-16e53c96bd42",
        "cursor": {
          "ref": "b1afa259-6351-4037-8560-3bc74def7f21",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f37bf387-11ba-429f-b40d-74ccf50d49f7"
        },
        "item": {
          "id": "36c3abe4-f3a7-40d8-b342-16e53c96bd42",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "99a21dbb-fdc7-47a2-8487-0c49d8039823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4414e56-bbcc-4832-896c-ca6a76e1b992",
        "cursor": {
          "ref": "437e632b-400d-4227-a1ef-b308c1dcb09d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c946b97f-d844-49a7-833b-3fad4f218c34"
        },
        "item": {
          "id": "c4414e56-bbcc-4832-896c-ca6a76e1b992",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9ef3d30c-5404-4d8f-af12-92ba2a3c7beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb13dae8-2c46-428c-b498-49d853fd5cdc",
        "cursor": {
          "ref": "31d260eb-3e18-4b13-aa6f-5d793e5ed230",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fd3085c7-a27b-4a7c-a75e-b477aa27ec9a"
        },
        "item": {
          "id": "cb13dae8-2c46-428c-b498-49d853fd5cdc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "94133490-b0f5-415b-8e2e-0cef1aca87b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bd1294-55c6-492e-8854-c9e068918acc",
        "cursor": {
          "ref": "683d8e50-b77f-4c59-9fbc-ab2d04a626b9",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cdec6500-9f2b-45a8-aedd-6e4b156c4edd"
        },
        "item": {
          "id": "c0bd1294-55c6-492e-8854-c9e068918acc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "98140a9e-a981-4d44-a205-54f10696be7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f250b2-7251-4503-b3f3-1c71fae67244",
        "cursor": {
          "ref": "1fe7069b-e9b3-4695-b033-07e38b74e3f9",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2af49bf7-3509-4f95-a91b-8257667d0119"
        },
        "item": {
          "id": "f8f250b2-7251-4503-b3f3-1c71fae67244",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2e352238-77c9-4ad1-87ab-f2e7125e318e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28913840-5298-44d4-8587-4f8fca6b1b86",
        "cursor": {
          "ref": "7437a042-1c5d-4fd5-b1db-aa7f46f847a1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "452806eb-6d27-4f39-be00-20ed6daaf49f"
        },
        "item": {
          "id": "28913840-5298-44d4-8587-4f8fca6b1b86",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "69172aa8-8980-46d0-b6d0-3359f091cab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f672a86d-6517-4725-9c24-91b2922eed47",
        "cursor": {
          "ref": "07647511-31d4-47db-9ef4-8a71cbd3c8e2",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7a42933e-384a-4e60-bed1-b64a10359974"
        },
        "item": {
          "id": "f672a86d-6517-4725-9c24-91b2922eed47",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7c085dfc-f307-450a-952e-840e06477ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0682b9-24c8-46a3-b0c4-0d4bb89c368f",
        "cursor": {
          "ref": "06c24e35-174c-44f0-b38e-307e0ede36ea",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1afb1e1d-4a86-4e72-a671-aec0fb4e6b20"
        },
        "item": {
          "id": "fd0682b9-24c8-46a3-b0c4-0d4bb89c368f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0f993b21-0407-4df1-a6f0-0a2c31a7d634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef5813b-58b7-469a-ad8b-3f2a7f6b2e85",
        "cursor": {
          "ref": "340c7af6-b5d0-4118-81c9-80e607c2b19b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "850b72f3-a039-4284-900c-84d217092ecb"
        },
        "item": {
          "id": "0ef5813b-58b7-469a-ad8b-3f2a7f6b2e85",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "62fd243a-347c-45c6-8dfb-a76104dab16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a241424-4420-467b-b4bd-fb8d9607e476",
        "cursor": {
          "ref": "fe9706a9-4179-43fa-87a6-3afe2d7e753e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "03961bd2-33ed-4a0a-88fd-4f88ead0ea96"
        },
        "item": {
          "id": "6a241424-4420-467b-b4bd-fb8d9607e476",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cd4f0421-6ede-4639-be53-195312d77b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52a8ba7-ba40-4fad-8221-b9904b7d7e70",
        "cursor": {
          "ref": "138f99b1-0f41-4843-b3b3-9cef6e59cb6a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "99cbb18c-cf2e-43aa-ac6b-d83f454ca803"
        },
        "item": {
          "id": "c52a8ba7-ba40-4fad-8221-b9904b7d7e70",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cc78f14f-21bc-48f5-8c20-e3c8f479f67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55d0fcd-2304-4dd5-92e9-538825293850",
        "cursor": {
          "ref": "fff76929-6f66-43ce-82d6-e002c7a8dcdc",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5eef7d51-dae7-4d8b-bc11-620eb799bce8"
        },
        "item": {
          "id": "d55d0fcd-2304-4dd5-92e9-538825293850",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1aec6b80-1e32-4f2f-be9c-0db60217bedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f247adf9-6cae-4e15-b5f0-c285eea48e0c",
        "cursor": {
          "ref": "2f9f44a0-d74f-4ab7-bef6-cc0b7f7123e5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "01cbc120-1112-4da4-b66d-aae71e601ab2"
        },
        "item": {
          "id": "f247adf9-6cae-4e15-b5f0-c285eea48e0c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ac655aeb-55c1-495a-b0d0-38ff4f245f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac074ca3-bc10-4d92-8c5f-1dd676076192",
        "cursor": {
          "ref": "09892589-cbeb-498d-902e-eed5b766cf66",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "26cda99d-4088-4b20-831f-aa8288da7bfe"
        },
        "item": {
          "id": "ac074ca3-bc10-4d92-8c5f-1dd676076192",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "61acdb87-2226-48dd-9fcb-10490f01742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1884b161-9ce2-4bd0-8287-b3c94500b018",
        "cursor": {
          "ref": "08e14f3d-6f94-4a11-a1ba-f6723d37d4c9",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0b130ca1-5ef0-4838-b4f5-b25d11d8d166"
        },
        "item": {
          "id": "1884b161-9ce2-4bd0-8287-b3c94500b018",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0dfddf16-4837-4a68-a6c4-078e0e07c1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e76be0-906a-4915-91a2-8cf26c9c6b09",
        "cursor": {
          "ref": "9121a1a3-d0b9-4d5b-8356-03c5fbfc5d14",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "791d032d-4475-4cec-b6ff-9c4a54caf0ff"
        },
        "item": {
          "id": "a6e76be0-906a-4915-91a2-8cf26c9c6b09",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e0e4e61f-759f-4ef8-8ebd-a0b38fd5c4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908592a9-e93a-4dc3-a103-981425fe0814",
        "cursor": {
          "ref": "346b235b-4c39-4843-ae02-80c73e71c712",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3bf4bf6c-5061-4f81-b641-0bc9437184e3"
        },
        "item": {
          "id": "908592a9-e93a-4dc3-a103-981425fe0814",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "64790afb-9041-433f-88ca-be7671bf77b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f41875d-8d7e-43c5-a6b3-b24a17f6161a",
        "cursor": {
          "ref": "b1df38bd-2b36-476f-a449-5296e870e5a2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d0dd4410-2951-4ae8-a36a-bb94d78f042e"
        },
        "item": {
          "id": "4f41875d-8d7e-43c5-a6b3-b24a17f6161a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c0801efb-a11d-4aa8-be7c-a57612fbb326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228fb5b9-541d-469a-ae9e-d6de52cfaf7c",
        "cursor": {
          "ref": "1b6e83e5-8960-44f3-a2cc-74e9732486c8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fd1a105d-e38d-4cc0-9362-409e92846cd7"
        },
        "item": {
          "id": "228fb5b9-541d-469a-ae9e-d6de52cfaf7c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a81354c4-a3c4-4c99-9c20-750c9e01b14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5ca3f0-84be-4df0-80b8-dcd876396ac7",
        "cursor": {
          "ref": "97a46254-a50d-4849-947d-624f8cf758be",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0e1fc197-f041-4b2e-9c95-9475632f4f58"
        },
        "item": {
          "id": "be5ca3f0-84be-4df0-80b8-dcd876396ac7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2f085730-9823-4365-8980-678bd19bfcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae77a9f0-24f7-4747-988f-eb5648c2b8b0",
        "cursor": {
          "ref": "16eca848-7eb3-4e1e-a1ea-a5764f712a38",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ec926fb1-54f8-401f-a31d-5ca94f1af744"
        },
        "item": {
          "id": "ae77a9f0-24f7-4747-988f-eb5648c2b8b0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7ba4d3ff-b103-4b2c-a5e7-67ad195e031b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e75f3a5-14c3-4309-bd3b-2a4675aa8054",
        "cursor": {
          "ref": "04513c77-7a0a-4adf-a737-785c1b5df767",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "66dc44a5-edeb-410f-9dc7-a96fe77a1107"
        },
        "item": {
          "id": "5e75f3a5-14c3-4309-bd3b-2a4675aa8054",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1afffe3f-f0a5-4d2d-8dcf-5117fe5e8377",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e627cdb-773c-467e-a8ee-3108dc9b369c",
        "cursor": {
          "ref": "bd48eadf-8d8f-4a4c-ad1e-ad3bb6023acc",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f6c0c69f-2ced-4370-b34e-d2e483a9a3d1"
        },
        "item": {
          "id": "4e627cdb-773c-467e-a8ee-3108dc9b369c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9c60d0bd-2199-4397-b0db-c9b921139207",
          "status": "OK",
          "code": 200,
          "responseTime": 1518,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2858e5-696d-45cb-a9dc-841d76e49baf",
        "cursor": {
          "ref": "8f645d35-abff-4f7c-b4d8-9054fb25d228",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e1873fe4-dd39-4a20-a28a-4795c67a4c57"
        },
        "item": {
          "id": "6b2858e5-696d-45cb-a9dc-841d76e49baf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7142a555-caa5-42de-bd83-965e151888cd",
          "status": "OK",
          "code": 200,
          "responseTime": 1450,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea036c6-dfb2-417f-b3b1-cf80db136b86",
        "cursor": {
          "ref": "80853c45-d74f-440d-b21e-7da383a502d4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "290188d3-7a3f-4682-8b0b-74d9bea1a1e2"
        },
        "item": {
          "id": "1ea036c6-dfb2-417f-b3b1-cf80db136b86",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54865f1e-b4a8-407c-a58b-9b5054984f47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea036c6-dfb2-417f-b3b1-cf80db136b86",
        "cursor": {
          "ref": "80853c45-d74f-440d-b21e-7da383a502d4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "290188d3-7a3f-4682-8b0b-74d9bea1a1e2"
        },
        "item": {
          "id": "1ea036c6-dfb2-417f-b3b1-cf80db136b86",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54865f1e-b4a8-407c-a58b-9b5054984f47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680378ff-b5d3-400c-9f92-b3a03c4af3d0",
        "cursor": {
          "ref": "33bb75f8-52c4-4008-9463-cd6b92cbc196",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6ee8cafe-a633-4dd3-8e80-3bbf5a94aa23"
        },
        "item": {
          "id": "680378ff-b5d3-400c-9f92-b3a03c4af3d0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0e1575e3-607f-4693-87bb-7ca1de15a69d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e142b9b-9cd2-46ac-9808-33092ff83f6e",
        "cursor": {
          "ref": "bce7f04d-56ee-40c9-ab34-b101649dfd79",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "27c7e31e-477e-4337-a4c1-b0b0ce7bd6c9"
        },
        "item": {
          "id": "9e142b9b-9cd2-46ac-9808-33092ff83f6e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "19cf5612-e46d-4f52-a813-5a0b3c7fa3e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}