{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3e535422-c77b-44c1-91ae-3e63d02eeece",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b99ab138-e6f0-4afb-8e28-23140d3b67c9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "308a8db8-7da4-4007-b637-0b2209f1ca7a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3f805f46-4e0f-466b-92bc-0dd72a5ae41d"
                }
              }
            ]
          },
          {
            "id": "0a455337-2e07-4902-a07f-c80a1b444aea",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2748e934-eb68-4c56-a6d0-30c47d2fbc1d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f5a9e06-d179-42c3-b09f-4742241ae49b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "40f89774-a83d-424f-b2da-6461d9f1fcc5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3387b6ea-234a-4fff-9040-497027f3d31d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "891bfda0-6ac7-4e69-9b27-446af39a3654",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c312831d-b01e-4672-be2e-daecded134ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b46e215a-7558-4e26-9792-92c68a43ebd9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b696ce4-464f-4062-8a1a-6644867c5a54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8839bb41-a912-42ea-88ea-f6b81ba4fd75"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8181bee6-8a91-4691-887d-b528a553aadd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5dbb9ace-d4fb-4223-bbf9-cbc3bc7f0b8a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31aa704c-65db-47b2-8617-2cc596813ee3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "391205ad-fd3f-4203-b1db-eba0e1d3be87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00750a86-1dbd-4f80-94d6-cbaa93e4b764",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "575ab8cd-154a-4d1e-8ffb-93552b2c54dc"
            }
          }
        ]
      },
      {
        "id": "281fe396-b2e6-4aae-8345-fa0e3a57382f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "50300545-e1e1-48bf-9ff9-c50945b736cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "863f9f1b-6134-4549-901e-a52823370e78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4fbcb36c-2e6e-4540-952d-01f70b66d693",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324ac2d5-f1e6-4588-abb8-0b37082cb279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfa5f824-acef-450c-8953-f06e554a6c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8320aecc-179e-49d1-99fc-1bbccd6a0839",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abba00fb-7466-43d0-812d-1d52e3499a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d0fb8b4-b488-488d-b1a1-692a33533d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708f912e-362f-4f54-acc1-87e833c27454",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83019102-1017-4efa-a88a-70d83f4d4473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21df7f8f-6758-47e1-86e2-05f41f1481e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89a2ee80-c63a-4199-853d-fba16eb0a15c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fc8864f-1f40-44e4-b13d-3d51dbe1e881",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1339d07e-05fc-4a7e-9cb0-286c5532f27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36b1059a-a5b3-43cb-b9c4-e8f58917ebab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d36606-ffed-4e87-b978-98d51c0e219d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942acf32-0429-41d6-84ef-923355ce0d5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e72e7aa7-4408-4bbc-8c8b-a7d5b40b53c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eaca18bb-0141-45d1-a2f7-55eb18fe9a01",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab551d90-7847-4f2b-92e0-cb65a1f44f29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "63d0a641-f734-42fd-b082-9f51b606677a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69607102-cc66-473e-89f8-fb27915aa8c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9b706c30-90a0-483b-b7ce-90eed065bc6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "338d4426-820f-4b65-b69b-339cc1dbb789",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b37dd11c-a1f4-42c8-88c8-d31e949cb890"
            }
          }
        ]
      },
      {
        "id": "6a304784-1367-4eae-b311-c23fa4f40954",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0433ec68-c7a6-4448-a735-65c5e53fbfac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "653bee7f-6abd-4c56-b325-b8b1a14e5a81",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cc68c617-48cc-4faa-be7f-86bca7dc6116",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af4e3ad-a50a-495a-bac5-1d0a11bc6f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af7c86e-32b8-4a8c-b258-a662a2b06bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fcb1fe-dc4d-43a3-bb1a-92c6b476d881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62172b2d-d9b8-47bb-a618-0a1a9a3996d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518467a5-3c90-4d3c-a202-a312ffeb0808",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dcaa9c-bc2b-4282-8d35-24184a25ef43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fafb731-db27-4ac4-976b-7e3445d38660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84798f65-bf83-49bc-8d3e-6a6110b7fd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee5abc9f-789d-4272-b58b-07c67526ed92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41333fd-1994-4ed5-b11d-27e845de65d9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aaa987e-33b8-4269-8c9d-6832ff5c6bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e03607-3c04-4cf1-97a8-6a3589caeebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f34eac-0dc4-4a11-bdc1-c2de6403ad73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "307ebb3f-b524-44d1-bd7d-41543440e851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4b2184-e47d-4b1a-8e7c-4d1ba32461d6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2be4cd-7827-466f-b9fe-2de2e5028ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c176f061-1b97-4864-bed4-17a96f602b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01f8cd2-6149-4cf2-b39f-68673f2230cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b8b7f2f-a888-4b7a-8433-564974dbe467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f6943b-40d1-41e7-9a19-b43e25d8ac5c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8928c3b-1512-40ea-a5f7-4b07b4746166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aebca8d-258a-4108-936f-e5eb6a0303ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a677566-1fbc-4574-809c-cb2da168e85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40e48ce4-d757-4cb0-b485-53bf52dd5f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741ce91c-9eff-45fa-ba3f-73ec6930ae4e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92ad3dd-9b62-47f4-8b1d-60784930670b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836a56af-ed10-4a47-b035-dadab1f795e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fc933e-f692-4567-b3fb-af3ad74807f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e29b42f0-f715-497b-9a1d-6693825ce7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f878fbe-adad-4a74-b516-512182d38566",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fa546e-5d2b-4bd7-b629-1eacbf75ba60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a38cca0-cfc5-4374-aa31-694947e41e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43b0e82-8311-41cb-b36b-b244a75642d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa708004-4088-4b1f-91fe-d878cda2f164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394bc7f9-9711-455a-9b81-03720a6d2e32",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c98ae6-5cd5-4707-95fb-33d41a49adc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b28f40-c931-4883-9045-63af69d22862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65d3765-31e9-46df-8d3e-b194098d4e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cb8acd8-ec73-4938-bbe1-c60896145193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6effddad-6d04-4b43-8ddd-e1ba210f8d34",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40f11b0-1981-40c1-a1dc-2bf2d16bc964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25b0def-9147-4968-a96f-5a00b8312102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8bac4f-c31a-47be-a9fe-02e58e506be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cf8867a-280c-4146-9932-4650baece23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39708cb-8ae7-4555-af98-b139051b1b42",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde454b5-aa23-424c-8548-c8b03026d2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f302e911-7dfc-4d32-b7c3-a52b0fc97823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88685fd6-5d74-4679-9f52-bb625d890da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b69bf13-80f4-42b3-afba-50d2caf6078a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07420c6c-0e45-4c03-9ea3-305cc42d8c37",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b63664-2306-4ae7-927e-80bbfef7cc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbecea8-0f1c-4690-abea-fe69b8a4f228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b72f8-b8dc-4766-872d-3dbac579e8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33dc443e-75e3-40f4-b061-55160afa3e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf8b3cf-b9ae-4e82-8951-1de3399e000f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7401d7c1-d3e0-41bf-aa5d-d6425a817f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d49e7b0-2515-47aa-b7ae-e8c698e932ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6485e90-1a6a-4cf1-8df8-bb49dffd2235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79a299b4-c8de-410d-8d75-215fbfaa8def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f117683c-b846-44a3-a4eb-64ddcc2802e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418a4069-2a25-4d3f-8a20-d07f49c4e3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142fe5b0-ccdc-4904-b515-332a142e8206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4f4fc3-015a-448b-9723-abf6902c9384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28b58548-b35f-4ba0-9fda-93a3a228477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e14660-a4bb-4227-9dcf-a2c1a3541d56",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ffe803-99d5-47be-8584-bf941c68e59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e99ca9b-c0b4-48e6-8d73-35b3c149ef3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c145f61a-2100-4a13-b052-3b77128199ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9783b109-88a8-4f14-b104-d8ce8c342441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b307ba4a-46f1-4176-b897-7937c5fb544f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfeab1a0-3d4c-43ba-9a6a-fad7badd3e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361b3c0a-2279-4fc9-8c02-b2e4235e66df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ab546f-d566-41ff-86c3-646be287b9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "703ca662-8ac1-4b0a-a5cc-a68cae11c7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa442afb-493a-43fa-adfa-57e1e2e3268e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f16f2e0-aaac-4790-8172-b55bc769f4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958d2d3a-8798-4622-a03f-e5cc7e0671e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ca840e-804a-43ef-bf3f-bb8fcb2a40c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86f5f167-750a-47c0-b2cf-c80ce6450688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9e2eae-e73f-48c2-b592-302fbf7d166b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89a112c-e1c3-4542-b192-9e6b89457d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e6ec0a-94b1-4a9e-884c-94610b0d96b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c7096b-0137-4297-84a1-a2bbe9cf22cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37225854-06ef-404c-9c34-1478000f8896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28d160b-d055-4d3b-a68e-26a269bacb95",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4d4bf5-1b02-49de-b78b-5055b79f657b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b5133c-9fac-4b1b-81ea-60556aab10d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f718e4-a252-4cab-be85-19fef6024954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dace59c-7b1f-4e3f-9cfa-3cc4db522c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb3b483-68c4-4e83-b80e-7b0e7c751760",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72291f24-c86b-49e9-b2ef-7f23064c129b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3baceaf2-617c-4c4e-9fa8-ab4fe586d9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2924f8-f1ef-43cd-8683-2cdff3c28fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06137504-6699-41b3-a2a7-446003bbf514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d900582a-c339-4c92-bda6-b26223d98398",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040721e1-f8c8-4def-95ec-44aad57e5f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a3e559-d878-4d3c-94af-4d8b3fd92db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9afde39-2b72-4762-8827-8d2af9e233d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "250a1752-3f63-411b-8cff-013cb3daf2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c8c191-17c2-459d-89b5-1cbcead22172",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d649626b-d562-4095-8ad9-593e817535f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cd6e11-7b14-4a26-85ba-660e1eb25ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce0efdc-f906-46f1-89ef-f6aba5f01452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "958e417d-7759-4073-b7f9-8ee8b0647f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91fd80b-3aa7-4f83-8449-97d262f07f98",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16405df1-da39-4eda-add4-1d111de0e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0267ac6f-1fe4-4541-afd4-335d30705608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e21cde-8a96-4026-9bea-c7c51549dcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f00eac92-df31-4bbd-bef5-69b8f8b22fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c828f8-2295-4d3b-a9f5-7299587f89a6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3063b559-70b5-4834-988c-6e9e096c98dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30332122-d80a-42cc-83b5-d6ba2b3c1428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2450646d-c17c-48d0-9305-04a7e9158f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94b54051-08c9-4156-9708-a119dee24903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f48c30-b074-4a8d-877b-3c42b1b671c5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5151dd9-4a9f-410e-84ec-cf58b9900dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da4ba38-0d12-4c57-ae7a-6f706b72cf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89983725-d43a-4f0c-b555-40bfea64c5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e370b81-a418-4a47-9769-539e5261436f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b865cb67-0b08-4a69-a640-7c1022c9c702",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118cbd51-1da9-41f7-856e-e4bdbf8286ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbdd6d7-e61c-4432-910c-2cd5af6d1183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9a57c3-6702-4ed1-a5ef-12fd9bbbe1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d4b745-8eee-4eb7-8018-e614fced186c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310426ee-54e7-4d94-974c-d646d5840a91",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423d6e1d-1bf4-4d6f-be51-49e155185d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2c4eb3-32df-4277-bb93-fe14695b1946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468444d3-9568-4eb1-94e5-85c97dbb70b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b151e9dc-34d0-4038-8fc1-8633966dc9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8041a951-3835-445d-a964-d6cbdf6bce23",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6ec981-30e6-4432-be1e-74776241f9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b8cc4d-6506-4757-ba99-9b3157b086c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d921acb0-9705-4604-a835-896f7d7c1b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4450aaa4-0675-42b6-ab0e-0dc6834959a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33dfbe1-9527-4099-b45c-d124a2bb4ed3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9bad99-b1f8-4dc9-9d24-ea6f34c213a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3ad0a0-6fc7-4e1e-a829-92bd5f9eaf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9d29e0-2996-4e3b-88b9-2c91b4e7e585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad402d8-ce09-43b1-a9cf-dce495d3f85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faca47b7-a0e5-4269-bb54-9c5fd9a1947f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11d97ea-6209-42cc-8741-f526139364ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2971a2-7257-4dc5-9dc3-31f3d2fc4c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fd4002-81a4-4c44-a4fe-e9c658cca010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bedaf83-3e83-4868-9c0e-4e73e834b334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983436ac-a0a5-4fd5-b936-9e9755343731",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b97682-9033-4212-b705-9477ef8cf5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5603bf49-9f35-4a70-b1b2-4210d1d2bad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489284b9-c687-406f-af6a-7e333ce48173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6336ea27-92bf-447d-bc56-5ecce92d62da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ff1dd9-5278-4925-ba9b-9a99db177434",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854f5644-0ea5-4eed-b94a-83b740f431a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5eea20b-5e01-4991-96b8-05155d5568dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bd1538-6d19-4259-9dce-2be4f93f83bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "effb815f-b592-4d6e-bc79-dc8fe7f3d45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7a5091-14fb-4732-a781-a636cec48452",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87767100-5311-4845-b663-b59c631088bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e96608d-006b-4366-9851-561fb7df6fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e452d6-ea65-452b-b49f-3d8c80538221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2c4498-1cfc-4079-b614-32eeff7423d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484aba73-a96e-43b1-af42-203d6674dde5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32ce413-2ab0-4b87-9290-64251ed86439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8e84d9-b48d-4110-afa4-6a60fb573325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba46c0c-67c3-4d51-9e29-ab69d93f5670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef8febd-2507-491b-b19b-7bc35825304f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ab1441-8e08-40a6-bf92-7e2e66e9b463",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9312b45-78b5-4c64-abae-f6efa1fd69e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e493405d-d6dd-4168-9f89-815f697c6000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f43a84-e62d-47fe-8657-2131b7b6690f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b51539-adc6-4291-8c66-bf4562eca5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2e4f84-6b81-43a2-a548-5cb9d6ce616d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d82835-cfa3-4e56-934d-60d48630b533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdc0eeb-8b9e-4a75-a1f1-cd449e1e518e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ca0006-7b03-44d4-b4b4-1273a08f951c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f7768156-5ba2-4709-8fda-9db925c8cec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdd6a7a-5d98-467d-89cb-622db86fa0ec",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e4d449-c8ff-4001-9752-3677f06682de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf80f5da-5ee7-4d48-a65e-3ab08682a259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78db3c5d-0008-4085-ac19-b6683c402d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f3a9c2-f5c7-4a6e-bdf2-7cbad1737bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef83a0d7-9a67-43d3-a1fd-e3e051820b77",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757afe6f-fd90-4852-9bbf-7c9d12a5b15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acbe748-7571-4942-ab0e-511cfabb1702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7eb73d4-fc8e-4126-883c-01f1baca6856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6360192-bd56-441a-b514-f353817311a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3befef6e-d756-4b09-a833-878f328ddbab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2a2358-686c-4c62-bf12-445e8aa402df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57122982-6359-48d6-a50c-eff8c19741fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c84f14-10e7-4e53-8ace-55e3e2439e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "98dc42a5-cbe1-4510-b8f9-ed2eac7fc848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49d8c66-aeee-4068-b5c8-820d0658f427",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2adda46-91fe-4a34-8d4b-8bbc976be874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d31372a-df2c-49a9-82b9-84fb09a88e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7d1bb0-4f6f-4fc8-a310-0c39928b747d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4af609-eb61-491d-90b9-e143d9ed9679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed1dca8-fd67-48ec-b022-b823e771797b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bad13a-86c1-48c7-9f1e-424a6ecacc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce35a2b-1478-423c-8ffa-d69496074810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145fd572-893f-4528-91aa-8807a425269f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "41d6fdfa-a887-405f-9ed9-dd6eb45a1aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6657f2-bdcd-4cef-94b8-14d77909a8fb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42745f78-79d4-41fb-a488-c102fc19880b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6a637b-3110-4062-8bf1-6afc99a78354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7dd0f7-a49e-4994-adb6-7c5b68d74efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8810c09-c935-44f5-bd4a-d8e2644a4ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e36005-fdaa-4801-926b-739a99171e80",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0c4f52-af78-4973-8827-6d2d807662e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5402de76-86e9-4653-ab90-01b28ae95969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22eee6e6-6947-47a9-ba77-6a981511625a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "09c1edd6-4d04-441b-af58-bf277fe326eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a379930-7d7a-4e9d-955a-1ba43f1816c0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4766434b-83a2-45fe-93ae-79b3f0ca9836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d57b220-abea-4235-af4d-60d6c36bbe41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008c9a50-6277-4900-ad11-7372ecc1ae50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3bfc3e-a4bd-44ae-96b9-86ea94366528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf3a222-7230-4f11-95a4-e57b22cc89f3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b5d2be-a709-46a2-ae27-dd61f95f2b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550ee92e-56bd-4b3a-9d87-7ebfd5fa4977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b95066-d1c2-4b77-9646-82be88e8f903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc8696e-e5ac-411d-912b-26efca33629b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037cae93-11ca-49c2-ada6-9dfc54d717a9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f775098-cc5e-4b6d-aeea-0e4b352fb85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b01dc7a-61ec-4c29-be0a-5320bdd60076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6939123f-d407-491b-923d-cb387f5b3b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd2e59b-1dd9-4cac-94bb-3f5114bb3a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c4a82e-9020-400a-b1b8-a92692385235",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4331dc46-b290-4ccd-9a12-7b95565f03aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dfefe9-aecb-4b6c-bf0a-689df7657ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1307096-1966-4e5b-ba7e-7aa30f802c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84abd2dd-c75f-44cc-bd0f-8f65d428b0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb480653-7ebf-4b4f-9da6-f6a1500157fb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321f4a3d-b1d4-4838-b822-f63128201943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148b28d7-4f33-431a-8f47-f8f1ca534569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cf918e-612f-4620-ad64-a6b2b585aadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec16f8d8-2c78-40de-8794-3c3fef376843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de963041-eb36-4749-9e8f-23aa09f9ade5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613dd165-5bbd-4fc8-b88c-447aef340ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7f38b8-d95b-413d-a55e-2900c7a8525a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb2dd97-d0c4-4c08-8c10-187d3cab5633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5e0dc0-e8f6-4b12-ba87-52a7aa461a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47cc974-d949-4f6f-8df1-5406e910f957",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df424f39-9803-4193-8e14-3822d8578db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9d22cc-517a-46cf-a065-c4b92747fc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b06f653-12ea-41bc-8e57-a1fd7f6f5d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e581fe-4648-4477-bf46-e299f667e61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e1d542-ed51-4ae6-b122-7dda8499c36e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaca9a3-4f90-4f00-8242-86c494a300c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a96353-c84a-445e-881d-051334094fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f81eea5-64a2-40e2-8b2d-723bb383735b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4470b893-8a37-4363-8ebf-7c4a039dfc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be94ee6c-3511-43fd-ac86-b71058c75940",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78a8269-21b9-408a-b32e-85ee70ae9e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd63321-873d-42d8-bc99-4dd0813ea628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d2e868-f972-4be3-a1e6-3c8935debd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "af0f7239-7852-4555-a476-0395dd71262b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb63bc92-7aa2-47b8-8f01-e1a4c5075e5a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85cadd1-0797-4cec-9e69-3100328dd129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e477f7f8-2c2b-4283-a51a-d709d3332581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fe96cf-3f8c-4402-8533-a0e29da74c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeee32d8-da31-4871-8068-c0058da0f122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d9f6ac-5499-4fb7-a4ed-6e7727784c18",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64017ce7-35cd-48d8-b6e6-08843082faac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b374471-89ff-4eed-bbfe-12a25fb54bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da13c463-390c-435c-ab70-ae3fb3007a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51cc5928-68a4-4b03-8e54-e59756b2e8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89b9e8c-b35e-4c32-bf2b-fff8e80e70e1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a26d1c-f05f-4a43-bfd5-a9fa60ecf6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85d07cf-8661-4cfc-a4aa-a528102a6e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebb0559-164b-411a-9e22-762b385690de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9068f046-5f89-4a86-9a57-69766ffa8b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9793e8c7-a9fa-49a2-8b1a-2d59dc32f288",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8368c155-a57a-4529-9e73-9804d21b942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bb2544-5ac9-4857-b522-a87b4b2fd5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6642bc-a830-4e59-b10b-958d78e3eb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c8e6de-e66d-4ce5-b3db-77d6cccbf256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c1cfe6-10d0-4499-b437-0516f137752f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e798b7-c2ea-4104-b0ec-5916feea6d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7399b691-eee5-4e78-9134-b30515ae6a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f8459c-9a9d-4187-ab8b-9af2e33ff640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8bc1c0-46be-4269-b96f-ba365fcd8197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395d65ee-e668-4927-959b-004fe94de1ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd9a5e6-732b-4621-88e3-7c3076bc3214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b6bc12-7987-4c02-8870-bba8529b7b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fce9284-04ba-4d31-a6e7-b0eeae9d209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e736c26d-fadb-4195-8246-a91979b0f661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ccb659-e709-409f-b07e-77043b2d4a7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443a0859-a256-49d9-aa62-b9068892baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77599a8-258b-46bc-9cec-d28ec27850fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3856283-8d4f-421d-978a-26176345ab4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9474cdfd-a663-4bb9-b483-f2db562953c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d6cf76-df04-49cf-8b7f-c9e566ebbb22",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9348ab2-d1c9-4e23-a7a8-9d865fe5cf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93528dbc-82d3-4d64-9de6-4ce9b9f84f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c342dcc-8e2f-4c68-8524-3581a9c5ba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d427471-25bc-43f4-98a2-c9bc461b3884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b217bd87-b5ec-486f-a695-6f487fe91142",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e123e55-f248-4fc2-8129-a24eea1e761b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e2a323-555b-4574-ac7b-216a676ece1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64124583-1cd2-45b0-96e1-c6f0f9790dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "245a2f73-f959-4801-a504-4bc0a2bff52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028a6dff-9834-4684-a0e1-1fd324e67135",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfdc741-11ff-4640-b3b4-b9a75e0eff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dda39d-04e8-47b7-a181-c5d27c53d5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1249503-8444-4e93-a31f-4ad30fae1f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aed035d3-bafb-41ec-9981-bc6cd68fc094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad8bec4-4936-49cb-9edc-729552b59099",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4c3c98-d928-4d40-9332-0d357cf23259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825ce125-a572-4bb5-b1b6-2919c27f8961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9589ef0-2466-4418-b1ac-36376f14b702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "92d18878-65a3-41e1-9cac-9ad5fa73752a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108e9c41-69dd-4733-a89a-438f7f4134ee",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f247be-59aa-491c-b0b9-7bbcb5a307a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53963259-cf3a-4a0d-b773-9cb76b19ed32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819b5677-473e-4174-9fd5-108759f77d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "525e1e98-16cf-4a5d-ada0-2f2a6e309a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dae919-6b8f-41e6-8d34-1fbfa75f041e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ff43e8-8681-431a-a1ff-7a4cc641a87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b68e9e5-dc02-4a60-a23e-a79b0fd8a094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc898fa-6d88-45eb-aa83-7b36ae1f8276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b71e10eb-2106-45c9-8874-bc93608c863a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cdf52f-4447-4945-a243-877e08f41684",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45889b53-ba3a-4f2a-b902-6a52cb82223b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9296df48-34fd-401f-a3c8-a09567ab3470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d7ec37-6747-45d9-8cc3-3a41d43a1f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cda163-9f27-4834-aabf-34e691470a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec67a31-601d-4899-aa6c-19b0c9bb3b70",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353c7453-af78-48b8-9634-168641d349c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10348891-a5f9-4771-9b74-bf9ca01478d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9818cc0b-75db-4a3f-8cbe-991b536ff5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcc83e7-6039-4be9-9c4a-789c60c46104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57609e26-7ae1-455e-b50c-4d959e40c069",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ce7628-bff1-4b9d-97bf-53307c5c509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5284eb5c-f935-4335-a9c7-b9ddf9b15f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2446f17f-f6a2-4f3e-b326-b89b13d9aaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35a0d7cb-09e9-4edf-964a-9f982d1d9fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d6b08f-2bec-482b-af99-b8f451f83c42",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae77c4a-8cc0-4c6e-9d23-e73857747755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f38f6c1-fb47-463c-8f3d-decba1a0bdc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0459c815-b4bd-49a4-a9f4-11f9c666d5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb1e3e1-ce80-43a2-ba58-f4b301a047f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae5fc1f-ab73-4a9b-92f6-be20361e7237",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac110bd-b79f-4431-bdfa-a82f1b8db959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2019798d-54fc-4eca-9057-cf5741969c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffc0ea2-964a-494a-bbd5-cecdd0929de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f4e34a-1fb9-42a3-afe0-4165662f5c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ab3872-316f-4a4d-b645-9f72798ebf01",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53bd0b4-2c16-4320-89fa-03977724d613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43afea68-eb5c-4414-b1ff-5b749db73cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eae5d7e-6bd4-4a58-8333-e3892522bb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad366d1-c515-4767-9f30-2f5740cd869d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd7df48-bdee-490a-9375-b94a1f1a34eb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c032bdc2-7251-4ef6-93d7-b651ff9d6d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5273377-6da2-4dfc-8ded-3474e76e5d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d3c519-e143-4f79-835c-299f63e790e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be871ba-f5d7-415e-ba30-5db841495569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98c13ed-9384-4297-b40b-be0b47fe1e45",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a85788-cf1f-43cb-809d-1253c79b58cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e10ef7-7c7c-4bb4-95f6-335655615fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6d265f-b1b9-4888-9448-55420a29ef5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa39e8a-bbae-497a-9b1a-6ee4119ef4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14183d3d-b42e-488b-930f-5cc5b87cd85c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2a0de5-0d6d-4b51-989d-204865f6819a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4ecd42-6507-4ad4-b96a-0464a5e19286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06adfe16-0c61-4544-a0dc-8455bbbc0654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdd67b8-f795-4720-843c-9b6b53c827be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad51d136-1694-4784-900c-c9ee9e6ebb97",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2539403b-b0c4-459f-ba5a-056ca4f2c49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d6bb60-94eb-4f45-8490-4dda2bef66d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a147bf4f-277d-41f8-96cc-39f9b05eab1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81a02d99-a24e-491f-bf47-05b58014e5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1c6393-e150-4f89-bcf5-57e755a04b05",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca459e9-f79f-4a47-8f44-4c1205a4b1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0e7ccf-ac7e-47ba-867c-8a1635aa513d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5ecd84-b418-4607-bf6f-98785effa931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a098a789-82f7-444e-8b6e-598ed4d187b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa8948a-95b2-4243-b0b2-8ecfbfbf0368",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e926b4-a288-438a-90ab-d554925041c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5719f222-92d6-44b5-82e2-7784f01e057e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb408216-e2dc-460a-9804-b7dbb792fb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e164d6-ded0-4108-a982-2fea97ee9618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673da58b-2b4b-4644-bc81-35812807fcde",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bc220b-c3e5-4b0b-85c9-504265db3a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd31fde-d4ab-4d84-9a5d-115706262c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cf03d8-43d2-4252-840a-e9b16604fa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce366ba-2f2f-4dc2-a614-279e8b9fe259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61314d6-e6d1-4a4c-a1aa-50a461b87379",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3683bae-fc4c-4a33-b97b-df897fcc0d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0304152b-4527-461a-9f09-d02a27befbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9f51c6-6bec-46f4-b9af-51f7d4837ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b46332e8-64d1-4150-9f8d-18c8d41d3c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84f30c6-a1cf-428e-bbd1-2aedfc0f9460",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8821d099-1429-4204-9101-010256a621c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309c8de0-d7a2-4089-8f87-458c8ebb5390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b361a041-ba7f-4b11-9da4-5ef82b38deee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16efb740-f327-4ced-8b7e-ed72ec6a1ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b2e71a-6cf6-46eb-85ea-5bf399582bb4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b777390d-e676-4699-9c9a-132cfd110e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f993cb7-6191-4558-827d-9e9a4c29083c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4927e8-1cda-4829-b14d-f7d21a03c9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "137ef4b0-cfa7-41af-8247-c41dce5c2d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4d5e6a-b35a-4af4-9497-e27110984c95",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf65ef0-b917-4531-a19d-fd0cc4706e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9429df-87e3-492f-8569-49be5caeb97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f356fbcb-897b-4a50-99ed-9ed09dbebe7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f465df-49f5-4789-b75f-fb75ca6d741e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ce5ad5-52a8-4ebb-bb3e-deada5e90b09",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4eb5d7-05d1-4161-b980-e8c4003389fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f08bd5-5112-4014-bae0-143cc23a4fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb135812-c5ee-4df4-afd4-0e3a2ab45066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb591177-8d20-4514-a208-18f6717a9267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf70a2b-f110-4cee-bdf5-cef6a07f25f5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a27745-876c-4e77-85fa-c371add809e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9b97a3-6067-4627-9384-774873548f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7e742f-5006-4e5d-819a-6f5257992d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c4bca1-da73-4fbf-962f-08dfc7338402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4ff971-661d-4b7d-963c-f4e78e278a6c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffca5eaf-3779-42fa-89e1-bd954654ed29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16cdc4d-eef2-4b89-b155-4deffeaba370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caba9b71-21d1-4f62-9611-ec5e32f0e879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded2b75a-8700-4d00-8438-dd92d58a6907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d33aac-20e8-49e5-a025-832dd95e3ec8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0410d589-0c08-4d45-9e51-52636e14d21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7019f2db-0d35-487a-9fd8-92b43171ec34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af238f9-dcb7-479f-b826-5a97b48b52da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe6c8f3-6e48-4bba-b1d6-acfd6f731377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935bd88a-c071-4621-90ba-f1697df88e24",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311762fe-5163-473e-b041-05e814160dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8106837-8947-4d36-b4fb-b609beabd43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0351a786-1561-4778-83d6-a8abf284c48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93beb2d4-7a60-4e29-b305-dd6d2bceef53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f14dd08-b2fa-4198-9c64-a332c7394b9b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3c07cf-fe9a-4a4a-8dd8-4e65e77a1d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc957d3d-5d76-4190-8b74-1d851237d7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d08784b-897c-47c3-bc68-8dd3043a14dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "358bd65f-6b16-4291-a43e-9684637f2d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c37ae6-5d07-4186-b318-3ae8b7adea70",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcb9f1e-5ba3-4347-a65b-8130b9ac5306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1661ac-3cb1-4ddb-acf5-843b6b11c3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85f1c27-e1f2-450b-83d5-c924c43ee74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "513a4281-2340-4e9c-8edb-05883a155ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34bf862-084e-4d83-8184-1bb398d9be02",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4271b701-edb0-42eb-b9c1-a9e31b0dc976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0090a8-302c-4b67-9650-ef4ada214e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31ed88e-e31b-4194-a1b6-77fddccfe591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "847a5c56-51e4-4fd8-a172-55ddcbc14ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04957b7f-d0c6-49e2-907d-b95f6218b9a9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537c1d09-a9fb-4a67-9e23-849ead71cf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164f42cd-82ea-4550-a223-18897f0340a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1909ca49-58c1-4784-9bf0-af6527f8ab3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "21a97c6a-8b4d-48b7-b761-66599b0d5a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f769daca-0ada-491b-8488-aa96955bf943",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657628de-fe84-486a-9781-8143cd165c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dab99c4-cec3-4aab-846a-4fab15cef698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb0dd89-93e0-46ae-9e54-dbe0fcef94c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44d48bdd-4225-4caf-9b3f-b83c37f4f0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97ee469-b564-4e10-8c69-51b63f4f6611",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ce0714-ceb9-4999-9536-e51d8b4602f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e71423ea-b36d-4f0a-8c2b-f8fd7ea968c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bf29dc-1709-42cc-bb18-19547de40eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "500fed94-d50b-4fb4-9337-feffd82f20a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c31adcd5-f8d4-4681-8f18-6c372ab908be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83370047-2926-4641-91f9-2b756f3d9e65",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e18474d-07fa-4897-95a1-8e66d1daf39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3255e354-bbc2-42e5-a2ac-5823b50519ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352b24f8-8105-484a-b70d-4430a985cd91",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cf38193-e521-4464-918c-e1a6bd001a21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63979d7f-6d8a-46b3-a31c-47a9699d2430",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82dd3033-33a8-425a-83f8-a011b979f9ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66cfadb3-272c-443e-a9de-d8f9824e3347",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd5f2075-b0fd-48cb-84f7-f0aa3389bec3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35d71d25-b023-4e2d-9353-faf8f3d6d8ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d314cc1e-b37f-46da-9853-81b1284f1e97"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "692f4359-e5f7-425c-a9aa-f9b4b4bf3971",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ff121f3-03e5-4fd9-8b59-d93f554958ab"
                }
              }
            ]
          },
          {
            "id": "f5419b86-6631-4242-95bd-638e86353c36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b93a9464-2bdf-43f4-bb6c-1752d4675b23",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8633bc29-7235-4675-af00-1ab45615a806",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f74c7e9-f291-4084-94f7-215da3951bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2980ed11-a3bc-44dc-8265-ffe20523eb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa49527-d6dc-4504-8c27-35f9f71caeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3c39dd-8842-4716-b7eb-16fce0bee3fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36f7b90a-5207-46f9-b606-3a281fb2d57a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f55bcbba-d721-4e88-b212-ad5cccca0261",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4037b76-2b67-442e-82f9-2fc0b6110039"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dcf1f69-e2ca-4922-b130-64b9d586b1bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66bcae5d-f8fb-4794-bc21-d185320a197d"
                    }
                  }
                ]
              },
              {
                "id": "f9a9f22d-a288-4243-b97d-524f278a9017",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "914ab448-63b9-4198-bb62-16ca917a870c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a5057dc-a55a-4969-b800-7cc24ca3db5e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f87201b7-a2c4-457d-b97c-c949aff0405e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a93c0518-04d7-454d-a959-1ca46ccf512b"
                    }
                  }
                ]
              },
              {
                "id": "3788bc57-acf0-4762-908a-7d6764aecfba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfb6fe22-1ec0-4402-95b4-c88f968d27f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de45e50d-3f83-4233-aa6c-e6b7efd147e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d63a1e4e-e10e-4b7e-88df-38c3666047eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "266d585a-7780-4ad1-a2b2-8664e1600130"
                    }
                  }
                ]
              },
              {
                "id": "e73ba403-9e22-473c-ae0b-3ba06fb963c7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1688f21-527b-4bc0-ba2c-8373d0970bf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49ea7e79-c8ef-4c92-b89e-08abd53a3c7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50ba85cc-d7cb-48ba-b0da-dbd602a38767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "71940464-b26d-47b1-93f1-bf3bf680937f"
                    }
                  }
                ]
              },
              {
                "id": "1608cb31-9115-4fb2-9985-dd651ffeee5f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6798246-73ad-4066-83ad-46dfe7567a54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "540d9598-b087-4fd7-9e2b-f410cf8fd487"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c88208c-c8f9-486c-9595-070854097659",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5d321239-ca14-43a5-a13b-5c0b4487289b"
                    }
                  }
                ]
              },
              {
                "id": "c831b99c-8c6a-42ee-b46f-89978fea6890",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b77dea4e-4e61-4639-8890-6120f1d8c93e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5dbcf20d-3757-4e7b-b5a5-c205bb8c74d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04e44c41-4aa2-439b-a04f-cd41553a1920",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5dafa513-54ab-4fb7-a3a2-20ea4e92041c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5260d1b-c345-4b94-a6de-5e5ca2315303",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "539c2ec5-975c-4d4b-bd50-809f44eb3413"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b6f7f019-9a07-4910-a561-78bd9283d3ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "924ed133-b027-4bb8-a561-ed1541ca84df"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4427b16-837d-4766-8a3b-ed7b731e3c75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "16c7393c-178c-4a4d-8591-aa50e36a6588"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f15bfc7a-1b68-4316-88ef-2d8c2db27e78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d627e93-7c6c-4d0f-bab2-7d374f057c3b"
            }
          }
        ]
      },
      {
        "id": "68f59cd3-ce61-4b67-a2dc-3344b740ec83",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8e9a7613-d9d9-495e-b129-d5d17bb58a66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13c442ad-f9ab-4c04-aa58-396c4d9b4d71",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80874ad5-9a4e-4fac-8918-ecd6277b82f7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d331cd98-5a80-4ad8-ad31-e34d305de5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c338dc-9cd3-477d-99c2-d1d8cce366a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00aaf4bc-6ae2-4d41-adf3-a6aa2321e969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f42755f7-cd49-4dfa-8155-052c931de1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81a96dc-e207-4803-b6d3-2985f1aaf3a1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167f46dd-593b-49fe-b0cf-fea29635daaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d34531-4ae8-4c2c-a675-dbb27588e930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dfad8e-e26b-493f-8bc1-54d11e2142be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3370fd46-606b-4cd6-a577-3afae56bb7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6063453d-04b8-4225-811a-82ef16ebcd4d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938b57fd-3f6b-4065-95c4-be89a6b30229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27a7c47-3e08-4dbf-9b95-6dd2232a2b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3333049d-08aa-47ea-ae54-2bbbec3012fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46905c84-88d2-4d9a-a209-ba93121793cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d21760-092b-4be8-b332-ffd4c824cc23",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c06729-b406-4de9-a95f-45b767ead67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ecafb0-ecbc-41fc-b377-ba1ad7b8bf6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd7b649-3975-4ff3-af1a-5c99ed0df61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0bceb7-380c-4d6f-8cbc-e0e18fba8e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790fe11e-02aa-45b6-af50-baa59226f582",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586aacf8-c469-4b99-998b-872f275d8d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27e287a-c935-4d6c-a3b5-2a3f81e4fd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3df594b-2ab6-4aef-aa17-bc0c47c13609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e0f0ca-ed76-4958-9dcc-84a507ec97bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff8e740-5a1a-4309-9e0f-a044616a5057",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8f3344-872d-46ab-bb8e-3ffde5e48f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b44eb7-a280-4ce7-b9f0-c33de1bfe276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef672bb-a7b6-4616-9350-e63b6f21c883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f93ddadd-6791-4076-ad90-0010eb0a86ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefc9d8a-3680-4b76-8262-48d26df8e4cc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db739aea-a60d-4a31-9b77-073d30f9e301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e23d51-514e-4a2d-a265-e19e19434a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbad5754-97ca-48fb-bf51-482c5b69599c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f028001-a037-4475-bb95-9c045ac33bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85f5598-d587-4362-85a2-54bfa063744e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81d35c3-52c6-4e04-a55c-2701053cc546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186a4eb7-9b3b-472e-9431-7499d96aea65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb6b675-b1b5-4bec-93f9-0d8e64d86fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d16963b-2dc4-4533-8fd9-996d600456b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a045f0e0-4ff5-4dfb-857b-a9cddb83cc79",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18d2ec9-52a3-4c38-913d-459895c54833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97d084f-3e9b-4f59-8b17-8a67c80ddf01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944d5a1a-c4ca-4f51-8c25-243b18455b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a74a92-5349-4366-80fd-2db865b12211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b83716-3765-41e9-9ef9-b3b886737201",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b21bb9-8e8a-49d5-a16a-1b4121d186f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171bb85c-8ba8-41a7-a5fb-f6fb65dc6b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff3e088-e9ca-4b3b-bec8-800fdac7fc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf17a0b2-38c2-43c6-b6e8-9d89696a1ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff751f0d-7342-47b7-b2e4-7b39c7cdc2d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53440f2-b557-4a9a-a22c-c3c0849dfdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337aabb7-166c-4d40-8a3a-d78cff9f05c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c40ab6-0334-4d45-90d6-1acd8c3d0a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0118c232-b99b-4149-8edf-8ff870e33e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f83e3b9-e272-4569-8a95-b42f22b18325",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e731ad-42e0-4e11-b0d7-cbd90b534975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a681e9-065a-4813-8c76-354f631de5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c213318e-adfa-432c-8150-8ba32198f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec9a1dd-d254-40ad-bd4d-8adb913c5a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b3d8ba-76ec-4db0-98e1-70049ed9a52f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c27a35-cae7-47df-b048-2d484ffcb81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5ed9de-e819-4e21-98b5-78310ac73c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ca0c07-107c-4230-ae4a-5e9a8a255639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a34e936-7ea2-498b-a9b2-5b942b63991e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbbbe26-9684-46bf-b0f0-da1e82936d0b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0227ea54-3082-432e-b926-eca6a0198dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b646a5-8db0-4aba-8438-f5c8e7816333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b081185e-a501-4fdc-a291-4103d420f7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0b0f9a-5c92-4137-84f3-a474d34869c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98f0ffe-8617-4272-b105-a7179bca3eb9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6733bf60-2692-4132-b07c-9faa63df2105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae43d5a5-6fdc-4010-bd90-86e09abbd0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c327de-e532-455f-9bec-15baa46d0b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f003c800-1dfd-44e8-9dd3-bc3d035f1ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4049a598-1cb6-4578-81a1-c8515f8642c4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8197b226-7972-4eb2-b792-81bea12ff7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d565f97-25b3-4b82-be7f-05e986508d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adad43c7-efcf-41bf-b51f-1d308858d05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba02131-7ea1-4d72-abff-75d7131017c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ccda6-3985-4349-92fd-faa8188d6bff",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014a5acf-7b86-47fb-9e3a-d4e9004c4571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c716b6c5-2d32-4633-9941-a72fe77b80a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad88b073-93d6-4b47-948f-6f1994908f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c46380e-8c77-42b3-8177-0bfb04f101eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cc1b26-a652-4911-964e-02d4e6d8b22b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34df3c7b-dcb7-4410-85ab-ba72f4abd91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79382499-f48c-4b3e-a4fb-d2b62e3b612b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07eb1187-83c5-4b45-b4e9-74c2cf8697a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4d5717-67b6-4f33-8566-130f30d087d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25f83a2-eeb3-4c23-94f4-1b31350b9d79",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6c54e8-23bb-4335-b698-bbb7ffeea22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7fd1b2-a575-4dc3-afb9-ccf9d3f907d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b152ff6-3687-4c61-a195-94b257c1a383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f06a22a-dc15-41dc-8fa7-41491063a7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab330c11-7de0-4138-88a3-19fd61b1024c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4819e93e-7160-4922-b2d1-9106668e6de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd6c6e3-e648-402a-8079-f965b4ffdcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28387a6-8f6d-4de2-beb7-49a564a04222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70cea52f-3f2f-4179-93a8-176908cd3038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a11956-c31c-40b5-8ece-aa0417f44005",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f25396d-7082-4f65-8b61-e400df2a348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e297c50d-b28e-4c46-9505-c7582a5a6be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ed9cfd-9574-4e4e-8a76-5a9269457338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aefa758-3108-46e7-8359-2dc26f1a46db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92ea05e-47a1-4d48-ac63-e77269592819",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312cdf37-ddab-4a86-a479-332c30744eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fda099d-6a43-4b3c-be7a-47cf9efb3aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3010ec6-7f10-40fa-a3f8-1ffc9be5dd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3873857-55c5-439f-bf78-f158bd46cb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7603df6e-9090-49c7-8e3a-1b86714b08af",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2e7952-449f-4058-8691-54fb8a9ce562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039c8416-51a3-4bc0-bbac-a3e47788e617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e50739e-f873-41c3-98d0-d7e15f4ec587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "698a381e-974b-44e3-a4ed-aa1ac06ce611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f5fb8a-8740-4714-9ad6-32bdfbbbeaee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3291f19a-615f-4f25-a9ed-0b81a4fc4919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52decfb5-f3b7-4cc2-992a-b306d83b23f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6f1875-35ad-4b92-b979-4059f1a09b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e433ed-e67f-4ab3-82cc-3976e9399c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e654107-4407-495e-befa-e6d2a5ae78a2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80f7062-cb6a-46ab-805e-fc9862b36392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43254f6-de70-4263-b6d7-c0a242649fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1fefbf-7246-41ea-b5f2-005370e06f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84525884-fe9a-4b70-9b56-21095876ba5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ac6972-b636-42c2-a430-ff8adb2cd8a3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724f77b7-2952-4c73-a8f0-49db24f76a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3343f78-f635-4349-a8dc-98036d2dc29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0f9b16-3edc-4af2-a859-9afb4acbfb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0faa51a-6f80-4942-bac3-4b4b00906416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f367038e-16c4-4bd6-9d9e-87441ffd0f5f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5964bc75-79cd-4260-a04f-4ff21bfb396c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1e4476-b3b8-42f5-9df2-fa751692a8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2651ce9-7851-4de7-b3a7-4f3e20021c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c296d477-6f64-4a87-9093-47e079781780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4592d5f-2d92-463d-b2e3-38b249293263",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f76ebf4-ecf9-4ef5-ba7c-7272f065ea54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f3812c-e0bf-4117-bc2e-83592832a8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf24890-5ad3-486f-886a-a382c842784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb36304-1b99-4677-9f5c-ea7f0ada95f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02fa1b4-ac47-4516-8d38-7d905910e591",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078b5bba-f72c-45be-bacc-20b49a9a654b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d67370-403a-4781-a0be-ad3d19eda8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ec28b5-e931-4cbe-ac0a-2fddfc3cfc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4003285d-0491-4637-b91e-9eeba7a7f03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2f058e-1ffd-4cdc-a3bb-445a5b067816",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db5894f-595f-478c-86f1-b59cf7cbcd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcb17ac-c55f-4825-8eb6-687150730ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9998ea-ff8d-467d-aa09-38173488d4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7425e83b-3764-4e83-99eb-185286607a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6862610-c54a-4439-a710-c28aeb5c2097",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40b344d-2c68-4e06-9868-8b8561afafa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3da854-8e4a-4a46-9c82-15157d424a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903c3a5c-7998-4683-ad2a-6b13880f083c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5ff70a-370e-44b6-b87c-dffcdc3b9ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4683bce-2d77-4896-87f1-356943cd2d03",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21112da0-3ab6-4544-a47b-ec058655538a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f863e958-aa6c-453e-8d4f-db58f9f2f979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3566ade7-ae9a-45c7-a489-e6b1dcd94752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe8a0c3-f015-4c6e-a225-18ec53184301"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b99d19f2-81fd-46c4-88a2-fd3c0873266e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d8cbb81-e3e6-4af4-a728-95dfda7b07a7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede11aa4-0e0e-4a83-a995-543a9cab1239",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "60635aba-1d23-4775-8516-c307a88de343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe160b8-603b-4a18-b180-3dd3fd1c2cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38be7881-404c-41fe-8c37-c0b815866301"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aa4e1e2-456a-4dbf-8bc0-759aa147881d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef3f249f-2dbd-483c-bdac-853664919cb1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3be6e66-1099-4c6b-a4fe-cc6bf9539d2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d266c47-2ad2-47e1-aba2-21dd30cb617d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dcea4b8-ccdd-4b9f-9839-9e648e3028c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6cbdb77e-4c95-473b-a246-f227b52e987f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46ff325b-3598-4b77-aefd-26fd18c713a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b0fc1ef-0225-4e53-aba1-7f83105dd50c"
            }
          }
        ]
      },
      {
        "id": "9afcebd5-f364-4b05-87d0-f906395ae320",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f8f094ef-48bb-4f76-836e-2ed7a9775557",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c86d01cc-e373-45c4-bcd5-e07198727f4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cac945c8-0739-4370-b876-d6807df98c26",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e86096a-951e-4df5-a74e-73cb5d320826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e49377-7c80-4234-8b38-bf37827ac6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5867769f-d698-431f-8315-31c784bb3298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "346f371e-f8bc-4310-b986-028cb0dc5345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12e1cf5-cfb7-4afb-83fc-57a24befbf44",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089e5e4a-5699-41f1-8ae5-c0ece5cfdd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e26db12-169c-45aa-a6b5-52be2e5e28e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f13fb4-e5e0-4baa-94ff-42692b0a0f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f45d37-0ce7-46a9-ba2c-12f0a7ac5171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ef6b6f-33a7-4fa7-9722-9fddedd68816",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adee28a2-da2e-4e9e-82d3-219c2967beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9d3f30-e50d-4345-ab94-5fcb719354bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b706758-bf26-4d5a-b0f5-38dde6122831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77508bb9-5bb2-438b-8972-5a31bf3b5893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff26b02e-68c5-4b6d-93fb-3b1f1e2ca573",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bd3939-f787-4182-9a2f-5ea054bdc2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba6b4e2-8fb9-4080-b22f-b72f77bf47c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb9e226-03f8-4f00-8e9a-3b07c41316f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b43dc52-bbc0-453f-b9b4-9eab59ca5a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd6301f-b6b9-4752-8fa5-17a84d1f207b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9128f05b-cd16-42fe-845a-25b4eee0dc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64aaf79c-7097-4c96-8432-5db02bf400df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d4bd68-18e1-4123-b696-847cd7164f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e9ef3b-d8e0-423f-8d40-ece8e013f608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aff643-c8b9-496f-bfe6-ac8d349c0e15",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75b811d-afc5-4e7e-afb2-7f25e9f745f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d1e438-e356-4e52-9450-685ed403c07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e0a79c-a61c-41c6-ab0e-0ec261c9a1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4adfaca4-b740-4cec-9a55-10898770df13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bac31d2-c697-4cf3-b4a4-d90a08bb644f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae7d6e4-b743-429b-b91f-8dd3cf95ec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0404da09-e951-4261-ab8e-7ec75ce8fde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8554c6-8c1b-4bc7-a60f-28f2ab64305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cef8ceb-374a-4b49-96a4-0f9d3d4e218d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81200d42-a6e1-4407-abc2-0e7b62b0614d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebf001c-038b-4eb4-8ee5-37a064b6eecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baf46a7-0a9d-4c9c-af5b-d5a20980ae75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24524390-d767-4f1d-8330-fe47c17b04e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dafd358-25e1-4027-8514-8a95472db8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ecd9ec-0435-4906-a151-095c8c32e0f3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44a35db-514f-4259-8923-138e7bd23f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd536c34-5e6b-4cb0-901a-dc3f14d7cf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5494bc8f-44dd-4fa2-a05c-bb92abae47eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d213f43-fba9-40be-b31d-b9a205ba010e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b553e020-f308-473f-8fc1-883a9852ece4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aadd343-d366-4567-a1ab-45d57d698307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3df0d8-0794-406b-b763-6b935a73f12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b539d46-0ecf-4157-9c5f-8d0f92d5dcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2741e019-706c-4c41-866a-09254a0135d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5af8d4-cb18-4348-9fb8-4f0241050262",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aacc5c-ef6b-4c36-83cd-f32e65a20b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8068ae53-0b34-44b5-b5c0-6c0ff9f8af59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6ddeb3-7dac-4a17-87d5-ee1680b55ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b5ae06-d689-487a-9bb1-2ff807b11737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bad742e-fa38-45d3-a9ab-b1589c48c733",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a215f3a-ac02-4972-aeaa-b95cc16b7858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d275f70b-8837-4c1c-a040-0bf6a3841503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54edff39-dc70-4d05-87eb-c60f2d43393a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91583a2b-9fff-46e1-b2f0-aaf2961456cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afae7f96-e5a0-4c1c-9865-a479751ccd23",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f83d3d-8792-4462-9dec-f5cc913f85bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818abe3d-0a25-4f65-8b4a-012c0def9e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89283c22-c744-4336-bebb-ead757e25290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "004f6c76-d93d-4643-9074-8670c7cce326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b0c102-bd3f-459e-92a8-df1a8c7d2b43",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5448afa-6c96-4372-9492-bbebff78605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f90ef5-971c-4bf2-8af1-d6039f2c6b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89ae33c-b57c-44c2-bd63-2ac24b091e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd00d0a-8d23-483b-9755-35b7ea950399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4e1cc9-b801-4d1b-a4be-b7f2651e6913",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a26a4a-5cb1-4b6e-8b49-c51cfeb00a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63089ea-519f-4b9a-b868-07327d66bc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40fa78d-0e60-44f4-8278-7b11e3629fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1999ecb4-5529-460e-8c5d-eba88fb1fd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339e18af-e4b8-4b0c-bfab-aa201ee34ee5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd974fc-682a-4e3a-866b-963b1fc6ba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b3b2ec-2516-4433-ae2a-46c07e007d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1faf67-b239-45df-8db5-708ccc08573a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4962cf67-0b5e-488a-89ce-3334d7319404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a73d6ed-defc-43ff-b928-72296a415123",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edacfd1-3873-487f-b984-57a1e215dea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527dc4fb-894e-47e0-8c54-d073370a618d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285012d7-8b2d-42d1-90bc-548e52f8b602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4b6965-3da8-48d1-9db3-d3fca6d43110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8250c251-f954-4c52-9a59-6f859c2dda7a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c79970-c94f-4a92-9328-8bf9666bb979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5640ebbd-dbb6-4bf8-90f9-92612aa98998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04949847-a129-4672-8ad1-578774d68028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab0bdcf-031b-4238-9751-ffdf286d4fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdf53b3-2b6e-434d-ac98-b22eaea068ff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8b92ca-cd76-44c8-912c-28927288ab4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522a5c82-d08e-46da-a146-3f3696020468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed9c59c-c6a4-4b46-a24e-8e707758f519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c12f8f-664f-4a19-a64d-3598086351d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a816cd2-aef9-4d4e-9196-5c2e8366ae08",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74923db9-4d0b-4c98-b1a4-adba2e53f716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2601d7d5-c8a7-413f-901c-6dfb89279c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ef839-feb4-4b5a-a3ca-8380a7753ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95537599-fd5f-450a-a63a-7fd30f11d62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1619ac8-1460-4ffc-8b3f-383fec8d3ae2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd282609-2f37-43d8-84aa-36d7007c0af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2740bf-1e59-4925-9998-ba6d603c7a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca18a62-e543-4d51-88bd-5e2fe18b9c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a0cb95-8963-482b-bef7-cd0c11b2609a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32fe8f9-d499-4ba6-b959-1983da994c02",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6116c02a-5865-4239-8489-e8bf42e0f249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac3aaf7-b47d-4beb-9008-7eef33f8efdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94373afd-96ed-447a-b148-08684e768e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3335db-7d34-4c1f-b874-f77bb3025263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e37479-7ee4-413c-bc24-de3e3842ffe5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e51264-1140-4710-b33b-1eaffeef36ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063eae5b-c74e-48e8-bcab-ea8a3a4bbd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f073c3-0bb7-4c87-bb8a-89beedbe822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "428fb605-edb4-46c5-a1c5-c5a414d7373d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c930b6c-1715-444b-836b-01bb5fb48508",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90744064-854a-4a6e-9c1c-97d921eba884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04bb952-a619-4599-a331-097047e0da09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93770a63-0e4a-45ce-9d02-f353fd3d1f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c09b30-baa4-42f4-be64-f0df834d645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9cd548-b9e9-4eb9-84b0-ffdf23854f28",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb9f4fc-56c9-44c7-a8ba-9347cf22987b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e9c45e-5ee7-477d-a238-829fc6f687c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7c8942-ab0a-43b0-847d-8caf089a83f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98443e1c-48c7-4663-be0c-811f80b6bf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1a90d1-cc27-4035-90fc-b1b506124182",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bea3eb3-1376-4a22-9495-18cedbca791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33534ff6-6c2c-4fe0-a38c-f8d07a628967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e26ac17-119f-448e-904f-9c49bf6ed0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22f338e-b74f-4746-b242-82421c15fd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65f45de-2ea0-42db-b732-8ffb7b1aacc7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f169bec-8e41-4d8a-bbfd-96f8dfb57396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378440ef-21ba-4e40-a0d7-7bf0fe2fa661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4da304c-ddca-4c72-8d02-dcf32bbdd146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac132f2a-69c3-4035-a5b3-ccfedafd8e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a335e6c8-d957-4518-9b1b-288117ecdc25",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c355bc-d395-4cdb-b6a5-50a28c855f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c00c806-8ff1-4013-a728-9ee644b7d4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54610cff-229e-4b4e-a6bc-2ad084b77d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc38ccb8-0bd0-4f41-ad32-fcd1eff515b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1d2c1c-cd4d-482b-bc65-46b4febd68ee",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a53f591-35a3-4673-bb94-37a8aeb844ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e744b43f-b65b-4e38-a289-5499860ecae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d69a06-b4d5-4013-90b9-0e627541865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "985843cf-f314-434b-af8e-7156fed02c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97753172-a178-453e-820c-3147a799f7f2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518ed77c-7413-41fa-aa4f-fed3953a9859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c0c5a2-2dfe-4c94-a448-42290f7105ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f09254-b601-457f-a6cf-f1e8e0cd3e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc494a2-f7d4-4421-88ba-d018b02f3af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de61b994-474a-4007-bd6e-c86a8892a482",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc399a4f-c168-4d32-b777-d3879c4afe7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8be764-8c5f-4f37-97d1-59c003f6d849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6efe870-7f55-46f3-ba54-637df8ec5db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af24e2cc-ade6-444c-8765-a83ba8ee5c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c78ac51-49fb-43dd-8689-aa43edbb3bb9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef5df64-46e5-49cf-8c59-1fe9d40c25ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956d49ba-7d6f-433c-8ad0-95e581d34dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899d658a-bcd2-47ed-a42d-4f282e6ba443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b07d07f-9080-4b1b-8fea-097c4c601042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416d89a3-5177-457b-82d7-edd974e122a8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c199296-f1d9-4964-b7a6-032f5e4f0009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85c6e6e-4dc2-4ea1-ba97-6e85745cf040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643404f5-d1de-40c9-8290-83177e87be52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07896a4f-a600-42c8-9eac-041580d14321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2805640a-b5f8-4bd4-9b5f-844c4092a70c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cd0657-257e-437f-a9e8-7ebee9c5b393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41dc26b1-b72c-4755-8ca3-51c5980b80c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10313b1e-48d4-42b9-a842-20b62a148542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8dce39f-0ac1-49fc-8657-f77031844024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d16d378-19c6-4919-af87-6abc5795707a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef0190b-bf66-4f47-a372-78d9eb3ce632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f21fa53-27ad-4164-97d4-12c33db17826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d39b0fe-ed20-4529-8889-0b8bf241e2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1050833-d5b7-455b-8959-379c820d33fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacef469-5661-419d-b725-9d0fd3d3cdc9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e56718-56b8-4a6e-99c4-4073ac8a498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f9735e-669c-457e-a338-dbe39b2dbfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34c0d9e-26d5-4d61-b9a7-4653c5f8ea46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08f7d070-d919-48c0-bedb-c43dbffe65c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918181d5-bfa6-4ba8-a9d1-bca4bfeac321",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0185d5-911d-4103-bc1e-9b37f400807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c418650e-bcc1-4080-a24e-ea4b37808010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0878dd9d-484a-470d-a822-5a1e111eb38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff377d5-dbca-4c7c-8976-112e7ba7daa3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c268a392-da0b-4140-9693-cf217b334547",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d688a77-1e6d-4575-b540-afbf5c8b0e23",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab8a0d5-1a7f-44db-8427-5eea7c162306",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9781887-87a0-4db2-9ba1-9a48951153fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eb4b1f-e620-4098-b0f7-4b6a8f408248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd83c34b-dbd1-4a6b-9538-a814acff38bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "396da8aa-a09b-4583-8f4b-4066d9f729ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e6c3980-184d-47d8-b395-029dbb9fad5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "916f1c76-de52-4819-87e5-d6d7ed26bd2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d4227ea-e446-4c9c-8af2-c8735642de11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6aea60b5-0a7c-4dd3-b208-c7ecc29dbaca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94d89ec1-4dd0-47b4-ba8f-6af03572a88a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6551c2ad-7068-405d-a6f3-0703ce2ab0a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d99b7f3f-e581-4356-9ef5-26c78bdde3d5"
            }
          }
        ]
      },
      {
        "id": "60fbcaf5-0694-4d10-986d-afbcc11cd1e4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "48675557-f12e-43f6-bf95-37604ac624df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "192916a6-3a0e-4c92-90b1-e06ac231f677",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86e3aeaa-55e4-48cd-a849-1a018099a400",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b5d341-e47a-4b85-96ee-1a972d3cefd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e760d657-2c88-463f-9375-2bb8cd84a664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f72983-97d3-407a-a735-ea9c7ed5a636",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03225c8b-4418-413d-a8e5-9247586f0b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180154c1-1d2e-499e-b379-c80b01108493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32edf804-209e-49ab-af63-2f499a68f757",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45d3853-fcc5-46a7-bfd7-359a7f5301f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba9f58e-4c20-419c-a81f-073c8281acf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dca4123-cf55-4e2a-9627-8197c5fa03b9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6f19f1-07f9-4d39-8641-b447318915bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48d10a3-afb3-44b3-8bad-80134a200da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c83f0c1-960c-480b-a88c-39c116c85a61",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd1a36f-9ed7-4fe1-a529-c64a6cdea93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00135b19-d06e-4360-851a-a09d1d5747d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07c9b39-407b-4197-bc10-291246ed866d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cea7562-a3b8-4629-ad2d-e03796760ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e1d38d-4c2e-4a67-a8ee-2bc1464d7e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7b8025-ba32-4dba-9866-511f45f4cd46",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f779ff-cafd-4764-b89c-69e86730f82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c91cf89-c936-49aa-a130-c329860994b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46e3422-6f39-41b8-bb94-f4e323c1a5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3950ce04-e38d-4b24-a486-cbb855909afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88204e6-0d9b-4220-8a54-1f3e63408e08",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd073f5-f2e1-4420-a05f-f72d3091e32a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e2de24-9785-4c04-b0ba-a79a1d069c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64aacd9b-9cfc-40ed-b0f3-51a198d2c86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b24279-d3dd-43f6-89fd-53e3c9c1670d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb28c207-9276-43c0-ad62-6502da1561db",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ef6376-9fe6-45b9-9de2-b48b66773f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db081098-fcdd-49db-8c3b-2f85b4028fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f466e39-2d55-4966-a847-7b25ca0e5c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610c7e58-8975-4c8c-a502-5a203cf65e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee44e638-1b2e-411f-be7f-3de7b3b811ec",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe0b5a8-c76c-4d8f-85f0-edffd38d4a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3456f2-0be4-48e1-bc14-5974f72a3aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e61dde-5bc9-45db-9ee1-fe55214ea7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4870d0-ffe3-44ac-bb55-42d35df03a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4d10ce-af4a-4d66-9d8a-d2c175cf1917",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c6c0a0-2e9d-4b0e-85b6-139894894056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c33979-10d0-47db-8522-3992bf8a0ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7613739-6868-4c6b-974c-e090a1fd586b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191e3556-f9d2-4260-be20-068afab52306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4481f2a3-1273-4943-abb6-8db6fcb47f3a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a3218d-4eec-4007-b0be-5c9b751823ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc665ad-afc5-4e52-9c79-8010f3d009e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08e332b-bfe2-4277-982f-7e6a543b4fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8e1a84-e007-41a9-9393-8fea7af15b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dcca6d-1e40-46ea-8363-0597f441e1b8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23443e3-1ff0-43ab-8a9c-d9d22fc5b06e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "020cfe1b-bc86-4649-8452-aa143ea20f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a45963-d51b-4ae3-81bf-a8ff768a27b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8167f1-1d26-4cea-9323-f407460075c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459ea9cd-45a0-49e2-a89a-c19bad015a50",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ea7653-16e8-46c9-94e6-3819f31fd42f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b971f7a-2722-4a84-8a72-027e8b2a6bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dc37d6-20e9-4204-89b9-f1808072afbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5edb73-6aa3-480f-98a2-45a6853f5087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2453d19-50e3-4365-be5b-5fcc244dba23",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabe63d1-9166-4f1e-bc98-fb428375184c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2597b0-5c2b-4bfa-ad05-44d1f5999884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad0065f-ddc9-463b-a358-9307d5bb97be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9049ac86-e105-44ab-894e-33f945b476a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e791813-be99-43c9-8d9b-8b369f736a6a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f61f701-496a-416c-89b7-6b41de85c2f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90aaf9de-d9c7-4ba6-bfce-40f41a706328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d72188-d74e-49ae-9349-2edb0e5ae43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14106117-7891-4a76-a695-054798ffdffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15082439-0b6a-42be-8780-8aff7206e472",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec846cd-c666-4016-8a61-be4fe42516fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2a3d16-a00c-4265-a939-9685bb9276f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b91279-7c95-476f-bec8-3cc8308a0637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d04eab2-4921-4cdb-8b1b-ffd6da3b0b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d8334e-ff8b-4700-806e-aa55300caf09",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa00d205-7ec8-4431-9c0f-8c2ba4b29574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddf516e-c403-4e8d-ab97-09ed62f2f748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc238012-222d-43c1-b8c5-a239fbfc7fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07780f29-e0bc-4cb0-81cf-d79f57b59926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352af983-d307-4a0a-b943-98cf023369c7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7517d296-2fca-42c9-b0e6-1bd79f8990e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77595d3-8086-4020-b103-a9e53dc646da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55c5477-f6e7-4fe6-842c-db7b3fe8f03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4055c0b-9e2e-46d8-9182-fca34836db7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaa223f-7e78-45d0-89e6-bb7b19c433e7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f1b691-bfb0-422d-8dee-069572fd8fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1462baba-2fd4-4b05-ae5a-e8400f3e3082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e26c7a-b9cc-44b6-908d-26254e00570a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a25c0d-9a96-4c88-a3cc-2979d4ee8488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ff7737-9e6b-4380-878a-b7fb81c72d04",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6143b880-1cba-4cda-ac53-f6109450c492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e2a52b-3400-4dab-8a81-3ad7a3081b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14536cb5-a75f-4778-8cd4-489844712355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30345edc-ec06-4fd3-b571-bf40fee12155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d42c065-17a1-46f3-9566-31b8ddd52e02",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed35ba6-2646-4465-8356-d36695ed613c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53082c82-7d34-4483-81b2-dcffbf6d9fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afc12c6-90dd-4a35-af36-bbebcc654bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5b8776-a334-4fcd-bf84-888226606544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8509950a-9b57-4ff6-94f1-16c0b4616f22",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1212d1-aaa7-4a7a-b33e-4663b9c07e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2877599f-c5d0-406f-9df4-3127bcb7df90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9cedf8-ac18-4d26-b4a0-415d03c7ce32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f8f5c9-c823-47ae-9d4b-bd7e883f6fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991852a4-8fec-42e7-9120-66d81a3bc551",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e58fbf9-1bda-46cb-9d16-0a5ef17b2c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ff3c33-ed28-4c0d-8b03-1fe0d4de503e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0443b08a-db84-45a5-97d2-3b6dfd64e1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaede3f4-3c07-484f-87fe-39b25ea56d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4debbe8-b6b2-4276-9591-6e71a29b5ee3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a6b668-2974-4836-a033-1f8c6dd68230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bedbf414-4dc9-48d1-a342-d1e48cf60642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f7ccde-6f4f-48c8-a2af-f128247cbfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a79c58f-70f1-460c-a48d-fbe9a344c346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcf9f30-a099-4b21-a49c-2c2c29add4da",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053a1c9e-97a6-4f3d-9296-9a16a7ee380f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb98a5d-a0c2-4296-9b58-e19173483b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5328587d-542d-42c3-ac6c-58dc7aea9cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c965c4a9-fd3b-4d49-b888-c58d91d7b71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72efc6d0-4845-481d-8dd4-547aaaf6f30c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5b9884-eeee-4f98-84a5-c288fa6b40e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b7f83b-8128-4a59-8daa-0d5319c1c4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b9fbc7-3402-4d30-893c-153fb5956ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8064dd-2f0a-4180-9424-47a3d60d97c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151ce831-5f28-49c1-8fe1-c9fdf978002c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693999fa-3072-4e3a-8b7b-75abb8025e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e007743-bfb7-4601-a699-7acf59c3f195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d783868-5193-4c8d-899d-c905f53c270b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d22a42-467f-4bad-871c-a5baad9ebfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f423252-7b14-4213-81ec-98080bbb2f0f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a17adfb-f273-4d45-8212-ef71c978cb85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc9b0ff9-a16b-49f1-8170-b9a9b9cfab63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39662687-bf4f-4916-8a1b-11637b35820a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37467943-a87b-4923-9aa9-2ee0932f6956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a8299d-d81c-4d16-977d-2e3bc4d43807",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c2abe6-9c76-42bb-8976-66935c2ae332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac6c67f-5bdd-4de9-ad21-efcf46d3bd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0b952e-fc2f-44c1-a5fb-2d6345d595c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f2da42-8905-4ac9-8d7b-738bc02d27d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32497bc-bfdd-48ac-b570-691d51fa45ba",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e07d1ea-f750-4692-95fa-27cf655a64c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64413dcd-51d5-4cdc-8a91-3a0cc478de17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb31ad1c-970f-498d-a7e1-994b91e78010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895945d8-7d70-4af6-be7f-d996710f6ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf321de7-f708-45b0-96f6-e920291f3f99",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662331c5-2d43-47f2-8b3b-1c69c7a607a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fabb0baa-2e1c-441c-87ac-c37db6bcaeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01966be-d8c4-40d4-9478-29a9d05a9221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4326b8f-f28c-4f89-8ab1-3fc700c18a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b4cbaf-df3a-4556-ae5b-e90f3165f435",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00315e87-66f4-4374-ba30-5a28bd3475f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50dfbdba-5a5a-48db-b753-4ece8ea34f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2499526-e5ad-432e-bd66-5d881f12dfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd47d23-c7f6-4798-b222-c5f37fc8d6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f067308-fa3b-49d3-90a9-da1906ee3ae5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce71165c-e2bb-434c-a641-9a664e27f36e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545cd47a-926d-4103-af1d-93e275e633c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ca2cee-61a6-4537-94e2-04f38260251e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c693b666-82c0-4ac3-b2f6-e8b35bde42d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b877fd3b-bac8-436e-972d-144ef4a856cf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1744bf01-530f-4bf6-8daf-81b189418744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e7007b-ed84-400d-92ee-fbabfe11fa78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e39753d-5c21-4e69-94a3-a8444219d0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476720eb-aa1f-4f8f-ab28-dfc5ab11c3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c776c044-6c4f-41f3-8ecd-7661535e36ee",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201efdfb-50e3-46ed-b345-7985a5160a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ece9171-4ffd-41cc-b846-159a122e340e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6beed57-b22f-40d6-a16b-44387fcc6e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3286c82-8014-4e57-9ae4-d2f1734f1087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c9e3ea-408c-4f68-b6e1-35c6600f2f9b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d384efc-c354-4cbd-ae6f-5873fbb7cb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa61aae2-16ea-4d33-96f4-32f2b2500f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a4bb43-704b-4b22-801b-a17b31fadb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e1c548-e2e2-4444-b171-bc90c2cc24d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05de1ae6-9bdf-40c5-a57d-7eeade22a9ad",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdeb5f9b-0e5a-4e65-8bbf-5895d54d697a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4137cf8-e6b6-40a7-886c-e1eb782743d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72a3f11-3eea-4074-8c4b-f6d86ea14ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffd6436-2f04-4409-9cad-159b64f8439c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e3b200-8533-499e-8e09-da7e30a6f19b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf0858d-885f-4b51-8152-ed2ec35ca0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05953042-9cab-4739-acc3-fc3750cba521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a93862-c699-4282-a6fc-3ecd972ce0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7b01de-012b-4c70-874f-0305c57af69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fa945f-5755-4434-aa2d-d38e936344e2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a802853-07c7-40f4-8956-60dabb2a2734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f21457-739d-43a3-b836-9b28ecd85943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f562e95c-85d5-4f76-a05a-4754f5c34994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f60a85-f2e3-4d72-ad37-3f5ecd291d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f649b091-8b0d-4d80-ae76-c51826fae86a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e5feb1-bc94-410d-aa3e-7f3a599b8c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0fb3ce8-faae-46d0-8c1e-c07417e0a2de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00aeb12-08b3-4e77-b484-29c066711ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4e989f-81ae-425d-b1e5-86eb279b5733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee857868-d82d-497a-abe8-2b0eeac4a70b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ee8f98-e0a6-4646-b8fb-4da473de8b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f70795e-7e08-4c38-8950-8139229442a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ab3c67-b1d4-476b-8886-b7f5dddb2896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10226d4a-b2b2-407f-9b55-c5cb53f52600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6913956d-637b-4420-b9b7-8e7e30e1872f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1509178f-b4aa-465b-8822-33777c55eb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff91710-6271-474d-acbd-ab2b9655c630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a62dd2b-5c1d-4a38-8a79-3063dbb0db4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af3ac66-9c31-49f5-aa67-bb48af4960fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb3ff70-2155-4628-b615-ae258175f150",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad9cab3-1922-44e1-bee5-1a22f185f148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09f43b7-af59-4818-8b9f-431779af0ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448cf323-d043-4c24-b3d5-42ca800c2188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642b702b-34ea-4815-9dd0-5d27c5426a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358f4f2e-9836-4434-b67e-5f65fdd20266",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaa00e0-c11a-49a6-99db-8390c40b086b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45b8c60-14d3-41fe-9c7c-ef83522377ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bb6258-dfbe-4198-9f3b-b7a99cbaac6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f965c0-0301-4a0d-a742-8c36b854cd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3c2d4d-59b9-4ab8-991f-e4c8225d9d7c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2527a21a-66bb-4bae-9e34-e148fdb93792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a601070f-52ae-4c54-84d1-0b90858b7c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7b095f-39a1-4048-b426-1f72aa6246a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9e4c9c-a616-4ec1-8705-7b2376832130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272fd3ec-3d84-4940-9284-fa4bac1f43b1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff2418a-38c1-4f36-80e8-7f3407203468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1181113f-3d1d-4bd5-a14c-009f82eb22cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b810fafa-44a7-4e15-ab3d-95fd846020ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301037a4-e4f2-4c33-ae06-479008a7ff3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838fd1dd-26fe-417a-85bd-8c9f7e6fc20a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d2797e-ebd6-4ff6-8d82-ee824f20aa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2500ac-98a5-472f-a903-65dbd891c664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb0db01-1f52-40d6-a908-395d8fc32094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84482005-a0c3-45fe-8d8f-d7f7eb3d7062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7ffd9e-ea64-456d-8027-1cde0d60eff7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8feaf064-2af4-4005-9667-5fea9eace5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deab6266-8216-4371-9350-9dfcff091d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549fc4b-db51-432c-b551-37004b2f5039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b28122-934d-423c-846c-45bd2c94e48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4291590-55d2-430e-9aca-b1cb31652fab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ffda04-9e51-4990-a6f2-8c4ecd22b2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d2b0aa-0cc1-40f2-9ef2-d6b88136c008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94778c20-a9ac-4266-9766-270ae032a364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8bd53b-838f-45a3-889e-ffe6beb649ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057fc833-506f-404c-9224-55afb4a0e894",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df120905-eed2-4882-b031-a40e3d1f7443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a865ddc-3130-4db0-b750-5f99f059e11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc90639b-c565-4f8c-ad34-62c763e040d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf1bac8-3ac5-4a2a-8d56-f8a57b654da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8052277a-0a23-4ec4-bbd9-2880059407cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9f7cf0-62d9-4ff2-a1fe-46b46d4f4002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152514c1-0e70-4bf3-bc27-2557558c6e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa7f1bd-38e9-4e98-9c80-da7986b715e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c42591-029d-47e7-b384-af7d7cf811b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9206fcfb-4cba-4175-abdb-baacecec808d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a8cb83-fe3d-432f-ba7a-a3eb6135e594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7511f3-bca7-42bf-bfb0-0d1d27144928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c276110-ba3c-4eb0-bb8d-8f152a7e8ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66583667-b757-4e69-b1e9-a41b88d3320a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce7756c-98de-44f9-83e8-71a1e1adc467",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f39fe7-057b-4d75-a844-9b5c94556839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d1b3bf-0b59-450c-8a16-6dbc91b03d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c575c5-f440-40f7-bc3a-6d2ca2b00c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065e9b0e-51bd-4ecd-adfe-d0ead3804fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719581d1-fe52-4eac-a46b-e809e058b37e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f47ddb-4a63-4635-8c67-439a9cb6b7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8537934-b260-4c5b-b345-a9cf702202ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd54583-3bf8-4380-a2a8-d2b14d2f785d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61256d6a-25df-43f5-bae5-effa7a22d74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df7e264-9bc2-4eeb-bf2f-e1b5e813371e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb9ae82-b595-4f7a-9d30-f9ba8b20a4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613a9dc4-82ab-4244-874e-ee85c19364d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cd1de0-404c-4062-b451-7c3b47953f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932a567b-5dcc-4483-a0a9-95508b04414d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5c193e-de27-42a8-bd0f-8f4d6523d597",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1305e05-6bae-43a8-9ac6-dbc7d11d304c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1595ca15-843c-46ac-8e67-d5a0cafdb24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1853f92c-0b3f-4095-8256-bea96746d40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff72dbe-7cbc-4d1e-b3f4-47b6f342d7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec86ca5-20b2-4458-88f0-9288a1e78a81",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753f0ed4-7385-4046-9f31-b8300969abb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7639514-a618-4390-8910-4492a5507e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17011ceb-01d7-448b-a3a2-214094ac7512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673366de-eba8-40e9-9f87-77dddcf9cbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d326750c-1b79-4e15-8845-070de2c4ed92",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92d4c65-e179-4917-af34-5aa2d0a9a019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3627ad21-ffc9-4858-bc32-e73b110bbf8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fb4261-565d-4519-bd26-40110823fc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd13ce5-ac9d-4190-871b-4114b42155a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b76f1c-30c3-4ea0-9796-522abc12c1e8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9044577d-b034-44fa-8966-1fd09f031bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43d8ae3-4e2b-44c7-abea-8886070c85e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afecde7-e5c2-4825-a713-0c66e0aaee6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05100dcd-22b2-4ea3-9990-d25fd02c1254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5836a083-3d6f-4f5b-801f-71afc7b81eed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f78caf-a3a6-4c20-8abd-dd08eddb6af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3288c0-af0b-4a00-871a-86a1dae3a84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a43aae6-86cb-4183-9d2b-e006801bc3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ae7ea8-de6b-4c99-8509-8eb9f2bb4d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6769ef0d-0e01-40c1-a787-b001ced2b385",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aec51cf-c900-4481-86ee-d750eb1dddd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf90865-8bd2-40ef-9cd2-e919e2dbd7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "818d6ba7-d77e-4cea-8e1e-4d88df4bba7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd06c44-2eb7-4487-94c4-3cc81f81f2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e719fe-cf65-49c7-a4bc-36447a9ec7fa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039d59a8-eb0e-480a-a4fd-652b2b62e176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2fa53d-0093-408c-99af-8422e6780141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da08fe2d-1462-4254-801b-720a932f2c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12baf0c-ec77-4b94-8857-44b771912671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa3c4cf-01b4-4dba-8700-245af3140a4b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10048d05-47d9-401d-8e9d-3aba89c42b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb61898-6c15-4246-9f20-7fe1e9bd53ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf7a4a1-7998-42ff-bde1-34d28b50a289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf266a26-a0be-42ae-8e13-971bb8765a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3bfbfe-6427-486a-b064-d0b79e8a8247",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d199e3f5-6b77-42c1-a576-6533c7560b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adab569b-d62d-4736-b5a0-23894fb60a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeae706-04f7-46f0-b0ec-25b812556fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b309035-d464-417e-aa52-865f7bb70154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7690311a-3bb6-48a9-a030-5af5d5da46cc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f1b31b-81f7-405f-801a-53ceeaade61c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ddc1bf6-6d20-42b7-87cd-8109f2231859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca5ce01-3172-4d7d-9718-5a026e5a7158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd951db0-8464-4d4e-aae6-1eb47f6f9ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215891f5-d5d1-4f9c-91c8-598034700ea2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183cb6f1-cdfa-4b93-8bd7-2df9c4f6bf65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d92fc1-fde6-4ff2-a9b9-a6c08c54c8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f98a936-2501-4dee-86da-6cdb140a1240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b6fc6b-a011-4174-aee6-6dedd759975a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeba205-1731-415b-b60b-01525bca112b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bbc122-02db-4d74-9289-5e97865770fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2633cc1c-1984-4576-92a1-209b202956b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c26bebc-ed31-4c0c-ac85-2c80a7879438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b69f24-92c5-431d-976c-91f8a0d08585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c808ef-6f8a-4319-98df-9594604fdbf2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946313a9-88ce-40b1-84d2-f5d5ffd0d30e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68588825-4034-4a05-be32-b3a7f09adf45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347c56d7-6b1a-41f6-9963-decb225affd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57adffb6-3621-4e49-9885-ad3a3353fad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6668088-ba36-406a-9d52-ce66fc70fa27",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7528a1ba-de35-4d6b-be75-639554b24ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02b635d1-f08a-4e8e-813f-1842604ec8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5f7a29-6b19-468b-bade-a56cedd327cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158640d6-ec71-4427-b7c2-585615e3b0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dc8ac8-ffe0-4ec0-b484-1b491f2225e0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8996bc-ba4f-478d-930d-47b85376aa7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4bad0bc-de39-41db-a73d-52c448e666d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac47f553-e4d1-4075-8b32-c77b26e7a767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58aa3374-6c08-4cf9-922f-9e06c0564fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7014aa69-43d8-4a9a-b70d-256fac50f828",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb47f36-f111-4a28-91e4-a788733ab9d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd0a029a-43ed-426d-b63b-2a480b7538e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffc7679-f21e-450d-ba9a-373031655472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4656cc-d3a8-436d-9fc8-8e93ef3361d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414d9509-d382-4f3e-9553-99b92659c96c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86db9ac4-ff26-4460-bb30-b49380b58b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e4b53a-c5e5-4582-856f-8ff2ee218baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d69fc0-9506-40ba-9179-771380a0ef0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb106d3-14a7-40f6-b8bf-51a827b02479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5232101-f597-49f1-bec6-a8faad828961",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9d26aa-fc59-4d27-bb79-093f221f3e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0657c4a9-83fd-42a3-a534-f5d07ad16e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365a3f84-ffee-4a7e-8607-ba52d3cd016e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a258751e-b200-4466-8f39-40e0d2fc0571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e103cab-f144-498f-abda-bce52b5327fa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ba0dcc-25ba-4a01-aa3b-38975fbbe3f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "700ca590-3445-422c-adc5-ccb5c5a84dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72af6f64-a9b3-4041-af99-3708ac353451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec853eb9-660a-4065-a6ab-721ce2a762bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97167305-fa1e-48f3-9217-024960404b1e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a252c212-0dff-4b49-8935-960a036ad737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5d4050-5251-47fa-8ef9-141e1cc34e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666d387d-3e57-491d-899c-cc0f1da61d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0671f695-01df-47cf-a51a-31e9c3f07146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1568fd-e2be-4da2-8eda-e59e33a6ca5c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab19f8b7-8d76-4bf7-8201-e4825955cf48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0178284-64ff-4783-a3fc-875a67405c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfe5cd6-c7e1-48d4-842d-2a867105f9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6453fc33-e07e-4e99-aafa-9a9b36501d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75155e2c-269a-4c2c-9a6f-ac4d2b51f939",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a52deb-3aa8-4b3c-975c-6fc5b9f33917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05a57fb-6585-4fc0-8951-4c40a83a8094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3556e956-23fe-4619-a548-bb6a717c30a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376ca2c6-136a-488e-9193-39eee76a5bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d917ae6-3fdb-4a23-83c3-40bd6b2ef0b4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb3a1be-70a2-42e9-b2e3-5f27deb62945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5ea9302-aaf6-4611-9d11-3b6e9403d019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30adda39-4d99-4ffd-8c91-df80e7945179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6b57f0-343e-4ab2-a3ae-b28fc8e50413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f28b1f6-fe3e-443a-bd5b-88a030ce7e29",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9722d9-3c82-44c1-9aa2-1619a8fa5929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b55e2a8-df13-42bf-b9f8-3bdd62d06615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314ad38a-14b4-44f1-a2f1-d53fa68cd92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e2f040-a0e2-4ef5-8a92-5b876963421b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90414ada-dc06-49e4-a566-1cecd1d9e1a7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff45eb7b-bae6-410d-8347-766c2ba6168b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "882308d9-2e34-4693-9b74-f8b857b2b492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68740a2-d549-4dd6-bb63-5acdb3405bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845d4f5b-177c-4dfb-bf9c-5228a28b6cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d89b71-8e90-4bc5-8c1e-b466c5fb08ea",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801ae588-d052-4f94-aeeb-d68b4d41df35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6acdb405-e603-4552-bcbc-21047073489a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49846e09-9ffd-4067-a636-708460b41a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fe4548-0626-4c41-ac0c-782f46fd0eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf6c667-0971-4fef-a7f4-e46e807797ac",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5bbfce-c76f-4bf4-a8a1-5fb5e3e1806d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b8f443-82a9-4516-9f5b-3bae36173e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcd6db9-2701-4a60-b07a-a2d222d865ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3888b4c0-9416-49ce-b8f9-08c2d1b7073f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90578832-3194-451f-b27d-aef093d80b62",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db4fe42-a2d4-4299-864f-259f81a6377a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aaf4169-a9ce-4da9-b21d-3e24446917f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f332328-9bec-4379-8061-e2e71ac891e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7454854-a6ce-4686-b751-274eb13b02bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7335fa6-4db0-4883-b9e3-f22462a32f1e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243fed2f-d4be-4c98-8be6-85ade9a9dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf1c7017-a412-42f0-867c-25b6d91d5bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f40110-9bce-4ca2-881c-3a09de847824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e023cdfd-5e10-438d-8ee0-e5afbb64cb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c05572-7de4-4f3a-824a-b1efed7a770d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa47285-021a-419c-b78e-26a2f82c055b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d72ea8d-2fee-4fcc-a836-285f06dcc5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088938e5-96cf-4a71-8c0f-007a5dfd0997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a9eb2a-541f-4b53-a47b-093abb8836cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ce9743-fe1f-4ba5-9a2b-134815b52685",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb18c95-34c9-4d9c-9b6f-84ef05c8d2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6181ad00-4500-40f9-a913-f4591766a44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812ce783-52ce-406b-a126-cc95fa4c8f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f868da-d747-4f6e-a966-2827bc4162c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1ecfb0-f6db-484a-a15f-caa1cd24213d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee93130-284c-432d-b6c8-c95af922b1a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de73e769-91bc-4a8d-952d-00cda30e6db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ab5239-f7d3-40ec-bc0c-71686d872918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464c250b-9a46-49c9-b5c8-4555d6da50eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59760dcc-8571-42bd-903a-535e99f25fe2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c30dd8-cd5c-4264-8004-1f3dc29bc677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4419d8fd-e95c-4f32-974e-1263f0fe8139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232d4bb1-413b-4a29-acb6-c9caa6fc5adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0a0808-6cd5-4f39-87da-f1fc3ced9ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2726275d-fbad-4599-b032-f9546876ab0d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2814dec-627e-4ff1-8288-b8e613762c45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b19acf-41bc-41fa-83a3-6d001f558142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833d5509-5c43-4fc3-a116-73824498a215",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ee32f8-2eea-476c-83be-1922be7dcb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d31e69-f6ab-4c28-b286-494dd222ca6f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825f9394-cbbd-4703-8a04-aae6875978aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93fe385f-c8f1-4081-9ecb-ea08e4c05418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc8b276-9f4f-405c-8cc4-b0b1faf995a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c4c5c7-0335-4a7c-a3d2-52d6a0193931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8529c5-6f9b-429a-9ca3-822acfe24a54",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217446b5-aa02-4fac-973b-5e432cb5c144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "048c23ad-0db7-41fb-802a-c285720cf4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a87fa5d-66a3-45ac-a82e-d92a9f83bed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e55acf3-00f4-4811-a077-d0554767eb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b39262-af6e-4b1c-a63c-0e0c8ef5666f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311a44e5-d42b-4544-9929-6a166ff7b2aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a668ff39-9ae7-4b4a-bcfd-bdbfbf6792a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d319f73b-48d2-4c8d-a64a-4d574688816a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54527cc-41c3-4a9e-b074-57bb0eea9731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6f564c-b1f1-4294-ac70-efb8e75383b7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13081d78-bc59-4b03-8e14-783b3ad3cbed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d17954a-d98e-4e78-8c67-5c24d78d7fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bf03e1-19ca-41bf-8894-f0da415b6ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef46ed7-7bf7-4034-871a-8a982579420c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d6f399-20fa-4477-ab88-4588317221a8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a3a7c9-3053-4fc2-93f2-deb969986a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cae2b1f6-1fee-47cc-986c-69e3a3eaa504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511a7601-2db4-4132-83a0-f0dd1ff56d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281d8b3e-265d-40e3-87f1-efe6e184d293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1212391f-c4ee-4e3f-b3e0-9a090a90a470",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4007f5-7aba-4bae-a973-9e1e32bc54d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "570fba19-5bd4-4c8a-8dc9-7774d56798e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057458b1-2a96-42ff-84bc-ca942a9e70b6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9d2557-6678-4472-a3ab-859139a297a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10cfdec-7806-42c5-b0e6-6a72f98f60e2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944625f8-6ed9-4de3-aa1b-3fcfdf3f1a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b429aae-50b1-4e44-aac5-1840aeafc086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746c97b0-5028-42e9-aa6f-93d446619d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27c657f-8517-434c-9ba3-b0c9d291b81e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91b03865-b3bd-4d18-a058-a7be894ffa78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ebe90f8-513e-4c16-9ae1-1f061fe47a07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "265a3978-c50d-4c8e-ac64-f666ab229d44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10ef62fc-9945-47fc-bd49-f336e216fce5"
                    }
                  }
                ]
              },
              {
                "id": "20fde8e0-c6f5-42ec-9c8b-2eb0a0c6707d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97b0fe1a-9782-4d32-af11-3a01071eb13f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ebcad0-d3d6-4b71-85c5-7f685ed7e64d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d8102386-06c7-4fa2-9e54-7adab32ea8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1059fc-2870-4fbe-90e8-76e56b0473be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c14cf215-4790-43a5-8624-0a1c3a7064e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "257281f2-111e-4bd2-8254-1ff48b4d814d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75f57f51-ce56-4a64-bcb8-2b185306fa81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b88d6a7-3ab4-4150-beb0-b3cc0aad346a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "babd7346-af34-4279-91d0-551784d06ec4"
                    }
                  }
                ]
              },
              {
                "id": "cceb9e91-d19b-411d-9be6-005c83d7ffa8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "829a5162-002b-4672-a9ed-8620e8ce39a2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80ede2e-21cd-4e4d-96eb-2c9f42527f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0f64cd14-5dd2-45cc-9220-d153143d60ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211f9484-eb0e-475e-981e-a6c4f46fd6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bc49dc-1d25-4a42-a430-c7668d03b426"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3929a83e-92a3-4351-a888-c0c7b467b205",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15d564c5-01b9-41bb-ba21-0aa8be253989",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6352893d-d1f6-4545-a6cd-fa8f367bc243",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "14c780ca-7ab7-4895-a7d0-9e90daed8243"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "182a2463-df7b-4f85-a825-615e5409eeb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de732b11-670f-4fd2-bfb6-658fa9c1da58"
                    }
                  }
                ]
              },
              {
                "id": "179e67b4-1161-4fa3-acd5-bddb59e3dc69",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecb57922-fb43-4244-a855-74f0155cc635",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ce18448a-fd34-4170-ab70-c60e106d5647"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69b5dd65-8433-4ab9-aaef-a20e75844799",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f4b6b8f-1840-4149-a6c9-86869b9aed70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "390f941b-4032-438e-af95-58ed04bdeed6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f6e4c36d-af81-4afe-bcfe-60c502eab2fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b894e98-2a3d-4595-b8c7-1f7f0fbd0821",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1259d5a1-4647-47d4-9677-67b8079e65e7"
            }
          }
        ]
      },
      {
        "id": "fd92dbe3-92a7-4e6e-84a4-660eb23506b6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "989905fe-56d2-47fe-8a59-d76b0917c549",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f4d449a-e0fd-46e2-8f15-3b5f13a28d3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "462b5d04-f38e-445f-a824-b5ae123b04d2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bf23d8-fcb6-4864-8f83-f9377fd5fab8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "473757cc-20c2-49f1-ba5b-8dee3bd70a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149aa633-99b9-4851-9710-00ab8bd55087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e039ca0-6cd8-49bc-96eb-5e3565c6dd73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c21d930-7fca-4b2b-9391-8d872cf79e74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42749f1a-3502-45ac-a706-fc460a7b39b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40b48af2-fb4d-4b1a-a379-0c74541d97ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66f59457-c726-4942-9633-9602989ad73c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6766f076-f05a-41a6-967d-b5b2086e8140",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "eb3ae13a-7c09-4237-93eb-3dec3aaa7957"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a24e840-20e1-48ca-ac51-507acd6453b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ecfff55-a51c-439f-b30b-2de81098ceed"
            }
          }
        ]
      },
      {
        "id": "18fc94ea-0526-4d5f-9a50-5815baea4446",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5ce2dee9-3a3c-4d11-89e6-3c7bdd58ab6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c535d9cf-8102-473b-ba46-9ad322f8bccd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "191c6c09-35e7-43a9-96ec-a0b72bf1ffa4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a42fb7-7d07-4356-8ed6-429f1416b3c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d104702-9545-4dc7-852b-4f18a29648c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d0c5dd-d8d7-4c4d-be21-e83f263b0245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d3b75f8-2463-4dda-9453-7ffd275f3fc6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cd28f7d-2a0b-417a-84a7-ba553e2eaaeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f98e42e2-f91b-41f3-84b5-5f0a0b346414"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40eeb0c5-cd50-4a41-8faf-00e4c32d82af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e038ded-0b28-4aae-a17a-e5670ffb9747"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d40c358-3400-4c4b-8787-494a5f658897",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5c87eaf-5b84-4852-a642-b78833c854ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90c9d525-5ba0-465d-88a7-c8bcb1ffcfa6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09330c07-dd4f-4fe5-b548-6242b239c471"
            }
          }
        ]
      },
      {
        "id": "b65d20b7-4bb3-43e7-a94f-8ced84dce55e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "edfc6a82-d210-4dde-b2fe-dc72e5ddb357",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da08cac9-9a86-4c1f-8469-40e6bdd35cfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5aa5c1a3-115a-4610-94f4-c98cd8847737",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd66cfc-91b7-4d4d-a952-7e25e9bed7af",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd45e6fc-04a4-463a-893a-6449fc972d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5b5b30-8530-40ae-b414-90da3f7fb91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d4825d5-88fb-4c9d-ad42-b79cbecac579"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c9a399d-118d-46af-af2d-dc7bf991f4ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92eecd17-cf05-4824-b1be-bfa7c6b934e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fde683a9-2fdf-401d-8cd4-f34afbc35e6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbccee61-fd15-4a24-a83a-43a019611be5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1230bbc0-02b1-484f-a018-81bacbffe143",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f32d8e5c-4397-4690-a7d9-49fe0d8f0afc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d80c1e4-128f-44a7-80af-d4789e808675",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "039826fa-0ba2-448f-b771-78692df9c275"
            }
          }
        ]
      },
      {
        "id": "9af8f65a-f8f8-47fb-ba47-5019c52ab753",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47ed132d-fe22-4730-9e97-1729cc64ad11",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e88c55e-0c29-4175-ae63-6f78f759b1d9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "40dacbc6-dcf5-47b9-8314-23b324158849",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "613e057a-2673-4fd4-a9e4-ebf897617514",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22ae19f1-fe1c-4ca3-8384-d08b16e13599",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.58947368421053,
      "responseMin": 2,
      "responseMax": 299,
      "responseSd": 24.1626773540511,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699662810695,
      "completed": 1699662821910
    },
    "executions": [
      {
        "id": "b99ab138-e6f0-4afb-8e28-23140d3b67c9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3adc6b5a-159a-4882-8b55-5987b3b1b341",
          "httpRequestId": "e19d23ff-fac3-48b8-8445-7599455afdee"
        },
        "item": {
          "id": "b99ab138-e6f0-4afb-8e28-23140d3b67c9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7782fb1e-af93-4c76-a410-fe4deaedfafc",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "0a455337-2e07-4902-a07f-c80a1b444aea",
        "cursor": {
          "ref": "cd674c18-26c6-4d24-80cd-93428f8a5243",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2fd71da4-0bfa-4967-8998-2be73dddcd6f"
        },
        "item": {
          "id": "0a455337-2e07-4902-a07f-c80a1b444aea",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "394eda3d-0c10-44dc-9f23-13129654abde",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "891bfda0-6ac7-4e69-9b27-446af39a3654",
        "cursor": {
          "ref": "c04c6905-b724-439c-abad-f9518c5bdc20",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8e61f9fb-b840-426c-8b0a-033fb0b36cec"
        },
        "item": {
          "id": "891bfda0-6ac7-4e69-9b27-446af39a3654",
          "name": "did_json"
        },
        "response": {
          "id": "21308025-cd40-458b-83c0-27f32c110795",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbcb36c-2e6e-4540-952d-01f70b66d693",
        "cursor": {
          "ref": "af7934e6-52ad-48a0-b834-629d68b5829e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3f564f60-0034-4467-a989-7696d00d106c"
        },
        "item": {
          "id": "4fbcb36c-2e6e-4540-952d-01f70b66d693",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d5d679c-be35-4b81-b804-48b269a9cfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbcb36c-2e6e-4540-952d-01f70b66d693",
        "cursor": {
          "ref": "af7934e6-52ad-48a0-b834-629d68b5829e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3f564f60-0034-4467-a989-7696d00d106c"
        },
        "item": {
          "id": "4fbcb36c-2e6e-4540-952d-01f70b66d693",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d5d679c-be35-4b81-b804-48b269a9cfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8320aecc-179e-49d1-99fc-1bbccd6a0839",
        "cursor": {
          "ref": "16d2606a-d703-429d-a17b-46bd1089cd71",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "71338618-b953-402a-90cb-9abfc7ff0231"
        },
        "item": {
          "id": "8320aecc-179e-49d1-99fc-1bbccd6a0839",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "366c8946-0199-483d-9b2f-a78d68f5597f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708f912e-362f-4f54-acc1-87e833c27454",
        "cursor": {
          "ref": "1aa210d6-e00b-4deb-969c-62052a50e4ec",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f5f99630-a615-484f-9b35-b8d51629663b"
        },
        "item": {
          "id": "708f912e-362f-4f54-acc1-87e833c27454",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "630b64f3-73cb-4b15-85bb-50ac24a4349b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc8864f-1f40-44e4-b13d-3d51dbe1e881",
        "cursor": {
          "ref": "fe4aa778-fb23-4d30-9ef1-0d9d84d875b5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f0511268-07d5-42bf-993d-97356f888321"
        },
        "item": {
          "id": "4fc8864f-1f40-44e4-b13d-3d51dbe1e881",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d6fb484f-11c0-4f26-b971-a7f3bc92fe95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaca18bb-0141-45d1-a2f7-55eb18fe9a01",
        "cursor": {
          "ref": "008abb44-b41b-4a05-8714-29ed254a8859",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a5a7f400-5e3a-4f98-b93d-f8832ffd7c1c"
        },
        "item": {
          "id": "eaca18bb-0141-45d1-a2f7-55eb18fe9a01",
          "name": "identifiers"
        },
        "response": {
          "id": "e64a16bc-6062-4bc4-8641-d7d2789ce64f",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc68c617-48cc-4faa-be7f-86bca7dc6116",
        "cursor": {
          "ref": "bfab9d1b-4380-47fc-ba14-0c048c33ff84",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0b3af5d4-7bda-4a4f-8cde-fed6e986553e"
        },
        "item": {
          "id": "cc68c617-48cc-4faa-be7f-86bca7dc6116",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47ebd13d-dc51-4ce4-a6d8-7a5a2523086e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518467a5-3c90-4d3c-a202-a312ffeb0808",
        "cursor": {
          "ref": "efb09f50-3a7d-4e0c-95c7-7566576d829c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "79cf7e51-adca-4cdf-8351-11671db807d7"
        },
        "item": {
          "id": "518467a5-3c90-4d3c-a202-a312ffeb0808",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "494e9e60-b138-4ad9-9afb-30d0285a731e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41333fd-1994-4ed5-b11d-27e845de65d9",
        "cursor": {
          "ref": "86b7fe1d-2dcb-4b5a-abe7-6cc485e319e0",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "91aafba8-6af1-48d1-b920-43be4940305b"
        },
        "item": {
          "id": "b41333fd-1994-4ed5-b11d-27e845de65d9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "701e58bd-f0d9-4d80-b1ef-404e7b201627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4b2184-e47d-4b1a-8e7c-4d1ba32461d6",
        "cursor": {
          "ref": "55b1455b-7ce0-4a56-b5b0-391694c24e47",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fa43f96a-510a-4c18-85c6-bc66cc6951f0"
        },
        "item": {
          "id": "5b4b2184-e47d-4b1a-8e7c-4d1ba32461d6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3284745c-00ab-4aaa-868d-8c081e94eca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f6943b-40d1-41e7-9a19-b43e25d8ac5c",
        "cursor": {
          "ref": "c75df746-694d-4d7b-9f20-4d26dc399016",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dfd3c39f-f457-47a9-b855-950a81884644"
        },
        "item": {
          "id": "11f6943b-40d1-41e7-9a19-b43e25d8ac5c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "443497a6-7a88-4fc6-a4df-1f2e9a0352bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741ce91c-9eff-45fa-ba3f-73ec6930ae4e",
        "cursor": {
          "ref": "2412ce92-b287-4c44-970e-2f4da9d82dc7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "24ab555c-31cd-4a7c-9baf-d99769488d47"
        },
        "item": {
          "id": "741ce91c-9eff-45fa-ba3f-73ec6930ae4e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "74063467-c52b-43fd-a931-e36496011d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f878fbe-adad-4a74-b516-512182d38566",
        "cursor": {
          "ref": "8b31fe06-e051-4073-9c80-39e224262749",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7483af9a-e0d0-4bb4-b364-f85b9bcd4d63"
        },
        "item": {
          "id": "1f878fbe-adad-4a74-b516-512182d38566",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fe9b82ba-97d8-4ef0-9f1f-43f49f8a29ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394bc7f9-9711-455a-9b81-03720a6d2e32",
        "cursor": {
          "ref": "c506686a-dfe2-4ae5-95a9-6271132b3edf",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9ab7f87f-c489-4f2c-b5a8-68b762769d0c"
        },
        "item": {
          "id": "394bc7f9-9711-455a-9b81-03720a6d2e32",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8d0aa2e8-ce67-4007-906b-e34da04336d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6effddad-6d04-4b43-8ddd-e1ba210f8d34",
        "cursor": {
          "ref": "2cacc133-8b2b-4da5-8171-a8fc075b84c4",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "965aba76-b27c-46d7-ba11-0224794770bf"
        },
        "item": {
          "id": "6effddad-6d04-4b43-8ddd-e1ba210f8d34",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "56670fa6-1a25-4ad3-8db7-16a5c7f055dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39708cb-8ae7-4555-af98-b139051b1b42",
        "cursor": {
          "ref": "2b1a98ea-55ce-4e33-a5cd-053fbf5e3dfa",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "395e0921-cbc5-4223-acd4-a24e44343302"
        },
        "item": {
          "id": "c39708cb-8ae7-4555-af98-b139051b1b42",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3f043c25-da99-4de2-a3b7-1975049bd5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07420c6c-0e45-4c03-9ea3-305cc42d8c37",
        "cursor": {
          "ref": "b1e6d2fe-ef2c-4394-8069-2c467ebe2bdb",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d6d35f00-4333-495b-a98d-60ebc629d86b"
        },
        "item": {
          "id": "07420c6c-0e45-4c03-9ea3-305cc42d8c37",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1728f94b-cced-4493-be0c-2362d560dfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf8b3cf-b9ae-4e82-8951-1de3399e000f",
        "cursor": {
          "ref": "4553f120-a944-4dca-b91b-63157cc13e95",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3e043f1c-66a8-45cb-a077-6a7026cf9797"
        },
        "item": {
          "id": "8bf8b3cf-b9ae-4e82-8951-1de3399e000f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0f652781-04a5-4ffa-96c1-60c59ae9ce36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f117683c-b846-44a3-a4eb-64ddcc2802e2",
        "cursor": {
          "ref": "9cd7f8b9-98fd-43df-b1e5-0eda0d64a53e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "256b80f8-f09c-4df9-a1a0-40b3e7ca389d"
        },
        "item": {
          "id": "f117683c-b846-44a3-a4eb-64ddcc2802e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dc15c960-5a62-4847-a08b-7316956da937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e14660-a4bb-4227-9dcf-a2c1a3541d56",
        "cursor": {
          "ref": "edcc721e-836b-4369-87ab-0e862d197931",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bfe94ebb-0556-4616-be03-f7c0539152d4"
        },
        "item": {
          "id": "36e14660-a4bb-4227-9dcf-a2c1a3541d56",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "340c663c-fee0-4f1d-92de-956ffe207122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b307ba4a-46f1-4176-b897-7937c5fb544f",
        "cursor": {
          "ref": "f62a8b8f-1cc7-4a6f-96e5-6d6c08dbd0c4",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c5cb7084-e998-4cae-bdae-6e70900bac03"
        },
        "item": {
          "id": "b307ba4a-46f1-4176-b897-7937c5fb544f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d19f0443-82d2-4771-8648-0924883bd6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa442afb-493a-43fa-adfa-57e1e2e3268e",
        "cursor": {
          "ref": "bf1e4127-15e2-4f11-addb-ad24b45f3727",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6310c5a4-0c71-4118-8e73-a5235c1c4616"
        },
        "item": {
          "id": "fa442afb-493a-43fa-adfa-57e1e2e3268e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "398a9e21-fd25-4e5b-bb34-9390a5bdc7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9e2eae-e73f-48c2-b592-302fbf7d166b",
        "cursor": {
          "ref": "43ef56b7-fe97-4926-9aab-4899d2ae1b70",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2671d21f-055f-4ea9-8ae1-62f7e6b7fc44"
        },
        "item": {
          "id": "6f9e2eae-e73f-48c2-b592-302fbf7d166b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "744c2abf-9e99-4775-9345-2bac5640542a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28d160b-d055-4d3b-a68e-26a269bacb95",
        "cursor": {
          "ref": "e5940e99-5bec-49c8-bb85-a5d73b8b20dd",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e4f3706-0bf4-41cb-bc0a-80ea97913374"
        },
        "item": {
          "id": "e28d160b-d055-4d3b-a68e-26a269bacb95",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ac9864d0-9b5a-403d-a978-600dbfcdcdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb3b483-68c4-4e83-b80e-7b0e7c751760",
        "cursor": {
          "ref": "300f1f6a-d368-43d4-84be-ca92620c3895",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b40a43a8-41da-4c78-ace6-5c2fbcac11e2"
        },
        "item": {
          "id": "ecb3b483-68c4-4e83-b80e-7b0e7c751760",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3b39f225-98c9-44f4-805a-3401e2fd6ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d900582a-c339-4c92-bda6-b26223d98398",
        "cursor": {
          "ref": "004307ef-5218-427c-835f-30e837c300f2",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7e80a1d9-b7ba-4fd1-a8b7-d8db3a775384"
        },
        "item": {
          "id": "d900582a-c339-4c92-bda6-b26223d98398",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0710c6fa-21d0-4653-bf6c-e867c20db0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c8c191-17c2-459d-89b5-1cbcead22172",
        "cursor": {
          "ref": "de33122c-0185-411c-a897-f34d10a0c98e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dde0ef9d-71d3-4178-891d-ca0646d30b64"
        },
        "item": {
          "id": "34c8c191-17c2-459d-89b5-1cbcead22172",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "017aac77-430c-463e-a883-e74a78ea44d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91fd80b-3aa7-4f83-8449-97d262f07f98",
        "cursor": {
          "ref": "f65913b8-416b-460f-9a04-c7e5efc90399",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ba5e375d-caca-42ff-a2e0-11c825b43077"
        },
        "item": {
          "id": "e91fd80b-3aa7-4f83-8449-97d262f07f98",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3862f888-c7a9-4d41-87d1-a556e2ca50a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c828f8-2295-4d3b-a9f5-7299587f89a6",
        "cursor": {
          "ref": "31204569-5778-4567-848a-f66fe7b18e6c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "97111e41-12a9-45fd-902a-b9dd4f63f88a"
        },
        "item": {
          "id": "09c828f8-2295-4d3b-a9f5-7299587f89a6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cc13f9f8-16d9-4841-864d-38407e2dbb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f48c30-b074-4a8d-877b-3c42b1b671c5",
        "cursor": {
          "ref": "c2e057df-ffee-41a1-a013-125bd2ffd38e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1ea0d519-9007-44f6-82c1-df1e4cc9b92b"
        },
        "item": {
          "id": "b8f48c30-b074-4a8d-877b-3c42b1b671c5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d40636dc-147e-4c92-9beb-a0809f9ed0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b865cb67-0b08-4a69-a640-7c1022c9c702",
        "cursor": {
          "ref": "ac1ac8a9-c88f-4cbb-9257-372ccd3454de",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "759ad60e-9c1e-4344-9881-c970a957cba8"
        },
        "item": {
          "id": "b865cb67-0b08-4a69-a640-7c1022c9c702",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e8117ec5-e283-42a8-9053-e3faa92aa4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310426ee-54e7-4d94-974c-d646d5840a91",
        "cursor": {
          "ref": "cee1b747-667e-4d22-a22d-95ad06b5275a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "58990cea-9231-4e4e-b04a-a57c722eaadc"
        },
        "item": {
          "id": "310426ee-54e7-4d94-974c-d646d5840a91",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "06c4db8f-a9a6-4ea0-a30d-1bf3972776a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8041a951-3835-445d-a964-d6cbdf6bce23",
        "cursor": {
          "ref": "3d351557-2359-4191-964c-66d9c02b0c3b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c2c1cd6c-f7fc-4c1e-8d06-40d9b73b909a"
        },
        "item": {
          "id": "8041a951-3835-445d-a964-d6cbdf6bce23",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8b054db5-0920-4658-a0fd-9a2cb596f48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33dfbe1-9527-4099-b45c-d124a2bb4ed3",
        "cursor": {
          "ref": "b3d7be87-58a0-43ea-b6e7-cc7cb7220551",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "296750cd-dc00-4120-8bd3-0c1f8508cbb2"
        },
        "item": {
          "id": "c33dfbe1-9527-4099-b45c-d124a2bb4ed3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0a1ad84e-f9c6-4b92-a622-2681694c0c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faca47b7-a0e5-4269-bb54-9c5fd9a1947f",
        "cursor": {
          "ref": "cd4f15a4-415d-4819-8531-1c9ae5e0ab2f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d62cd8b0-6094-4498-a786-167af387a08e"
        },
        "item": {
          "id": "faca47b7-a0e5-4269-bb54-9c5fd9a1947f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "15b36025-44ea-4b11-93a8-dd99787f7388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983436ac-a0a5-4fd5-b936-9e9755343731",
        "cursor": {
          "ref": "fa283e8e-6384-405e-b3e6-c01bc66f99cc",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "db914f09-7b81-438a-a4fe-f8d94a683ca8"
        },
        "item": {
          "id": "983436ac-a0a5-4fd5-b936-9e9755343731",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b5e060dd-47af-4a3a-a524-13dd36c4302a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ff1dd9-5278-4925-ba9b-9a99db177434",
        "cursor": {
          "ref": "0b1b9a14-d184-44f2-96d2-537cd500b975",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a8c45bed-b368-444f-abc0-5354dc15ddad"
        },
        "item": {
          "id": "52ff1dd9-5278-4925-ba9b-9a99db177434",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0c7eb113-e978-4011-9101-594a622d8500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7a5091-14fb-4732-a781-a636cec48452",
        "cursor": {
          "ref": "fcc07935-9927-41a1-b664-92bebe67d5fc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "afe5d5bd-e17d-41fb-8145-80b4d98f4917"
        },
        "item": {
          "id": "ee7a5091-14fb-4732-a781-a636cec48452",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ae28d0d2-583f-4815-9b3a-924488b16421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484aba73-a96e-43b1-af42-203d6674dde5",
        "cursor": {
          "ref": "a0f8ed9a-c360-4e9c-90c3-d33a092f11af",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1e0f8713-d1a7-455e-94e1-78b962dce807"
        },
        "item": {
          "id": "484aba73-a96e-43b1-af42-203d6674dde5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "27608078-5c09-4a0b-a51d-b10be5efc447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ab1441-8e08-40a6-bf92-7e2e66e9b463",
        "cursor": {
          "ref": "236b06fb-b04f-427c-83ed-4774a257815c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b8368c8c-3121-4205-97d1-c13deb943f69"
        },
        "item": {
          "id": "13ab1441-8e08-40a6-bf92-7e2e66e9b463",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e9be02fa-5975-4386-9d4c-a1b311a761d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2e4f84-6b81-43a2-a548-5cb9d6ce616d",
        "cursor": {
          "ref": "81392c53-e72a-4c60-93f7-d13e1b58781e",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c5124a9d-7b17-4526-ba0f-f15e6e30f7a2"
        },
        "item": {
          "id": "ac2e4f84-6b81-43a2-a548-5cb9d6ce616d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e8a5bab9-597e-42e1-a943-1db2940c9525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdd6a7a-5d98-467d-89cb-622db86fa0ec",
        "cursor": {
          "ref": "437ed925-bec5-46bf-a677-ac7c0f374e40",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "396b323e-e7d2-4a69-bde7-2e8dfd7f12a9"
        },
        "item": {
          "id": "5bdd6a7a-5d98-467d-89cb-622db86fa0ec",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a1f2e127-81e2-40c9-a25a-64f8a1e312ec",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 31,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef83a0d7-9a67-43d3-a1fd-e3e051820b77",
        "cursor": {
          "ref": "701920f2-9d3e-496b-bdbe-8820d6ed4a67",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "08c5a52f-dca6-4281-8620-b78e8235e65b"
        },
        "item": {
          "id": "ef83a0d7-9a67-43d3-a1fd-e3e051820b77",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "087eadfe-8973-4ec8-82f2-b137cc85e9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3befef6e-d756-4b09-a833-878f328ddbab",
        "cursor": {
          "ref": "94622a84-9ae1-47fb-adc7-99da9dba57b0",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "73956172-3dd9-4e6c-8d39-6b4c9b20a59d"
        },
        "item": {
          "id": "3befef6e-d756-4b09-a833-878f328ddbab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c8f99735-8d03-4b0c-b878-25ecc625eb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49d8c66-aeee-4068-b5c8-820d0658f427",
        "cursor": {
          "ref": "5a544859-aaa5-4a58-a274-87e775abf92b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a4e400b5-944a-4828-b844-e2160eaac844"
        },
        "item": {
          "id": "c49d8c66-aeee-4068-b5c8-820d0658f427",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b45e4dd8-77e1-4c39-bfd9-3dbc0ffb2c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed1dca8-fd67-48ec-b022-b823e771797b",
        "cursor": {
          "ref": "166c7c4d-f0e2-41ba-96cd-a0e881768df8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b3d6af9b-7734-46ac-822f-657e698d4c91"
        },
        "item": {
          "id": "eed1dca8-fd67-48ec-b022-b823e771797b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "381997fe-def4-4875-96d2-ef0f8917a65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6657f2-bdcd-4cef-94b8-14d77909a8fb",
        "cursor": {
          "ref": "4752a1c8-e901-4116-b292-3c96e14c5804",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7d347463-41a9-4962-a761-fec500c0d91c"
        },
        "item": {
          "id": "2e6657f2-bdcd-4cef-94b8-14d77909a8fb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a6ea0547-e8f1-402a-9685-06ea6495fb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e36005-fdaa-4801-926b-739a99171e80",
        "cursor": {
          "ref": "8c68826c-875e-4957-be39-1879860d1a18",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "51bcaec4-61e0-4b9f-b991-1708dd510c4d"
        },
        "item": {
          "id": "10e36005-fdaa-4801-926b-739a99171e80",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1dbb764e-08c4-4283-a77c-357fe94999c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a379930-7d7a-4e9d-955a-1ba43f1816c0",
        "cursor": {
          "ref": "2bd263f9-154a-4b70-a3f2-0ca8d3539051",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3892bb2f-72d1-4ade-8836-0ffd8ac63512"
        },
        "item": {
          "id": "6a379930-7d7a-4e9d-955a-1ba43f1816c0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0279c49b-639d-487e-ae63-905869fee3cc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf3a222-7230-4f11-95a4-e57b22cc89f3",
        "cursor": {
          "ref": "ec03600c-5629-47be-ba71-d9c0ebbb7acd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c43769b2-885e-4c7e-849d-abb7fe8991c9"
        },
        "item": {
          "id": "0bf3a222-7230-4f11-95a4-e57b22cc89f3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "49c3d6dd-acfe-40cd-9b86-edd1857ad7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037cae93-11ca-49c2-ada6-9dfc54d717a9",
        "cursor": {
          "ref": "0a9c5be7-4a11-4fd2-8099-401c8851a325",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7acd9967-abc3-4972-97c3-c9aa36ae2a58"
        },
        "item": {
          "id": "037cae93-11ca-49c2-ada6-9dfc54d717a9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "886809c7-506a-47b9-92f5-9a6f6eab1132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c4a82e-9020-400a-b1b8-a92692385235",
        "cursor": {
          "ref": "7f392535-a28e-489d-81a8-92face633678",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "772eaf51-017c-4733-bbbb-d7ac5e0bd1cb"
        },
        "item": {
          "id": "b6c4a82e-9020-400a-b1b8-a92692385235",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0b7ca9b5-5874-4d66-88b3-f556bc61acd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb480653-7ebf-4b4f-9da6-f6a1500157fb",
        "cursor": {
          "ref": "6dd05522-81a6-4d24-a2e3-116bb02fa9bf",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2e59ea4f-896a-4803-832d-f7a87be1dd94"
        },
        "item": {
          "id": "eb480653-7ebf-4b4f-9da6-f6a1500157fb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5cecb0dc-7831-4698-8a6e-9d6121d6861c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de963041-eb36-4749-9e8f-23aa09f9ade5",
        "cursor": {
          "ref": "faa958f5-29c2-4697-b571-b18ad9336a6b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "561d5c61-d4b1-43f1-ac05-e94820a5a232"
        },
        "item": {
          "id": "de963041-eb36-4749-9e8f-23aa09f9ade5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05749c1c-8490-4144-8c26-4e187997f03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47cc974-d949-4f6f-8df1-5406e910f957",
        "cursor": {
          "ref": "717444b1-826f-4744-b3c0-a9f429fbddb9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "69707f06-f282-466e-b529-80c596de97e8"
        },
        "item": {
          "id": "d47cc974-d949-4f6f-8df1-5406e910f957",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8031ef35-ef71-4858-a84d-2d35dc845464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e1d542-ed51-4ae6-b122-7dda8499c36e",
        "cursor": {
          "ref": "19cb4388-5529-424a-be7e-211d83244cfa",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "39ffa048-23f3-4a7a-ae25-7690127de36c"
        },
        "item": {
          "id": "68e1d542-ed51-4ae6-b122-7dda8499c36e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4c25e5d5-846a-4cbd-8310-7f632f4f8ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be94ee6c-3511-43fd-ac86-b71058c75940",
        "cursor": {
          "ref": "14724081-7b63-4ebb-9d94-26f3ed77d92a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "85cb261c-9d63-438b-b890-5cd9094b6912"
        },
        "item": {
          "id": "be94ee6c-3511-43fd-ac86-b71058c75940",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2ccf9a50-70b6-446b-9fd7-f4e3e8a6d219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb63bc92-7aa2-47b8-8f01-e1a4c5075e5a",
        "cursor": {
          "ref": "9f4e9f13-6b0e-41f9-a9bc-52d5cc19c4b6",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6883bfef-e9da-49b9-bb63-02ef9c198d1d"
        },
        "item": {
          "id": "cb63bc92-7aa2-47b8-8f01-e1a4c5075e5a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7cf00154-f11a-49c0-a94c-ccb97191ace9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d9f6ac-5499-4fb7-a4ed-6e7727784c18",
        "cursor": {
          "ref": "dd0ba181-6220-488a-b400-8e543aaa724d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7957dff2-5894-476c-b865-56ed58254024"
        },
        "item": {
          "id": "73d9f6ac-5499-4fb7-a4ed-6e7727784c18",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f9b74957-f2ab-4fd7-bb82-3b84050a1fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89b9e8c-b35e-4c32-bf2b-fff8e80e70e1",
        "cursor": {
          "ref": "a5fa1b11-cc95-44ad-ba18-7cde00505741",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e26952b3-4334-40a8-9e60-74d66b3274b8"
        },
        "item": {
          "id": "b89b9e8c-b35e-4c32-bf2b-fff8e80e70e1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6b0f0f4f-932d-4db5-87ef-dbe11f753555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9793e8c7-a9fa-49a2-8b1a-2d59dc32f288",
        "cursor": {
          "ref": "702f55fe-41e2-4586-a45c-1957e9733e6d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6ae868ab-55dc-4972-8eb2-aaecff864bbe"
        },
        "item": {
          "id": "9793e8c7-a9fa-49a2-8b1a-2d59dc32f288",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3fc75862-cbce-4b01-8cc5-920ba4ee3d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c1cfe6-10d0-4499-b437-0516f137752f",
        "cursor": {
          "ref": "72bd6ffa-e891-4ff2-bcc6-6b6195a4d7a9",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a73fcebb-180a-4b47-b338-77f7888bd596"
        },
        "item": {
          "id": "35c1cfe6-10d0-4499-b437-0516f137752f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0b5d5749-1493-4a8b-abbf-2e57f9f4dc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395d65ee-e668-4927-959b-004fe94de1ad",
        "cursor": {
          "ref": "cfc97eb2-2ad1-42c6-af16-9e4b5dc6fe75",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bcd90212-c0dc-4fbb-b9fa-b0cb992e48c7"
        },
        "item": {
          "id": "395d65ee-e668-4927-959b-004fe94de1ad",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bbde8e14-53ec-4542-b0ce-7227d8d29847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ccb659-e709-409f-b07e-77043b2d4a7b",
        "cursor": {
          "ref": "234ccbf0-7254-4760-8402-ad294b8904d1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cd3638d6-bff7-4ca7-b4c9-1061204c415c"
        },
        "item": {
          "id": "75ccb659-e709-409f-b07e-77043b2d4a7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "be72078a-a26e-458f-a5b8-52fd19e6220e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d6cf76-df04-49cf-8b7f-c9e566ebbb22",
        "cursor": {
          "ref": "48e0138c-8f59-4330-a41d-28a322f41b78",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6147bc70-78f3-4a8f-879b-5321ac24643e"
        },
        "item": {
          "id": "04d6cf76-df04-49cf-8b7f-c9e566ebbb22",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9958bfc5-3263-48dc-bfb9-ed79860ce514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b217bd87-b5ec-486f-a695-6f487fe91142",
        "cursor": {
          "ref": "322e87c7-e6f9-46f2-b049-69a369de542d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3aa0a5c0-8b2b-47fc-a4e1-f715531da73e"
        },
        "item": {
          "id": "b217bd87-b5ec-486f-a695-6f487fe91142",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "76e0730a-4438-43b8-a32f-22ee6bcc5306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028a6dff-9834-4684-a0e1-1fd324e67135",
        "cursor": {
          "ref": "c58cd1b8-fdd6-4d3c-97fc-37ebba748546",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f73baf5b-ca14-46f9-be67-eeadad02e622"
        },
        "item": {
          "id": "028a6dff-9834-4684-a0e1-1fd324e67135",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "80b45358-a730-479d-affc-d66162cce720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad8bec4-4936-49cb-9edc-729552b59099",
        "cursor": {
          "ref": "d149473e-52b7-43f0-a5d2-84f7243de45a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9f2b8674-5e97-4891-a350-4b9c3da747de"
        },
        "item": {
          "id": "fad8bec4-4936-49cb-9edc-729552b59099",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "aa56a747-eb68-4815-85c5-e067e39c8434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108e9c41-69dd-4733-a89a-438f7f4134ee",
        "cursor": {
          "ref": "a5b1c260-a921-49dc-a5c1-eace7afe2f65",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "083f5920-f2c4-4465-a50d-da82a8240371"
        },
        "item": {
          "id": "108e9c41-69dd-4733-a89a-438f7f4134ee",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8a90879d-5049-4b0c-8cc5-a4ac6a2e33d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dae919-6b8f-41e6-8d34-1fbfa75f041e",
        "cursor": {
          "ref": "096021c6-0466-4e5c-b3cf-f6ac7dcf71ea",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "181ffa44-3f89-459d-86c7-31f0d2cb4b4f"
        },
        "item": {
          "id": "e5dae919-6b8f-41e6-8d34-1fbfa75f041e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cc35833e-b24c-4608-8a3d-785d153c878c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cdf52f-4447-4945-a243-877e08f41684",
        "cursor": {
          "ref": "b22559a3-0307-43c4-912f-538bb1d74cfc",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a7acd44e-a79f-480b-8eeb-8602fbee16be"
        },
        "item": {
          "id": "d1cdf52f-4447-4945-a243-877e08f41684",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "858c097e-ddaf-4f55-9e67-35aed29187fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec67a31-601d-4899-aa6c-19b0c9bb3b70",
        "cursor": {
          "ref": "569f9e67-7ef3-4e6c-bec6-e4a5dbc95506",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9ccfba4b-8409-47a8-b2b9-ddb1af8419bc"
        },
        "item": {
          "id": "5ec67a31-601d-4899-aa6c-19b0c9bb3b70",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "45caae7d-66fa-40ac-90ab-f2aa7fbfc819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57609e26-7ae1-455e-b50c-4d959e40c069",
        "cursor": {
          "ref": "bb6deb3c-1d36-4f63-b74f-3f2bf53e40e4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "07ee3042-8944-4f73-9eec-14ef5ca9b40e"
        },
        "item": {
          "id": "57609e26-7ae1-455e-b50c-4d959e40c069",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a0670aff-b3fb-4971-8273-e9721402dee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d6b08f-2bec-482b-af99-b8f451f83c42",
        "cursor": {
          "ref": "1107fb72-68c6-47f9-bcb4-85373789f6df",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7e65c48e-42fb-4804-a0e3-82d1c70168ba"
        },
        "item": {
          "id": "85d6b08f-2bec-482b-af99-b8f451f83c42",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "34f73b02-49b8-49d9-8a1c-ae74c0ece630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae5fc1f-ab73-4a9b-92f6-be20361e7237",
        "cursor": {
          "ref": "2fcf69ab-7676-417a-869b-4d85ac4f81e9",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "851280e7-1fe1-4a36-b102-26ad3f6e6c75"
        },
        "item": {
          "id": "fae5fc1f-ab73-4a9b-92f6-be20361e7237",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ffa21bcd-268f-4b90-85bf-ae2b8bfa8a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ab3872-316f-4a4d-b645-9f72798ebf01",
        "cursor": {
          "ref": "9a3db544-053d-48e3-889b-0518638e3c4c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "706ef644-370e-400f-b02a-793f69f0c661"
        },
        "item": {
          "id": "56ab3872-316f-4a4d-b645-9f72798ebf01",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e422fb75-ea25-4b47-8f79-85a24f4626b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd7df48-bdee-490a-9375-b94a1f1a34eb",
        "cursor": {
          "ref": "2f9ac03b-286e-47cc-952d-5ade7be29acf",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "820fdb77-4d7d-45fd-adaf-f4c45fa81cf7"
        },
        "item": {
          "id": "0dd7df48-bdee-490a-9375-b94a1f1a34eb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0167874c-ce80-4751-8add-a4dee0f5885f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98c13ed-9384-4297-b40b-be0b47fe1e45",
        "cursor": {
          "ref": "6c54c286-9dec-456f-8e64-a14260db494e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b000dc5e-0425-4ad9-bdd5-b9b0dd6253af"
        },
        "item": {
          "id": "f98c13ed-9384-4297-b40b-be0b47fe1e45",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "435b40b4-a6f3-40e9-813d-726a6f668237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14183d3d-b42e-488b-930f-5cc5b87cd85c",
        "cursor": {
          "ref": "16c19b3b-c2d1-4a20-8967-44cabeeafde9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b9f523ef-42a8-41db-9057-59846dbfe265"
        },
        "item": {
          "id": "14183d3d-b42e-488b-930f-5cc5b87cd85c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "963d8299-6d77-431f-9fb1-24a873af2cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad51d136-1694-4784-900c-c9ee9e6ebb97",
        "cursor": {
          "ref": "7f065ff6-b40d-4ca2-8f45-345b0929b293",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "410782dd-3abd-44a7-8865-3967f5ae370d"
        },
        "item": {
          "id": "ad51d136-1694-4784-900c-c9ee9e6ebb97",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bfc04d10-52f1-4b51-bc8e-3d5bc285e258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1c6393-e150-4f89-bcf5-57e755a04b05",
        "cursor": {
          "ref": "a4a829c5-3bee-43ae-b27e-77909f911dc6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "383ec13c-fe9d-4cd8-beed-4d0955837a24"
        },
        "item": {
          "id": "ad1c6393-e150-4f89-bcf5-57e755a04b05",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "af4bec03-b7df-4b90-9757-84fc08234d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa8948a-95b2-4243-b0b2-8ecfbfbf0368",
        "cursor": {
          "ref": "dd157d49-f9c7-48de-a5e8-2146bdce8560",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dbf6de94-e0d6-44ae-955d-b31e92b52279"
        },
        "item": {
          "id": "6fa8948a-95b2-4243-b0b2-8ecfbfbf0368",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "95dc4598-48d0-448e-8bcb-1e79df71a6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673da58b-2b4b-4644-bc81-35812807fcde",
        "cursor": {
          "ref": "6271fbcf-54f8-402e-8e56-4f54ea854db5",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d7a4c761-ee1f-4e45-8707-3c91524cd21d"
        },
        "item": {
          "id": "673da58b-2b4b-4644-bc81-35812807fcde",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fdda9536-4606-4bdb-9d8f-62894bc46b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61314d6-e6d1-4a4c-a1aa-50a461b87379",
        "cursor": {
          "ref": "5aa4e3a0-55dc-4bad-a6d9-568c5c8e70e6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f20edc05-dfbb-490a-add7-cfd4cef0bb1e"
        },
        "item": {
          "id": "b61314d6-e6d1-4a4c-a1aa-50a461b87379",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e4f6ecc9-135b-4685-b1d3-595497793549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84f30c6-a1cf-428e-bbd1-2aedfc0f9460",
        "cursor": {
          "ref": "1ce0ee8a-c8d5-47ba-8e8c-44150dce2a52",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b992f0c0-90b8-4795-a78e-026605827ca1"
        },
        "item": {
          "id": "c84f30c6-a1cf-428e-bbd1-2aedfc0f9460",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7473b7ba-3144-4ade-9464-90ca274f00c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b2e71a-6cf6-46eb-85ea-5bf399582bb4",
        "cursor": {
          "ref": "20063ac2-1dd4-44ec-a3e0-1374667fd7ff",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cfba45ca-08f5-4ba1-9faf-fded9c11c131"
        },
        "item": {
          "id": "a5b2e71a-6cf6-46eb-85ea-5bf399582bb4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4d55283d-9023-4e6a-85e5-1545c646b549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4d5e6a-b35a-4af4-9497-e27110984c95",
        "cursor": {
          "ref": "c1e1da69-5d53-4ce3-9e6b-e88d2273e48c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4b6dbf47-cf50-4ddb-b607-a4d380bbb012"
        },
        "item": {
          "id": "2d4d5e6a-b35a-4af4-9497-e27110984c95",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7f37ccde-6e79-471c-89e6-3a459b47d04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ce5ad5-52a8-4ebb-bb3e-deada5e90b09",
        "cursor": {
          "ref": "ca775d80-1457-4534-832e-72e2cc456cc8",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3ce48082-f362-4b43-a098-9e9fda054de5"
        },
        "item": {
          "id": "90ce5ad5-52a8-4ebb-bb3e-deada5e90b09",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "60122f55-5721-47c5-a50a-520de36bc147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf70a2b-f110-4cee-bdf5-cef6a07f25f5",
        "cursor": {
          "ref": "c63e3a10-2dde-4f75-9ac6-1cb4a61952a9",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "63576be4-e38a-4c56-8d69-fdd9add85712"
        },
        "item": {
          "id": "6cf70a2b-f110-4cee-bdf5-cef6a07f25f5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "96cb3202-146c-4f00-a30c-aabd468fdf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4ff971-661d-4b7d-963c-f4e78e278a6c",
        "cursor": {
          "ref": "8a7e2e6f-5663-4ce4-9b4a-aeb1aaaa4bc4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ed6973f1-e8ca-4d1b-b268-71e2f609f202"
        },
        "item": {
          "id": "fc4ff971-661d-4b7d-963c-f4e78e278a6c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8bdb928e-5f49-4aff-b9fb-fb16efdf6a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d33aac-20e8-49e5-a025-832dd95e3ec8",
        "cursor": {
          "ref": "1f0b99d8-4abe-49d2-8363-37c2ec1cfd20",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bff35bd0-3a88-486f-823d-c63791851131"
        },
        "item": {
          "id": "f7d33aac-20e8-49e5-a025-832dd95e3ec8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cefabbf0-5adc-47ae-b35c-7640443d785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935bd88a-c071-4621-90ba-f1697df88e24",
        "cursor": {
          "ref": "0d750b8b-f26b-462e-8339-0d79e422bbe5",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "05b78bd9-0a45-4a08-9747-3d93ecf87894"
        },
        "item": {
          "id": "935bd88a-c071-4621-90ba-f1697df88e24",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "187fb6d9-57b8-42be-90d1-2360759d3283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f14dd08-b2fa-4198-9c64-a332c7394b9b",
        "cursor": {
          "ref": "d39a5c72-0f06-43ce-a1bb-b756492e9c18",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e1a2a4e8-333a-44ac-a78a-0f7b008d46b7"
        },
        "item": {
          "id": "8f14dd08-b2fa-4198-9c64-a332c7394b9b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ef4f7c24-63c7-4878-aa0f-022c0e3fef8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c37ae6-5d07-4186-b318-3ae8b7adea70",
        "cursor": {
          "ref": "db0eaa14-7f5e-4940-b551-113234e6cd5c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ecdf790d-d522-4282-8901-74b2c1c3ce1d"
        },
        "item": {
          "id": "b1c37ae6-5d07-4186-b318-3ae8b7adea70",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "397f6eab-aa95-4610-9f35-238770257a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34bf862-084e-4d83-8184-1bb398d9be02",
        "cursor": {
          "ref": "a4b4510c-cf92-42fd-9297-51914d7eb85f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fe701752-0dd7-4adb-84b1-719bc08968a6"
        },
        "item": {
          "id": "a34bf862-084e-4d83-8184-1bb398d9be02",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d043bb22-5887-4518-932d-8b6f66c35be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04957b7f-d0c6-49e2-907d-b95f6218b9a9",
        "cursor": {
          "ref": "b51ac8f0-9e2d-48b5-b4fa-d0dcd403e808",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d9f37007-c6df-4951-8f95-9d2b49788f04"
        },
        "item": {
          "id": "04957b7f-d0c6-49e2-907d-b95f6218b9a9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c9920373-e5b4-43ec-8f4e-b17250ed4fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f769daca-0ada-491b-8488-aa96955bf943",
        "cursor": {
          "ref": "cd599b38-d396-4626-8f33-69f01709c6df",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fb1a5ac1-9b22-4c9f-ba5c-867e2253f182"
        },
        "item": {
          "id": "f769daca-0ada-491b-8488-aa96955bf943",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4f206025-2d23-4bb5-bf9c-67b0c76666e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97ee469-b564-4e10-8c69-51b63f4f6611",
        "cursor": {
          "ref": "6be01fe7-1811-41e0-a91e-066586676999",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dfe4d7ae-0dee-4fb6-872f-741fb093a349"
        },
        "item": {
          "id": "b97ee469-b564-4e10-8c69-51b63f4f6611",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "378480c4-2909-44f8-bac1-2a9b96d3f536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83370047-2926-4641-91f9-2b756f3d9e65",
        "cursor": {
          "ref": "829060e2-38d1-4c1a-9a7b-8443651c55db",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "be7b494b-1eb5-4641-9407-0596f55062ed"
        },
        "item": {
          "id": "83370047-2926-4641-91f9-2b756f3d9e65",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8adc6d5b-7d6e-4b80-afb2-942ffaaab773",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8633bc29-7235-4675-af00-1ab45615a806",
        "cursor": {
          "ref": "e569e358-1e96-4b11-8086-799b7d9262e0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6ef86d84-3af4-4a57-9543-724693e56a75"
        },
        "item": {
          "id": "8633bc29-7235-4675-af00-1ab45615a806",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "094eac11-f8ea-4cb9-8bd2-94395366678d",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f7b90a-5207-46f9-b606-3a281fb2d57a",
        "cursor": {
          "ref": "30c69a16-10f9-483f-a43d-f4b1071ec1de",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b1182e59-8ce9-4684-8ec6-c52f1c014eca"
        },
        "item": {
          "id": "36f7b90a-5207-46f9-b606-3a281fb2d57a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "23077d21-a3b0-4a97-bbcd-d896838c8494",
          "status": "Created",
          "code": 201,
          "responseTime": 299,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a9f22d-a288-4243-b97d-524f278a9017",
        "cursor": {
          "ref": "fffebd4e-1e65-4def-9ff9-bcb227b2c591",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cc1125fe-4e81-4aa7-a0ed-56a351f548e8"
        },
        "item": {
          "id": "f9a9f22d-a288-4243-b97d-524f278a9017",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "90079867-8185-4c9c-b3a1-b4450d1b1807",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3788bc57-acf0-4762-908a-7d6764aecfba",
        "cursor": {
          "ref": "ad82777e-4956-4e3a-90cb-9661c0123978",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6e03c648-b0a1-4622-9dc2-a0adc18bb88a"
        },
        "item": {
          "id": "3788bc57-acf0-4762-908a-7d6764aecfba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "54b01563-835f-4830-946e-073965fba9d0",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73ba403-9e22-473c-ae0b-3ba06fb963c7",
        "cursor": {
          "ref": "45e63fe8-69aa-43b9-9eea-b99a2da11123",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b083cbac-98b0-43d3-9aba-d8136366a87c"
        },
        "item": {
          "id": "e73ba403-9e22-473c-ae0b-3ba06fb963c7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b6d8b2a3-ec13-4b74-aa9e-a7de81987812",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1608cb31-9115-4fb2-9985-dd651ffeee5f",
        "cursor": {
          "ref": "8b9418e3-b9b1-4069-81f7-d2f632afbeac",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "45b26fe2-dca4-4f32-b58d-f49b8a821c68"
        },
        "item": {
          "id": "1608cb31-9115-4fb2-9985-dd651ffeee5f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4daa8cc7-2085-480d-b83c-202e4d7fc833",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c831b99c-8c6a-42ee-b46f-89978fea6890",
        "cursor": {
          "ref": "ea33dde1-2890-4ac2-a3e2-c96d7d4e7a0e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a609c617-6df9-4607-a0b5-e9b2515fd034"
        },
        "item": {
          "id": "c831b99c-8c6a-42ee-b46f-89978fea6890",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d691b1e0-5ede-4900-8a9f-b5dd142ba3c5",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80874ad5-9a4e-4fac-8918-ecd6277b82f7",
        "cursor": {
          "ref": "2052399e-f842-49c7-b647-d6ece8e80cd1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "68cba05b-7a3a-47d9-b567-a33a4c270a75"
        },
        "item": {
          "id": "80874ad5-9a4e-4fac-8918-ecd6277b82f7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9df8dad4-a0a6-4f0f-bc7b-385072239ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81a96dc-e207-4803-b6d3-2985f1aaf3a1",
        "cursor": {
          "ref": "5fa7df98-75a0-480e-bc2a-392cb166e422",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "db6765a8-b0b2-495b-8887-dc77a02b07a0"
        },
        "item": {
          "id": "c81a96dc-e207-4803-b6d3-2985f1aaf3a1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0ed079ca-6212-43ee-9f67-d9e93346ef90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6063453d-04b8-4225-811a-82ef16ebcd4d",
        "cursor": {
          "ref": "243bbe04-91f0-40c4-81b8-401a1ba7aa01",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "785feed7-cb10-4e3b-ae9e-1574c02d7f10"
        },
        "item": {
          "id": "6063453d-04b8-4225-811a-82ef16ebcd4d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fb3d3e49-51a9-4a04-a939-8a83c01593f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d21760-092b-4be8-b332-ffd4c824cc23",
        "cursor": {
          "ref": "6cf2dbef-bc10-4d72-a181-eef3141ae1f1",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "279eab98-f76d-4600-a5f9-2c5ae665f9c3"
        },
        "item": {
          "id": "20d21760-092b-4be8-b332-ffd4c824cc23",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "967e19eb-ab4a-4870-b0c4-34276fb313ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790fe11e-02aa-45b6-af50-baa59226f582",
        "cursor": {
          "ref": "1ed27848-8cd8-4c45-884e-3a0f85ee0897",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "879c947f-b60b-4215-bc72-d5af7965b2c8"
        },
        "item": {
          "id": "790fe11e-02aa-45b6-af50-baa59226f582",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0540e2e0-6e5e-4da6-a3ae-94283280a6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff8e740-5a1a-4309-9e0f-a044616a5057",
        "cursor": {
          "ref": "984da6f5-693b-46d4-a7c2-20c4fcaa2d05",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1c39c9e4-b103-40c6-bbad-dd1da15e3118"
        },
        "item": {
          "id": "4ff8e740-5a1a-4309-9e0f-a044616a5057",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "598a3f80-cfc7-4089-b2fe-bf0259a5e755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefc9d8a-3680-4b76-8262-48d26df8e4cc",
        "cursor": {
          "ref": "12f80ebd-97c0-44b3-9645-3c80369ed1d5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5373bd1e-792e-42c3-b963-5232f9656318"
        },
        "item": {
          "id": "eefc9d8a-3680-4b76-8262-48d26df8e4cc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0d4a0874-14ff-40bc-84fb-45ef79f793a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85f5598-d587-4362-85a2-54bfa063744e",
        "cursor": {
          "ref": "6ea72792-f9b1-4215-b17b-b3ae874af839",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "576bb8c0-099c-41d2-96c4-d0276565ca64"
        },
        "item": {
          "id": "b85f5598-d587-4362-85a2-54bfa063744e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cd265891-e114-4ed8-9dab-3d5cf1bf7461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a045f0e0-4ff5-4dfb-857b-a9cddb83cc79",
        "cursor": {
          "ref": "4aa9b21f-6f8c-4729-a9ad-6670de859870",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9bebc3ed-c71a-4c28-9d86-3b536b94be04"
        },
        "item": {
          "id": "a045f0e0-4ff5-4dfb-857b-a9cddb83cc79",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0fa3c92c-3298-4eef-8bbe-e6b2430e711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b83716-3765-41e9-9ef9-b3b886737201",
        "cursor": {
          "ref": "c2226e93-3216-4e92-81e6-2294a6e75b1d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6fd6d4ec-8ef9-4c89-ab87-7885dfbae8a8"
        },
        "item": {
          "id": "16b83716-3765-41e9-9ef9-b3b886737201",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f4ba31c1-58f5-403d-be69-35442f1aa077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff751f0d-7342-47b7-b2e4-7b39c7cdc2d9",
        "cursor": {
          "ref": "0dded3ce-d039-46c6-bcea-ab0b9f2cf7a0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c378793e-b826-43f0-affc-cd50b3cab755"
        },
        "item": {
          "id": "ff751f0d-7342-47b7-b2e4-7b39c7cdc2d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e51af5f2-9c07-468d-9e8f-a46f20eaa758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f83e3b9-e272-4569-8a95-b42f22b18325",
        "cursor": {
          "ref": "e3a5a8e9-9b69-421d-809b-957181b8d6f7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "72575c46-35f3-47ec-9495-16eddfe197a0"
        },
        "item": {
          "id": "6f83e3b9-e272-4569-8a95-b42f22b18325",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "330a7437-2f86-4c0e-96fe-4df3c1738b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b3d8ba-76ec-4db0-98e1-70049ed9a52f",
        "cursor": {
          "ref": "0608fe08-c208-460c-a8bc-293d7026e1be",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83467e7b-0a22-4026-9054-285babaa33f1"
        },
        "item": {
          "id": "19b3d8ba-76ec-4db0-98e1-70049ed9a52f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a0ecc0d1-fdeb-487d-baa7-aca128474848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbbbe26-9684-46bf-b0f0-da1e82936d0b",
        "cursor": {
          "ref": "a93f8c27-3332-46e9-b9f1-3b9042fd6c3e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6bd81ba7-ba36-43bc-aee5-ea8f8c33ab9e"
        },
        "item": {
          "id": "6cbbbe26-9684-46bf-b0f0-da1e82936d0b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f6110ed6-16a6-4e21-b6f9-cf670294e04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98f0ffe-8617-4272-b105-a7179bca3eb9",
        "cursor": {
          "ref": "1fd1eaf3-a22a-4bf2-972f-415729dab9c0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "97ce51bd-5403-4efc-9d3e-bfd34a35f81f"
        },
        "item": {
          "id": "f98f0ffe-8617-4272-b105-a7179bca3eb9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "eac973f8-968f-443b-a5e6-2518d7111716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4049a598-1cb6-4578-81a1-c8515f8642c4",
        "cursor": {
          "ref": "0fc6e7b1-87a5-4729-8297-13ff54bad0b9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f67719aa-0389-4c4d-bde2-92a7a4933c76"
        },
        "item": {
          "id": "4049a598-1cb6-4578-81a1-c8515f8642c4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b596a2af-72dc-4db7-8eb1-a91832b36eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ccda6-3985-4349-92fd-faa8188d6bff",
        "cursor": {
          "ref": "6f1d8b13-04d3-4934-b54a-b82300011299",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a4723d1b-5fb7-40e1-95f0-e96c875e8823"
        },
        "item": {
          "id": "b10ccda6-3985-4349-92fd-faa8188d6bff",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3f01fb3c-b34f-4665-8fe3-ec180245f67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cc1b26-a652-4911-964e-02d4e6d8b22b",
        "cursor": {
          "ref": "b3bb18a5-35d4-4936-a0a9-43144fbe2328",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a50e6a49-3534-4c3e-b316-9c7954767195"
        },
        "item": {
          "id": "15cc1b26-a652-4911-964e-02d4e6d8b22b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b5c16d7a-a9b0-41b7-9691-1c5f458c73f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25f83a2-eeb3-4c23-94f4-1b31350b9d79",
        "cursor": {
          "ref": "730e9096-4fa1-4384-9973-b11135fe2941",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2fcaee08-f81d-4da1-93c6-5af93981492b"
        },
        "item": {
          "id": "a25f83a2-eeb3-4c23-94f4-1b31350b9d79",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41fa357b-054a-43e5-8a37-ab77a4e62325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab330c11-7de0-4138-88a3-19fd61b1024c",
        "cursor": {
          "ref": "32fb264c-d60d-402c-90d7-61fc518541c9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4392703b-b34d-4431-aed9-7e0c26072e28"
        },
        "item": {
          "id": "ab330c11-7de0-4138-88a3-19fd61b1024c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "29a2c658-9019-478c-a4d6-78e24af8e20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a11956-c31c-40b5-8ece-aa0417f44005",
        "cursor": {
          "ref": "2468fd38-67bc-4807-8804-fd9740c18710",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ba943f30-867a-4675-b933-c555a43e9c9d"
        },
        "item": {
          "id": "c3a11956-c31c-40b5-8ece-aa0417f44005",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fd0cffc7-f499-48a7-a4b8-e831d7d13a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92ea05e-47a1-4d48-ac63-e77269592819",
        "cursor": {
          "ref": "27d0c6b9-dc0e-4ebd-8f83-edde50a46df2",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e7d4843d-1a64-4688-b330-fac46aeafae5"
        },
        "item": {
          "id": "a92ea05e-47a1-4d48-ac63-e77269592819",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4b9fcae3-03d8-4f62-8887-f475855f86fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7603df6e-9090-49c7-8e3a-1b86714b08af",
        "cursor": {
          "ref": "b0b62471-2411-4ae4-a041-17ac4990e673",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5ceb94dd-c466-4d33-90dd-5ae70e7b5425"
        },
        "item": {
          "id": "7603df6e-9090-49c7-8e3a-1b86714b08af",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c27e08d8-6ab9-487e-9ff4-5d05070b0cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f5fb8a-8740-4714-9ad6-32bdfbbbeaee",
        "cursor": {
          "ref": "13cf89ee-5ace-45fa-82bf-eedb4d26891d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3d3c05d4-a25b-427c-acf0-ad90676dccbd"
        },
        "item": {
          "id": "88f5fb8a-8740-4714-9ad6-32bdfbbbeaee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14121656-cd93-45e1-a5fe-87cf062e868b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e654107-4407-495e-befa-e6d2a5ae78a2",
        "cursor": {
          "ref": "4b2dcafd-4bed-4b4b-b851-1bf5f4b57a81",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3a0ad695-3a9d-4639-afc1-e291dace6e81"
        },
        "item": {
          "id": "8e654107-4407-495e-befa-e6d2a5ae78a2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "852ce9bb-09d5-445f-a031-3c814137ab32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ac6972-b636-42c2-a430-ff8adb2cd8a3",
        "cursor": {
          "ref": "0d230859-531b-430a-a8c6-777b1522bfc6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d747a408-abff-4331-9d80-7ac0564a8b83"
        },
        "item": {
          "id": "d3ac6972-b636-42c2-a430-ff8adb2cd8a3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8cc850aa-1efd-463b-800f-c5e277a8e079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f367038e-16c4-4bd6-9d9e-87441ffd0f5f",
        "cursor": {
          "ref": "dc60fe74-987a-49ce-b427-4e6e39433f59",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fb7dcd7c-ed1d-45d8-904f-8cdb4f47b553"
        },
        "item": {
          "id": "f367038e-16c4-4bd6-9d9e-87441ffd0f5f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7e938ae8-92f7-45c7-be8d-ce50861414ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4592d5f-2d92-463d-b2e3-38b249293263",
        "cursor": {
          "ref": "c28cd4fb-ced9-4401-8b17-10cc9506e5cf",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d478000a-c4b1-43d4-a536-3f288467dbf7"
        },
        "item": {
          "id": "d4592d5f-2d92-463d-b2e3-38b249293263",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e5cc7bad-edd5-4b8e-9591-6a01e329675e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02fa1b4-ac47-4516-8d38-7d905910e591",
        "cursor": {
          "ref": "f36b74b9-db76-4a71-b1c5-74dd9e2d8201",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9d4b5c8c-4e0b-42a3-9507-212522c948da"
        },
        "item": {
          "id": "f02fa1b4-ac47-4516-8d38-7d905910e591",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0effd94b-00f0-428b-a874-1a8a9bd5fed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2f058e-1ffd-4cdc-a3bb-445a5b067816",
        "cursor": {
          "ref": "ca41372d-4139-4f24-b172-5ad16c52d107",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "88d02c17-274d-4858-aff8-ec025065fcd1"
        },
        "item": {
          "id": "fd2f058e-1ffd-4cdc-a3bb-445a5b067816",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "884b7a3f-6d06-432b-94db-e6b18265d8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6862610-c54a-4439-a710-c28aeb5c2097",
        "cursor": {
          "ref": "cc23c321-8e9d-4b23-9454-e9e8ec1aa800",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "44c40871-67a6-41b2-806c-06fd05e61b65"
        },
        "item": {
          "id": "b6862610-c54a-4439-a710-c28aeb5c2097",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2250fa69-69cc-4447-9229-18a7d27563b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4683bce-2d77-4896-87f1-356943cd2d03",
        "cursor": {
          "ref": "3e70cb6d-591d-4700-891d-38808cd6c524",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9f92d574-e106-484c-815b-9ff67b6c96ec"
        },
        "item": {
          "id": "f4683bce-2d77-4896-87f1-356943cd2d03",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5ea593c1-d3c7-42d6-950f-9d28e39476c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8cbb81-e3e6-4af4-a728-95dfda7b07a7",
        "cursor": {
          "ref": "b8ee0df6-4f7d-40e9-87b1-5d3d22fd1a38",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "41e08773-4626-4077-aebd-c4a29f5ad55a"
        },
        "item": {
          "id": "2d8cbb81-e3e6-4af4-a728-95dfda7b07a7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e667bf22-02a7-45e6-8162-ad8033eb9e37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac945c8-0739-4370-b876-d6807df98c26",
        "cursor": {
          "ref": "add55ef2-07af-441c-a70c-85bcf473b113",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "15824663-7be3-4d4f-a142-612dffa736c5"
        },
        "item": {
          "id": "cac945c8-0739-4370-b876-d6807df98c26",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "afd41214-d4c7-47c3-8de1-f615511444b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12e1cf5-cfb7-4afb-83fc-57a24befbf44",
        "cursor": {
          "ref": "21ff17ea-2eaa-4620-afa1-19ddb8b6a65a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "486bb42a-22db-4d86-abf6-bff2ece5746d"
        },
        "item": {
          "id": "a12e1cf5-cfb7-4afb-83fc-57a24befbf44",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3b858e59-e84e-46af-874d-49d1c7344a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ef6b6f-33a7-4fa7-9722-9fddedd68816",
        "cursor": {
          "ref": "1f5ce5f9-5c50-4c0d-ae3c-b43009840dd5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6e2257ea-647d-4452-8b5d-a5cddfff0c9a"
        },
        "item": {
          "id": "06ef6b6f-33a7-4fa7-9722-9fddedd68816",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "54100236-13fd-4c1a-929a-b9a880b20452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff26b02e-68c5-4b6d-93fb-3b1f1e2ca573",
        "cursor": {
          "ref": "6729ba87-4c3f-4f06-bf65-776e74b476e3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e1374177-5c8e-47b2-a592-32cdd4887fbe"
        },
        "item": {
          "id": "ff26b02e-68c5-4b6d-93fb-3b1f1e2ca573",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "48a22abe-27d5-4970-a127-b345379a3f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd6301f-b6b9-4752-8fa5-17a84d1f207b",
        "cursor": {
          "ref": "59020b74-71fb-4176-b4ad-f6b2e7a02748",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "77350874-e36e-40f8-8a89-60aa007f97b8"
        },
        "item": {
          "id": "bfd6301f-b6b9-4752-8fa5-17a84d1f207b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7e23b2dd-f1ba-49c2-8edb-91022960c29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aff643-c8b9-496f-bfe6-ac8d349c0e15",
        "cursor": {
          "ref": "cb305ae0-394b-4378-85db-26f719aab2e4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7e7298ab-a244-494d-8991-283b611eb883"
        },
        "item": {
          "id": "d4aff643-c8b9-496f-bfe6-ac8d349c0e15",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "49918521-c950-45f3-8b60-34c868ed045a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bac31d2-c697-4cf3-b4a4-d90a08bb644f",
        "cursor": {
          "ref": "80d3116f-1b7b-4783-9526-79e8afad4544",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d168fc7f-a38a-4e9a-92ba-d20ee445f326"
        },
        "item": {
          "id": "6bac31d2-c697-4cf3-b4a4-d90a08bb644f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "86f347a2-8182-4fbb-ac25-5faacacfc282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81200d42-a6e1-4407-abc2-0e7b62b0614d",
        "cursor": {
          "ref": "980a21a7-a812-479d-bb85-be665b4b2b4b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7f7dce9f-09a1-4718-997a-3d288483972b"
        },
        "item": {
          "id": "81200d42-a6e1-4407-abc2-0e7b62b0614d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "63aa0f0d-6bc9-41b6-8fe6-f72731f39d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ecd9ec-0435-4906-a151-095c8c32e0f3",
        "cursor": {
          "ref": "f93199ce-bbd6-48f1-90cf-16cf204486ec",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "56788b82-4f6c-44fc-b8c7-734fdf153ef4"
        },
        "item": {
          "id": "55ecd9ec-0435-4906-a151-095c8c32e0f3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a1d781dc-37d1-484c-8106-9db493f5a25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b553e020-f308-473f-8fc1-883a9852ece4",
        "cursor": {
          "ref": "9fa03073-4e41-4c24-a1db-768701cae02e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cfed482d-2575-4e7b-bc5c-1da1fe189bd4"
        },
        "item": {
          "id": "b553e020-f308-473f-8fc1-883a9852ece4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5b01274b-a570-4b96-93d8-e86369054a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5af8d4-cb18-4348-9fb8-4f0241050262",
        "cursor": {
          "ref": "582f5a8e-dce0-426d-8351-d446941060b6",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "418ab393-88f4-49d9-b26f-c26e44c9877c"
        },
        "item": {
          "id": "5a5af8d4-cb18-4348-9fb8-4f0241050262",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e9b7f857-2713-41c3-8664-77a922083676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bad742e-fa38-45d3-a9ab-b1589c48c733",
        "cursor": {
          "ref": "e5128d44-9d24-49ee-a971-3c81d7ae47f3",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ee5ea71f-45ae-402c-98fb-0f6831912292"
        },
        "item": {
          "id": "3bad742e-fa38-45d3-a9ab-b1589c48c733",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1a5b0dc9-de5c-4112-8b7c-be57b5634569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afae7f96-e5a0-4c1c-9865-a479751ccd23",
        "cursor": {
          "ref": "d794d8c2-14af-4c41-9b9a-9dd030e7483b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "769de137-d72c-4f20-a8e0-b571c1196d51"
        },
        "item": {
          "id": "afae7f96-e5a0-4c1c-9865-a479751ccd23",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "487d8254-db13-4b18-856f-d42c54668b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b0c102-bd3f-459e-92a8-df1a8c7d2b43",
        "cursor": {
          "ref": "e7cea9fa-ae03-4d19-b1fb-ab97bb673cde",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5a4ea41e-d109-45f1-9a56-ea7619ae8168"
        },
        "item": {
          "id": "38b0c102-bd3f-459e-92a8-df1a8c7d2b43",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "888000d4-18d0-477a-808a-0543b2a91cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e1cc9-b801-4d1b-a4be-b7f2651e6913",
        "cursor": {
          "ref": "9fa32835-677a-49e6-9871-64e4f087f0c9",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9acc997f-7b04-4a06-bef4-e1c9245e6a2b"
        },
        "item": {
          "id": "bc4e1cc9-b801-4d1b-a4be-b7f2651e6913",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8435056f-6276-472f-a799-90c803dcce49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339e18af-e4b8-4b0c-bfab-aa201ee34ee5",
        "cursor": {
          "ref": "25f4c1cb-ea3b-4124-9dd1-b9a2326aae3e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "376fbdfc-63d4-4353-80af-1639f4c1abd2"
        },
        "item": {
          "id": "339e18af-e4b8-4b0c-bfab-aa201ee34ee5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6aa2829a-bad3-4779-b9eb-b146d3b10cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a73d6ed-defc-43ff-b928-72296a415123",
        "cursor": {
          "ref": "b72dbb5d-b0c9-4b07-a918-1ecdafb1ebc8",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2c8b0a03-38e5-4b5d-87b6-094b22952c1c"
        },
        "item": {
          "id": "4a73d6ed-defc-43ff-b928-72296a415123",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "47dac4b0-b369-4127-99dc-edc07794eb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8250c251-f954-4c52-9a59-6f859c2dda7a",
        "cursor": {
          "ref": "66365d31-03ce-4510-9105-574b359bde3f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d570fae5-6767-4c2a-b751-a832540148d5"
        },
        "item": {
          "id": "8250c251-f954-4c52-9a59-6f859c2dda7a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d625a674-50f9-446a-9c69-e50846875caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdf53b3-2b6e-434d-ac98-b22eaea068ff",
        "cursor": {
          "ref": "0e344a6d-a2e6-44ba-8df9-b988c321855a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a97aafec-c3a8-46d7-a75c-ef6bdefebdad"
        },
        "item": {
          "id": "9bdf53b3-2b6e-434d-ac98-b22eaea068ff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dd7d898a-d362-49ee-89ab-df50b74950e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a816cd2-aef9-4d4e-9196-5c2e8366ae08",
        "cursor": {
          "ref": "c6992f3b-69db-4b3f-bac1-a28b7723ab42",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2cc0f0c1-7cf9-49dd-bd2a-400ac21e039d"
        },
        "item": {
          "id": "4a816cd2-aef9-4d4e-9196-5c2e8366ae08",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "722a7173-0652-4c2a-bf4c-a56f1c825b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1619ac8-1460-4ffc-8b3f-383fec8d3ae2",
        "cursor": {
          "ref": "e51e4a49-1337-4244-bc2a-ca6d3c264b93",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6ea26f6b-ef78-46f4-92ff-9961d97129e7"
        },
        "item": {
          "id": "e1619ac8-1460-4ffc-8b3f-383fec8d3ae2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a2557023-2e77-4644-a2e0-4b5090e1fb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32fe8f9-d499-4ba6-b959-1983da994c02",
        "cursor": {
          "ref": "f6a5d0ea-5c04-45c4-b390-5c7c186f26b8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c93539b-c71c-41a4-8dae-b56894cfe0f7"
        },
        "item": {
          "id": "f32fe8f9-d499-4ba6-b959-1983da994c02",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ad33c42b-3b46-486f-8cda-8faf9c0fa9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e37479-7ee4-413c-bc24-de3e3842ffe5",
        "cursor": {
          "ref": "efbe8477-198d-4b5e-be42-ee56d69ca1fe",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d5611f03-1cae-43f6-a8a7-be07d8c0a54b"
        },
        "item": {
          "id": "85e37479-7ee4-413c-bc24-de3e3842ffe5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eb40014b-3a3f-46f6-81b7-a493fd84292d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c930b6c-1715-444b-836b-01bb5fb48508",
        "cursor": {
          "ref": "561aeb83-2191-4642-967a-5f20f005e31b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ee6a9844-f09b-4acb-96ce-f6557345ef53"
        },
        "item": {
          "id": "3c930b6c-1715-444b-836b-01bb5fb48508",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4a42e6a4-5883-4aed-8819-1a5d86dc3d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9cd548-b9e9-4eb9-84b0-ffdf23854f28",
        "cursor": {
          "ref": "e902698e-530f-4bab-a065-491e43d7b367",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "55926b24-7629-4981-9133-a1ff106c9299"
        },
        "item": {
          "id": "ef9cd548-b9e9-4eb9-84b0-ffdf23854f28",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b417aaf8-9406-46de-bfce-698d610b6b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1a90d1-cc27-4035-90fc-b1b506124182",
        "cursor": {
          "ref": "8be4c8dc-52cb-4458-b445-af214c9c1d11",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "455cfe90-2434-44cf-a600-4a13e209216c"
        },
        "item": {
          "id": "9b1a90d1-cc27-4035-90fc-b1b506124182",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b9b19c49-1771-4b1c-9ed9-dc214718a73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65f45de-2ea0-42db-b732-8ffb7b1aacc7",
        "cursor": {
          "ref": "3e5f75ff-f6f9-41a1-9e3e-3b8125fcb3c7",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2061839f-1ea0-435b-8b96-0e9079af61b2"
        },
        "item": {
          "id": "e65f45de-2ea0-42db-b732-8ffb7b1aacc7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8177d22f-a8dd-47f8-95e4-b272191c44e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a335e6c8-d957-4518-9b1b-288117ecdc25",
        "cursor": {
          "ref": "86e99ad3-68a8-452c-84c6-bb1cf759fe6a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f7ce6792-a0af-4a66-80fe-d3626d2818a0"
        },
        "item": {
          "id": "a335e6c8-d957-4518-9b1b-288117ecdc25",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a899a566-4f6f-4445-a208-c4afc365b8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1d2c1c-cd4d-482b-bc65-46b4febd68ee",
        "cursor": {
          "ref": "f1414f24-1983-49f3-b950-8013969af80f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "73ae93ff-acdd-4ed7-8228-017443abf804"
        },
        "item": {
          "id": "6a1d2c1c-cd4d-482b-bc65-46b4febd68ee",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "63e8c177-1bb3-4c04-a7f3-890788034798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97753172-a178-453e-820c-3147a799f7f2",
        "cursor": {
          "ref": "eecdec4a-351f-4269-86cd-26ab9853214d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "da3b0826-622b-4e7a-aeb8-8796c0fa68ed"
        },
        "item": {
          "id": "97753172-a178-453e-820c-3147a799f7f2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8199489d-fa87-495f-9ffc-3027a5ffb347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de61b994-474a-4007-bd6e-c86a8892a482",
        "cursor": {
          "ref": "fa4f4563-453a-4631-b146-ed1940d3c7bf",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a5fc48d0-7a24-4639-9bfd-5a10d6a7b565"
        },
        "item": {
          "id": "de61b994-474a-4007-bd6e-c86a8892a482",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "30dd6274-58eb-470f-b999-5fb886c755da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c78ac51-49fb-43dd-8689-aa43edbb3bb9",
        "cursor": {
          "ref": "c930657d-ca5d-4b4e-aaa1-898c5c160fea",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "97a964b1-5aaf-4c2a-818c-c32dc1933eb5"
        },
        "item": {
          "id": "7c78ac51-49fb-43dd-8689-aa43edbb3bb9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c2ea2920-aff3-4c8d-b803-da92c029e7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416d89a3-5177-457b-82d7-edd974e122a8",
        "cursor": {
          "ref": "246259cf-d6fe-4bb9-951f-337da68cf6b0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "63f1a938-fd90-4847-af58-31a97c2bfaf3"
        },
        "item": {
          "id": "416d89a3-5177-457b-82d7-edd974e122a8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "30473f6e-fb79-4580-9c5c-6deed07a8920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2805640a-b5f8-4bd4-9b5f-844c4092a70c",
        "cursor": {
          "ref": "8d7c5f1a-f04b-4058-9260-c30b4d5f1ec4",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a115dc50-c1c6-449e-bf4e-9a2d54358190"
        },
        "item": {
          "id": "2805640a-b5f8-4bd4-9b5f-844c4092a70c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1cca559c-9e6f-4b96-866d-0bf235965e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d16d378-19c6-4919-af87-6abc5795707a",
        "cursor": {
          "ref": "3bbac465-8c61-473c-8917-a757e0d0b580",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "143afee4-d053-48c3-9472-f52d2cd36295"
        },
        "item": {
          "id": "0d16d378-19c6-4919-af87-6abc5795707a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "53536115-992e-49b9-bccb-1897caaed917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacef469-5661-419d-b725-9d0fd3d3cdc9",
        "cursor": {
          "ref": "28baa2df-574d-4514-9049-1cb072bd644e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b871347a-3327-41d8-911a-521b16e5b5ca"
        },
        "item": {
          "id": "eacef469-5661-419d-b725-9d0fd3d3cdc9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5c12f6ea-f3da-473a-8657-a8bfb8b92088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918181d5-bfa6-4ba8-a9d1-bca4bfeac321",
        "cursor": {
          "ref": "e536c1bf-8cc6-4c64-b706-44003f803291",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "77e6cd41-819a-47cf-bf54-7d9b8ed893ac"
        },
        "item": {
          "id": "918181d5-bfa6-4ba8-a9d1-bca4bfeac321",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "96dc1b58-0302-4e53-8dbd-772bb7275155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d688a77-1e6d-4575-b540-afbf5c8b0e23",
        "cursor": {
          "ref": "3067c43b-a356-41bd-8e51-3e0d2aeaceb7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aaaecc52-1377-48bf-bba9-7fde7ce61145"
        },
        "item": {
          "id": "0d688a77-1e6d-4575-b540-afbf5c8b0e23",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f04df6d6-71f4-42ca-9d22-c63ee64b0c48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e3aeaa-55e4-48cd-a849-1a018099a400",
        "cursor": {
          "ref": "85c2491e-866f-495c-8d36-117d6d6e3445",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "39d62dae-0f3f-4048-abf2-ea86d21167d8"
        },
        "item": {
          "id": "86e3aeaa-55e4-48cd-a849-1a018099a400",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1809f4a4-40d4-4a82-957a-fe3439e7edd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f72983-97d3-407a-a735-ea9c7ed5a636",
        "cursor": {
          "ref": "2c4eb003-6e17-403f-a48e-0068d87321eb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "09d5e3ef-7218-4a6d-a987-710c7dcf91a7"
        },
        "item": {
          "id": "d1f72983-97d3-407a-a735-ea9c7ed5a636",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "be6b1caf-d49e-46fd-9c4b-d0f6f38140db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32edf804-209e-49ab-af63-2f499a68f757",
        "cursor": {
          "ref": "7efa874c-a956-4c4c-94ec-0046085e5654",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fef62266-508b-4e3c-981c-6fe8008305c7"
        },
        "item": {
          "id": "32edf804-209e-49ab-af63-2f499a68f757",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "aaf676bd-2e3f-4524-8211-54189551f2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dca4123-cf55-4e2a-9627-8197c5fa03b9",
        "cursor": {
          "ref": "811db307-0e47-4d41-8624-96851d3cf181",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "30fa4514-bb1f-48be-b524-6b787aaaca38"
        },
        "item": {
          "id": "3dca4123-cf55-4e2a-9627-8197c5fa03b9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8c78cdcc-6cba-41a3-98cf-dddf35645484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c83f0c1-960c-480b-a88c-39c116c85a61",
        "cursor": {
          "ref": "658f3d33-6858-46a6-adb5-f672f0b75f8d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e4f31da4-bece-45e5-b7ba-a0c379aa91ce"
        },
        "item": {
          "id": "3c83f0c1-960c-480b-a88c-39c116c85a61",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "06f263aa-676f-49f7-9238-3688e0a3de2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07c9b39-407b-4197-bc10-291246ed866d",
        "cursor": {
          "ref": "43e7f03c-f9b9-4fcb-a866-ae95f267b0af",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "31ce9058-b1f4-4d71-997b-87bb9c9dcdcf"
        },
        "item": {
          "id": "b07c9b39-407b-4197-bc10-291246ed866d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4558bd11-5105-4f5d-bfbf-df38c2e29795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7b8025-ba32-4dba-9866-511f45f4cd46",
        "cursor": {
          "ref": "9f1be8ad-3af6-444f-910f-262e1fc86808",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4f24d6e8-0135-46a2-b1e5-cb7f4bb95b53"
        },
        "item": {
          "id": "7a7b8025-ba32-4dba-9866-511f45f4cd46",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e45b8daf-620c-4fb6-a393-35e169e40153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88204e6-0d9b-4220-8a54-1f3e63408e08",
        "cursor": {
          "ref": "19939250-4f1a-4fe7-b09d-97cdc35b72c6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b79db68a-28b5-4193-89c9-e95539cf3131"
        },
        "item": {
          "id": "a88204e6-0d9b-4220-8a54-1f3e63408e08",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1f5337e1-947f-40bf-95ff-738c4194209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb28c207-9276-43c0-ad62-6502da1561db",
        "cursor": {
          "ref": "0bd57d9c-7906-484d-bfd1-569c154db0d3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "97c41137-b1e4-4916-80da-6bb6dad278f9"
        },
        "item": {
          "id": "cb28c207-9276-43c0-ad62-6502da1561db",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8635d611-9595-4352-a8cf-59ddfdab2c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee44e638-1b2e-411f-be7f-3de7b3b811ec",
        "cursor": {
          "ref": "f581af12-0f3b-4ed6-852a-934b9b6d2ea6",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1f475f49-734d-4435-bcc0-f6994007c0d1"
        },
        "item": {
          "id": "ee44e638-1b2e-411f-be7f-3de7b3b811ec",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "92536a65-b1e5-4f0d-984c-3df128be0870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4d10ce-af4a-4d66-9d8a-d2c175cf1917",
        "cursor": {
          "ref": "67836116-340b-46b8-9ead-998b8636f559",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4cb74b6c-437b-49df-ba30-edd7e6aedfe3"
        },
        "item": {
          "id": "4b4d10ce-af4a-4d66-9d8a-d2c175cf1917",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a553743d-4c91-4de7-90e5-e54ec813b308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4481f2a3-1273-4943-abb6-8db6fcb47f3a",
        "cursor": {
          "ref": "73b00d09-7d3e-4481-800d-0195165529af",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5124a902-58b6-41bb-84d5-8f42eef66d2a"
        },
        "item": {
          "id": "4481f2a3-1273-4943-abb6-8db6fcb47f3a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "48cfd261-c50f-423f-9b69-f7e1776b893f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dcca6d-1e40-46ea-8363-0597f441e1b8",
        "cursor": {
          "ref": "5fe399cd-ba0b-4759-bd4d-4377d42fe21e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "78cc94fd-b16b-4df0-ac4c-83c32355560a"
        },
        "item": {
          "id": "b0dcca6d-1e40-46ea-8363-0597f441e1b8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "21883329-a226-440d-a824-2fdef3523da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459ea9cd-45a0-49e2-a89a-c19bad015a50",
        "cursor": {
          "ref": "1ad98402-704a-4960-b9ef-085a0b80f96a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "24854e7b-d580-474e-ad7a-2676d027c6db"
        },
        "item": {
          "id": "459ea9cd-45a0-49e2-a89a-c19bad015a50",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9332922b-2b8a-4045-84c9-cca4e2115fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2453d19-50e3-4365-be5b-5fcc244dba23",
        "cursor": {
          "ref": "5c39877a-933b-4044-b31a-2bdf87d0ef55",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1ad9ca00-c7e1-4641-b77c-12b4ca2f2405"
        },
        "item": {
          "id": "a2453d19-50e3-4365-be5b-5fcc244dba23",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8a376a60-116e-4e63-8598-1235dad30a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e791813-be99-43c9-8d9b-8b369f736a6a",
        "cursor": {
          "ref": "5d8f8e8f-3270-4d77-810a-c25444f92c3e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0216dc98-5ec2-4b99-ab65-b10b94391963"
        },
        "item": {
          "id": "5e791813-be99-43c9-8d9b-8b369f736a6a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c5d9e9ae-929d-4fff-bb6d-faf0e635ea94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15082439-0b6a-42be-8780-8aff7206e472",
        "cursor": {
          "ref": "8b00cb7d-2ecf-4d9a-9bc8-ac0978182637",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "67ce6346-5cac-4e56-bbf1-443b21354560"
        },
        "item": {
          "id": "15082439-0b6a-42be-8780-8aff7206e472",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cee56861-9174-40d4-b39c-f77b5df6e6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d8334e-ff8b-4700-806e-aa55300caf09",
        "cursor": {
          "ref": "2558f3ba-beec-4ee5-84fd-29e75bd48547",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b98f7b88-3198-47bb-81d7-a16d51652eb5"
        },
        "item": {
          "id": "c9d8334e-ff8b-4700-806e-aa55300caf09",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dd006d8b-fff1-4522-8a3e-5bea2349315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352af983-d307-4a0a-b943-98cf023369c7",
        "cursor": {
          "ref": "6774a5d5-363b-4235-aae0-dd960f7ebb9c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "191cf530-f739-4b4a-a65d-dfd711218411"
        },
        "item": {
          "id": "352af983-d307-4a0a-b943-98cf023369c7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9e1cc909-2266-4e18-be4c-098cdc0705c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaa223f-7e78-45d0-89e6-bb7b19c433e7",
        "cursor": {
          "ref": "27505c1a-fc35-41a7-98a8-25dfb030acfc",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6bf175d0-370b-4188-a35b-41f7fa89a139"
        },
        "item": {
          "id": "5eaa223f-7e78-45d0-89e6-bb7b19c433e7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d9e33cf0-78f0-4ad3-9819-659cdc7981a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ff7737-9e6b-4380-878a-b7fb81c72d04",
        "cursor": {
          "ref": "a6201093-2b5f-47e4-a04d-ec52cb8e3871",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4db89693-bb80-4632-a512-16568d429f46"
        },
        "item": {
          "id": "47ff7737-9e6b-4380-878a-b7fb81c72d04",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "51de4fe6-8ff5-44df-a0a8-7452b6d4e7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d42c065-17a1-46f3-9566-31b8ddd52e02",
        "cursor": {
          "ref": "13788207-b4b8-4e6f-a6ae-1fefdb8af90c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cc4403d3-c56f-4058-948b-0d3b553959f2"
        },
        "item": {
          "id": "6d42c065-17a1-46f3-9566-31b8ddd52e02",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6408e841-8965-4149-8f57-26d5b9e9d99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8509950a-9b57-4ff6-94f1-16c0b4616f22",
        "cursor": {
          "ref": "a3166302-ec2a-43b4-97e0-8d9caa86bfce",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "59cd4936-843f-4e61-9196-c986f5908ce9"
        },
        "item": {
          "id": "8509950a-9b57-4ff6-94f1-16c0b4616f22",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0c7554f4-53c5-457a-8893-3ec2a3f1022b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991852a4-8fec-42e7-9120-66d81a3bc551",
        "cursor": {
          "ref": "605125ae-5719-4e14-aefb-9ae0fc3e5453",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6445de59-3549-48ee-92a8-5c1a28f53b97"
        },
        "item": {
          "id": "991852a4-8fec-42e7-9120-66d81a3bc551",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b4f982cf-303f-4c72-a00c-1f85e29f5d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4debbe8-b6b2-4276-9591-6e71a29b5ee3",
        "cursor": {
          "ref": "0b3af113-43b0-4f91-a76d-4519642913d6",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "25e0aec0-f135-4bb5-8a73-9ba01e3550be"
        },
        "item": {
          "id": "d4debbe8-b6b2-4276-9591-6e71a29b5ee3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "daae5083-0ec2-4176-b8d0-b49e276567a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcf9f30-a099-4b21-a49c-2c2c29add4da",
        "cursor": {
          "ref": "8707b421-5b85-46ea-aa56-858999b71ace",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8c088c57-21df-43cd-9de0-95687810e63a"
        },
        "item": {
          "id": "5fcf9f30-a099-4b21-a49c-2c2c29add4da",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1673e590-c58b-4df9-8657-96860a0c6f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72efc6d0-4845-481d-8dd4-547aaaf6f30c",
        "cursor": {
          "ref": "81ed1bf7-8492-46c6-8588-3b6efa12efc1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "00869bea-3207-4a61-a32c-9c409ac3f5c2"
        },
        "item": {
          "id": "72efc6d0-4845-481d-8dd4-547aaaf6f30c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2c402718-c2cf-46ce-8323-e658fc743122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151ce831-5f28-49c1-8fe1-c9fdf978002c",
        "cursor": {
          "ref": "87e9a5d1-e32f-46e0-8ec4-576b181ee2c0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "30cdc7a2-4531-4d30-93c0-7d7c2fe0d156"
        },
        "item": {
          "id": "151ce831-5f28-49c1-8fe1-c9fdf978002c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a9c2fe2-60af-4b42-b0ef-4e0850c152fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f423252-7b14-4213-81ec-98080bbb2f0f",
        "cursor": {
          "ref": "b0f7f3cd-5ce1-40af-b937-3746df582024",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "aad8eef6-47bc-4a50-8bdc-1ce6db0003ae"
        },
        "item": {
          "id": "4f423252-7b14-4213-81ec-98080bbb2f0f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3315fb4a-e61b-4da9-b1e3-65b02503d57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a8299d-d81c-4d16-977d-2e3bc4d43807",
        "cursor": {
          "ref": "a2a0e7a6-f691-42a8-b918-0463061b57f1",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "697313d1-cbc6-4125-85bc-74a331702cf9"
        },
        "item": {
          "id": "46a8299d-d81c-4d16-977d-2e3bc4d43807",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e943844e-53ed-4b69-857e-a20ed2a7e165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32497bc-bfdd-48ac-b570-691d51fa45ba",
        "cursor": {
          "ref": "76067555-3f87-4948-94b9-9a9206c0250b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d9b31516-b559-4e8d-b658-42ef2fa8d793"
        },
        "item": {
          "id": "d32497bc-bfdd-48ac-b570-691d51fa45ba",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ded3e4c7-5cf6-49b9-98f2-fb85b8bdb776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf321de7-f708-45b0-96f6-e920291f3f99",
        "cursor": {
          "ref": "44e46aef-3918-4c3f-a8a9-e15ab6b08fae",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "90e527ca-9ffa-44d8-a186-32fb1655023a"
        },
        "item": {
          "id": "cf321de7-f708-45b0-96f6-e920291f3f99",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a76ae209-b1c7-4bae-a367-43e65e4a5789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b4cbaf-df3a-4556-ae5b-e90f3165f435",
        "cursor": {
          "ref": "b3d0d567-22ee-4689-a277-81dd89b8d436",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a9972427-5c34-44b0-83e1-3a5162640ed3"
        },
        "item": {
          "id": "73b4cbaf-df3a-4556-ae5b-e90f3165f435",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c0ae2c5d-3238-4309-97a3-8a91d4ff5139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f067308-fa3b-49d3-90a9-da1906ee3ae5",
        "cursor": {
          "ref": "e8d5a5ca-8f8d-4e14-a418-2d003937bc97",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e23fa415-4ebf-4edf-8961-e9a2c1379302"
        },
        "item": {
          "id": "6f067308-fa3b-49d3-90a9-da1906ee3ae5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e4a891d9-d055-4032-beb1-92e15f74ac02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b877fd3b-bac8-436e-972d-144ef4a856cf",
        "cursor": {
          "ref": "647cdd08-aef1-47e3-b431-1e712d9de05b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c69ba877-7852-404b-9f25-300ef595f8f7"
        },
        "item": {
          "id": "b877fd3b-bac8-436e-972d-144ef4a856cf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "96183d90-92db-4e7f-8a6f-fcaf6f6e3f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c776c044-6c4f-41f3-8ecd-7661535e36ee",
        "cursor": {
          "ref": "5fbe7748-628d-464a-892c-9f7df89bd39d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "99db055d-b309-4ef7-8f3c-5fd008f288a6"
        },
        "item": {
          "id": "c776c044-6c4f-41f3-8ecd-7661535e36ee",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "36e8dc6b-548d-4cf6-bb20-52e2dd3ac144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c9e3ea-408c-4f68-b6e1-35c6600f2f9b",
        "cursor": {
          "ref": "7c2e22af-f077-483c-9ec4-b5bf737ee51e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "46795692-93f1-4a04-9d53-d3b713df6158"
        },
        "item": {
          "id": "d8c9e3ea-408c-4f68-b6e1-35c6600f2f9b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b2506a9f-a0a3-4816-addc-1b7c941af45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05de1ae6-9bdf-40c5-a57d-7eeade22a9ad",
        "cursor": {
          "ref": "e96bd384-d47e-4346-aebf-7511ba4d7bce",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8a790a93-2bb8-4967-9930-222b660c6edb"
        },
        "item": {
          "id": "05de1ae6-9bdf-40c5-a57d-7eeade22a9ad",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "01f0a699-fe18-461d-af00-51a2861ffa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e3b200-8533-499e-8e09-da7e30a6f19b",
        "cursor": {
          "ref": "35c54713-738f-4856-96ae-d9ba3e5e91e0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "849c59eb-362c-4e09-901b-592f36c15f3c"
        },
        "item": {
          "id": "40e3b200-8533-499e-8e09-da7e30a6f19b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e95f4eac-6f5b-44d4-b822-3a99113c952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fa945f-5755-4434-aa2d-d38e936344e2",
        "cursor": {
          "ref": "14feb813-cf02-4176-9b7f-e664cd097902",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "974601e5-9967-4861-85a3-4e3ef6e61f00"
        },
        "item": {
          "id": "a0fa945f-5755-4434-aa2d-d38e936344e2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3a13b434-0065-4f56-a7ae-fe409b94a899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f649b091-8b0d-4d80-ae76-c51826fae86a",
        "cursor": {
          "ref": "3deb2d67-cfd7-458b-8a4d-df25be68d6e0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5a1becbf-1a7e-4682-8f14-965807f98f33"
        },
        "item": {
          "id": "f649b091-8b0d-4d80-ae76-c51826fae86a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b5a21128-f22f-421e-8b16-ac5e05f58943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee857868-d82d-497a-abe8-2b0eeac4a70b",
        "cursor": {
          "ref": "d102b307-54ae-452a-802f-09da748967d0",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3fb29409-b2b0-484d-b95f-9a104dae23bc"
        },
        "item": {
          "id": "ee857868-d82d-497a-abe8-2b0eeac4a70b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e9b57c57-2185-4472-94d1-239aa31421bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6913956d-637b-4420-b9b7-8e7e30e1872f",
        "cursor": {
          "ref": "c79b2f2f-f0af-407f-bc4e-5d2662208517",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e1165651-3c39-46ae-b795-f807ff4d846f"
        },
        "item": {
          "id": "6913956d-637b-4420-b9b7-8e7e30e1872f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "12c92173-e8fa-4d41-a241-61a3604ad421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb3ff70-2155-4628-b615-ae258175f150",
        "cursor": {
          "ref": "fd10553a-7db8-4ea4-8093-a70e199ecf67",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e51bcdfb-d479-4abb-8604-a07299a8cabf"
        },
        "item": {
          "id": "bbb3ff70-2155-4628-b615-ae258175f150",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2240421c-dbf7-4850-8016-2bde933ddfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358f4f2e-9836-4434-b67e-5f65fdd20266",
        "cursor": {
          "ref": "1faa4d6e-f8d4-48d4-a1f1-d9646691c93f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c589558d-af1e-4935-8226-5d71e6df72e3"
        },
        "item": {
          "id": "358f4f2e-9836-4434-b67e-5f65fdd20266",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fb4ff88d-b6ab-4484-b3f4-c20b38403e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3c2d4d-59b9-4ab8-991f-e4c8225d9d7c",
        "cursor": {
          "ref": "67a316b4-2571-4f14-93f7-e48f3bc231cc",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c671fde0-6305-44b2-852b-7e9cf0fb6dbc"
        },
        "item": {
          "id": "5e3c2d4d-59b9-4ab8-991f-e4c8225d9d7c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aab7d1fe-c33e-4a51-a220-074f66341bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272fd3ec-3d84-4940-9284-fa4bac1f43b1",
        "cursor": {
          "ref": "3ac6be2d-fd82-4d67-818e-8feae1e9dfc6",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4c7542b6-c395-4525-883d-c239e05ecfb2"
        },
        "item": {
          "id": "272fd3ec-3d84-4940-9284-fa4bac1f43b1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ae7bcee3-4fa7-445b-9fd7-3d85561c276c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838fd1dd-26fe-417a-85bd-8c9f7e6fc20a",
        "cursor": {
          "ref": "6375d9f9-c043-414c-a197-fc55a4b25628",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f4b1899e-91c0-4ecf-9f60-32bdd78c75ae"
        },
        "item": {
          "id": "838fd1dd-26fe-417a-85bd-8c9f7e6fc20a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "57942b23-6b3e-4596-a558-1679d5c12783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7ffd9e-ea64-456d-8027-1cde0d60eff7",
        "cursor": {
          "ref": "b106cb80-e850-4a9a-be36-df9cddc7d016",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5c193a59-e5ca-4a4f-8937-e03039ae4a00"
        },
        "item": {
          "id": "de7ffd9e-ea64-456d-8027-1cde0d60eff7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ab4c4071-0914-40c5-bcd3-74226b07d437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4291590-55d2-430e-9aca-b1cb31652fab",
        "cursor": {
          "ref": "1ffc6383-0910-465d-b393-c47634b0c494",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c9aedbba-a658-4c13-9024-d9ae61a32361"
        },
        "item": {
          "id": "c4291590-55d2-430e-9aca-b1cb31652fab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "26f7d8a2-2f66-48de-9a8b-c69b3639f197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057fc833-506f-404c-9224-55afb4a0e894",
        "cursor": {
          "ref": "2735fa24-42ce-4032-85f0-ae3c5319b3b1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b2e19c24-ad3d-48d5-bf17-71233139cb2d"
        },
        "item": {
          "id": "057fc833-506f-404c-9224-55afb4a0e894",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cfbadd0d-4001-4b31-b93e-8b7f73664517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8052277a-0a23-4ec4-bbd9-2880059407cd",
        "cursor": {
          "ref": "1f5188d7-3430-445d-826d-4b699cd791a0",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "24093153-8882-4a8a-822a-abf50abbb264"
        },
        "item": {
          "id": "8052277a-0a23-4ec4-bbd9-2880059407cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4553c3b3-c985-49f7-9466-acb696cc4a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9206fcfb-4cba-4175-abdb-baacecec808d",
        "cursor": {
          "ref": "efc73b8b-6c85-4194-aedb-1bc25b81e5a9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cbcf4a44-d910-44ce-a980-e0150c999345"
        },
        "item": {
          "id": "9206fcfb-4cba-4175-abdb-baacecec808d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b38ab114-9ab5-459b-955c-7ea99bd0c669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce7756c-98de-44f9-83e8-71a1e1adc467",
        "cursor": {
          "ref": "700bcde0-612c-49ab-a516-f06f8aef8e1e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5e6c9fa2-8154-4114-8068-5afbfadf3877"
        },
        "item": {
          "id": "dce7756c-98de-44f9-83e8-71a1e1adc467",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a29e4bb0-c3fb-434b-8e5e-6b6813250dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719581d1-fe52-4eac-a46b-e809e058b37e",
        "cursor": {
          "ref": "487d1df7-1595-4733-8e7b-2363f67c1a42",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "17b163da-afb5-4326-a78f-278a2d45e2fa"
        },
        "item": {
          "id": "719581d1-fe52-4eac-a46b-e809e058b37e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "59e656d1-436d-482f-92f2-0e4e9be36ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df7e264-9bc2-4eeb-bf2f-e1b5e813371e",
        "cursor": {
          "ref": "9b247657-ed3e-4d9c-9636-ac3651fad90b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a11c69db-c84a-4b85-a0ff-b3ae387fb08d"
        },
        "item": {
          "id": "5df7e264-9bc2-4eeb-bf2f-e1b5e813371e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fac233f7-785b-497d-862c-e1ef328e5417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5c193e-de27-42a8-bd0f-8f4d6523d597",
        "cursor": {
          "ref": "25c2f6a4-8d52-464a-8404-34295edac62c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f169cf3f-cdac-4058-b2fa-37f3709c57f3"
        },
        "item": {
          "id": "6c5c193e-de27-42a8-bd0f-8f4d6523d597",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8c853baf-7ee5-4785-bd7a-78b8003ca429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec86ca5-20b2-4458-88f0-9288a1e78a81",
        "cursor": {
          "ref": "bd6da5c4-6ac6-4056-8eab-4957c06fca53",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "59c44295-db28-4f24-9c23-ef5c82a09a00"
        },
        "item": {
          "id": "3ec86ca5-20b2-4458-88f0-9288a1e78a81",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d558afde-8022-4dab-be34-b4e7c9b3a8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d326750c-1b79-4e15-8845-070de2c4ed92",
        "cursor": {
          "ref": "582d80fd-4e85-4f15-8d78-1f04910f89b3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f75ca07e-836f-4a49-81c6-61397ef5eb72"
        },
        "item": {
          "id": "d326750c-1b79-4e15-8845-070de2c4ed92",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "06d7e340-d657-478e-971c-f15ef1a4ce50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b76f1c-30c3-4ea0-9796-522abc12c1e8",
        "cursor": {
          "ref": "99becf37-2c69-4070-a2ef-201558b8f641",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a603e478-2f5a-42c1-8e25-968fcbea4963"
        },
        "item": {
          "id": "d4b76f1c-30c3-4ea0-9796-522abc12c1e8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0d9fef3f-60ce-4991-8b7a-e19d71774dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5836a083-3d6f-4f5b-801f-71afc7b81eed",
        "cursor": {
          "ref": "98bb9f22-7cb3-44fe-9a3e-91ef579805e6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "26860bc3-ae67-48bf-9fe6-3673ca2b8eee"
        },
        "item": {
          "id": "5836a083-3d6f-4f5b-801f-71afc7b81eed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b33dfe51-24e8-4e31-aa3a-f1825b046887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6769ef0d-0e01-40c1-a787-b001ced2b385",
        "cursor": {
          "ref": "b3470af5-ebb7-41b9-bc9f-4518f4739ec8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f5606b95-0b48-4058-a66a-c0d1f974169c"
        },
        "item": {
          "id": "6769ef0d-0e01-40c1-a787-b001ced2b385",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1083f645-161f-4595-9115-ea831554bfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e719fe-cf65-49c7-a4bc-36447a9ec7fa",
        "cursor": {
          "ref": "b7af485a-4652-4615-b726-36bb400e5d21",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dba4a0a0-c2bf-49a4-91e7-5973d8f91486"
        },
        "item": {
          "id": "38e719fe-cf65-49c7-a4bc-36447a9ec7fa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2378a692-e055-4265-b2ac-e88ec29edb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa3c4cf-01b4-4dba-8700-245af3140a4b",
        "cursor": {
          "ref": "467a95f4-2f53-4756-a97d-b55666851932",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f9160992-71c1-48f3-b659-54da7e86c4bf"
        },
        "item": {
          "id": "daa3c4cf-01b4-4dba-8700-245af3140a4b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5106bccc-7215-4b4b-b6da-87b5f38e7059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3bfbfe-6427-486a-b064-d0b79e8a8247",
        "cursor": {
          "ref": "6ce4e60e-3a5e-428a-9789-185e5796c1e4",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7e110ae1-6218-4680-8b8f-f384d725071d"
        },
        "item": {
          "id": "8d3bfbfe-6427-486a-b064-d0b79e8a8247",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a033ac4b-bbc2-497e-9e4a-028c411f635a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7690311a-3bb6-48a9-a030-5af5d5da46cc",
        "cursor": {
          "ref": "b3bab2d0-ab69-4e02-a0af-5f01e2277a20",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a58e9185-1868-4275-a2c1-62eb5dd4afbd"
        },
        "item": {
          "id": "7690311a-3bb6-48a9-a030-5af5d5da46cc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4d228e05-7a9b-4351-bdc2-476e059bb950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215891f5-d5d1-4f9c-91c8-598034700ea2",
        "cursor": {
          "ref": "00ad15e5-b618-46d6-b337-851e762bf885",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8e84fd7a-a32f-4192-b2a4-96d74fd48def"
        },
        "item": {
          "id": "215891f5-d5d1-4f9c-91c8-598034700ea2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d2694e3a-fdad-4b0d-aa63-928bd1d061e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeba205-1731-415b-b60b-01525bca112b",
        "cursor": {
          "ref": "62ea4bde-680e-4c95-bcf4-51ddd922e4e1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7e0730c7-145f-480a-b04c-b1c2308ae058"
        },
        "item": {
          "id": "4eeba205-1731-415b-b60b-01525bca112b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6dad8029-9b7d-4ff1-8573-4d418a48cb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c808ef-6f8a-4319-98df-9594604fdbf2",
        "cursor": {
          "ref": "410b52d4-1a4e-41f6-90cc-c20bbd45e524",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7680c737-3eb0-47d4-9597-9a74d71c0cf3"
        },
        "item": {
          "id": "43c808ef-6f8a-4319-98df-9594604fdbf2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c269b886-c4d5-4f52-b8fb-c00a7774e327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6668088-ba36-406a-9d52-ce66fc70fa27",
        "cursor": {
          "ref": "eb861830-6438-4f91-8251-0b105f18ad9d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "69ab017c-a795-40cd-bfef-25f96d9a5cc3"
        },
        "item": {
          "id": "c6668088-ba36-406a-9d52-ce66fc70fa27",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8ca19380-80ba-465b-985b-ce25f4bbea1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dc8ac8-ffe0-4ec0-b484-1b491f2225e0",
        "cursor": {
          "ref": "d93c8857-e765-42d8-abcd-a60d07b8f87b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d77f9754-827d-4538-a83e-4adb31d1be2e"
        },
        "item": {
          "id": "99dc8ac8-ffe0-4ec0-b484-1b491f2225e0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dd13aabe-ee96-41dc-ba3c-35c23329cbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7014aa69-43d8-4a9a-b70d-256fac50f828",
        "cursor": {
          "ref": "3a1b8336-7fa1-4f40-8f67-d043933fd832",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c4b9f92c-6826-4ef1-9ef3-a5a5ef58d759"
        },
        "item": {
          "id": "7014aa69-43d8-4a9a-b70d-256fac50f828",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0be4c14c-7c33-49e1-848c-f2c0885892b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414d9509-d382-4f3e-9553-99b92659c96c",
        "cursor": {
          "ref": "86a6d078-6b45-42e9-bc2f-86a35a62d3ba",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "586c45b7-f401-4d31-9918-7bc30912572b"
        },
        "item": {
          "id": "414d9509-d382-4f3e-9553-99b92659c96c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "79fbccc9-ea72-4d2c-b709-6fb7c31021f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5232101-f597-49f1-bec6-a8faad828961",
        "cursor": {
          "ref": "1c5cc208-36d0-4330-a80c-dae439745130",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5d03de27-c5a6-4e8d-9f38-f01af4cbf9a6"
        },
        "item": {
          "id": "f5232101-f597-49f1-bec6-a8faad828961",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "93b2ac23-9426-49c3-b57f-f86927ee2a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e103cab-f144-498f-abda-bce52b5327fa",
        "cursor": {
          "ref": "c536697e-ce27-463c-97d7-e7cfd6835fa3",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "57709364-f4e2-414a-82bc-6e6298f036f9"
        },
        "item": {
          "id": "1e103cab-f144-498f-abda-bce52b5327fa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9ee1594a-5323-4432-a8f9-9c00cd67b094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97167305-fa1e-48f3-9217-024960404b1e",
        "cursor": {
          "ref": "467b1a1a-8263-419c-aae2-6e771f5dc7ac",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0edbbf41-bbb0-46aa-a867-f8c203e311f4"
        },
        "item": {
          "id": "97167305-fa1e-48f3-9217-024960404b1e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d46569bb-eeb2-489e-948d-d715c9bd667f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1568fd-e2be-4da2-8eda-e59e33a6ca5c",
        "cursor": {
          "ref": "d2fad619-f56f-464d-ac4c-449c1583b3fd",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "63085698-8f18-4c1b-a87f-8cd8e30a866e"
        },
        "item": {
          "id": "fb1568fd-e2be-4da2-8eda-e59e33a6ca5c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c98fba31-cbdf-467f-b839-ece41aa2ff1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75155e2c-269a-4c2c-9a6f-ac4d2b51f939",
        "cursor": {
          "ref": "db242611-50ca-428f-a600-bcda20e6470f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1c6a1934-51e2-454c-ad70-35c91b43beaf"
        },
        "item": {
          "id": "75155e2c-269a-4c2c-9a6f-ac4d2b51f939",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "30535bca-4896-4c00-8d2c-dd61cf342edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d917ae6-3fdb-4a23-83c3-40bd6b2ef0b4",
        "cursor": {
          "ref": "8526d6c5-9a65-4076-9a9d-9e75ca8a83a7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1682204b-d1de-42e3-b799-c73782586c90"
        },
        "item": {
          "id": "8d917ae6-3fdb-4a23-83c3-40bd6b2ef0b4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4491dd8c-5ef3-4d1e-9899-c4899eabbeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f28b1f6-fe3e-443a-bd5b-88a030ce7e29",
        "cursor": {
          "ref": "07a5579e-4fef-47ab-8d16-6934b957b627",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f59d0936-ee13-4858-a7ec-65ad3854832f"
        },
        "item": {
          "id": "7f28b1f6-fe3e-443a-bd5b-88a030ce7e29",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fedece28-4c72-4e80-9be5-5eb669e38c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90414ada-dc06-49e4-a566-1cecd1d9e1a7",
        "cursor": {
          "ref": "4f22ca57-0b44-4ea8-85d3-b159305c08ee",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5214b088-6574-4d3c-99c2-e118cdcfd86f"
        },
        "item": {
          "id": "90414ada-dc06-49e4-a566-1cecd1d9e1a7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "902a1bb7-91fa-4771-87c5-12b47f7bb30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d89b71-8e90-4bc5-8c1e-b466c5fb08ea",
        "cursor": {
          "ref": "62cef244-c0f6-4620-b3ee-ad437c8ed149",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a8dc4df4-0f6d-4858-9d3d-b4549692bcbf"
        },
        "item": {
          "id": "b6d89b71-8e90-4bc5-8c1e-b466c5fb08ea",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5f83a4bb-d62e-4f46-9f89-ff39f4ed6e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf6c667-0971-4fef-a7f4-e46e807797ac",
        "cursor": {
          "ref": "ed2c9e9c-aef8-4273-b951-cdae4b73e9f0",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9f66dc02-e5c7-40c0-8c6c-6b6681f216f7"
        },
        "item": {
          "id": "fcf6c667-0971-4fef-a7f4-e46e807797ac",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e2262fe3-19eb-4c0f-9221-63cb8013d7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90578832-3194-451f-b27d-aef093d80b62",
        "cursor": {
          "ref": "09864df7-0735-43ba-afea-4c1857988980",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bc469027-c980-4368-be3b-83e29af3099b"
        },
        "item": {
          "id": "90578832-3194-451f-b27d-aef093d80b62",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a0d14a03-9f09-4fee-9276-79f64008e4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7335fa6-4db0-4883-b9e3-f22462a32f1e",
        "cursor": {
          "ref": "875dd595-0552-41c3-af1a-ee9071c2663e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "30657062-48cc-422a-9780-606e71265943"
        },
        "item": {
          "id": "b7335fa6-4db0-4883-b9e3-f22462a32f1e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7cf27256-3097-4322-835f-667f86af3df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c05572-7de4-4f3a-824a-b1efed7a770d",
        "cursor": {
          "ref": "90630613-9701-4c5d-9b20-6f02514061ef",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "553f61b7-17f0-42b8-995b-9f5ad7aa46e7"
        },
        "item": {
          "id": "33c05572-7de4-4f3a-824a-b1efed7a770d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f1517ad4-bed8-461c-bcb3-a591f6024290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ce9743-fe1f-4ba5-9a2b-134815b52685",
        "cursor": {
          "ref": "4a2dc85b-4b04-4602-b824-695270bcb911",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "de195ef3-81c2-413c-ae78-94c16bb995a9"
        },
        "item": {
          "id": "90ce9743-fe1f-4ba5-9a2b-134815b52685",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "59cb4697-44a6-4632-a095-3bf100f618dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1ecfb0-f6db-484a-a15f-caa1cd24213d",
        "cursor": {
          "ref": "2d21311c-4674-47b0-b53a-30b2d92bcc52",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "888d432a-c712-4c70-af82-eb950b96a378"
        },
        "item": {
          "id": "1e1ecfb0-f6db-484a-a15f-caa1cd24213d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "686fda16-cb26-4a47-a5ac-561b8375572d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59760dcc-8571-42bd-903a-535e99f25fe2",
        "cursor": {
          "ref": "dc60cec6-a371-485d-83a7-99b78229cab1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cde46c53-4e7b-4446-9f93-fcbd6bd174f1"
        },
        "item": {
          "id": "59760dcc-8571-42bd-903a-535e99f25fe2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "076eb2a8-974c-4511-b1e0-59886ba2832a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2726275d-fbad-4599-b032-f9546876ab0d",
        "cursor": {
          "ref": "623953cb-e688-4bda-bee7-5ebc98d4003e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "db0b07eb-c015-41fe-a377-baf1fcff7483"
        },
        "item": {
          "id": "2726275d-fbad-4599-b032-f9546876ab0d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "26010ec6-86b8-417a-a12f-8e746928c3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d31e69-f6ab-4c28-b286-494dd222ca6f",
        "cursor": {
          "ref": "e8c7fe74-d28f-4485-b901-d33d4b096978",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "36c8eca9-d166-4ed4-a228-92e16d59871a"
        },
        "item": {
          "id": "06d31e69-f6ab-4c28-b286-494dd222ca6f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "18d25f79-9632-4e0a-a559-b68bcb2b2448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8529c5-6f9b-429a-9ca3-822acfe24a54",
        "cursor": {
          "ref": "0596ef50-f386-4575-a400-3a22d7c2ed36",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "45c90b04-266a-4ea8-bb81-c27ee2cf7557"
        },
        "item": {
          "id": "4b8529c5-6f9b-429a-9ca3-822acfe24a54",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "89e5f762-3a37-4392-9af0-429f591fa0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b39262-af6e-4b1c-a63c-0e0c8ef5666f",
        "cursor": {
          "ref": "b97da0da-96e2-4d8e-8ce9-b627061c0f59",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "92c92ab7-2d33-42c0-832b-f346fb20767d"
        },
        "item": {
          "id": "77b39262-af6e-4b1c-a63c-0e0c8ef5666f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a5ad5868-f6c3-4578-a90d-7110cbe55cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6f564c-b1f1-4294-ac70-efb8e75383b7",
        "cursor": {
          "ref": "e251c83a-533a-4311-8ba9-18626696ca1a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "130a8223-f6c2-46ab-9d77-5f80d368bbcf"
        },
        "item": {
          "id": "bd6f564c-b1f1-4294-ac70-efb8e75383b7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1ffdd8df-eec5-4a6a-88da-bab585563df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d6f399-20fa-4477-ab88-4588317221a8",
        "cursor": {
          "ref": "ffb88228-a2be-45e5-83aa-1cdc48c92680",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c8760b60-1f69-4c63-8a88-59d9f2c6ca4d"
        },
        "item": {
          "id": "11d6f399-20fa-4477-ab88-4588317221a8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2a712a7a-4d9b-4f05-8558-7c3c7fc87dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1212391f-c4ee-4e3f-b3e0-9a090a90a470",
        "cursor": {
          "ref": "1e70d21f-6ca2-417e-bb55-0c232132c73e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6982d3d3-a502-4b61-a6a1-fa676b5168d1"
        },
        "item": {
          "id": "1212391f-c4ee-4e3f-b3e0-9a090a90a470",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fd8c6ddc-af67-4491-bdd3-24101cc90399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10cfdec-7806-42c5-b0e6-6a72f98f60e2",
        "cursor": {
          "ref": "cc5e3528-44d4-471e-9d4b-bf0293071d55",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d444d88b-51c6-4b30-88fa-73c0bab49e8c"
        },
        "item": {
          "id": "a10cfdec-7806-42c5-b0e6-6a72f98f60e2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bd42992c-097e-4183-8805-a11ae9fdd4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b0fe1a-9782-4d32-af11-3a01071eb13f",
        "cursor": {
          "ref": "0970abd7-cd87-44d2-9188-43e9f0602110",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "907dc6b3-70fe-4034-ae79-9326f3e7c5b0"
        },
        "item": {
          "id": "97b0fe1a-9782-4d32-af11-3a01071eb13f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7993894b-bcb6-408c-9525-42f5f3d3ea7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829a5162-002b-4672-a9ed-8620e8ce39a2",
        "cursor": {
          "ref": "dff14a19-c799-4b73-a42b-60e3d0e751b0",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "88c03a48-9bf0-4cd4-89fd-b39fb40a8e67"
        },
        "item": {
          "id": "829a5162-002b-4672-a9ed-8620e8ce39a2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cd483342-f120-4321-9734-1b20c52e3bd0",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d564c5-01b9-41bb-ba21-0aa8be253989",
        "cursor": {
          "ref": "c7fe2724-9af1-4360-b963-954da7ba9dd8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ccb61622-5f25-455f-ab44-03a1fc56fcc2"
        },
        "item": {
          "id": "15d564c5-01b9-41bb-ba21-0aa8be253989",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e7d7f3c1-3992-483a-9239-5af25a395693",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "179e67b4-1161-4fa3-acd5-bddb59e3dc69",
        "cursor": {
          "ref": "40c8ef1e-ae26-4608-9873-c8e84856bb55",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9cbe65f7-ef07-43e1-91e3-90243e344539"
        },
        "item": {
          "id": "179e67b4-1161-4fa3-acd5-bddb59e3dc69",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a25b7bd0-54bc-4f41-83d6-06d80475c188",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "462b5d04-f38e-445f-a824-b5ae123b04d2",
        "cursor": {
          "ref": "5ac0ea3b-865a-41d8-a8a8-cb27d8b203f6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2a84c0dd-4b83-4d13-9c54-f7f0fdf6004b"
        },
        "item": {
          "id": "462b5d04-f38e-445f-a824-b5ae123b04d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "782c5515-c1b7-49e9-b66f-ef3c9d0e4557",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462b5d04-f38e-445f-a824-b5ae123b04d2",
        "cursor": {
          "ref": "5ac0ea3b-865a-41d8-a8a8-cb27d8b203f6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2a84c0dd-4b83-4d13-9c54-f7f0fdf6004b"
        },
        "item": {
          "id": "462b5d04-f38e-445f-a824-b5ae123b04d2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "782c5515-c1b7-49e9-b66f-ef3c9d0e4557",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191c6c09-35e7-43a9-96ec-a0b72bf1ffa4",
        "cursor": {
          "ref": "33424bbe-48ad-4543-9a5a-faafe40fda5e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "37b1f3a8-f40a-4459-9adf-ea2095974201"
        },
        "item": {
          "id": "191c6c09-35e7-43a9-96ec-a0b72bf1ffa4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e80161f9-e9f8-405e-9c27-1efb166d88d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa5c1a3-115a-4610-94f4-c98cd8847737",
        "cursor": {
          "ref": "4b062a61-a666-4142-9bc8-6aeab881d313",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "7f00f0a4-cc59-4539-a45a-f802ce9a86a1"
        },
        "item": {
          "id": "5aa5c1a3-115a-4610-94f4-c98cd8847737",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6a28acfa-e46c-4014-ab13-9f323477fc33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}