{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b0bdcc56-7f35-4937-a8e4-e73d80605aa6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ce66e2fe-395c-45f9-bc2e-c630b90998ff",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9007e057-e226-4868-8db6-38473fc4f5b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e883b2f8-ce74-410f-baf5-add4e66a1a65"
                }
              }
            ]
          },
          {
            "id": "5e24287e-c8ac-40a8-8d30-2d3e1b2aa9f0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b664227-fa22-4363-80f9-d2fe90ce5a43",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "725338da-10a1-441d-a707-854b40a61fd0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9e6479a9-f96e-4392-a49b-3ad6501a60e6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2efb641f-af11-4ad7-967e-0c407b7d3716",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33841de6-98a0-424f-9843-afc21455539a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "378ebf78-88b5-4f50-ac6b-3e441f57d7a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a040cff-1e86-4607-8400-03923411c99f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4fdcea67-d327-4ad9-814e-9b6e11559b9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67411117-de90-4a0c-81cd-c3ff625b74b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fddcdb73-8d1a-47e1-8e4c-79189d60701d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8eef92f2-9749-412d-ba67-47ee8f3880f0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16fdc560-02e0-48c0-9f43-be16600533cc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "92cb1390-3da7-4491-85c0-44207f1b1d33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "108cc273-7103-45b2-86e9-f0fcf6c08502",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6778860-12d5-4d89-ae9f-185665fdaddd"
            }
          }
        ]
      },
      {
        "id": "bf52379f-80ad-4d3d-a4f2-3cc5f1addefe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "73c4ba10-75ba-4089-8548-e83c2a62d3a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5aa8ecdd-ec00-4146-aa05-a085c002e598",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54eaf771-f781-4909-b804-4cfec08dd4ef",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da4d697-0f39-4933-8b1b-0abb31b443ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ceb58555-49ca-4817-8e79-1bc4351a0e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2b9777-9839-4559-b39b-1de8cff53d0c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66e330e-3889-44fb-9bf3-64a5b3bd0afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc85b9bd-ca87-4b5b-a397-5b591e37dca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774ae506-af7a-4b70-9dee-0d7bc356af67",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977c8f4d-b7ea-4222-a7d4-f7bbc006d5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ae41960-0589-4cda-baad-1f680e6ad320"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf1cd685-be50-42db-bca8-31e538dc26ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "404c8308-eed1-48c3-9b50-b93b2cd46c3e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4946608-46ad-4968-aba0-7daf3b564f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7a5e676-8f49-4690-88ea-5e1a9184976b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5fc110-a9f5-46bc-adac-14ee61ce4441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25f8535-bcfe-4e4d-ac39-ded215adacac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "90d9e277-fad2-4b57-9991-ee7df4bbba22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf2c719c-4267-4a47-83c6-95b4aa5a5c80",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c946249f-3182-47e1-b579-d6e118624a75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7b86f2d4-dcd0-41c0-999d-998d0955453f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7e75567-6f0c-48c5-a7d8-53f7e0be4462",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ca29ffdf-e2c2-4202-beda-0ffbb6649896"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f60a203-9a2d-4078-b777-d356d76207cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93c10032-bb11-4264-8f46-dfe8947a239a"
            }
          }
        ]
      },
      {
        "id": "9f8467a2-5eb1-4d61-bc7e-3c3d2ceeff4c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d2050aca-d0f4-4196-8bee-f0bb11210a44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4feec3fb-9ee0-493e-ad42-dca09f3269db",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e44f65e2-91e3-4d6c-b94a-3db253a531ea",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bc83a8-fb2b-4de0-a6bd-7b762a703cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066fb7e1-d22d-4944-a5eb-17b5ad913210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929ccc7f-0540-4f82-b06a-b97dcc00ca9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34c04db6-52d0-4af9-84cb-308522650082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcad6135-cb8a-455e-a4e2-c6392da30492",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10870985-1778-4657-843a-05a06f2af555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b712499b-0945-47f4-ab06-4763e0812658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08ef1e4-27cd-4b1f-a7a7-72969dec3b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a798e14-057c-4e43-a2e0-932cf3071519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca78e977-bff3-46a6-8a96-94533d34d185",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63102b9-e296-4a22-9882-212488963830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b97bdd-26df-480f-a4a9-64b21db22388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36478024-36b9-493c-b770-5bc94fcd17f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "839771c8-ea8b-4afb-9105-20c80c9c4f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b66c98-c923-43d0-b6a8-3d7325c209d7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d87ce78-c3e3-4378-982c-98dffdd17f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0925b7b-87e3-4bc9-9576-67e18556db8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5295e7-8d0f-467d-99a4-85c667f5eec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b59761d2-1ab8-41ef-960b-cf90c4831098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c492f8e1-eadb-4a14-b87c-8f468ee8d23f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b8f463-a96c-4e11-80cf-ae223f37ed30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4247b491-40d7-4b20-b67e-45248e05baba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfa93ff-7772-41ff-829f-623bff4e7803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d0d3a75-52c6-4287-95e7-c534ff746120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842d1091-7ddd-4bb7-9e79-6b0872903522",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8e403e-1e46-4a48-92de-20b5344ed163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28188430-6e72-45dd-a7fd-7ccd93747922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd6131b-b3a7-4d19-a3a0-f8de988c8e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1cdc7e4-9361-4671-aaa9-134f29120459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34729401-bb54-41f2-b2a3-54cc1e77ffdf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306ab2c6-aa58-464b-b554-1fcb156e2e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a650a55f-bf79-4914-a081-2eb59aaa7006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa2513d-c9c6-4da8-ab63-2bd179aecf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b1df90f-7fe3-46c8-b37d-c2359cd0fdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d23683-6c97-4753-8268-63ab2377b0b2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a97995-8e30-4b18-bcf7-f2a96b28326c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b618adb7-cdec-4f6c-81dc-5ccc40004258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7f2e15-938a-48be-8f47-858ca84786f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3af49ce-363d-4be3-afe0-29d3bcca3155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d4f733-2ba0-4bf7-bcd1-bc1b7f60a79b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5dcc08-b64f-4e21-a36d-e68d85a4c05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47a2540-815f-49fd-b848-c9b2455bfb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3705b9-fb56-493d-94f4-865719e00aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddab4119-5292-47f7-8d7d-1bb76deed1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46293c75-41da-43d3-9ad8-966021b45bb2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3914d8-dead-4b4c-b91d-5393d99116d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7dd4e99-973f-4645-a2bc-a8c597424725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d417670-72fe-4897-91bf-c31d320bc6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9de07ba0-6f3c-498e-bc70-0ed6ac419488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e4797a-d699-46b9-bcd0-b43c38829bda",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3a2aed-a13a-46d6-8dab-ae6a10654304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b1c473-f16c-4dd8-bf74-8f411d2917c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1fa2be-7e78-475b-ad1a-2e3ee9c64937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eb6f90e-f735-4420-b630-231a888c0240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e7227c-ade5-4bd8-ac88-45976ea7f2fc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bc913a-e76b-4e31-891a-91e47671d423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13864ec4-efc7-473b-8625-9bf06d1e9ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df42491-6492-4eee-89bf-a3ad36cd1c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8bc7b3e-2763-4d42-8bb0-abf4f8b929be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a985f8-f6fa-4899-b5aa-2cd2fdf9a471",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a650d0-8712-4d0f-8a67-b9f265bf7b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63677792-5d93-4750-b7cd-3eb7fdef3f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74b7f66-d45e-44f3-bc31-7defbfb9dc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "140a50cb-46dc-4ce1-8626-16ae6cb5b527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9f02c5-46e0-49e3-aa0d-957fcf6bd0a8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdba1994-7ec6-4f55-9682-005a8c32b304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90b3d1f-fec5-4292-bd2e-b02c6de889c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495ffd1e-ee59-4cc1-a3b6-15b7d5cc73d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18fccb52-4ed9-4661-b7b5-67884e381068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60ef491-998e-493a-aad2-a5ab9210b5e4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260db031-2e51-4c27-9a61-b3619b79548b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a06dbc-2d10-4efe-8052-9062771cfdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a3d17f-e7d0-4806-b42b-40d13be079a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fdd2506-ff63-4eff-ae63-1bf852fd913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c801989-5bb2-4f5d-9ea5-50909ebacd1b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c936d70-811f-4030-85e0-59785b2974ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16ccfff-b17c-4514-9477-ad6eb8c0015f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f50b39c-9718-4a01-af40-93903fbb71b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2047eb00-263c-4b7e-849b-128092d915fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98bb657-f10f-431d-81fc-7dd0d4f1cf9c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6dca3b-05b0-480a-9c10-f12a616a8681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a7b245-4095-414a-86aa-d96e35944bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f43226a-2fd0-42fc-a0d1-b314129a9369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f36064c-7c80-458c-85cc-ef11f9975d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122eaf70-9b4c-4dc2-a135-a5cf4ff1c98d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4b54ef-c12e-4bdf-b0fd-f2348ffecdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e055a468-2650-4ef0-8194-4061c3e7b7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b4a8c6-e0a8-4036-a07b-2d702b366f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3c7eaa-cb02-4ad7-bc69-d05bd9fdc4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9cb156-adf2-4df0-8d90-0dbbd503281d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967a2637-1ace-46ca-8747-ddf3a490dfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbb0313-462a-4873-a126-223eb88334b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb1dfea-1953-4518-aa14-f2aed1415c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a07c2a-c634-4b71-89ca-c1be733f6237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2336961e-06f1-4dbc-a794-26921e4e10a2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d15eef6-306e-4203-9166-0554a8424cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f652fa-b97c-42f0-8b63-e4ba9549a33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09efcfaa-b1bd-4df1-8bea-6e7ab05de4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79908431-4dc6-4c69-84fa-5f489ad876d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460b4cea-46c4-467b-9e28-d66a6f111eb0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75d7786-c620-4141-9b57-111152e88147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed55b83-6d48-4bf7-aa56-ab1a420f3b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3e8840-5ffe-48f3-9fd6-3d53e27ae2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8d1c4e-9f10-4ae1-8d9e-764f84ad8d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc634c6-25dd-4b67-b717-85b9fb0d650b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016bbd23-1418-4ad4-9af9-743fd706bdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2b4e3c-3910-4eb7-b281-4a800578987b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b49b89-ece8-4b20-a5a9-f9cc1ea15ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f6eef7-9c61-45c9-b525-e04cd553c70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee366039-d51d-4780-9e79-68678fa220b4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7564ac-3444-436f-85af-3819f459eee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd057826-5f0b-465e-9d4d-fcc29a6c3d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9031eb43-6d1a-4c37-93d7-1a285f578358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d0cf11-2346-4cef-88df-e4c8aa70ea4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0229d982-169f-4f1a-9e9b-9d9fbf142f3e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb38aa3-b575-41fa-8df1-273f7ab7931e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ce75f9-6e4c-489c-95a6-ea87f6361779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c4b82c-6237-44dd-9262-b6e78a147374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "974f4c61-11bc-43c2-999c-92ea21b57a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d40f88f-dbdd-4b94-9767-fc9b2030def2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac1f75f-9cf3-4a13-9620-9ddba8df1b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd1955c-5167-4367-ae6f-a2af12bbd0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33a2c8f-005e-44f4-aa7b-b0a76977ed23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25cd1533-14d5-49c8-a5d4-56ea04268069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20941c6c-7075-4421-bfef-25f3c37635e9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e43db2-3f13-4ada-baf6-117624c013a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8527ead-8e92-4309-9d5c-4bfd2adf9479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca818f87-0162-4f55-9491-f573b160fa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db27ced1-028c-4d4e-b1a0-e73d07085679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f564c12-9188-4e4e-9d5a-f0864a887f28",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1066e0-1fe3-47ad-9302-47d669ba040f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e912fc3-929a-478c-8c55-d1f3d797cd88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08137cc-dcc6-4383-84d6-f47f13dad3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b7e051-8aa6-4177-b4dd-655caf55a452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8678e0-e3b4-43c3-aa35-1b3e99743c1f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1601031-935d-4ed0-ad01-e2bbd5ad4c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ddf722-a751-47ed-837a-b3fb83eb952a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d572d6-2de4-4897-993f-21cdb21e02d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "718d297a-62f9-468f-af2f-4ca0f9d3791a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886f90ba-924a-43a7-93cb-20c5a61d070f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aa6cbc-d2a2-420b-a73c-36380ff596ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485e04cc-22e5-48a6-9c55-de5f29e85bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0731b60-3cca-40a7-9609-57540c6acd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "758de761-ce55-429c-b9be-ed949d818262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ef95df-4707-4872-9f0d-cf7172289538",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8f913b-46e4-4b7e-99f0-234e77cda184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e05c3d7-4518-4b8e-afc2-5bcf520bf863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064579b0-07d9-4daa-9796-6e1f072465e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e6a89c-cb1c-4491-8f8f-1f40f8d4056e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5a93ef-3deb-406a-9bc1-4facec1009f2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927d5235-629c-4b9b-9059-c0d826262d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a06aad3-30b2-4ab4-9bf8-2c9c384e37e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d149f2-0c12-47f0-9c21-40822cee0bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d3bf4c-79e1-4c1a-9cb5-785bb37e709c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce308c7-01f7-4d57-8a98-413e77d36d69",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2ca6e9-e799-402e-b766-ae9b4108806d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f187c451-7c40-4f29-a048-a8d59c390a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdaab73-4651-490b-909c-85cd2401cee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54603d90-68ba-4327-8d23-9b621d09f390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6e3d48-9c6f-414c-b0ba-034b5fd0fbc5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38c40a3-cbfa-4964-855d-0f467c8dc926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcbe285-d5bb-448c-8e87-4480f2acf6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4baec17-9036-46fe-a528-43f94c613b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af854ec4-e569-4958-83b1-ba5767a5be53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fe52d1-7b41-4c4b-80bd-624795fa1748",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86ae914-2c5e-4666-b18f-ec2b8a07a8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c961dfa6-9b9a-46f8-8943-d6d40550952f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010d808f-a2d1-411d-9de3-9114093deb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f057326-5776-4d67-8ea1-b47e67454cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe30a50-95e8-4a17-9b24-11632a12a8e5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7529b14e-c606-4e82-abba-09e2b53289fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c29146f-f791-4fce-a704-15ce23426927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a6b73e-7a0d-44e6-920d-1d45f460e8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "915cf349-e2a1-4d1c-813f-22a70a5c12bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57892f2d-6310-46a0-a495-8e10e4b31b54",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8717426c-40aa-4067-9089-7bedb25edbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "516c7eeb-36be-429f-8854-d7e989fa9e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3007a80-7e95-4cdd-a353-aec992cd5ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a80d1b5d-fcea-4c83-a114-d29cd0e12894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9753f5c7-1c5f-43d7-9740-cc8c6724ec52",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022fa895-0f2f-4b4d-9949-d2d4b2767cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d37d6f-9f01-4829-aa7a-3ed659e819b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70d25f0-c5af-48ad-bad9-e87597bd51f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2608e97-20bb-404a-a7ac-d118f6300548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a56b20b-f4aa-410c-9c95-1358146c09d0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dfa066-52f1-4ece-b265-72cffd712a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d7e614-c4fa-435e-a3fe-eb96dbd7391c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0425024-61bb-4403-9ff0-2454859ccef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cee08585-0cec-4393-8e57-2412fedb3b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f692a7ef-175b-4a09-a312-75a90fe486bc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc2bf90-9d0f-48bd-98bd-9434b87e6a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdfe21b-d17e-418f-b0c5-57aac5c77c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71739d4d-e818-4d67-91ed-f0b3710bcc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aef7e124-545e-46b4-be2f-194fccf8866d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86395bc-cf67-4f30-85d3-53373e4cd982",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a0e828-8ba4-4695-bb64-4d1951c9d68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e8ad1a-f18f-4a46-a6c5-b1e96ff43ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0118b0-c703-4c73-84c1-5e8e036ade44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4170845a-fcf1-4435-a564-aecbf1106baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f93a59-0578-467e-b560-f6d3bcd2c098",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f44711-8432-44b2-8e4f-adb0f846e858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f57539-b695-4c24-8667-09cabb1e2e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b551f5f-0a90-4af3-8a77-6c39abb52198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de8aa333-f667-4750-b030-241c65c57c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da443224-640c-47ca-b261-05cbc53cf66d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee669ce-bfc7-4179-8401-d5e471dbd45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5c21b0-2626-4346-b660-c95b8f09aa1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c8c798-d6da-4655-a4ea-800436be92bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4d83a83e-e498-4e1b-b2f8-c842a4b8f8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5322ea-de9f-4e1e-a601-68d1995e086f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0a84ab-c059-4d6c-98e7-6750b61f3b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c714f6-9241-460f-bbad-8caae1907adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbf4867-7f7e-48a5-81db-e8656024d371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6abe12f-52cf-4ba3-8cb2-945d0bd775a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8a054e-ec2f-45b0-9d24-7928827ebd42",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30cd404-ec39-4a88-b312-ee4465084d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129d648b-e54f-4ac7-8471-2390be4d0dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae24e92-a539-4758-8f93-c1aeac99c00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcafa60-b83c-46e2-936e-1bd50db4bc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fcc9a3-edaa-4ddb-873c-77262c792cf6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffb63dc-c382-4a31-818a-f1cd9fc5a861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453e5329-efb7-4c2e-a006-6d3cfcc4de78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc7eb5b-7630-46c9-89b7-1a5c079dbee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9b31a8-1128-423a-a619-66b32db21240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ecac6d-c91f-4bf4-bf2b-49ed9314bd18",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f645598-651a-41cc-b255-ea0e0d83f28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176ffccb-51e6-473f-9f87-a652274883c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed46ad6-afaa-45a3-959a-e2b537e79c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0912a2-0281-46c1-ac56-2d24b14c5234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7f5118-d182-4795-8367-5aaed9c4af59",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c96204e-1702-4b88-84fd-5cf3d3799ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c9ee86-bbbb-4595-9d3a-031f8a5f2cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efdfdf1-6efe-4677-986a-7f8e1a53b402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a0b804-5f29-4250-8385-c83f30b61e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972f5f85-0486-4c26-a052-dc83422c293f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb490077-288e-4e0c-81e1-a6ed89040659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734a72d3-d127-4730-a1bd-88535d7a831a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8df7e91-31d9-4c02-b601-6532cbc29b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d15c064-f124-4365-96d8-0b0219ebc5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5826f330-bb5b-4133-829c-7cccbbdbdc16",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c6f02e-02ad-4be0-8779-af6db962a0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed916801-858d-4414-a60b-f2c54485cf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbd2869-aa3c-43ff-8f19-8243606dd823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae5b483-7375-4bd4-b181-4f1efa539e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71644fad-2eb4-434c-91c8-42f0cf8e74c6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44754ace-8597-42be-b85d-0cdeca9a06a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2babb-3662-4c3b-9f29-0bedb9e2cd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841df8a2-25db-4214-b788-d611f4416444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "266bd7e2-b0dd-452a-b1b7-235933915c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bad176-3a95-4433-a060-f5de9b8f9213",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bbb370-aeb7-476f-b2c3-ca7c2f78541b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d1c397-7926-4cda-899b-5d4dc9663b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4529b3b8-ec31-491d-bbdb-8ef4d81062ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7821048c-252a-46e4-9fa3-f657e6f1f239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6338660d-07f3-4b39-80d9-66b0b9f0e4a2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c52565-fc6f-4b64-855d-0ca97973c089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8f7148-4ac9-4019-84b8-431f45ba9eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f31a96-b658-44be-8983-fe9d91444268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06fb4e4-8532-4688-8f94-30c6e7e5092d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c405aab-234a-4c33-894d-68b9ecb436a1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c396b065-ff96-4026-b978-2f913922ba40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cdd87c-da40-44d2-a6ba-f7c05061744b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d923de0-5509-46a5-932e-a24ed14214ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0a091c-a4b5-46af-ad01-dbd88cdbb6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e3c29f-35b3-4d5a-a408-af97541dac3d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be89b0c-d914-4053-ac7c-8f5266cec484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19c261c-9a54-4f4a-a44b-77a141b8ee3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b04e7e-7928-4edb-aafd-6b97ef0f9269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9438cd14-c919-422f-85d8-05c0e7ce253b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbf6ff5-0cd4-4f27-988c-ed13bdd913c1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dee0db-4426-4d60-b98e-954cab1aa913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de910773-3e7c-49a7-991b-5c6107597fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6f37de-e69b-4b8f-acfd-b96f63197cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d0becc-5ae7-494a-966c-a8c54cfd5411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fd2f54-f588-45b4-923f-69ac95a69486",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aec001-9281-46ae-a805-295483b126fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cf30bb-67bd-4b39-be5c-3a25d4a7e948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f8f605-1b47-4da4-b1f7-5e17c5546910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd87418-f626-4ed5-872a-ab4c247a5431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a41ec74-ff56-48c6-ad7c-1f01d5019c02",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7516b724-49c3-4078-a310-437b9b6a83f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3c15e9-aae9-441c-9c7e-af71e6fe6686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7458309e-766c-4e43-8059-d8f9594fd9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c80451f6-5f04-4384-a3fa-b994c49aca20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9272a09f-3d3d-4123-b650-3e5df1fd2088",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534ad899-3fc1-4b32-9763-6421642b321f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b172cf-dda1-4c8f-9c40-42a79784c62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1427b6e5-f969-4969-a934-20eaf4ef6f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad66bd99-da6b-4bfe-812b-b3df8e47408b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229922c1-981f-425e-ada9-38b354fafb3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bc0ac3-5795-4b05-b2ab-d300e535db9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0aff416-40a0-4058-a0fa-5e469271f593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a797407f-6369-498d-9fa9-2e171433576b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c762d9a4-5063-48a2-ad75-b70b9b3824d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3449e2d8-f05e-4eab-b03a-d009fe81039b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cae70b-0852-43c8-b2f0-edb9bfabfd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816f8417-73b6-4acd-a885-586079741386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a748342d-91f4-4cff-9569-3c35a8412163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29689ea1-6594-47e1-a48b-e294f709f496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e9949f-e75f-4b2d-bddd-e4237aae34ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9119840c-e4a4-4d9f-b431-8608acfd1d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb0a2bb-6a70-436b-8e47-3788f6d1d602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ea8f91-7f83-4e47-8c1c-2adc689e88ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c21a8e9-5f60-4bba-88ba-ab34163297cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e859f497-5f05-458c-915e-1d254ab5e034",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7f941c-03e0-4890-bf5c-a8564bc09be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3285684a-df82-40bc-8833-3e27e1777ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f45d401-faff-4580-902f-dc6e3ffb4ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdfe8cd-d85e-4568-9b09-179424a25f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af1914e-0063-4236-8a7a-3239a1673225",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d37660-5ec2-4d2f-9ea7-7440402e7148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea46d580-5a86-4982-bac5-7c4f6cb0c5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c7632c-3b49-4ff2-90bb-cf3878790dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdd7800-7794-4c02-9333-ad85daffca86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f658f679-d415-4b3a-aec2-5bfea1a8dec7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437b8cca-045c-45b1-911e-65aba16da14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e32dc4d-e0ed-44b8-9725-bc2670d1a7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eed71d-ec0f-4540-b933-4ad2e5b82ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3df829e-40d7-4e5d-a298-217f7c07857d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e0b7c4-7517-4cc0-9455-f09cfa1d4080",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c189b64-5d56-43ef-bd6f-9151f2058a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad029737-3aff-4eb1-b692-58dd5f9a1bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38db8851-1ba4-47a6-a467-f16cf31f3214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "427089d7-d757-4cd9-8dd5-2d0d15737aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d99a0ae-e67a-497f-b0b9-a33114e91421",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364c080a-b214-4c99-a4ce-b5814eac8a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204c72f6-b5f1-4297-852d-5e62b2afc216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcada4ff-2921-4e0e-a638-cc02414cac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1b0ff6-b58f-4533-b605-83d4aae9db2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bc3f3d-cba2-4327-b1f8-f86b75800ad3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324c60a4-21f1-476e-a96f-157f519ff6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcc3beb-474b-402f-a137-41c13a5705bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a188bd-ddf9-4a60-bcab-0c3595225d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d87e80d8-1953-4c0a-bb5e-36ee8719734f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0647c3-9c08-4b6a-b532-88f1aede7b7c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d75bf2f-3531-4576-91f2-17a17cd84441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea68c75-bbb6-49cc-a219-183032abfe35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb84fc4-97ff-407d-8007-a386565af1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3de2ad3f-18f2-4dc6-879a-dd5effea6e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96817f8-8d37-4c12-89d8-dcad24dd2c72",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79c3791-a696-4021-91bf-d4c374fb99ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e3cb09-8338-420a-b3b1-9c4498b54a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51e8887-c01c-406c-b688-7ea153c4156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c95da42-5128-481d-b751-84ded8225aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8221074-3280-42d0-a6af-33d787dbe4c0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653fb47e-e6c5-4578-91a1-6a9f1389aa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a321c28-3521-4553-9933-b1979d7f9b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fa43e1-5e0f-4bf9-9f9e-58ae49bbff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c692abae-eaa3-43eb-ade2-0aa1864bcb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0745228b-3fd6-472c-9791-1971db5223e4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9bba50-bca2-451a-93ec-7e8807876070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b1d7a8-74be-45e9-8713-4867d7fe3e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160dcc89-fba6-4f65-ad58-997fd47cedfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96621dc7-dc38-4d62-8686-d067b54c4d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3584cbdf-73c2-4a21-b810-df7a77f7b03b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15417f05-3401-47cf-89a5-f1dad892fe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87aa355-621f-4a8a-a43f-e62db06651f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3a2a22-6eec-47a9-81d6-813d25b9a0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "022dc40c-1b25-473e-91b2-4760079289c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97967726-d413-4b72-87b0-93f52e3d5849",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a0e813-f34c-481a-8ae0-b3c4bd5bac81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12cbbbdd-ebda-445b-a5c8-2ae2ed8fefc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474ce716-ed10-4d2e-9c35-6dba705433e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e80faf85-bb41-44d7-a4cd-e6a8b1910a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f192591e-cc9d-4f28-be87-eaebd7d85b07",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3fadfa-9760-48a3-8d74-04b701e14755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1b4a5b-ea4e-4877-b100-a4709f5a3900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e6a2f9-b986-472c-8fc4-bf897113debd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc973748-78d1-4aa8-9665-5ff2784b6d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4986bd33-2fc6-4a3b-a718-9add33e6c27e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63face68-853a-4a47-a46a-890d6df9738e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00688f56-2204-43b0-9df4-5596d3ae624d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fede87c-8148-4f33-af42-675cb4d972e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0df10a-4fe6-4126-bfad-8801e59dd26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6283a8d-3891-494e-b9fe-0bdba821ab57",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b7dc88-bbca-4ac6-9fa1-cad01d10b926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e638569b-e4b5-472e-a610-3dd474571f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488ab58e-3d87-4720-9201-306511ab1120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de14c77c-a06e-4d7a-b84f-e7762a8d1aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13843e46-53a3-45a0-a12e-3befef538bdb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74317214-9e6a-4447-ac09-3d48fd6ee668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a61816-e0bc-49c3-ae3f-54be7eafa5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b68b61-d5f3-42c8-801c-43daaba3e9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7f796f-7793-4a9d-8d5f-f309aaba24e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64daf48f-8089-4e4f-bfd8-394b1a2d6d8a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba617c6-1153-4e7d-9565-3d21b036022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7f1699-4cc4-49ac-8137-9379ba3aa462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d43bb0-62d0-49ee-af78-4449d4934b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "776d3309-2da1-4ff1-acdd-1fcc64b5633d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab832d87-726f-406b-94bf-05b7ac251ba6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e14d10-4c09-447a-bdb2-9cf3608516e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96851ef7-b02d-4a3d-99a9-430f91353cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29c17ab-d97f-4a77-8fbf-e3b00722e89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca5704b-316b-4539-9646-846cfe96ad18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6987b747-89d5-4bb9-b449-74aab223ce66",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfedafe-54d7-443f-a107-3c5db874b151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec57f164-877d-42d6-8552-93e49f61916e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7cd366-6226-48bc-a54b-73082426a6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdca444-6d9b-4e9a-a24c-85dd7036c0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b50b89c-d00c-4e94-9ebb-9cdc20a4f473",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fc99e6-6671-4cc0-99d4-20e32362564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb390ef-6eb4-450e-a8eb-b372b7b7f3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182deaa7-4c98-48ae-a2de-92b7d6962118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7f3c58-14e3-4cc1-b247-5bbcf4f5e34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3810f4-0206-4011-8bc2-86fa5e6a091e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caafe835-f082-4d0a-8ab5-ff4592348df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbec8df-b2a3-4b69-8080-65e1582d8b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bfaf9d-336f-4028-b88b-f7656e5be765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2e6b03-f8ab-4d58-bd8e-18e218df8361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636d0bc5-5ab6-49f7-ab1c-84444c67fe7b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4b9cda-7c88-4911-b18d-7599cfeb3de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d821b37-9a58-44cb-8aae-cd125644db51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef78519-f7f4-44cb-92fb-c7e8979ed95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94fada39-02fc-4e9f-9bd6-d5b29e58a05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d251d44-34f3-45d6-8b10-70869e442023",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b06997-5236-472d-b490-6ca19094f470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c72586-08b9-4ef0-b2e7-f81088c2a4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2a771a-57d3-4002-9506-00f898392337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "718480e3-1751-428a-8c4d-544396f33707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0868f744-3d7f-412d-b250-29f6c60f7821",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df57a06-a7ac-4d68-94e9-39d7cab472bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69e5532-2726-4df5-b2b2-3973793312a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0c618c-928a-4b55-b6b7-9afc2fc7e95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2c3465-4e79-4c6c-b289-c16eeb91d9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba031b69-6a3f-42ec-a7b2-beeb1f9f8ac1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e37b126-91a2-42dc-a4b2-8b3d5ec92b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2472ef2-3c8e-4e1a-911a-67e767694528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4b17d0-f646-498d-8b6f-549f61af9a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46fb8cb5-3afd-4574-9804-e07e3d746209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce55c56-7bbf-41f0-9942-900ebd25b52d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cefeaa1-6883-4392-aedc-166aeecdcd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aead699-dab3-42fd-a56f-e482cae825fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39efe046-9c71-4c94-9aab-7ef6c5e3d31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb052fc-af29-4036-b9a2-918aec1b492a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca8f9fd-812a-4d1b-ae75-3dbdae3d84d0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958bca5d-37e5-4091-b2dd-de0552908606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75805a50-a705-44b7-92cc-24dc0d2e1aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f90d13-abb6-420e-a83b-be2780b61557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5abb0ae9-bb86-492d-8c53-d6b39595ec33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fdae41-548e-4e42-b935-6b135f458947",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eb57b4-c14d-4958-a87e-f62380855bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0326d34e-9aac-42ff-9319-17aa7e42bd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5ccf3e-3fa3-4044-8b0a-6db8dcbb9b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9e7723-b0c5-4ca0-ae39-4abf9e818b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550bbcc-0ee9-49be-b9f3-e135c8f1acdd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8599050f-f48d-40b9-be72-b3d0bf8a2027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3917f0c5-8dcc-4103-9910-e6112c013200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e49d257-b95f-4313-ba0a-829c5c1bee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8108a60b-610a-4bef-aaf1-8e4e35a294fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9234cfd4-eccc-446b-80fd-1d659b43d0ee",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a93cc5-d4d4-448b-8c6e-17590622e160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2638c2a-3c90-45ad-bc1b-9cc6fe246c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db839c73-ad8e-46e8-9909-b2be42498bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "235f56ed-001c-40e5-b70b-97fad65f6a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ff5ab0-69c4-4908-8d86-7838b2df4b83",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5671d300-5f14-4450-89a8-73daa2d4ced4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7ce89f97-04bb-48e6-82d5-097b5b883005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7e8822-0169-4108-9088-d2748fe9e614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4a25f3-a3b9-4474-a50b-db0f22321d08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4ca6294-9bc5-4950-9625-e62676952579",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22420ccc-e116-4b2a-9b5e-e116420f4c6d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b64827c-4c49-46f6-b449-55f54d47ff17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e6ab4db-39c7-40a2-a698-330fb0747d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b64c6f4-111d-4de8-9195-095c7c4b2fb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "952357ec-6625-4ae0-a251-cfb7a7e1e956"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad250eee-e54e-4c41-a105-45a5701fc83b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa8a20e9-f87d-4274-9fd9-df940b1702bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40b0358b-21c3-4206-bd3f-16bbfa47fa25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "018921f4-faa5-45f0-b15e-1e2f77db8470"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70be5c61-9242-4276-bf25-367eedc363bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "652d8fab-6032-4654-a8e8-120a7fb00af0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd2a7760-d8f0-4667-b7e2-cb97d909cc80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd752905-e194-496d-ac08-0018c6c0eae5"
                }
              }
            ]
          },
          {
            "id": "23172601-321c-495c-b9cd-193ca357e784",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32cc7b6d-fdb4-47e0-a1ff-05a3df90fe17",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6fcbb9ec-8fa9-4844-86a6-8f3a0076e75e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc8431e-355a-4fb8-8cac-327e4fa7d3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5639e866-b5c8-4241-8a4a-4f134a69e344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c81b237-6013-48a7-99ad-91456f012e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37125c3c-85bd-489a-9304-5e80f5ec45aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce51d67c-c5ba-490c-80a9-d3e40464899c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d348eb12-7fcf-4c1a-8a42-d63dad3d7a36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01cb86e3-326e-42e0-b6e8-50207179046b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccb48f08-009c-4f15-99b6-c3162852c12c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e183832-3425-4f44-933e-c9cf56f870e6"
                    }
                  }
                ]
              },
              {
                "id": "11465cd5-67c2-4cf2-9acb-040fe50f841f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e32dd5dd-4795-433e-9bf1-5f31cce95b69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f83cf544-15c6-47c7-9dba-7b50b308b00d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab0fae11-f83a-453d-aa89-2b39a5d34bdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79a27fd4-df5d-46a5-be9b-fce4572b4344"
                    }
                  }
                ]
              },
              {
                "id": "bc518e04-2ec6-4102-beae-34949c011348",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b181ce0-0bcd-4397-87c1-11eff9fc2475",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55b477f5-9409-466d-9e59-7cc182e3306a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8393d28d-44f5-4d07-aba9-7acacc9decab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94da9fd1-ecdd-4f72-a520-0a44310996bd"
                    }
                  }
                ]
              },
              {
                "id": "5bcd3da9-efe7-4f5c-96c7-391aa161fe3d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddb9b7ca-4cc7-4cb5-87df-422bfbd8e36b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97735c54-3f07-4c1a-a889-c0e2211f1e58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffb9a439-1d16-4f69-bc0f-696e442153d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b5b1be7b-762e-4f7d-b046-71027f39db8f"
                    }
                  }
                ]
              },
              {
                "id": "3dbf40f4-7840-4b78-81c9-70924343e57a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59477707-23f2-48e3-b1c8-22de52e75513",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c23523c4-c340-4e64-a9c3-0aabc6736b76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0af2e88a-5ca4-4e7f-af21-36f959500a38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4b3d637f-c826-4a2d-b433-e18cea35f060"
                    }
                  }
                ]
              },
              {
                "id": "e1d618a8-7724-48bc-9941-02d54d352e36",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94a9c03e-dfb9-4d79-88bc-86e114403e86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9cc247b-294a-4b90-b38c-26e9378550da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55919c5a-2574-4152-8ad9-509e6c1af84e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6dd0e5b1-aeb9-4a2d-83a6-b125404ded82"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9bf831f-d659-40c3-a278-a203d5572f05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02079aa5-0ec2-4ee2-9590-56e1cb719bd3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "767e389b-c765-4442-9148-293202522f0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbc4c723-7d69-4877-95de-f283358d4dbc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c8eff33-ef86-46af-a6a2-d8ea6545f7dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cc0c0697-6dc3-46cc-9369-c4014742539b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a352211-fed3-416c-8457-fed46193a6cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93b8fbb6-0fae-4afe-bfc2-69df3368b9a8"
            }
          }
        ]
      },
      {
        "id": "3612a5d0-0b7c-49fc-a6c3-820b1a4384c7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e8ee2031-58b1-4ea2-9b40-2945afb7e056",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cd7b244-3b88-4fde-9344-db4261703942",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c52961c6-db85-4ec5-a14e-c42ffca721d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfa4f57-b7fd-4da6-b577-a2a1b28c1bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad720795-69bf-458f-a3bb-4295cc999965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e79870-2e89-43ac-a270-5cff7abd844b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "704ce800-c47e-499d-a2ef-15401d41efbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffef91c4-b7f4-42c7-81e1-1778a74e93fe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aacb6cf-19c5-4266-969d-7334ddf832ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c307b5-08f5-47a4-ae9e-042fabf11663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28286ce-b885-4777-93d7-175a0722a1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a563a358-3ffd-4059-bb61-d4e18b4608ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bc47e1-d391-4a42-a507-9a0bc2ffa081",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a84eae-705a-4f0b-a25c-b419c850f495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77e6e7d-99c6-4291-aa9a-ec6bc2ccca6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17d62e6-2bde-49ff-828e-96044ac82df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54172a2b-3572-4da6-be42-c8e3bf05b689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7d92b4-e1fa-4fae-8be8-d9268d28cae8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aef924-ad68-4e6c-a0b4-cba4f59e2e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286fffa4-2d6b-43bf-860a-c9d7b981b3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09628ee8-0192-4548-911d-c31aceb6cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f452bf6-6426-40d6-8b02-20bd4491a0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2035fa-f2ad-464f-8586-aeb1190aed45",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fa280e-722f-4e60-9a80-56b51eed2396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29a8ba2-5898-4b65-a32e-736cf3f1ea77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7337c72a-8e6c-4f50-8736-d3099a60a2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2acab9-04f8-40de-b23b-6fe3451d812e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aa713b-9be6-4700-a874-1df700f0b33c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6dde02-8208-482d-a810-92ca38cdfeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205f5910-7423-42fa-9629-1413b987cdb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10516b2f-b42f-4297-aa16-4e3efc8d0c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2c7a75-af48-46f4-8dae-d50b534731fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb60e3f-75f8-48ba-b92d-1a2342118441",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d319cc21-8adc-4d8f-b880-d7901030c626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e5b8fc-13f5-4a44-81f0-59cb095bae21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea6f1ff-8445-4467-b0c4-57ef10b0c61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0426d0f7-14e7-46ec-93d2-b372c7868843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca82e7a-f1ef-4bd8-a000-85af29c2a5e1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b3d0be-e0ca-47b9-a79b-7d48ed8363a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be062198-6a4a-4297-ad93-a803b207e876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c79b37-cdc0-4286-91d0-6d6143dda91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "635ff213-047c-4640-bfc5-390128c34705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb914d5-17e1-4555-8eb2-9ad5159a8174",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fe1a5a-91e6-4b9c-8fbb-f1803cf1c3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c531c368-f26c-4c04-91a1-edb396170747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2564014-0e05-40ef-8d16-0004202c4a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6859bcfc-a83e-4a1c-b4d6-0dafbe8db6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40e2e5f-2a7c-45a5-ab71-078991a9af1c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc07a4f2-349c-4f52-a0a8-26b3f90ba97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f89fa1-b1c7-48a1-a210-b753cdd60d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d054208e-c508-4819-b057-a48202e108f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b74335-7012-4795-83df-3120698fcdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6f3db1-4b08-4a52-90ec-98706e699c2d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffda21c9-3533-41bd-b30e-b7a1b3573f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad37f1c-b88c-4fd2-a559-9c4afc074a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbc9d10-86fe-48d9-8660-2a212ceb92be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e337c0ff-3af1-4ef8-a96d-7d2860ccb8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92ab6e1-f8a6-46af-9d4e-5322dd26be94",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8987cf1-0bfb-4cb5-9100-1e817260ff45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f57ed7-80d1-4e25-8a81-bb104dc243be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863d79a0-f1f1-465c-9f3b-f994e148a9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd376cb-5cc9-4733-a383-12a7c5610072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fe5caa-eed3-4a74-ab09-ffd84084a6c2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b6082b-fe90-4ff1-a373-5b16273445b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87492df9-26b5-430a-922c-e3a0b8e2ff88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4c927c-9fff-473c-a1a9-a519a8cb2476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a8bfaa-086d-46da-896b-36de5a33820c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c70dfa-b190-46b0-848b-dcaf709fbc71",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d74c5f6-4bb6-4b56-859f-4b1ddee950c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5420e086-0b68-4843-b807-adc90a0cc3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3c3d8a-a9ca-4943-ba6c-ad8fadaf8fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7bec97-96be-4a2c-aa54-069f3121d1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cee366e-5ac5-4a54-9835-9bb918cacc0d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f190f6fc-9983-44c8-b45a-3a76bd0fb582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87d7015-d667-4b2e-b7e9-9a312c19b798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c97b33-cedc-4951-9dd8-45267e85f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c1e02e-b47e-4f10-befc-82b44c6c92bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c866cb7e-b835-46ab-b4a4-5d6492d8c9d2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e632e4-9bc7-430f-bd82-1fea152aa74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec792bd-8d14-4910-a679-f0f956690b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859f6adf-8158-48be-935a-1f9506e17690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f14cab4-6cce-4794-83de-24f92b6e25c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da0660b-77b0-4886-9796-79308a332d99",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdccbf4-03e7-4b8d-bca8-737b2c1dddf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ddbf1b-000f-4b6c-9819-4fc92a827c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e639cef4-e2aa-44fd-95f0-04a19a70f36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b310b15-e9cc-4682-805c-b93609971fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c146d34e-6793-4ab3-9122-06cc8012ad6f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd9a5be-5acb-4b9b-b4e4-4040bbefe18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1decc06d-40f2-46ee-bd53-a7e074cc8d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe6197c-0bcb-40f7-9b65-69320b6a9a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8b39d4-ddbe-480e-8572-ee22811eb82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c42a32-acbf-423e-a5e7-31617c8fc9cb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce46ad69-6f20-48cd-bb2c-10cb76bdc0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1401a25f-2784-45fe-a3e1-8d5d93ec1609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743cf78c-a651-4230-8fef-836d5bf20af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bd138a-aa70-4f6f-ae83-2095fbce7b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d4f35b-918f-4a0a-8542-be00b223842a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2abf7f-138e-44aa-b3c1-bffcb46b17f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506eade4-e078-478c-8f1a-a792a1ee4f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76425a8-d96a-4c0a-bc14-d54ce8eb1f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2d43fe-aa34-4f40-bf89-4cf96791e3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c080f208-d738-483b-90ed-bbafb8319365",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a37494-72ca-4b11-9813-4fd0b81c5e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850b278e-49bd-4d8f-b6bd-64875b268bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a7f95b-7a4f-4172-b755-fcf8d288ee56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9dba52-740c-4d33-9c95-686dc947e95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4452b84-cef2-4e9f-ac48-eb54dc9e30ef",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6461c1-7402-4217-8928-8761565fdd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c774017-7dd9-4657-b788-ab7f06eedec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eccae52-944b-4401-ac92-654ef9826484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "854c14ac-f28c-4d93-9db8-9b010173012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599fb36e-ef0e-4c7e-9f3a-36ba8c62fa12",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6937ec3-a439-4158-bd74-4fc350abd359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0370a4d5-4430-48ff-b100-480f017a0236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0799dce7-6600-4cd7-b273-f58fcfaec2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5d54e8-8769-45e8-adf5-fb747762f1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f885b202-815b-460e-8112-01dc7c90162c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7c1832-f0f2-4a46-aae3-bb2c52dfa472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f36b592-1873-4a28-bb57-52fe0f80fd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a71b5af-21a2-4f88-9b9f-d772bf3eb59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09a6435-0b85-4df9-99ca-8fc6b536999d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd7c174-ac6b-478a-9207-868252cb9b9c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d50d71-286f-46d2-a317-4c0f4bd90a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b81ca5-8608-4564-9af4-7dcb0c50e731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6b07e7-0f3c-49d1-a142-be3271e047ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e9dde1-3452-46ae-aaa0-99b68fd94c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55ae4a4-382b-444a-b644-73e2b298436a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a0162b-7c55-43a9-9ad3-0f566146e45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25eed9c-3593-4f1c-9efd-1b2289b886f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebb9e22-8110-4fd5-a12e-e70f1566f59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "377f42ad-dc8a-411c-8251-87d439e28e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9f95c3-6e0a-472e-a02b-5b8a46b8fb11",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14da5436-87b0-4f2f-bb67-7dff81bf1faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e460b6a-dadb-4724-8e83-64ecf5bdcef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236d7aed-e181-4350-a9a2-c224556a064d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "096eda36-73be-41bc-a28a-591b1f6c66b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be70e14-e098-4c10-95dc-98278134f02c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517738d1-aef3-4807-a535-ea49a600e28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f4e4c7-7091-4a90-a687-f35c071d75bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be948fc4-9092-4cfb-a51a-51a3dabd6234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd2e7fc-2683-4cfa-9a61-37c59d19853e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8619867d-8fe2-426b-aaed-147c7b433452",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941baa20-1f5c-4b48-a786-b3e102cbbfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6875c0ef-9456-45f2-9368-e4f7e2812e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fbe568-a553-494e-af1e-82653ce0b0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17595841-124f-433d-8787-28e66937b21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02106b4-feca-4c75-9a1f-27716e1f5946",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0c9009-d69c-4b60-80ee-ff484e93b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72293e93-90f5-41ee-9edf-30df2679610d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b401979-f993-48cc-811b-36185a466f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb90a6f-a6c5-4f90-a0f1-811fe57705a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20bda8f-8fc8-4d1b-820e-ad1d44977844",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231c4e55-ceef-4103-90a9-967a5cbef8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1065eef-86ab-4d64-b4cf-b8897bef191e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8066afdb-d027-471f-ada3-f8b99c36c390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccc0251-b41e-491d-8d4e-fbc1a9d2d5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997096a5-f61d-4173-b7dd-df20ff228ab3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b9f551-c1a2-4481-8246-d1fc2c3f5bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533fbb90-ef38-42b1-a97a-660721d1d657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a25ccf5-e107-47b9-91c1-509bf8434573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f12487d-e244-44c1-bcfd-36e13eb2b800"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73cd2906-caee-4bf0-b27e-0776916c32f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27e1b8b7-d7ee-421e-914f-44499c93db88",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d647e751-7cce-442b-bdbf-37e0d8abb2ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b3d980-32e9-42dc-820b-717bff9de908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdd5b93-625f-44d1-b970-2d715058afd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e9738a-6147-47f1-ae95-77c95b4532e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a95c527f-77c8-4c1f-b7f1-4292ccb9243d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c125a30d-1041-45f0-bdbe-4efb0d944896"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41f55912-fe46-4eb1-904f-bb705416ebac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38490023-2732-4a8a-a443-873a81070fe0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04879e8c-1e7d-4ebc-adda-b10a82d0cec5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2a1d0493-0df3-4c43-b45d-74e2a0f53e4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79e8b7b6-7407-40b7-b53d-afb1dcf89efc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3df66957-ee6a-4db8-b021-0993216eec99"
            }
          }
        ]
      },
      {
        "id": "63c5019f-61c0-43d3-9896-de13f02cdecf",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "095fbdb8-f610-456d-9881-a793498d14f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4244c7e-b8bb-48b9-a611-a4a822b1d802",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0e6b8e6-c817-4d7f-80e7-cc666714ec2a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46840a17-26fb-4300-bf00-34241ae88735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2daa49dc-65ac-4f20-9865-5b776dc535da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02ac24d-9d46-483b-9d91-c9a43b8bdcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e981a972-67eb-4ed0-8e37-874dd870ce96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e56683-be62-4502-a325-856294bd6350",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f8ab63-0abb-4b7c-af8d-9ffdafe669c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e28cf1b-b4f6-4b36-ab9b-b43c89ea63eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ca0dad-13ba-4e56-8014-4529f8020641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e752b6-6faa-4f7d-b32b-8b3704c5ed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4feb516e-4528-4fea-842f-ef20f09acb5d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0df6a90-f61b-4c60-8a8c-176c57747026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a28f700-4ce2-4d64-9407-e664b7cb5f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913d498e-d5fc-414e-811c-6e62b7861574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd59a5f-46f1-47c1-88f7-2f6fbc2dc54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac7696c-af57-4878-8e79-066bcd84b75f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97c23d0-ac50-4708-a271-5facc8e00478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e6e666-4ab0-44af-ab24-424b969f86fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1006edb7-c177-44d2-a608-edcf84a06434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "917ce454-d2ea-419e-865f-9f1bebba70c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8669873f-f991-4429-b4d2-877f78a42840",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e60ad46-9920-4e03-bc8f-c4fe9e45b630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fb5578-1634-40b2-a1aa-fe379f16f6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138098bd-3732-4cef-aee2-f45bbe83bf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a649169-b0d9-415e-a97b-7990884d0b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43baacc-36df-409b-bfd9-8a8147045c68",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c4cb7e-1fc7-4f1b-af62-9b459599abc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca2afa5-392f-4a4c-ab1b-7d39f09be6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff7efc0-550b-44b2-821e-346c4584a81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5786b3-db38-4fe1-9c8b-016f809b1114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807dba6a-e865-46d5-ab19-ff2380092c8a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8c222a-894b-499f-8160-e70e3fafc393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222a8c6c-4735-4cdc-9f04-b1d525c7c0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a8cebd-8eee-4025-8a98-adc4c89a3452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8bf5fa-b261-4405-a0aa-1c277a34bcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f0954c-551e-4f85-8f76-e1b112cb4983",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f30fa5d-b78a-4173-a174-d2d2b1ecbce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b3fe3f-cbda-4441-95a6-6d81ce1e331c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942f39a6-260f-4239-ac1c-0cf401c3f564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a64f75a6-e07f-4ba3-938b-f002f1784eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb62cdd-593f-402a-85bb-11605ea5887c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688911b6-1d29-4570-988a-132698532739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82efc0e-e606-49a0-9784-d837ac97a0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5536c2d9-3e39-42af-9225-fa217963b11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11801273-57d2-470a-835d-9900209e7d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c609d28e-9354-40b7-911a-45343c135146",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09c3bde-01b7-4dbf-9052-5b3a0684e01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9e7dd2-84a9-4c98-b156-83b0f0e0dd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4e0092-1c83-45f1-9a36-32c0872ce14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1c779f-3b91-4f61-a03e-0dd82cde950f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c6a184-fc3e-453e-908b-3c6bd7f7b1fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35df54ad-ebe1-4133-b599-4a9cd2e3445a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d753c389-497b-442b-a1dc-67a8812de8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e66c62f-b1d0-4ce6-84e9-c9c41d906baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c823e7-b801-4ac0-905a-8abf41f28a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7d63c9-ac60-4f67-8a64-1b527a23ea43",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fda5d3-9ac0-4159-9548-6d2feb7c2fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c3926c-d931-41bd-8736-e762667267b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e677cdd6-a8aa-4230-af9f-1b22814a752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e832b967-654a-4056-9a63-d2cca5520985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cec002-ace3-45ff-b18f-82ea53bf2d09",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d03a88-a073-4e0d-bc7c-ca38b242e301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca2c281-0d79-4d11-94f6-c3acf82597df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc7b3a6-2f43-46d6-bf47-663c25a6be0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d0eec9-ae51-4ace-8158-485111223882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b238c1-721a-4e9d-b604-d305e62f1651",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e349266c-72d7-4796-9849-8423f04353dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341aa10d-529c-47e7-ac9c-62fac2d36ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee67cc0-37da-4e0b-a7b8-93cc69ce6af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f87d15-7c1e-4c31-8959-974db06b4dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d12a89-9f83-4eff-8850-e1001cdc10f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6897676-46ec-4d02-a368-0e3e568abf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a06fb51-bda2-4eb3-ac37-a2dc9e87bd21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2323c89a-6849-41bb-8e36-029d4e32d593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b4e49d-d403-4dd4-915c-5163004619fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37575f00-c08a-4bdc-b9a6-27dec8e60489",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c91cd56-75bf-482a-91b2-1e8a297536f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220e9f6f-ed89-40f3-92e5-01dab0cc182f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896d46d3-65d6-4434-8659-f2b0d34b1021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2476ae7-2cc1-4ff7-a27b-0d91c427a457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34104ccf-b085-4ed9-917e-d5d15944ced3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c378ecc4-ae14-4dae-a3bc-df10f08a1ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55cc239-8a6c-43c0-8131-8910b216aebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb16339-6f14-4fec-9bb0-49843bb645aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d07672c-6c8e-4037-9460-cfed6bf034c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5cd93d-dbea-45f6-bd59-744add74762f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce7032c-c96b-4602-a86a-2e30d5096770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59001265-c3ee-4252-aa15-9569679966d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed5a387-acd0-4baa-8ba7-3a7817b8622b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9294b7bd-9d42-4dbf-b0d9-64dbfba93676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48f5327-ce68-45bd-9ee3-892cb91f7808",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8cdbd1-1d81-4708-8aec-a59a666574fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dee8e62-9692-407f-8fc2-f50651b66f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d28c38-6c20-43b4-9883-f7ee65c81cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81eb317-bd76-49be-a1fb-6b4aa2cda725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930b5722-eca7-4cfd-bde2-4684a45ae24f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a1d571-5f5a-4099-b9f5-75ac844a5145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8464e6-6b81-4a11-a716-74df53466b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee63087-a645-44c1-bc18-6300ff28ed97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6dd051-7e5f-42a9-883d-aa15aebcb5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c81b12e-3aa1-472b-9965-5d133244b24c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7b218d-504a-48a4-975a-1b9edae555bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f864f61f-de40-4563-9187-d6e3a612f0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078ac8d7-cc2d-472d-8d46-655cabb02fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55fdb5d-d78b-462e-8008-873ab4c5f592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38a2f76-e995-453c-b840-2fd58d8f4ab1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17688e9f-f751-46c9-9b0c-98b0b171308f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1efa644-be51-4e51-86f6-5610b3d1f349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3370f70-76be-4af4-8ede-fe02b40e6598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a797743-6ad7-4022-ad85-911400b44fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b438ec-7702-435a-a363-3503c7a56835",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff28273-8d69-4fa5-9490-4e9c079badef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a82935-b1f2-4691-9445-82f10b4dada5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd46d86a-2ed6-4de4-aeec-7cc53b3e06bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ad0cb9-1101-4315-84f6-dbbbbb353487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d60cf00-ba73-432d-a76d-17e288cab97f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b708573-8022-4c8d-9498-c99148a79974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050d99d7-dc92-4969-9e66-c7713de18aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f7ce71-acce-4866-b8cc-d4386022b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a04772-e11e-4cb0-981b-e90d1cc2e1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f74858e-744d-42ba-a7bd-89515e07cddd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f99db9-546a-4a72-92d8-b0811abc9b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7509202-53a0-46d2-8927-e4baf178ba33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbb9944-8113-40fc-a4e4-838a18e76b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee5643c-e1e8-4b1e-a690-8af33706d92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c6dc62-96af-4b71-83aa-6a4a2ef921ba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7029a657-8bce-4178-b8e3-eed71e8a94e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e61f1f-7afc-4742-82b4-66dca623c940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779e490c-4fd2-404c-a822-6f636d38ad1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4282c0e0-0362-47af-bafe-00f777eef185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac89527-eef6-438e-b262-8a4c633e6b54",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4185414b-ccac-4a82-b881-4c2caff1dd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51afcffe-a1bb-45d7-a7cc-f3579508cac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de9b9db-021a-4e71-8ea3-18828d9b10e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f85cbf7-60ba-480c-8cac-34560dd12add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc61922f-40cc-48f7-aa3b-4c8bb3679a5a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d920d208-7616-44f5-a3a9-84a903c0f592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2361f51-16c9-4cba-a684-aa6be8dcb2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb631e9-9dd6-40d3-9dd9-90d9d714bcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebceeaed-4bb1-4561-8dd3-0c1c8805099d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f611a197-67b1-4899-88f0-74a754a60e6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0578f4-0b91-421f-afdf-d9b79f80bba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acb9ff7-6679-4649-9fcd-660f67b7a3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169b97b6-94a7-4210-98cb-8b5e8180cac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20714dda-288b-4e88-aad8-aa309fcca2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293661d7-a1a6-453d-a61a-c9481dfb8a31",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad5a449-58da-48cf-9ba8-43b88f2c1204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd14702-5b54-4268-b3df-b627d2943234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78690310-6114-49f5-9857-10f6e2c184d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac769d7e-e583-4e3d-b886-0f193c181228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac21b5eb-02c2-4a95-a7ab-6930ba89793e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2a424d-51b0-4582-a5bd-44b55aa78dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e0c72b-ce9d-4ef4-baf3-536b7fc81450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5e5a94-b681-49ac-a19b-e16106a6eca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c79ac98-326a-486e-aeb0-d04646a0549c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8168d54-f764-4e92-aea0-5dd8a1ce33bf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75fad43-220c-49ac-a7a6-3fed9cc5975b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b086748e-146e-4ab9-9274-a3276f3bd0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbc1aca-e16a-43f0-aae2-41e4a7dd4582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba22b4c-7f42-4e1a-b3ca-2007c37ad5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32b2bca-4b26-4d00-88f5-0e22f2320f61",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8462d44-7f54-4c94-9854-0fd5ad3f034b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd263a9-5a97-423d-b377-d25ab912078a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6d23aa-132e-4d8a-962d-9a335c11f4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7b626d-ab5f-41fb-8698-3917bf9a132c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7a16da-bbb9-47b4-8fbb-0ba5fa1480cd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feed584c-8059-4d52-b154-19ccc2d62631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8f41d1-ae09-479f-bd74-da25eafbab35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9177571-c3f1-45cf-afdf-b6f3f0a1a442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52a63b9-5651-4c4c-b4f5-2a27c0c287ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacbd823-5e97-4700-b001-13ba0d2f8c0f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2a0115-ed3b-41a0-bc7d-f287f1ab7d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbba4b83-57c7-4942-bcd2-78b58c1fee85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c13a490-cf8c-4cf2-bbcb-c791f95f38e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56f3f65-5ce5-4905-bd04-e5355b1b7dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfe02c0-025f-4e5e-9e45-da75539d72b0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8ec8c7-1ee3-4ccd-8918-7397bdba7787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46697595-8b40-4efa-a823-c99e0c365e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622d8af1-d321-43bd-a8ab-b1ef34a59f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13b0d7f5-6c8f-4c76-8b9f-d9f318ade801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91503184-73c9-4799-a9e5-cd65f85b1a02",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a38cb7f-d54b-4b83-aacc-e6ad280ecc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb845564-9f72-403f-a6bf-46115e024719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac51fc2-e079-4154-9c60-7bc9f06b7065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97271098-e487-4761-9877-f28956160008"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3acff202-2ddb-4d1f-a57e-6d7693e89e92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c1ed462-ecde-4915-9de5-b7133592ee02",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9588736a-d718-4ccf-a21a-c8559d62df1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f03dd499-4069-4b8a-a19a-0a90ec53f026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6d61cd-60f3-45da-bfef-c7f7edac77c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a39f2011-236d-43b3-b38d-5a614034ced5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d57b372-9305-4860-bfd0-ed3ef3cf0941",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8780ee21-7b03-4ecd-818f-423e4ecaec3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a52d630b-98c5-4988-8248-797eeb4ce1be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "375bb708-a950-490d-a2af-564cc0214dd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e242d78-f40e-417d-b10b-586ee1808e4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cce4e43b-bb6d-49cd-ab91-c93a5ad5a490"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "516e82b3-aa94-4bfc-aa97-ad4ecae8c0f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0991841f-d540-444a-9ac0-166afd4a5506"
            }
          }
        ]
      },
      {
        "id": "ace76319-e8e4-4d9f-841c-e3d0cf47e343",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b7943f23-e73b-4f5f-a32d-816bbb929c5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56b51e98-00a4-460e-8f6a-97a52ace421f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "924a22c6-882b-4b3d-937b-ef8b5f941150",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d433ff-afc8-419a-ad5b-83253ece056e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604ef597-dfdf-41d6-847c-aec35240b4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5037c87-51ec-4e31-afe6-64cfab3ca3ba",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8867d8a1-76d8-41e2-b683-1f74c85d37e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71b088a-107e-4a7d-a7f6-c274565258d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7222610a-3ecb-4838-953b-16cc858aa3e3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6754248f-864a-4bc1-9342-a8fa3c3a548c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f916c06d-58d5-4f54-a85f-2af0744a8536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3668f4-40f5-46de-b4ea-1f534954566f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f12872-1706-4b6d-ac52-709daf317793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c3e2ac-51d6-47d6-a3b6-2bd2eb89ad66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10940add-6a21-4d88-b324-3c7c4e106fae",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3ba1e9-c63e-4d71-b908-50dae3beffaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb5e255-bd1d-4018-8563-97f99f815394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e2010e-e5a2-48b2-a3c0-5b64174e9141",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac3cae7-dd1f-4694-b2a3-c62ae19832ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab459c8b-3fef-443e-882f-ad265c553d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02b363b-1f9f-46e8-b72d-4a98d3b65209",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9fbd80-75d2-4366-bad0-ce9b177091ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ec7474-9478-4217-89c1-13435edc29ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cc7ad8-610c-4bdb-a633-001590c71deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f678038b-37a4-4a1e-b351-9d4ca84a1977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4c3a4a-c10c-4974-a30e-26fb523e4c5c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c288e831-bf57-43fe-80f7-2e8a1ea8997a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5654d30b-53b2-48b1-aea9-0440ac42f6ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a9044e-f835-4eef-8a4c-b9785bd49cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552c7b88-f170-4b62-b9a3-7e284d8a40b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aa705f-b67e-46f0-8977-b9ee7b1950d0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08ff4f7-412c-4e9e-9370-0b2fa6e7bb49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "685fdc46-2397-4153-ba3d-1520cf0e2fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e0842c-e1ae-4bc2-adb6-238b6cf9cc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83ef607-46e1-44ba-bca8-07190f2e57dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d28a65f-1111-4d33-bbd6-425f3bfee9c0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96eaacf9-a046-453b-b1ac-9c5191549b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c13330a-e5cb-4759-ba43-7be3dca07ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25d0849-d3cf-43cc-9e60-9bb82d1d68c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52190459-4407-4d72-90b4-cddb8fb525a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018c73be-3228-4e08-88c1-65ac4d4c7aea",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f241db81-cafa-4919-ad81-7fb0702c6523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634e0b3a-93f0-4c1d-9510-711071d85a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfedc7d-76d3-4ff2-88b7-749436a575c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf47ff9-d090-4fd6-b2ab-71e269305d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc59ac5f-a2ae-45bd-8c94-95bceadf1c54",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3756d978-d19d-4669-8303-7a3b2ee69e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80f0208-28a0-495a-aebb-fbde46499148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcd958f-d176-4484-831e-4d6fadd89124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bf7f74-e968-40af-a03a-335aaf3ed6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f052472-5264-4da4-ab73-cef19ce31601",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64569fff-1dac-4826-8a12-cbe3fcdbe824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34f6821-bd2c-438d-8a4a-a64248800f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc182a6-5ed1-44fe-950a-9be559172c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7116374d-9ccf-472b-a728-a80ee096d9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57a8df0-8882-4a0d-a091-b1017c6dfec6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71238b9b-615e-4d20-9669-86cbb6570d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2566b8c2-88dc-4ac6-b90d-4bd3e681e0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5446fd02-23fa-43f6-93ad-4c90a0c2b227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076cf7d7-4e66-42a0-a8d7-145959694bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bb792c-0692-4f12-8710-641973b305c7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0262279d-ce81-4625-8602-c28fe1e193a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4cc321-9529-4a29-9653-4060235d934c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae548a19-7de9-4053-8139-ce00ed23fc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b607d40-ba30-4621-bd26-dd5927c00a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e65d6a-8753-4eef-be3e-11a400a430f7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1941c5-ed6c-48a6-81dc-22dbbab77305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1112ce-980c-460e-8eba-0d63b59fe27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdfecda-3bd0-4b02-ab26-bc1063e650e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7a83a6-49d2-4028-be0f-54a8a2acccf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dcc5f7-90f6-4fe5-89ce-a9414755b2f8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b90874-19ff-4752-9e39-419f31718244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686fda2f-d0f2-4fc9-87b8-f48082d59014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d4ea81-d2d0-41d0-b204-74ab0c6d0757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbbb2dd-c20e-449c-8d11-d019eeec5948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43c6954-40cc-46bf-a493-5154d100ba07",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5cc665-b94a-4740-ab12-a7b0dc6a3e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14c5495-a272-4beb-af93-14947696b6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d4d0c8-1ca3-473c-a15b-7b205d7f200a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f621623-c31f-4be7-aa29-4122031c5f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9480e3e8-4c68-4f45-af32-f3176c677930",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d1ab3a-9a4b-4037-8084-7abc1ecfb4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ba012b-a896-4bef-8a1b-2b2803a56267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c9d3a7-c844-4758-8832-a514b70deca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f55058-df6f-4f1e-a6b0-44c6e5918ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2feeb5be-f59c-4dfa-883e-d3401fe742eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddcb2ac-5079-44ff-8e61-222ac2e5b0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2a20e9-e0c8-4afc-814f-9aec6c2ffc4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acb67d3-5f06-4422-8ab3-8558c4af016e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc40a75c-36a2-42bc-a18a-16d50ba785fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beca9555-012a-46ff-af0f-3705f4a8b6fa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ae7819-d53d-4559-bde5-1e6b8e0a82c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af1b924-5887-4bdf-b088-7971c496849e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c42dbb-a439-49ac-af84-41c5a58d2df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d96694-018c-447a-8b9c-4cdbb7f41bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7043e0-3437-4fa1-adeb-dd187edcd705",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7e82f4-8c45-466e-8af8-641f6f7590c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e68ee97-365a-4853-8b62-e6c8d97cdde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1c081a-9569-4f34-baae-d78a6b65072b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c55e4f7-1aa5-4c44-835d-84aff7c77bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16106ad-64cf-4087-bd6a-10744b30a177",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b82943b-5aef-40f8-9c61-c6c102cfee30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9f81a7-91bb-4a81-bd3e-63b9a41055f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefcd775-1888-4ff7-9e7b-52f0aa88943e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbb72a9-1f69-4ba1-8d57-49fe16896187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350ddc5c-0551-45b5-ab26-8c280bf3d580",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2e7882-71d3-4e4f-a48b-aaf53e073b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2a217fc-dfbc-485d-b239-e6651c6ac2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60339187-a6b0-4c2a-819f-b61679ba5478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a95f693-aaf0-4572-84a5-2cbd1495b6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083099b8-5289-4303-8ea4-34cf703fb54c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e2f69b-394d-42eb-8fd3-8677277a3028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae3f313-9ee4-4b99-bac7-e19ccc336904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332563ad-3b2e-4b84-9cf9-5dc99f03d7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987504dd-048e-4650-8c57-4fefda076969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b77324-2c97-4a7c-a198-ffb55b4b49cb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67307623-6ea7-4645-8abf-be675d75e481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a44a60-3fe4-4a31-9c1a-15cda50dfbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec91f586-3209-426a-a003-a2e94f402612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ebbf14-db6b-49fd-9ba8-281f8f4f0a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a554b520-c4a2-4481-83b6-608c3db5b441",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba13e21-2c6e-4f27-963e-a8d00d526f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbe4301-dc0c-49b8-8d84-bfe3a2525630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ee1af6-8ed5-4a35-9a23-38c1cb61c847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70ebfd0-6c9e-4554-92de-a110113f7ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97783f9-dc1c-4154-a947-55c7416c0e87",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a5d967-024f-4b5f-a4e9-c09717cfc63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65604ca-c449-408b-9d26-9393d30ba48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c111cc6a-15ac-442c-ba15-7cac81a78db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acca74e-3bc4-48b4-8245-48419e5736d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95ed4d5-438c-4e4f-a88b-908c383f8345",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573233a1-6dc5-4d8e-b72a-c083fca02249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de72d3c-6f04-4e07-9fe9-7fa6f68e0b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45bba55-58f9-49fb-8354-da446195c0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1d7ac5-8f39-492d-8d5e-b1ee539c1885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bf9f76-94ff-4b12-97f3-b8d060818070",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbad1a5-e26b-4ca3-8185-9bc61b39ebd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "800c1687-e583-4a7c-a223-00fd2df786b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb31974-8ad1-44e5-a7b8-4aabd654f0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21d5fab-8bdb-437f-846e-a6cc4739e1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c9dee2-ddb6-42bb-8fc0-0f7c56b14e03",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce926a3-f0be-44f3-a3db-7e4a59db5df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a241aa96-a544-4bcb-981a-107919ee50fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b77bbb2-873f-43db-887f-7b63520af5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e7299c-0b84-42c5-a16e-ff333dc89f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069fb219-6b89-4b46-9839-c879f7011e7e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdc1999-1a43-42bf-a799-4fdaf8f4137d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b806137-67a3-430f-9e9b-2defe8bc0434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a200a5d-797c-4b56-8edd-39b98ae22ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4258211e-9eb2-49fc-a93e-bca67de6e347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce991d5b-3241-48e1-a278-f4f46e82d443",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a98173c-6448-4f46-bbc9-54a15060d4ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3634cc3e-a1e8-47f6-b75c-206fcf802746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bf4937-f553-4784-b63a-0aa4974603a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1856260b-bf55-43f7-aec1-36fa059482c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbd4968-00fa-46d4-91fd-b2b7d7afe8a7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c807837b-1e21-4122-88f9-7942cc1675ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc03fd8e-1470-4468-9114-6f685bb0a6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eadf6b4-409f-4c67-80ec-fd14d44acbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d3611e-3370-49ac-b0f3-ce77d364be8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbc7799-96db-42f3-a1b7-cc222ed44aaf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dd37f6-d45a-4d24-b05d-2a2b8aaf3b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37448bc5-8a7d-4b4d-8982-a14f46e1ad92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29a85de-08d6-4571-99b1-f05ef059ce34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a16b3e-5868-4bda-9d36-76c056ad9e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741af642-b083-4550-abcc-f8893c59b677",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365ae386-d21a-494e-a2d6-855b2a4f0a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d440f6a-3082-4623-89c5-f6d4d498b182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf5c6dc-78eb-471d-8367-7d68d62880b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4af336a-6b6f-466e-bcca-ad1350386b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ea5a55-b098-40a0-8fcb-9abe632e7919",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f338cdb-d07e-4ff2-8c0b-a1ee99ebdb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3e8826-f82f-4baf-be92-9caba12a059d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b5571e-b3e5-42b7-a18a-96410d3c2375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f12b6a-7cd3-46a3-bee3-934ef219e9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb97da4c-ea70-4e4c-b6b7-481de51cd775",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f995789-c943-4c03-afee-a1bb2ab4179f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b9619c-4775-422e-b22e-8b2916e8c471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d325fb-aec8-4207-91d0-b2b410431a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87122f0a-1f77-4a3e-83cb-17e42366d914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a250f4ff-8bf4-4aed-8ad8-41590bceaeec",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446c1277-b67a-4ad6-9830-7d6041168f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba9534e-ed2d-4ca3-8218-cf132185abc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c6cd54-bcd3-45b6-975b-c34c9424446d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6f5c5a-d5c0-45e5-b376-690401188e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2013e5-ff2f-4c98-abf8-6dd70dd3df13",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3263c84b-1815-412d-b14a-ff45e78b966f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ea8564-b8a2-46be-aa9c-0a4feb4176da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149d7785-a4fd-4cc9-93db-f2b8cc72aca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac56dac-ecb7-4489-89f1-d30257a65035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8e499f-f9f1-448b-a633-3d1af93f8cf3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c900f3-c1f7-401f-b4b2-3cc9b27e425e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1a3a75-ee1c-4cd1-ae50-f2e7912ef87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6472f5f1-a398-43b2-98b9-119c0774ec2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afc1792-3345-4047-a52d-e08327ebbcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef28614c-b0de-4741-aac0-199a1cdbcd53",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062e3f0a-3f5a-445b-8901-9ab2c2997c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ace90d-8c41-4602-8596-5e57bdc919fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404ae9dc-6c48-4f8c-a9ee-624d4295f80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd3021f-672c-412d-b859-10102625b97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cc5633-d4b6-4b41-99f9-d6be8be066f3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60168ff4-681c-413e-ba84-65e2193c75d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc023117-54fd-418c-a552-f8097aa2dee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f63053-50a1-435f-80ae-eece7d21ae4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8954aa-48a1-4a35-8547-81563f409bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf2346d-96ac-470c-ae70-cbef25081bba",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2c6750-bc1e-4014-997d-f5e51c127309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8b6979-035c-4ba3-bf31-b3312aaf910c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a583a3bb-8bc2-4ac7-a953-dcc0f823e724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790a0eb4-79a7-4f84-97fc-10f11834b637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1abbf1-41a4-4033-b128-db47c4bcc751",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b8f86a-c506-43b8-a37e-e0f96632f176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679cd0db-e9eb-428c-bf9e-24051d43b3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012e023d-a04d-40b8-97e8-0accd300e17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfd1185-765e-405c-a63c-5caa7e486f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ab4fc2-fac9-442a-a2f4-776f1392211d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4b5fa5-573a-4d5a-b3e4-f10da2071c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7dc83f-a8bd-44f3-bb92-d3351c828215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d32b6dd-a446-45fa-93a6-4950f2f63bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33af8534-3583-47b8-9642-8b3be31664c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397248ba-ceee-461d-acfe-a4048a5d762e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e679ae1c-feb8-4ed1-b995-9c469fb5e9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0603d5-7d3f-454d-b7be-495a234ef561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8506f67-e71f-44fc-a692-8c99eae59bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a63162-bfa3-4b24-9584-1cd8e8d87b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d7749a-290e-46e8-9b17-24a3faef52be",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fe0b1b-29ee-4220-834c-4da27d2cbe3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba067a68-0079-49e6-9206-fb349e53dd8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593c19d7-de96-4212-8c02-a368f9f40782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93629135-a74e-4859-b839-32fb82351fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6df507f-51ce-4981-a03a-80b6ae01aa22",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b601c67-9df7-4be1-896b-a3f55cabba73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14130d88-fa13-4512-92e2-5f177fd0c5c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96442c2-0728-4040-b43a-33db7112ae33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394df9f2-bffb-4981-9ae6-7407827993e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ae6334-07a2-4b3a-9162-5360598670d3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53835cf3-6409-4ef2-8e2c-88cb3aa40fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4d3937-29ba-41ce-91c9-30be4fe4e3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35403d4-f5f0-4a9f-9141-dd4a4487a1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80a5bd2-9ea1-4e90-9352-c59f594cef58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a14bf48-916b-4c87-ac3b-a0eebb5bc254",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3ce2e6-135e-434f-9562-49ad3382529f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc4a6ae-0d15-4c7e-8008-06f3ae512751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15486cd-f346-4ec0-b790-b4be240d0b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8914d1a2-aa0e-4a77-afb7-8fe91ddb48e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69616488-2421-4ed0-b61b-7d0230cf8641",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2e53d5-29fd-490d-876b-1e3a2a11e3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2d4d1d-2afa-4319-bcd5-a699afe7ae21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11e2ec2-4615-44a3-adb5-3630dad31b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0e90e6-d3fe-4c42-9942-74512b22ed89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871966b4-b835-477d-a988-fd7bd44a7edd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a688fec-4661-4b4b-ad08-acae5a3329dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abff349a-43e5-4032-8a18-afd6338ca731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fc2697-4d31-476f-85bc-da92eb67d9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3166a436-3094-48d9-ac3d-2d502ba417b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc38786-277a-4526-a0b7-f6196cdfc3bb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9661ca65-a535-428c-a7a5-eb600584d690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07111145-5798-4a78-8a76-9c16f9484d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cbc35d-e36f-4a0c-bd9c-00d53e9991ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c16a067-8c1f-4486-b9d6-e6f1a747176c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4e2e90-6c01-4413-b80e-610dc65c9559",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a32c57-221c-4c04-8372-018eb612d2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785be4a5-2353-4474-9514-badda8a7752d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1527defa-e83e-478b-826d-a47eb1fe3556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5ff11f-e241-4758-ae53-44b67972d3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919cb3c7-7164-4830-b906-1fc91673ab77",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc78ae31-94b6-4e73-8e6c-0c16ada295eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e60c85-1afd-4007-aeb6-acd7d3ed8575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d40ba4-a6e0-4031-8940-6713b4be3e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e104b0ad-7897-491c-a6dd-db62f8974cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e7f75c-51ee-44f7-9642-1a139bee879e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd5f106-1be1-42b6-96e6-5f62a625d2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea391890-9130-485b-804e-895d017c4a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4285d5-5282-4e38-b447-e758a1e3a2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea5f58b-90e1-43ee-996c-f39f1b5dc5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca2f200-5f51-4e27-ad56-2bcdbf862a44",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0c3085-e92d-44e5-9d91-3026d444f871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb06e353-fa36-47ba-89e1-63176d9f0d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc44412-6c26-44aa-8f9f-448990c6312d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82af3790-75b8-4a34-9756-de0332e66176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81369ad4-755e-4d10-83ea-a268362822c4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc9838a-19b9-485b-aac0-75699162cc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b63cf0-8cde-4a1c-b984-8b3775addf7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd59b744-419a-4b75-815e-ec515e8ec5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc93508-0012-4426-aefa-3a97e35e30c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d396f39-6c93-4185-8d55-ff72bd49324e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f27b05-b971-4214-a0b3-4687a837994c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bf75ce-0da5-441c-bd9b-53b061902b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab58eb0-2f8e-4731-8ecc-067959c8d97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069688ff-c74f-4b91-852c-d787d1aa6559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3615f00e-7f1c-4ad1-8ee7-6356f83950dd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3b9a31-3f93-4c43-a78d-b5689fe0a4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b0f92b-cc02-4028-ba74-0f05ba2c4068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187a11e3-fc75-4614-8c69-5eff9df974ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa03f2f-3be8-4570-a2cf-a0c1744a9f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4082bbd-f6cf-422c-8d21-1d1c6bfe238a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aa929b-2501-4a1a-8956-74ca7d922819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73f6093-1f72-4dfd-8097-3698a9a18432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e129b816-c4de-4a90-bff6-b782cb2ef9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445598ec-46ee-4ac3-af04-78b6b1c6cfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbfea8d-2200-42df-9aea-bebf49c00e2e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9856aa35-60a6-4a44-ba25-5f75189f9038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df74ac93-63e8-423f-b926-14d29984269b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35174404-15fc-4425-a622-6234956eae8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4127866-5d3f-4c5c-9e16-322263e4c27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b5611f-654c-46d3-b087-2852b14a86bd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304de2a2-e2bc-499a-8d37-664485dde29e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b42afc-dd74-44ce-a22d-0f47836e22b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6130fe75-b7da-464b-86e4-32edb0829ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f8bc25-5309-483b-be28-ec9d197a18d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7af368-d2c4-4adf-9f1a-7c9692ea7fd2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884c8f6c-5e45-4c06-9a3e-6e8f559380c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8249fec2-9ee6-48ac-a3d6-078485a4c896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4a0787-e563-4c3e-b9f2-157bddbf0652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2207a0e0-5117-4b41-80f8-60c568ca2b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f313d0-7eb8-4d0c-8523-906928fcac4f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0053471d-ae55-488c-8641-483a124517b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db99c15e-68cb-472c-b042-3be4f2a0252c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756afe89-48e0-4bb8-9116-cd69d39bfaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bc8a89-9dfb-4843-90e7-9e3a56038d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a60cec-59dd-4494-a2e7-7a17071b4ab2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e382d53d-b05d-47ec-a5f4-fbb4a72600a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853e2648-54c7-4b38-a5c7-7a0da6a82e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e9b5ca-0c4d-492d-8228-324f9ea676bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7d5609-7e9f-4ab7-ac22-e7d3d6ac99fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc2554a-ce78-4aeb-a3c9-2e251112e706",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c83ea7-dbcb-4d5c-9c96-87a7ca9144c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a3cfb5-db5d-4b9a-bfd8-2ad609ad53d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf195da-d9ab-4c0b-9ebd-3d5bcee2e187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ddfa5c-2b4d-4bdf-817d-42f893a77769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba93a0e8-c7ee-41e9-a82e-6e6de9eea001",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165faec6-936a-4a3e-aa33-779c8de98f00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d9468f-6ace-495f-b404-fcdb06c4589f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dcc67e-3c46-4f81-afe8-b82cbba4f91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef76095-d9c3-484f-bbc4-9916bf3a4729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3f7eec-6aac-4100-97bb-1a01d9731b4f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cd8e58-92f0-46a9-a7ff-9076f6d40e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c557205c-5389-4c2a-be04-527f36fd3abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6695a780-5478-4374-9579-3f3b2f0c4cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6579e7e5-d3f1-4951-846c-30dea170750e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4caec7f-f04c-4f68-8b8d-d00f20b8d1d6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252078b7-522e-433e-986e-ccd9d0c77c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5785c436-e852-4f03-905a-31c5fa6ae6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31236c1c-0d08-40a9-b265-d4395f7e8744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05083db-3dcf-4aa1-8041-be40b66b56d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b35fa10-0e0c-4cbf-b1b6-2700a370fcc8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fdd501-dcf1-4623-8cb0-6f8869b23ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51eaa83-0e53-4aed-bff9-528f8d844c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0818f7-54c8-4ce7-bc80-676891ad357c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206d29b3-7565-45d5-b7d6-370101a619de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e741de11-2141-40ff-befd-831d30bf7000",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50051ac2-81f9-4e4e-a6bd-8223c99e89cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73ef292-ca75-4cc9-bbce-f0c50981f38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74169889-dfb6-401d-a8be-1a8640081b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0ab178-1b8b-4694-aa8f-50e35e117fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001b8560-d8c4-4989-83ee-9ea95bbd3c70",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b1748a-d34c-4dbb-8c9a-ceaec9fc42d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72fa8e51-84ea-4e6b-9c3e-f2cd9ec42b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bf4692-b6de-4047-b078-05651f931951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b54dcdd-3795-4613-902c-186f4c959f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87cd799-065d-4527-bee0-bbcc0c53a0d8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33f6b3e-3d51-4c0f-a8d7-9531896aa459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924a0fc2-88d4-496b-89f0-25588a426db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79250111-9fdd-427e-b091-b7b6b2f6dd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7843f2b6-a742-41cc-8c59-16306d41bc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6c4d90-ca51-45d5-bc7b-668afc44a1e9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e55b39-7f99-4756-8496-1b8a508c5833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a3f342-e979-4660-a1d9-6172fdd12b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b90fc9-9caf-4f92-907e-7e896bb844fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308741de-2576-4fde-8096-5c3465bdfb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9954ae32-ca91-41a7-b335-87cd5b816e9f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55ae662-5d60-48b2-9ad0-4e25606d056e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67b23ca0-dacb-4294-ae38-52006bd9dadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37148fec-3c98-499a-a92f-6c49f06e6f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e38bcc-d55c-4f28-9e38-04335095b58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcfc432-ad61-49e0-949d-1be2f0f79c7d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d379e1e7-6207-488b-9397-bb69f0247ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c272b843-f768-459d-a0fe-5e431a15fb3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582237af-90de-4349-97b2-b6dbf9f80a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923b5940-4104-4c7c-b2d0-a4658a33cae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73e57e3-691e-4282-8f2e-1ae55ad85425",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825acf1b-e3a0-49d7-bb7f-ca459aca7925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9db2640-4429-4e8f-be4a-deadd6f2fdbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30836aa4-d9a6-49f5-ad39-d17ebae9c8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc5a59b-d158-4358-adae-e7b57b5b05db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a70447-f8ce-4310-9279-e93272def1d1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba009c4-164f-45be-ac25-7555cb051a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2428b5f-bdc7-414a-9730-9c998dfefce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554681c5-315e-4eef-894c-f4764c2a40ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd782d0-e526-4a14-805a-0de3598603ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cee184d-58d3-4673-b20a-b62f8f8a17eb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74206b61-7eff-4a46-9bcb-75ae96abedff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5039e86e-edb8-4e19-943a-5da6c4dbc4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da86cf7-97aa-4076-8b88-57f825a58fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f182405-2e34-4f44-9973-bbc8a43d5f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b84aab-dc19-41f9-9a27-2bff6176ef4d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdaedf2-f5ae-4c3d-97c3-9e2641e6f55e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c5b95b-0c21-499a-8eaf-27dca3a4da9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3904e0b1-439d-48cd-a034-b8bd3d43026c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b0e023-dc03-4cb9-abe1-2d515077ec06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198acfcb-9792-4dda-b520-b1b68733160c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bb48c2-53a2-40fa-9cd6-d8eff184a997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "626f285d-0d66-4f20-8714-a0985a5a93fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf9ab0b-3336-4c65-a7b8-737976e70bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e06a773-5ea0-4e0e-b60f-8995ce6b6450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efc5fb5-067b-4233-86da-956e0193f17d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be6bdf5-b363-4475-a34f-155294d1ded5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f10ba15-25d6-4e53-a5e5-1b2316abea60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bc1b80-c32f-4b09-a111-c7d91d133179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf2d37e-c6d2-4938-b891-0cc931d9123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c196f771-a3ae-4ac3-afca-b29f172ff0ae",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438348ed-dfca-47ef-a688-51169af57152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c44add-90fd-4033-bb24-7a1b875b3c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb1c626-f672-4d05-b5b1-7abd7a13b2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b767a8a-ed05-4978-ac69-c1a6991468f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20f683f-b5a9-4fee-8882-0456db15d947",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2009932d-1c39-4ddf-a44d-27e7fbbe6594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf90547-b1f9-4faf-b94c-3335e0d7efa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b085ce5d-b138-4378-a5ba-76e30644fe94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f64a1d-0d86-4419-8aab-fa3c98e450e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86b0d69-2577-4a96-9fcb-177cc963d9b8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8de497-ff27-4e02-87bc-76ceb9ec19fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a349826b-ef43-4472-b540-bfa0523e6d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2cd3ef-0580-453f-a4ef-45f723e8f820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7213370-cd49-4591-928b-91b791b380d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8453af53-ec4c-4454-9628-de412ad01b97",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de19d531-9c29-4cee-a054-fdea3a339240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7acfe69-9767-4503-a3cc-6c15cba65aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9590584f-7370-42d0-9183-5edd16d9ae21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8e6d40-3464-49d6-9d01-407686a0d2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a70fbab-2713-4268-b20c-7b55f2e5acbc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b112082-c88d-43f9-a5e0-5466c36ae288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b9948c-a93f-45da-952a-4dfe6fcdac47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5417471-76bc-41eb-a1cc-fff5da4302e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0314a5f2-6c6d-496a-afe6-0a45d3f2eede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b69478-8267-4b48-b40d-4f690f7b2987",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18558f4-7da9-43db-8cb4-706c7ad0e2b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da43b03e-4498-4c0f-a3d5-b55567f5ebdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da897b73-b706-41d5-b9d3-75b8560255ca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c2f6be-b7a1-472f-951c-fa9b113c2932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847f07d2-ef90-4269-88dc-9ac40407b821",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023a2474-8b9d-4d3f-80d7-bd8ceedbe94f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8c99f8-7964-45ff-85c2-55eac77e31fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533163b0-ae2d-4dc7-b058-5e2446dfb328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87d0f64-bca5-4f41-ad99-c33514b23315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dc158c-3ac0-44d3-b260-ee0e7ee2ea78",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a2d41f-7dc9-4e1e-b830-d8160b35b5b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5cc1743-300a-46d0-9abb-8e1a24ae6857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e324de-b9d0-4021-9b96-a1df758ad46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928a87d1-8fd4-485d-b523-f5bd0c7021d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844be58b-66d3-42da-bd8b-d894d1207d5c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e956ea-aaf9-4d91-9eb9-1f34e13be20a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336c1652-a28b-4e11-9d12-f0ea9683050a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd1f019-3160-42b8-ae59-4a167a5c1923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6213d12d-2040-4f91-a0e1-21f3cf701c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefdc0c7-529b-4b45-8e49-3bd7ce258770",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6649bb-1390-483d-9893-65fc7e7ec071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a4fc75-081d-47a1-9146-f856dd7e39d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ed7df4-eeb0-428c-95ca-0abd41bec426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b7d05a-9f12-46c6-ab63-fbf086c4c76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb26a74-160f-4101-8b38-acf0a7fd1478",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f978197c-4043-4906-a0cb-da6147f527de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "717d59e4-be47-42dd-887c-429a879c5cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f297ab1-ebc2-4e4d-ac66-ae6fdae45731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1941ea9e-9da8-4e11-9221-fd212e26801a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af78319-6a61-4140-9b2d-5e9f26da6e7b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c364cc9-3fff-462e-a4fe-7f8bb1eb349b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0f8b06-d105-4880-9134-dc1ed050551d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "863cec69-71f6-462d-ba84-db9d88d5e85c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d989814-b7d3-4981-bff0-3fd5803eb32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40247064-154a-49a9-8546-64a38f98df98",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89307f2f-9392-4586-b22c-0a5143847372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d68e91-1c33-4a2d-89e1-7b96d0c13ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3588c6-f1a2-4954-83ca-6e3f5bb5b9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5852b854-7e0f-4acc-a848-c3a86a24fede"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bea7d40-ee02-4697-925a-a91e28a1edf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "626cc169-4b0e-49a8-b6ac-9afe6de0b857"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d62882a1-8349-4add-9ab4-7a0349ef2b89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5250056-83f9-4329-b293-6e715b1c380e"
                    }
                  }
                ]
              },
              {
                "id": "0909f832-7470-42dd-bb3a-97e4280270eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95e286fa-5e13-4efb-bd72-52746e33d357",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f3ce6a-450c-43fa-9af5-e13bf4cf276d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fc2d10f5-d245-4576-be86-cb930d2e3dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee2e8f5-87d3-4d8b-b2e2-03a94c3f0eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b7d7cdf-bc75-4698-8728-9aafb45754ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2517bd4-98c0-4d8c-9c85-ee6028511f6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c09d978-5d1e-4960-af16-709407f1d22e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28a68eaa-85de-44ce-9184-ec50010950ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c6ee952-f838-4317-8ca8-582a12e19a9d"
                    }
                  }
                ]
              },
              {
                "id": "febf6cd2-3814-4e2e-bdaf-37cccb733c4d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9faead67-7a6c-44e6-9054-8f8ae7328eae",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85bf8d1-9f75-4a0f-9e0a-e14050aff5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6a296b7d-5436-4591-b726-1ebbcc30ee66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7e95c1-5042-49b1-8691-57a2d3bc6d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a5d1d9-c9f6-44e6-bf90-ff3821da5b97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d6142ef-154c-4008-9983-d7d5059aca6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce617dbe-9403-4f8d-af06-d9c188fe15f3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b135e95-8d60-4039-99e5-5b9359cbd537",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ff120482-ca66-4065-aaac-06132f27995d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c93262d0-bbbf-42ca-a3c1-8881122493f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fdcde12-4f66-4797-a562-1db5be15208c"
                    }
                  }
                ]
              },
              {
                "id": "0d8627bc-83ce-4500-9ef3-cb0c4af2e290",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cd403fc-31c7-49b6-a2a7-101e76bcf2ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6707632d-773c-483e-99c9-ba1d2ae87717"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d5e02a8-9404-4b91-ac72-e64881360b62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "565dcfae-b6b5-48a0-8619-c467ca291057"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "475eea85-5664-4bc2-b95c-6f64cd67dfd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "60eeb881-830a-4889-a737-dd35f56015d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f7d7f5a-b00b-4bf7-a9e7-d04c601bda60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66d422cc-d116-45eb-9d1d-e004e940e046"
            }
          }
        ]
      },
      {
        "id": "cc5b85f5-c4bb-4211-978d-aa240e5db907",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "508c7643-2501-4476-929e-37ebc88bcd92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb7e33e0-40d1-465c-91d8-d9871e432e91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0439f4d-d327-431e-9cf7-52cbb6ecec9c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d19cdd-16c9-4f4e-92b4-e18be36197b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e39c2264-df3f-46aa-8968-8c3bb4c285f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878e6167-e6ab-436e-927e-d2024c9b11e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9866191-fa07-478b-9b90-7f878ec7a8f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7c64582-4239-4e74-8d77-02e23d1118bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7648b63f-7e19-4593-abde-8aecf7c11d46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd52fabf-d708-4d12-a94e-fabc6a789b8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb7996fb-2a0e-4719-9dea-f6c99c428def"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1827a86-2c9d-437f-9eb6-832998c7134d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "504760bb-eaec-4348-93c2-0afe524d58c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb350939-08f0-474b-a776-5cc9c9d55aa0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16ad27b0-8f66-4bff-80e1-24a001846e7a"
            }
          }
        ]
      },
      {
        "id": "4fcb4f56-7b08-47ee-8752-7f6622968cba",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e06aedc8-abbf-40e4-8db6-58d4bffa0406",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee0b25e9-fd4f-4f77-b0e4-c16a95eb8b3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31e455ac-8e9e-4572-813f-adcf92c030bf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0246d0c-187e-42e3-a0d6-c32038f7fa78",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "579d3a63-15a1-4784-b272-4919caf43b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031defff-0131-4a37-8b97-e79af8eefb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7315fc9-df37-4ce7-8e48-768b9511aa8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e261d79b-0dca-4735-8ad5-06a9bc693516",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e235639-b29e-4f9f-ac0e-33205fcee37b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1ea41c7-367c-40e8-b28a-8d257b7a487a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeda53f2-46be-4f9b-b82a-2cd732ed515c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee51a21f-3e20-4da3-9087-65f5b3504115",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "37fa693c-7855-4562-aa02-8bea2507194d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cc73a52-43a5-49ca-94e8-d476309a9211",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc0a7a81-8cb2-4128-97b3-790e1cba2025"
            }
          }
        ]
      },
      {
        "id": "4e1e06ff-73c6-4baa-b32a-689d4779ce17",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9091beae-01f8-471d-b427-d6ba93a4f494",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddd3b3ae-23d3-4640-8ce4-0f31a1dc6b13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0526dbc-05cb-4cc6-84ea-2f88519ec8fe",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27824c62-365e-4cca-aaf0-be9005940818",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1940ac4-5de6-47b5-855b-0758b2d652de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1d093f-4dd1-40e2-a5ff-541f5128be01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46ead4e5-fd98-4537-a0ea-3cef7898c20d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1b324b0-6cf9-4193-acc1-35c4b3c09541",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e45f1179-4b01-493a-83e6-64f10414d0b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d682af-b1cc-447b-bbed-c79b697472a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e641bef0-ad4a-4b43-b551-445fe000f7b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9d36150-667b-4757-91ed-797561da27c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "edd42420-fb96-45db-8d7c-5d33eb5251a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caa4cda6-8ac6-405a-8758-eb52b0dbf001",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edd9db81-fadb-432e-b465-0adfb634dc2f"
            }
          }
        ]
      },
      {
        "id": "2d288aad-705a-4391-ae27-d5f0d3b3b96e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fc8ea38-987b-4233-b201-367d134e82f6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4372e80-ab03-4bab-9be0-94bc5c7bef19",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6345b87a-f176-44eb-9b33-edbed24b3925",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec7053eb-445f-4a25-a959-85762e752a28",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de4b21a1-0c83-4dd7-8df3-0ca7811953f4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 252.82456140350897,
      "responseMin": 11,
      "responseMax": 9793,
      "responseSd": 1174.7788343225193,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699662821551,
      "completed": 1699662908373
    },
    "executions": [
      {
        "id": "ce66e2fe-395c-45f9-bc2e-c630b90998ff",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f49c5634-b83d-487c-b98c-6a5fa4bd8aa6",
          "httpRequestId": "074c0318-22b2-4297-bab2-3caf26ce3978"
        },
        "item": {
          "id": "ce66e2fe-395c-45f9-bc2e-c630b90998ff",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d3ef6ab5-828d-41f9-a526-a89373a25d85",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 0
        }
      },
      {
        "id": "5e24287e-c8ac-40a8-8d30-2d3e1b2aa9f0",
        "cursor": {
          "ref": "cd7f55e0-33cb-43d7-a07c-3bea9a1d3edd",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7a4019f2-5d8b-473f-a52e-683b637384d7"
        },
        "item": {
          "id": "5e24287e-c8ac-40a8-8d30-2d3e1b2aa9f0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fe227a68-74c5-455a-81b7-82d0c5c69a26",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "33841de6-98a0-424f-9843-afc21455539a",
        "cursor": {
          "ref": "d5dde797-91a6-4f4b-bbd9-f557b31ce643",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c311dc47-5403-4399-9b4f-42acd277f25c"
        },
        "item": {
          "id": "33841de6-98a0-424f-9843-afc21455539a",
          "name": "did_json"
        },
        "response": {
          "id": "ca7a871d-dbcb-4ff7-82b3-71c733563456",
          "status": "OK",
          "code": 200,
          "responseTime": 1808,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eaf771-f781-4909-b804-4cfec08dd4ef",
        "cursor": {
          "ref": "01bf6261-6539-465c-8b56-66979683d48c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd276c40-3aa2-4b2d-a8f3-0e3b558d5a32"
        },
        "item": {
          "id": "54eaf771-f781-4909-b804-4cfec08dd4ef",
          "name": "did:invalid"
        },
        "response": {
          "id": "a1b7e6a3-801f-4961-85e2-c6f9632c1f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eaf771-f781-4909-b804-4cfec08dd4ef",
        "cursor": {
          "ref": "01bf6261-6539-465c-8b56-66979683d48c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd276c40-3aa2-4b2d-a8f3-0e3b558d5a32"
        },
        "item": {
          "id": "54eaf771-f781-4909-b804-4cfec08dd4ef",
          "name": "did:invalid"
        },
        "response": {
          "id": "a1b7e6a3-801f-4961-85e2-c6f9632c1f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2b9777-9839-4559-b39b-1de8cff53d0c",
        "cursor": {
          "ref": "73fbf1b6-75c4-4a07-a626-c27c73060282",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7c1880de-5548-47bb-b2a4-b65b90652564"
        },
        "item": {
          "id": "4d2b9777-9839-4559-b39b-1de8cff53d0c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b7daefed-a555-462a-aecc-4be8bf283f2e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 123,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774ae506-af7a-4b70-9dee-0d7bc356af67",
        "cursor": {
          "ref": "afeb2d78-59e0-4ff8-9d74-69aa111018b3",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "067a75ca-9157-485f-aba5-0d0c03e9d53a"
        },
        "item": {
          "id": "774ae506-af7a-4b70-9dee-0d7bc356af67",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "815f4422-2e7e-4fbb-8675-28d51529a8b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404c8308-eed1-48c3-9b50-b93b2cd46c3e",
        "cursor": {
          "ref": "5c116b55-c808-46ab-a97c-a9fc8163261f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e6f27af9-daa7-4a15-b201-a63517d08303"
        },
        "item": {
          "id": "404c8308-eed1-48c3-9b50-b93b2cd46c3e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "475eb81b-3f65-49d1-9292-d98abe100e97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2c719c-4267-4a47-83c6-95b4aa5a5c80",
        "cursor": {
          "ref": "fc30671a-4522-4c09-83a6-e8aa0847ac1a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "af7276fd-4436-4988-8cc8-70dba02e6982"
        },
        "item": {
          "id": "bf2c719c-4267-4a47-83c6-95b4aa5a5c80",
          "name": "identifiers"
        },
        "response": {
          "id": "4ffdeb99-f61e-4fdb-b61e-64649d7d799d",
          "status": "OK",
          "code": 200,
          "responseTime": 2350,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44f65e2-91e3-4d6c-b94a-3db253a531ea",
        "cursor": {
          "ref": "c07e8850-abb8-4d12-8697-8a069f7d0ef5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8078a929-86a1-4022-b61a-2e63698957c7"
        },
        "item": {
          "id": "e44f65e2-91e3-4d6c-b94a-3db253a531ea",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "79a509be-0c41-4439-887c-28149f179083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcad6135-cb8a-455e-a4e2-c6392da30492",
        "cursor": {
          "ref": "6a8dc6b4-cc08-4ea7-80ea-afdfbb954748",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "46148318-6457-46da-9c8b-499cbfbb9d05"
        },
        "item": {
          "id": "fcad6135-cb8a-455e-a4e2-c6392da30492",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "482287ae-3a50-4279-8c56-6d99d276f27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca78e977-bff3-46a6-8a96-94533d34d185",
        "cursor": {
          "ref": "e647c279-db62-4f8a-84ab-627cc605f688",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "835568c7-847f-4e96-8d4b-dc26eec94677"
        },
        "item": {
          "id": "ca78e977-bff3-46a6-8a96-94533d34d185",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0a9c4dc9-13fc-42b1-b0ec-536510696000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b66c98-c923-43d0-b6a8-3d7325c209d7",
        "cursor": {
          "ref": "947cb11c-5839-4576-9e30-e2142704da6d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "93098087-78ff-45ba-81ab-6f69cc99e38f"
        },
        "item": {
          "id": "97b66c98-c923-43d0-b6a8-3d7325c209d7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d9efc65c-0427-44a9-8587-f30e07da57ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c492f8e1-eadb-4a14-b87c-8f468ee8d23f",
        "cursor": {
          "ref": "43f7a004-a11b-4fb2-bc81-f3461ab64135",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3485ad04-be5a-47c0-a4ae-4974e24c9aeb"
        },
        "item": {
          "id": "c492f8e1-eadb-4a14-b87c-8f468ee8d23f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9ff98534-4257-4504-b802-ec36fde1a24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842d1091-7ddd-4bb7-9e79-6b0872903522",
        "cursor": {
          "ref": "3394e6f4-7396-4093-90c3-7f4f9ee74432",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b1e60d6f-5f22-4b2c-93d8-cce4d4fc130b"
        },
        "item": {
          "id": "842d1091-7ddd-4bb7-9e79-6b0872903522",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "14cc7e30-dac2-49e0-8dc7-388133014d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34729401-bb54-41f2-b2a3-54cc1e77ffdf",
        "cursor": {
          "ref": "d5446d5b-026b-474b-b5be-9bf08883bb70",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "750b7ad6-20bf-4145-abef-63377356bca5"
        },
        "item": {
          "id": "34729401-bb54-41f2-b2a3-54cc1e77ffdf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "91469351-7825-4464-85e8-fef27d5f0989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d23683-6c97-4753-8268-63ab2377b0b2",
        "cursor": {
          "ref": "24f4a97b-de96-4fa8-b132-aeeceb570442",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc897392-78c3-47af-ba25-5ef5b3ccd197"
        },
        "item": {
          "id": "e8d23683-6c97-4753-8268-63ab2377b0b2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8a5d4745-ac22-4e07-80d1-845e68fcca27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d4f733-2ba0-4bf7-bcd1-bc1b7f60a79b",
        "cursor": {
          "ref": "005fdd2b-3960-40c2-9e08-f966ae32502d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a87fbd88-097d-4983-98bc-03648415782a"
        },
        "item": {
          "id": "b1d4f733-2ba0-4bf7-bcd1-bc1b7f60a79b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d3f36004-22fb-40be-97f2-566923f553eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46293c75-41da-43d3-9ad8-966021b45bb2",
        "cursor": {
          "ref": "5d57c0d3-fc02-4e4d-95d3-a08bc670b1ac",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7a8e8e2f-d84f-40d4-9ab1-1f67eaea813a"
        },
        "item": {
          "id": "46293c75-41da-43d3-9ad8-966021b45bb2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5002b974-4410-4250-9858-6eadab1b21a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e4797a-d699-46b9-bcd0-b43c38829bda",
        "cursor": {
          "ref": "680e0cb6-d105-432d-aeb2-91ee13612460",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7f42d377-83be-40ec-8735-0fa7b95f0d07"
        },
        "item": {
          "id": "24e4797a-d699-46b9-bcd0-b43c38829bda",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b7ca6659-4265-4b98-8a7b-43fc2310fa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e7227c-ade5-4bd8-ac88-45976ea7f2fc",
        "cursor": {
          "ref": "fc7b441c-1a5c-4c82-954b-20c444032732",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a0077734-a8e7-429d-94c5-8f423cfc58a3"
        },
        "item": {
          "id": "01e7227c-ade5-4bd8-ac88-45976ea7f2fc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "168d9c0a-23de-4dde-90ef-98de227736ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a985f8-f6fa-4899-b5aa-2cd2fdf9a471",
        "cursor": {
          "ref": "5e4bd1d3-6449-48db-939c-04ba56194f18",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "51c8e449-3881-492f-8e24-4c6505c8482c"
        },
        "item": {
          "id": "81a985f8-f6fa-4899-b5aa-2cd2fdf9a471",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b11c54c5-c799-4702-8075-1826edfe8202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9f02c5-46e0-49e3-aa0d-957fcf6bd0a8",
        "cursor": {
          "ref": "da14c047-f490-4a3d-85d6-117d08073cd1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3bab23d1-49e4-467a-bea9-a1a83e0cf036"
        },
        "item": {
          "id": "0f9f02c5-46e0-49e3-aa0d-957fcf6bd0a8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "31cc0e00-1f0e-4d3f-a664-376b23c7cbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60ef491-998e-493a-aad2-a5ab9210b5e4",
        "cursor": {
          "ref": "96e1e1ae-df94-432c-b57d-967b1c3b4c6f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "120a305e-bfff-462d-8e12-1db2968fc53e"
        },
        "item": {
          "id": "b60ef491-998e-493a-aad2-a5ab9210b5e4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e92342dc-3100-427c-b2f1-c40b94a66247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c801989-5bb2-4f5d-9ea5-50909ebacd1b",
        "cursor": {
          "ref": "c7969d68-8d8c-4acb-a86b-b429f6a0bb79",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e10b91c4-d9d1-43c7-9a1b-996f4ce84f62"
        },
        "item": {
          "id": "0c801989-5bb2-4f5d-9ea5-50909ebacd1b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c2e82b28-81cf-4942-817c-9d507d587f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98bb657-f10f-431d-81fc-7dd0d4f1cf9c",
        "cursor": {
          "ref": "0f486168-14fb-4dc2-a5e5-c105aefda9d3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "87e7be97-40bd-4d0c-a097-fb762111d8b4"
        },
        "item": {
          "id": "c98bb657-f10f-431d-81fc-7dd0d4f1cf9c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e2d4212-7fa6-489d-bac2-6ce49652b4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122eaf70-9b4c-4dc2-a135-a5cf4ff1c98d",
        "cursor": {
          "ref": "c1e2652f-9044-4dd9-9b7c-cc0f564aea4f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0e008e89-e0c2-4972-865c-e5e5ae7482a7"
        },
        "item": {
          "id": "122eaf70-9b4c-4dc2-a135-a5cf4ff1c98d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3901eae7-e8a2-4456-84cb-4e7897db5bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9cb156-adf2-4df0-8d90-0dbbd503281d",
        "cursor": {
          "ref": "84b0682c-088e-4467-91ff-98638a0d990c",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f8f395f5-d418-4d9e-8ebf-c7892b40b1a2"
        },
        "item": {
          "id": "1e9cb156-adf2-4df0-8d90-0dbbd503281d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4c575cb9-1aef-40aa-b138-4123463575a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2336961e-06f1-4dbc-a794-26921e4e10a2",
        "cursor": {
          "ref": "14a4c6fb-a877-4e4b-8b1e-68e59cbfc59e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c10f4a51-3dd9-421b-9f01-67767d427637"
        },
        "item": {
          "id": "2336961e-06f1-4dbc-a794-26921e4e10a2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4eccfb96-c471-4bc3-bf94-5e7342a01d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460b4cea-46c4-467b-9e28-d66a6f111eb0",
        "cursor": {
          "ref": "c9c5fee0-744a-4443-95f4-bcef6ca5a474",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d9074734-87b3-436d-8fcf-4234c16b1b29"
        },
        "item": {
          "id": "460b4cea-46c4-467b-9e28-d66a6f111eb0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "449c121a-9015-489a-b728-4cd9cb41622e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc634c6-25dd-4b67-b717-85b9fb0d650b",
        "cursor": {
          "ref": "cbf078b5-294c-4a79-8ca7-89bf80fbbee8",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d889b7d0-a817-4cc5-a0da-f85f07c62aae"
        },
        "item": {
          "id": "bfc634c6-25dd-4b67-b717-85b9fb0d650b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "67eb2db4-20d9-4a9d-ab6f-ba405e4c32d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee366039-d51d-4780-9e79-68678fa220b4",
        "cursor": {
          "ref": "e6d53384-a0ee-4614-a6a5-a35ec28dc498",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "04bf7351-4cc8-4ce8-8f72-9381b57f0e97"
        },
        "item": {
          "id": "ee366039-d51d-4780-9e79-68678fa220b4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3ec0acda-7387-456f-a41e-9a79731a94f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0229d982-169f-4f1a-9e9b-9d9fbf142f3e",
        "cursor": {
          "ref": "84b3cd44-1069-4173-ae7e-fa9007214c2f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6c185543-2c17-4fa5-955c-889620d85fd7"
        },
        "item": {
          "id": "0229d982-169f-4f1a-9e9b-9d9fbf142f3e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a4b998bd-702d-4a0e-95ed-a5e876927028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d40f88f-dbdd-4b94-9767-fc9b2030def2",
        "cursor": {
          "ref": "8098a7e3-27e1-4782-8698-08ff0578a40e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8056fc2f-5e34-4b60-ba49-f5679a3c6b43"
        },
        "item": {
          "id": "0d40f88f-dbdd-4b94-9767-fc9b2030def2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cef3cb6b-4dfd-44c0-8a7c-0ed85d543457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20941c6c-7075-4421-bfef-25f3c37635e9",
        "cursor": {
          "ref": "1aac74e1-ad43-4451-a75e-0d01e0b80d02",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bdc5b1d7-6015-4203-9e73-55f2309fe3ec"
        },
        "item": {
          "id": "20941c6c-7075-4421-bfef-25f3c37635e9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c2a95f58-11fb-4764-a484-7bda1491d4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f564c12-9188-4e4e-9d5a-f0864a887f28",
        "cursor": {
          "ref": "a020add0-593d-4c81-b4f2-4ac672936652",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d5079d2d-e514-4f4e-a09d-d7764898ee50"
        },
        "item": {
          "id": "7f564c12-9188-4e4e-9d5a-f0864a887f28",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a19b15c8-9340-4f5a-8445-545ee04b28aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8678e0-e3b4-43c3-aa35-1b3e99743c1f",
        "cursor": {
          "ref": "9f98906b-8db1-4033-8c5b-8abc65a20794",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "484a3948-c200-47c1-b5ab-ec82185b8bbf"
        },
        "item": {
          "id": "4d8678e0-e3b4-43c3-aa35-1b3e99743c1f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0a546f9d-747f-4230-bac3-0aed91fc865d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886f90ba-924a-43a7-93cb-20c5a61d070f",
        "cursor": {
          "ref": "c9af13fb-d99b-4c05-a56b-360070c20c21",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "16c8589b-8c15-4d7f-a724-e6316c2ea86e"
        },
        "item": {
          "id": "886f90ba-924a-43a7-93cb-20c5a61d070f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c1209ec6-ca17-4262-835c-0b668356c7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ef95df-4707-4872-9f0d-cf7172289538",
        "cursor": {
          "ref": "7dca1490-ab7d-4c9b-8474-97278054ee66",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7a9a8be1-f842-49e0-b95e-5de36741e518"
        },
        "item": {
          "id": "59ef95df-4707-4872-9f0d-cf7172289538",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c7544a92-b7eb-44c1-bd72-fc6a712f52c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5a93ef-3deb-406a-9bc1-4facec1009f2",
        "cursor": {
          "ref": "e975329a-6b7d-475e-9aa3-397a8de8eca1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f459b266-6973-4d82-8e2a-31b805543086"
        },
        "item": {
          "id": "5b5a93ef-3deb-406a-9bc1-4facec1009f2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c626a8d9-e77b-426a-942d-712b29792cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce308c7-01f7-4d57-8a98-413e77d36d69",
        "cursor": {
          "ref": "de0bbccd-f366-4703-8aca-3b173994c79e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6a86f590-4b65-42e8-9167-ef51a073b26e"
        },
        "item": {
          "id": "3ce308c7-01f7-4d57-8a98-413e77d36d69",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ff316bad-b025-4dc3-a80b-7163c0731ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6e3d48-9c6f-414c-b0ba-034b5fd0fbc5",
        "cursor": {
          "ref": "d9f2a9f2-dcd1-4a7a-9d10-8a27d079c5a7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e3e1009d-a124-4d4e-8489-a9eff6876b39"
        },
        "item": {
          "id": "ab6e3d48-9c6f-414c-b0ba-034b5fd0fbc5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fdb75c4b-97a8-428b-b27b-2f49e840aac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fe52d1-7b41-4c4b-80bd-624795fa1748",
        "cursor": {
          "ref": "4686ed33-c3b9-49a5-9bc3-5610cc2f63e9",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b056a220-a7c0-46a9-909f-1e3752297a7c"
        },
        "item": {
          "id": "55fe52d1-7b41-4c4b-80bd-624795fa1748",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "589bbab6-3c19-46d6-ab86-cb790f304566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe30a50-95e8-4a17-9b24-11632a12a8e5",
        "cursor": {
          "ref": "d9e3cc41-4167-4cc6-a05d-600cff0ebc07",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5df500c4-ff9a-4943-a176-b5bc4b2b26ef"
        },
        "item": {
          "id": "ebe30a50-95e8-4a17-9b24-11632a12a8e5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e0a3c350-5151-448c-9fae-fa24088d1def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57892f2d-6310-46a0-a495-8e10e4b31b54",
        "cursor": {
          "ref": "1bb883f2-faa8-4ec8-b2c9-7f2c476546a6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bc03aa6c-ab28-42e9-9f64-734fb22278b2"
        },
        "item": {
          "id": "57892f2d-6310-46a0-a495-8e10e4b31b54",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9c2b71f7-d513-480e-bb3f-3142d4495ecd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1473,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9753f5c7-1c5f-43d7-9740-cc8c6724ec52",
        "cursor": {
          "ref": "73b9e75c-12a1-4825-bee3-4aa98255ab3a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "767cd8c9-496b-4aa6-bf97-a9d244208845"
        },
        "item": {
          "id": "9753f5c7-1c5f-43d7-9740-cc8c6724ec52",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b026a54c-1a08-453b-81d1-77f87e26dcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a56b20b-f4aa-410c-9c95-1358146c09d0",
        "cursor": {
          "ref": "94be591a-1f9a-4ea2-aa1c-70366dfcd6ad",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1e04d925-e9cd-444f-9a68-6afe44198c4e"
        },
        "item": {
          "id": "0a56b20b-f4aa-410c-9c95-1358146c09d0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "eb32b3a4-3eba-4756-a2e1-c76f09739a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f692a7ef-175b-4a09-a312-75a90fe486bc",
        "cursor": {
          "ref": "867bb6f0-bc54-4bce-ae1e-a652e0fcf14e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e8ecc46e-6ca7-4c7a-a26b-5a7da95d535d"
        },
        "item": {
          "id": "f692a7ef-175b-4a09-a312-75a90fe486bc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3a2a162c-7ab9-4ec5-b68a-9df861de2cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86395bc-cf67-4f30-85d3-53373e4cd982",
        "cursor": {
          "ref": "0d5f559d-2387-417b-9aa9-679848295b62",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3f661b21-f6e5-4b14-b5b5-f6db2ad807ee"
        },
        "item": {
          "id": "b86395bc-cf67-4f30-85d3-53373e4cd982",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "de65810c-2826-4119-bb2d-6253c1bb236f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f93a59-0578-467e-b560-f6d3bcd2c098",
        "cursor": {
          "ref": "36fb0f90-770e-4e09-94a1-ec2e3a9ab3a1",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2a52dc1d-af7b-4f00-b0a1-bb07b9879f77"
        },
        "item": {
          "id": "25f93a59-0578-467e-b560-f6d3bcd2c098",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "24654ba8-a895-4f0f-b7b0-d54b92bdabe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da443224-640c-47ca-b261-05cbc53cf66d",
        "cursor": {
          "ref": "3ae88829-a521-4569-bc45-dc5ee10abe85",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "86cef670-123e-43b2-bbb6-0a0652bb754c"
        },
        "item": {
          "id": "da443224-640c-47ca-b261-05cbc53cf66d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "42ac193b-c166-455c-aed0-f08cd3e57446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5322ea-de9f-4e1e-a601-68d1995e086f",
        "cursor": {
          "ref": "f0dc85ee-7342-4f3f-993e-aa0ff03eecb2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2812d423-06a4-40a6-ae1a-82e859ed73c6"
        },
        "item": {
          "id": "5e5322ea-de9f-4e1e-a601-68d1995e086f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "98fc58c1-72df-41ff-862a-4bf6b9d99d25",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1469,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8a054e-ec2f-45b0-9d24-7928827ebd42",
        "cursor": {
          "ref": "31020de3-e7ee-442e-99cf-1a72daa4a16b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2de17ae7-845b-4dfe-aea4-5c86bafc382f"
        },
        "item": {
          "id": "1b8a054e-ec2f-45b0-9d24-7928827ebd42",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2fefb831-515e-472d-a65d-af5d685e396e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fcc9a3-edaa-4ddb-873c-77262c792cf6",
        "cursor": {
          "ref": "3dd27cc8-15c9-4f7c-aabe-5021236687fe",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6bcd1cc3-0654-4304-9845-96c647745a99"
        },
        "item": {
          "id": "66fcc9a3-edaa-4ddb-873c-77262c792cf6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bd095662-2b45-4300-aaeb-ea5ed6bfc876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ecac6d-c91f-4bf4-bf2b-49ed9314bd18",
        "cursor": {
          "ref": "c3ea5512-5fdb-4706-aa1d-3aa1335d8255",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "62b42f55-a70e-4f28-8bc3-5f43531e4863"
        },
        "item": {
          "id": "45ecac6d-c91f-4bf4-bf2b-49ed9314bd18",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0d2fed95-8e2d-474d-a5d7-0d7646fd93fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7f5118-d182-4795-8367-5aaed9c4af59",
        "cursor": {
          "ref": "6fea9d91-70a6-499a-9984-44cd2625e297",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e8dbefa7-01e9-463b-a3de-2cf6af7a02c1"
        },
        "item": {
          "id": "cb7f5118-d182-4795-8367-5aaed9c4af59",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ddccc2db-47ab-4cc6-b1c3-58a7532a12bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972f5f85-0486-4c26-a052-dc83422c293f",
        "cursor": {
          "ref": "7c81f900-eb38-490e-a114-9c309d0f5a15",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5ae73f8a-eadf-426e-9689-65e6cb76c9c6"
        },
        "item": {
          "id": "972f5f85-0486-4c26-a052-dc83422c293f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ea72f2d7-6f6e-4ca9-94f9-f5db98b08322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5826f330-bb5b-4133-829c-7cccbbdbdc16",
        "cursor": {
          "ref": "28e67e3e-baf0-424a-99ca-c98493bbcdc3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3daafe4f-2912-4307-bb14-83a5955b1063"
        },
        "item": {
          "id": "5826f330-bb5b-4133-829c-7cccbbdbdc16",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "96786eca-fefd-4a39-96be-9f0be166f180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71644fad-2eb4-434c-91c8-42f0cf8e74c6",
        "cursor": {
          "ref": "1571d679-015a-407a-ba83-08c882dd68c5",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "67022b2c-b444-41af-a28f-be00f99133e0"
        },
        "item": {
          "id": "71644fad-2eb4-434c-91c8-42f0cf8e74c6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0120b721-c3ba-4ff5-b442-ce61d44c1ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bad176-3a95-4433-a060-f5de9b8f9213",
        "cursor": {
          "ref": "3e65ef07-c401-477b-aea4-2e2ce019bd42",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5864f7fc-6d51-4a04-b7fc-791505cec594"
        },
        "item": {
          "id": "97bad176-3a95-4433-a060-f5de9b8f9213",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "74f4491a-8527-453e-bd02-f59f4362c060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6338660d-07f3-4b39-80d9-66b0b9f0e4a2",
        "cursor": {
          "ref": "844a91cc-2ab9-4f33-9ee8-0db6f0c5cbd7",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6789b788-94be-44a2-8af1-bb0b0a0746b0"
        },
        "item": {
          "id": "6338660d-07f3-4b39-80d9-66b0b9f0e4a2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "40440946-5ee0-4cd0-8d97-74cddcab84de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c405aab-234a-4c33-894d-68b9ecb436a1",
        "cursor": {
          "ref": "ba361b39-2110-4902-bb8b-bfcb650d2608",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2481e868-8eb1-4a75-87ac-4e67628389b7"
        },
        "item": {
          "id": "2c405aab-234a-4c33-894d-68b9ecb436a1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c29c7529-d09b-47c0-a1cb-2b4f5c71a8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e3c29f-35b3-4d5a-a408-af97541dac3d",
        "cursor": {
          "ref": "42dee71b-eb95-41ca-acbf-5247b3078c6e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7934ed0c-8c85-4f11-915c-dd8096ee10fa"
        },
        "item": {
          "id": "51e3c29f-35b3-4d5a-a408-af97541dac3d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "86765e34-9c3b-481e-b68c-7f8ff38df77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbf6ff5-0cd4-4f27-988c-ed13bdd913c1",
        "cursor": {
          "ref": "f003545c-c055-437c-8a62-d115ca7491cc",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ceedf2e0-28a0-48eb-8ad6-fc79a6cada43"
        },
        "item": {
          "id": "6bbf6ff5-0cd4-4f27-988c-ed13bdd913c1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6b946888-2716-48a4-b4db-f97e21e0e0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fd2f54-f588-45b4-923f-69ac95a69486",
        "cursor": {
          "ref": "d9b98253-b297-45bb-a904-98257d5d9517",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b39df80b-0e4b-48e0-9f95-3fe5141736f5"
        },
        "item": {
          "id": "d0fd2f54-f588-45b4-923f-69ac95a69486",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "aeb189fe-3ba9-4e50-b759-3ca8d5a005e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a41ec74-ff56-48c6-ad7c-1f01d5019c02",
        "cursor": {
          "ref": "3a28895b-02f1-4bf5-9708-5dde90533183",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "385ebd96-cb59-4199-ab21-51cb56752a9d"
        },
        "item": {
          "id": "7a41ec74-ff56-48c6-ad7c-1f01d5019c02",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1a797fc2-c84e-4713-849f-e79d29f27b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9272a09f-3d3d-4123-b650-3e5df1fd2088",
        "cursor": {
          "ref": "b6ece320-0155-443b-8612-ccc863750cfe",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e07eb3ba-cc99-44b3-8268-6d4d0dced8a5"
        },
        "item": {
          "id": "9272a09f-3d3d-4123-b650-3e5df1fd2088",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0acfe378-f04f-48c6-9e04-8241cb417378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229922c1-981f-425e-ada9-38b354fafb3c",
        "cursor": {
          "ref": "76a2d19f-3aa4-4610-9e50-4f44c2a2d2db",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4cc004d3-9196-4da8-8fa1-17a94e5be7bc"
        },
        "item": {
          "id": "229922c1-981f-425e-ada9-38b354fafb3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3e0ecbdb-b31f-42aa-a820-828f8cd7c7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3449e2d8-f05e-4eab-b03a-d009fe81039b",
        "cursor": {
          "ref": "99bc057d-f652-4cb7-bb78-420e182f05b9",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ff38951e-f00d-45fe-8db2-78da400da2b7"
        },
        "item": {
          "id": "3449e2d8-f05e-4eab-b03a-d009fe81039b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "82e26bad-5d70-427b-a81e-61f32ac29bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e9949f-e75f-4b2d-bddd-e4237aae34ee",
        "cursor": {
          "ref": "199338f6-d71e-4bcb-b2f8-42d8ed0cdaa6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d66f6972-f49f-4dad-9af1-46e4ef5398da"
        },
        "item": {
          "id": "82e9949f-e75f-4b2d-bddd-e4237aae34ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0bcc1a34-cc76-4efe-8e57-b005841ed686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e859f497-5f05-458c-915e-1d254ab5e034",
        "cursor": {
          "ref": "2a97b986-eba3-4dec-bd0c-23860db88f9b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ca91e719-4229-42f8-a612-c89fff46c249"
        },
        "item": {
          "id": "e859f497-5f05-458c-915e-1d254ab5e034",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fd421987-6b23-4ae6-8d3a-3c5e06bed423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af1914e-0063-4236-8a7a-3239a1673225",
        "cursor": {
          "ref": "302d00b7-4a1b-43d7-b70e-d21fa9dd7ec9",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7f26e335-e43f-4b69-867b-d0903b0a8c13"
        },
        "item": {
          "id": "7af1914e-0063-4236-8a7a-3239a1673225",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "78499e86-03dd-41cf-b30a-7c1987f76497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f658f679-d415-4b3a-aec2-5bfea1a8dec7",
        "cursor": {
          "ref": "a6f644c7-9c4e-4e49-ba75-2e96ec246f3f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9fff4c5e-b8df-4c63-b643-17a1aff0b022"
        },
        "item": {
          "id": "f658f679-d415-4b3a-aec2-5bfea1a8dec7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "35be2fcc-6687-49f3-9771-c735b763b776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e0b7c4-7517-4cc0-9455-f09cfa1d4080",
        "cursor": {
          "ref": "60c389d3-04af-4c05-ae48-e1ce3396b0c3",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "603754cc-1f8f-4656-8dc8-fae09d024dbd"
        },
        "item": {
          "id": "97e0b7c4-7517-4cc0-9455-f09cfa1d4080",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6e5f9a7e-bb11-4d92-9988-b2a04ffdb085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d99a0ae-e67a-497f-b0b9-a33114e91421",
        "cursor": {
          "ref": "70b15625-78da-43c1-9061-2db894ecde92",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "af6138d5-063a-4407-9134-04241c3de703"
        },
        "item": {
          "id": "2d99a0ae-e67a-497f-b0b9-a33114e91421",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "acd2465a-12f5-4cd0-8522-b9283eb631dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bc3f3d-cba2-4327-b1f8-f86b75800ad3",
        "cursor": {
          "ref": "1ee6a4a4-a93f-4221-a1a5-ecb769a9bb97",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "23b24543-3154-444f-b8ca-0c9af86aafcc"
        },
        "item": {
          "id": "35bc3f3d-cba2-4327-b1f8-f86b75800ad3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cf2559b6-2c64-4b30-baa9-3b3e9e97b4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0647c3-9c08-4b6a-b532-88f1aede7b7c",
        "cursor": {
          "ref": "7a004ce7-c4c5-4eb4-be58-d2b7400e2d62",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1d72d0b8-c7db-45a1-aef1-d01ffe77bbed"
        },
        "item": {
          "id": "ff0647c3-9c08-4b6a-b532-88f1aede7b7c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9399d6d3-a744-435e-a818-6d698926f875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96817f8-8d37-4c12-89d8-dcad24dd2c72",
        "cursor": {
          "ref": "dfc0173c-7915-4aa0-8c1c-89204f9716e1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "233dd327-6b5c-4155-8f8d-cd44304c1cfd"
        },
        "item": {
          "id": "d96817f8-8d37-4c12-89d8-dcad24dd2c72",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cf85ed3f-e8fa-4578-8f69-b350c8a694a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8221074-3280-42d0-a6af-33d787dbe4c0",
        "cursor": {
          "ref": "079b56bf-6e44-4fee-bdc3-5c144f711b83",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f27374a2-8d36-4912-b638-a246e643f8ab"
        },
        "item": {
          "id": "d8221074-3280-42d0-a6af-33d787dbe4c0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b543b02b-4bff-4018-b064-ad1fedca3a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0745228b-3fd6-472c-9791-1971db5223e4",
        "cursor": {
          "ref": "745140f9-c8f4-4eab-bb6a-122b7f54b33d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "47cd9ad4-da98-4138-8b9e-e649dc117062"
        },
        "item": {
          "id": "0745228b-3fd6-472c-9791-1971db5223e4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "62552c73-b4cf-4798-96b8-ed1cba0543da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3584cbdf-73c2-4a21-b810-df7a77f7b03b",
        "cursor": {
          "ref": "ff32e341-e989-4c27-8e0b-b30b53d88a1e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "184cf69b-e679-40e2-a03c-230529c096c5"
        },
        "item": {
          "id": "3584cbdf-73c2-4a21-b810-df7a77f7b03b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "436563b9-cbd8-4fef-97ea-3db8da86703b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97967726-d413-4b72-87b0-93f52e3d5849",
        "cursor": {
          "ref": "95edc6c2-6ccb-485a-879c-d06693b8ad81",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a3c2dcad-7669-4cad-acaf-f4d91d988b7e"
        },
        "item": {
          "id": "97967726-d413-4b72-87b0-93f52e3d5849",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6609548d-204e-47c5-95c3-3a7209bf4453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f192591e-cc9d-4f28-be87-eaebd7d85b07",
        "cursor": {
          "ref": "e8114ffa-5c6a-4b04-b79d-24ed87744756",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0224ef95-be87-4088-b1b2-f693db269fb1"
        },
        "item": {
          "id": "f192591e-cc9d-4f28-be87-eaebd7d85b07",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "91e8a0b2-5001-4e11-be35-9ddfdfdc7e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4986bd33-2fc6-4a3b-a718-9add33e6c27e",
        "cursor": {
          "ref": "2b63f215-6f2b-4ee1-9ca3-ecc90db109c7",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0cdf669c-e5c6-4cbd-9dd1-e7b9beac9278"
        },
        "item": {
          "id": "4986bd33-2fc6-4a3b-a718-9add33e6c27e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "741afec3-6577-47e3-ad46-7b20c777779e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6283a8d-3891-494e-b9fe-0bdba821ab57",
        "cursor": {
          "ref": "759f7aa7-caef-43ee-b949-49666002c621",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ac98137e-f15f-4f86-8ac1-958f2af20f43"
        },
        "item": {
          "id": "a6283a8d-3891-494e-b9fe-0bdba821ab57",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "63388ce0-d287-4660-8f0e-b42bec748827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13843e46-53a3-45a0-a12e-3befef538bdb",
        "cursor": {
          "ref": "f62f75be-0d07-471a-97fa-51347a5a7ff8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3aeb7f3e-90d2-4d7e-b5ca-7d61a62b4498"
        },
        "item": {
          "id": "13843e46-53a3-45a0-a12e-3befef538bdb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1b9abc5c-9268-48ae-aca4-1fc51a652877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64daf48f-8089-4e4f-bfd8-394b1a2d6d8a",
        "cursor": {
          "ref": "1d869d57-ea9e-4d54-b6b7-22d19c7a1d11",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b10d24dc-0ece-4734-b98d-467cf2ec41a2"
        },
        "item": {
          "id": "64daf48f-8089-4e4f-bfd8-394b1a2d6d8a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6225e048-dff7-410b-adc7-1d8fced2197e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab832d87-726f-406b-94bf-05b7ac251ba6",
        "cursor": {
          "ref": "95e1a09e-81e1-42e6-87c6-4e422154a606",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ccc1aace-cffd-4eeb-a564-c30014dce97e"
        },
        "item": {
          "id": "ab832d87-726f-406b-94bf-05b7ac251ba6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8de9636c-88bd-427a-9d1b-c7388c7d2b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6987b747-89d5-4bb9-b449-74aab223ce66",
        "cursor": {
          "ref": "c17b3580-9e9f-4cd6-bc96-6d540162cf4a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "06a6778b-bba9-42d3-8c98-63dbd666f66b"
        },
        "item": {
          "id": "6987b747-89d5-4bb9-b449-74aab223ce66",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8fe18b30-627f-440c-8679-7a2579b71f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b50b89c-d00c-4e94-9ebb-9cdc20a4f473",
        "cursor": {
          "ref": "fb73dddc-dbbf-4ac4-af55-8ecbf1411b2c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3c400c6c-66e6-4396-af77-133420c9ecc0"
        },
        "item": {
          "id": "5b50b89c-d00c-4e94-9ebb-9cdc20a4f473",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c2cd23dd-016f-441f-84fb-7f19bbfaa44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3810f4-0206-4011-8bc2-86fa5e6a091e",
        "cursor": {
          "ref": "6508034a-4ebb-43cf-92ea-a942601fb98d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cc61b505-d930-4645-a56c-0a7d6f8fd100"
        },
        "item": {
          "id": "3a3810f4-0206-4011-8bc2-86fa5e6a091e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "13c7933e-a464-438c-8b02-f1cf51346353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636d0bc5-5ab6-49f7-ab1c-84444c67fe7b",
        "cursor": {
          "ref": "a9dda121-eec8-4ace-a8bc-a7539862ed4d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "67c77175-2c5a-4031-b995-d81559b20b9d"
        },
        "item": {
          "id": "636d0bc5-5ab6-49f7-ab1c-84444c67fe7b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8e7b5957-d3b1-45c3-a3ff-a60e3ff034e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d251d44-34f3-45d6-8b10-70869e442023",
        "cursor": {
          "ref": "0fa37c56-c518-42e1-b04a-340192d046ae",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "31e31da1-ce22-4d74-a6f7-cacda78f83d2"
        },
        "item": {
          "id": "9d251d44-34f3-45d6-8b10-70869e442023",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a73fb7e4-6364-4030-819e-a85b7dba4932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0868f744-3d7f-412d-b250-29f6c60f7821",
        "cursor": {
          "ref": "7ab87872-2419-4b38-915c-bd0a9001b879",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ba3b91bf-b8a3-4121-b8ec-1aeafcfa5551"
        },
        "item": {
          "id": "0868f744-3d7f-412d-b250-29f6c60f7821",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5b142d5a-507f-4729-b22a-37342788e3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba031b69-6a3f-42ec-a7b2-beeb1f9f8ac1",
        "cursor": {
          "ref": "590ae3e7-7ff4-4b32-b04c-cc1fdcf8b5d5",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "06098a6d-1404-4be7-af84-8da415e1bdf5"
        },
        "item": {
          "id": "ba031b69-6a3f-42ec-a7b2-beeb1f9f8ac1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "272bfed0-3bf7-4c9b-afec-c9a1f44f9497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce55c56-7bbf-41f0-9942-900ebd25b52d",
        "cursor": {
          "ref": "f3cb9a37-91e3-4eca-89bf-3a26c5b4b0ad",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "188c18b1-21c0-4c32-bea6-d4272d536f02"
        },
        "item": {
          "id": "3ce55c56-7bbf-41f0-9942-900ebd25b52d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1b339ad4-3b13-4f0c-ac94-e7aad9c62c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca8f9fd-812a-4d1b-ae75-3dbdae3d84d0",
        "cursor": {
          "ref": "78226915-5fca-4348-8ea2-f4c7ed1b9721",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3c1c4e1e-c64c-4e28-b16e-460f3538e53a"
        },
        "item": {
          "id": "fca8f9fd-812a-4d1b-ae75-3dbdae3d84d0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1a30c13b-0893-4764-aa7c-4893bab91856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fdae41-548e-4e42-b935-6b135f458947",
        "cursor": {
          "ref": "7ee5e441-801b-4bb5-ad36-09fb5feebe7f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e33e761e-29f3-4402-92df-902db3bb8633"
        },
        "item": {
          "id": "98fdae41-548e-4e42-b935-6b135f458947",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "01295d74-b4ff-4a00-b094-7b244c556d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550bbcc-0ee9-49be-b9f3-e135c8f1acdd",
        "cursor": {
          "ref": "fdf2c1d0-b046-4623-bff9-d64df8132734",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "52d2b072-102c-4943-8040-019c0b296e3d"
        },
        "item": {
          "id": "d550bbcc-0ee9-49be-b9f3-e135c8f1acdd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bc8895d9-9333-4965-b1bd-d1e17d583f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9234cfd4-eccc-446b-80fd-1d659b43d0ee",
        "cursor": {
          "ref": "f9d44181-ecff-49c6-bb22-b21c82046c39",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dae218c0-9276-41d2-9a80-2061b0145d16"
        },
        "item": {
          "id": "9234cfd4-eccc-446b-80fd-1d659b43d0ee",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1e5b4284-43a4-413f-b42b-f4036a813376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ff5ab0-69c4-4908-8d86-7838b2df4b83",
        "cursor": {
          "ref": "ce2e2ab2-8fd7-4bdf-b85b-2a55987700d4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "62371b5a-9615-46d1-8a3a-b9c042ed7311"
        },
        "item": {
          "id": "27ff5ab0-69c4-4908-8d86-7838b2df4b83",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d5c637fc-1c23-44cb-9fb5-cd431ab78c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22420ccc-e116-4b2a-9b5e-e116420f4c6d",
        "cursor": {
          "ref": "1988249e-16db-456a-969b-aa9be2285bf3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "46163b81-4374-4cb0-806e-664952bc700c"
        },
        "item": {
          "id": "22420ccc-e116-4b2a-9b5e-e116420f4c6d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6ccaac17-d694-48b5-8ea9-1589655763a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcbb9ec-8fa9-4844-86a6-8f3a0076e75e",
        "cursor": {
          "ref": "206ade78-0bdf-4d95-8461-9ebeef1e862e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1e8dc7c5-8b71-4105-85a5-ea850fb47652"
        },
        "item": {
          "id": "6fcbb9ec-8fa9-4844-86a6-8f3a0076e75e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c6a860ec-ed74-4f23-97b3-652dea2436c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ce51d67c-c5ba-490c-80a9-d3e40464899c",
        "cursor": {
          "ref": "68ccc314-e486-4b0c-a9cc-0c4a59f4c8de",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7137c487-6b0b-4ef3-90ef-b57886c3ef38"
        },
        "item": {
          "id": "ce51d67c-c5ba-490c-80a9-d3e40464899c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "45f5a8d7-1a97-497b-a482-e91b93641568",
          "status": "Created",
          "code": 201,
          "responseTime": 9203,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "11465cd5-67c2-4cf2-9acb-040fe50f841f",
        "cursor": {
          "ref": "80f57651-488c-4068-a4e4-01290be6e4d2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "95af3cee-d459-48db-816f-0db81da8f31b"
        },
        "item": {
          "id": "11465cd5-67c2-4cf2-9acb-040fe50f841f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b6977b96-89a2-4900-b767-6f3c9e73dd59",
          "status": "Created",
          "code": 201,
          "responseTime": 9793,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc518e04-2ec6-4102-beae-34949c011348",
        "cursor": {
          "ref": "8b176a40-53c8-46a7-8e56-e7a7695f46b8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1a7ee5c0-43c8-4a7d-836b-20fa888c23f2"
        },
        "item": {
          "id": "bc518e04-2ec6-4102-beae-34949c011348",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "716b878c-eecf-4203-9fe1-4c718bc4cf48",
          "status": "Created",
          "code": 201,
          "responseTime": 8262,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcd3da9-efe7-4f5c-96c7-391aa161fe3d",
        "cursor": {
          "ref": "c4cb6fe9-bc91-4d46-a5fc-d512d11a14e8",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7b80f2de-841a-41f3-8e2d-851803700596"
        },
        "item": {
          "id": "5bcd3da9-efe7-4f5c-96c7-391aa161fe3d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "73712fa3-603a-480f-837d-80326cd091a8",
          "status": "Created",
          "code": 201,
          "responseTime": 8345,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbf40f4-7840-4b78-81c9-70924343e57a",
        "cursor": {
          "ref": "327a086e-1280-4443-84ad-d713625d81ab",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "891dc642-d8e0-48c0-9709-7110daf78120"
        },
        "item": {
          "id": "3dbf40f4-7840-4b78-81c9-70924343e57a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c28fd01e-409a-450c-8e9c-f805e86b2256",
          "status": "Created",
          "code": 201,
          "responseTime": 8518,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d618a8-7724-48bc-9941-02d54d352e36",
        "cursor": {
          "ref": "1d2f92b3-56f4-4ecb-a6e1-bae4b467cbe9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d96cce1d-8460-4059-b316-884cb0d68e42"
        },
        "item": {
          "id": "e1d618a8-7724-48bc-9941-02d54d352e36",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dd508dbd-4e7b-4241-a2ac-0fef1a83cd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c52961c6-db85-4ec5-a14e-c42ffca721d0",
        "cursor": {
          "ref": "7b52ccc1-6272-43e3-97ab-4486c72d7c24",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c8e59d06-5b38-4fa2-bcdc-c41ade7251cd"
        },
        "item": {
          "id": "c52961c6-db85-4ec5-a14e-c42ffca721d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2e8c6d24-e889-445f-a9c0-60abc7351225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffef91c4-b7f4-42c7-81e1-1778a74e93fe",
        "cursor": {
          "ref": "531ed49e-6c6a-49bc-8eea-1b6cec4ba5e5",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "03368d5f-5af4-4e67-88a4-ad72b3dba5f4"
        },
        "item": {
          "id": "ffef91c4-b7f4-42c7-81e1-1778a74e93fe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e1d07e6d-e587-49f9-bcda-432d074c28f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bc47e1-d391-4a42-a507-9a0bc2ffa081",
        "cursor": {
          "ref": "86681e1a-00e7-4dcb-914e-ae131a996c19",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7b70592c-5696-48bf-8a1f-47f1d31dcfcf"
        },
        "item": {
          "id": "e1bc47e1-d391-4a42-a507-9a0bc2ffa081",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "796f0218-6294-493c-9107-8ae8d01fc87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7d92b4-e1fa-4fae-8be8-d9268d28cae8",
        "cursor": {
          "ref": "e0229d7a-967e-460d-812d-3593d1f4d7ca",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fbc156e1-d103-49b8-b510-152f4fc40388"
        },
        "item": {
          "id": "fb7d92b4-e1fa-4fae-8be8-d9268d28cae8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f7888cf2-ed94-46b6-b909-73800d5bd4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2035fa-f2ad-464f-8586-aeb1190aed45",
        "cursor": {
          "ref": "621f589b-7428-4533-b3eb-ae77329a1e8e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2859d338-587e-4e67-ac55-8d7d12c1dc1b"
        },
        "item": {
          "id": "fd2035fa-f2ad-464f-8586-aeb1190aed45",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "046ff44d-9edd-4141-8ff5-b6558ff4518f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aa713b-9be6-4700-a874-1df700f0b33c",
        "cursor": {
          "ref": "c2ec32a2-bccc-4d01-bbbf-5009a1aebf54",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "72a54dff-8a60-4169-aeb7-5923ed420a01"
        },
        "item": {
          "id": "b0aa713b-9be6-4700-a874-1df700f0b33c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "62680895-2942-4939-9e42-536384ec7126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb60e3f-75f8-48ba-b92d-1a2342118441",
        "cursor": {
          "ref": "61e59341-5ed4-438c-8279-1170c778c8aa",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ea9ff898-6ae9-41d9-b22e-cce4af8a4414"
        },
        "item": {
          "id": "2bb60e3f-75f8-48ba-b92d-1a2342118441",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "707dbedb-c450-4452-bfe4-63e407fb9c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca82e7a-f1ef-4bd8-a000-85af29c2a5e1",
        "cursor": {
          "ref": "b97af7d4-dd26-44a1-9768-69597be11f03",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fd3cd2ea-4484-4ba6-a400-7771a6785cb1"
        },
        "item": {
          "id": "2ca82e7a-f1ef-4bd8-a000-85af29c2a5e1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b875c2f2-70a8-4be5-a14d-ae6a74424efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb914d5-17e1-4555-8eb2-9ad5159a8174",
        "cursor": {
          "ref": "05fc02a9-13f2-462c-8089-f501694299c6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "68f2a5e9-dc93-4560-b11e-f8aa4bfa1eec"
        },
        "item": {
          "id": "9eb914d5-17e1-4555-8eb2-9ad5159a8174",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0139011c-46d5-463a-967e-eed26dbee79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40e2e5f-2a7c-45a5-ab71-078991a9af1c",
        "cursor": {
          "ref": "cca584e7-2a23-495c-b99d-5a3f60f8b94f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "763b448d-7d3f-4447-9e97-5697d8bc321b"
        },
        "item": {
          "id": "c40e2e5f-2a7c-45a5-ab71-078991a9af1c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2bf32f9c-696f-45d5-8d6d-d601533ef82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6f3db1-4b08-4a52-90ec-98706e699c2d",
        "cursor": {
          "ref": "15e5805e-b27a-4df4-b995-24d3d7ef2777",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8415e7c3-d22b-4f32-9278-42c8a92db9db"
        },
        "item": {
          "id": "7b6f3db1-4b08-4a52-90ec-98706e699c2d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d222e326-34ee-4116-bb57-cfdd0ebbc2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92ab6e1-f8a6-46af-9d4e-5322dd26be94",
        "cursor": {
          "ref": "aa61cb3d-4097-4d9f-8fb7-f7982d6668e7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e1e89a06-c8a0-4fe5-b8a1-6fad7c802a41"
        },
        "item": {
          "id": "d92ab6e1-f8a6-46af-9d4e-5322dd26be94",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "731fc831-faad-4ef8-933a-d21654d1cbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fe5caa-eed3-4a74-ab09-ffd84084a6c2",
        "cursor": {
          "ref": "9f0a228a-f97d-4a62-8bf1-5f518a59773d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2d83f3d3-825b-41f0-a752-a9753be34966"
        },
        "item": {
          "id": "d4fe5caa-eed3-4a74-ab09-ffd84084a6c2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5d4aaa2f-5369-4a07-ae16-1c255a84ab3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c70dfa-b190-46b0-848b-dcaf709fbc71",
        "cursor": {
          "ref": "8c306285-0e33-4f61-8466-d2846f466c3a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "63c1995b-ac64-485b-94af-7fc7a3990559"
        },
        "item": {
          "id": "78c70dfa-b190-46b0-848b-dcaf709fbc71",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0d934993-e709-4191-b432-fb373a216301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cee366e-5ac5-4a54-9835-9bb918cacc0d",
        "cursor": {
          "ref": "d2ee6df3-7287-4fb6-9d3c-8e104a17397e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bd6a70ea-7b14-4804-a1ec-7992659b9457"
        },
        "item": {
          "id": "6cee366e-5ac5-4a54-9835-9bb918cacc0d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "53b9b07f-3138-495a-a196-82dd4754b542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c866cb7e-b835-46ab-b4a4-5d6492d8c9d2",
        "cursor": {
          "ref": "ef5fffa4-78e1-4404-90b9-1353055ec454",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "70d03ede-e653-4a18-961e-19fddd8e06cf"
        },
        "item": {
          "id": "c866cb7e-b835-46ab-b4a4-5d6492d8c9d2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9d885598-f942-4750-852c-16b423388aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da0660b-77b0-4886-9796-79308a332d99",
        "cursor": {
          "ref": "dc12e556-2d64-477a-8b0a-e8100fc69a2a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "804a521b-c1f1-4add-bd08-2f541451c074"
        },
        "item": {
          "id": "5da0660b-77b0-4886-9796-79308a332d99",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f85cfb0d-baf8-4b54-ad7c-dc2168201948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c146d34e-6793-4ab3-9122-06cc8012ad6f",
        "cursor": {
          "ref": "7d875176-9db2-4224-b0d6-f0822fc080f7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1ca65521-cdc7-4612-aa30-258ea905bc19"
        },
        "item": {
          "id": "c146d34e-6793-4ab3-9122-06cc8012ad6f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1bd548d1-a6fc-4dfb-9490-739cec9f626d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c42a32-acbf-423e-a5e7-31617c8fc9cb",
        "cursor": {
          "ref": "7a8f7489-8635-45ee-a232-f5b2e89021ec",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d6943351-ae82-416e-8d3e-325c2458fd7e"
        },
        "item": {
          "id": "91c42a32-acbf-423e-a5e7-31617c8fc9cb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb84944c-499a-4996-b1ae-841b0332f88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d4f35b-918f-4a0a-8542-be00b223842a",
        "cursor": {
          "ref": "07fae13e-eff2-4c7b-846c-16657bce18b0",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78c60999-7449-4c13-afde-60d50a27262f"
        },
        "item": {
          "id": "86d4f35b-918f-4a0a-8542-be00b223842a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6edd4bec-d9b1-4958-b0af-8ded44039eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c080f208-d738-483b-90ed-bbafb8319365",
        "cursor": {
          "ref": "589423c2-efa1-4651-accb-47d2fd3cd968",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "113d69ff-0a73-408d-bf35-4f3524ea9136"
        },
        "item": {
          "id": "c080f208-d738-483b-90ed-bbafb8319365",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4a9b4621-8c1a-4f8c-ada5-e6af4ab3dc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4452b84-cef2-4e9f-ac48-eb54dc9e30ef",
        "cursor": {
          "ref": "261c02ff-8031-430b-b888-c704d04bcd58",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e200a852-6372-4516-80e5-037bb12c9a2d"
        },
        "item": {
          "id": "d4452b84-cef2-4e9f-ac48-eb54dc9e30ef",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef971e07-59aa-4f44-b00b-c8b2d67bb69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599fb36e-ef0e-4c7e-9f3a-36ba8c62fa12",
        "cursor": {
          "ref": "3cfcb95c-6d9c-4162-b570-f77fb435ac01",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4b828e42-0911-4651-bebb-7295a0e49b7c"
        },
        "item": {
          "id": "599fb36e-ef0e-4c7e-9f3a-36ba8c62fa12",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "38129898-a54c-48a4-b0b8-679ef4849ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f885b202-815b-460e-8112-01dc7c90162c",
        "cursor": {
          "ref": "3ba401ae-a06d-40a6-a546-e3b74af3255e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1196b209-d7e8-48a8-8ce2-99fd8434b6fe"
        },
        "item": {
          "id": "f885b202-815b-460e-8112-01dc7c90162c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e03bc75a-0d3b-42d8-91fb-e5a62e33cbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd7c174-ac6b-478a-9207-868252cb9b9c",
        "cursor": {
          "ref": "e3dc0e6f-8f49-47a9-851c-72d85eaac6fe",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9624ba2e-56df-495f-95fe-8aaa6722b297"
        },
        "item": {
          "id": "5dd7c174-ac6b-478a-9207-868252cb9b9c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "71270b91-c889-4f9d-88b0-654736c86c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55ae4a4-382b-444a-b644-73e2b298436a",
        "cursor": {
          "ref": "9ee4e325-caa9-4568-a250-91dc98e10920",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "71ce6806-b19d-4afc-847e-75ba408d3480"
        },
        "item": {
          "id": "e55ae4a4-382b-444a-b644-73e2b298436a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ee5921b2-e1ce-4308-a6dd-279edd77305f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9f95c3-6e0a-472e-a02b-5b8a46b8fb11",
        "cursor": {
          "ref": "025c0f6d-de02-489a-adfa-c67b187876dd",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8528fa6c-3531-4ec9-b4aa-85be33521c98"
        },
        "item": {
          "id": "7f9f95c3-6e0a-472e-a02b-5b8a46b8fb11",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "af63d397-3bde-4fd9-8c17-16c2e462db12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be70e14-e098-4c10-95dc-98278134f02c",
        "cursor": {
          "ref": "0dac0b28-164f-4d8c-985d-bc8b4370b6f2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "94d7b5d6-58c4-4dd7-a0e4-4cecac7f3f21"
        },
        "item": {
          "id": "8be70e14-e098-4c10-95dc-98278134f02c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2803bcb1-57bd-4d28-bd6e-4ab8ab42137f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8619867d-8fe2-426b-aaed-147c7b433452",
        "cursor": {
          "ref": "73428403-8cc3-49f4-af4a-67e094d2de96",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "83c4bbaa-3f3c-4d16-a154-9c52f97d0317"
        },
        "item": {
          "id": "8619867d-8fe2-426b-aaed-147c7b433452",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "48d47edd-5200-4352-a9e5-4a72bbc427a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02106b4-feca-4c75-9a1f-27716e1f5946",
        "cursor": {
          "ref": "df740815-21f0-4c86-9b1b-32f30adc54a3",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e644b192-7b69-4043-89e6-77566d41c8a2"
        },
        "item": {
          "id": "e02106b4-feca-4c75-9a1f-27716e1f5946",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3b1ec738-8764-43de-8805-6837cff771f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20bda8f-8fc8-4d1b-820e-ad1d44977844",
        "cursor": {
          "ref": "83ee0f3e-a916-48b9-8bf0-ee85b6fd9fc3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "15a1230b-2b73-4f77-aa43-f7a027436eba"
        },
        "item": {
          "id": "c20bda8f-8fc8-4d1b-820e-ad1d44977844",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ffa2ec05-b1dc-420b-847d-2884fe7ff1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997096a5-f61d-4173-b7dd-df20ff228ab3",
        "cursor": {
          "ref": "e6c39ceb-9634-4331-8463-30c47d3af0f4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "008f7629-d32f-4e8a-8328-50bd6d676068"
        },
        "item": {
          "id": "997096a5-f61d-4173-b7dd-df20ff228ab3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5f35d274-ae41-4ce4-a241-578a060af2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e1b8b7-d7ee-421e-914f-44499c93db88",
        "cursor": {
          "ref": "05a65ed5-6502-4b35-a0d0-57ae286a0894",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bd465bc0-5331-41f1-a483-ab5c10ded195"
        },
        "item": {
          "id": "27e1b8b7-d7ee-421e-914f-44499c93db88",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "61ed2c34-412a-4ea8-8809-08c80967448d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e6b8e6-c817-4d7f-80e7-cc666714ec2a",
        "cursor": {
          "ref": "3b914598-ec47-4ac5-acd5-2a564df95b93",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3189c560-d15b-4e97-9a2b-75059b0b5e9c"
        },
        "item": {
          "id": "c0e6b8e6-c817-4d7f-80e7-cc666714ec2a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cd82c6a8-ed07-4fff-85aa-b2faa234f8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e56683-be62-4502-a325-856294bd6350",
        "cursor": {
          "ref": "bac7a8c7-0c4b-40d5-86af-da98b416ad87",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "78c8898a-c58b-428d-8cfe-0985917783e0"
        },
        "item": {
          "id": "b9e56683-be62-4502-a325-856294bd6350",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f6038c0a-8d44-4d5e-a607-f3f73d7fa61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4feb516e-4528-4fea-842f-ef20f09acb5d",
        "cursor": {
          "ref": "973ae612-a28b-43a0-868f-eda2873badfd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "61525162-ce66-4ad2-861d-4f87a29ac560"
        },
        "item": {
          "id": "4feb516e-4528-4fea-842f-ef20f09acb5d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "064345b6-3c75-45e0-b89f-3340570f7973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac7696c-af57-4878-8e79-066bcd84b75f",
        "cursor": {
          "ref": "f9dc578f-ef6e-4d70-ac50-699142321f3b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "edb18312-7c18-4fcf-8072-b5c027de3bd6"
        },
        "item": {
          "id": "3ac7696c-af57-4878-8e79-066bcd84b75f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c1e675bc-1024-4efd-a79b-b1579a18b306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8669873f-f991-4429-b4d2-877f78a42840",
        "cursor": {
          "ref": "763ee98d-297f-405b-9c9d-792370b59d28",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cdc0274a-4b14-4cbf-84c6-dc5e27248935"
        },
        "item": {
          "id": "8669873f-f991-4429-b4d2-877f78a42840",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a17ddaff-ec2b-47f6-8a0f-819a1b91e394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43baacc-36df-409b-bfd9-8a8147045c68",
        "cursor": {
          "ref": "8f5e2803-2868-4840-bc47-425b67befa9f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f391cde0-30ce-42a6-b5a8-5a1c8e758f9c"
        },
        "item": {
          "id": "f43baacc-36df-409b-bfd9-8a8147045c68",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cdad2670-b776-49ef-ae8f-b98e0023b66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807dba6a-e865-46d5-ab19-ff2380092c8a",
        "cursor": {
          "ref": "1227056b-e4fb-435e-bb14-4ad5ac0f43e5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b9cc9bce-dba5-47af-abca-fd88efb4ed02"
        },
        "item": {
          "id": "807dba6a-e865-46d5-ab19-ff2380092c8a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fec6dc8c-2477-449a-8047-b5e516786d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f0954c-551e-4f85-8f76-e1b112cb4983",
        "cursor": {
          "ref": "48b4848d-bee1-474b-b446-9a11c104c197",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7c828b68-40a6-4303-b6cb-57c35c79ec53"
        },
        "item": {
          "id": "e1f0954c-551e-4f85-8f76-e1b112cb4983",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "79f5f1bf-0fad-401e-b4f3-b05a96434e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb62cdd-593f-402a-85bb-11605ea5887c",
        "cursor": {
          "ref": "5f4b30c9-722f-458f-a41a-2f8f62496f2e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3a9695e8-8460-4ccb-9daa-75aa5a6b54f6"
        },
        "item": {
          "id": "afb62cdd-593f-402a-85bb-11605ea5887c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a302c5f3-9f07-41d6-8142-7b353549b625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c609d28e-9354-40b7-911a-45343c135146",
        "cursor": {
          "ref": "5a8042a9-367d-4e82-b1de-9170193b8d70",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b366e35e-362e-4db3-b12c-d4a281a9c7b0"
        },
        "item": {
          "id": "c609d28e-9354-40b7-911a-45343c135146",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b3472f94-2841-421a-897b-46f0ba7d6988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c6a184-fc3e-453e-908b-3c6bd7f7b1fa",
        "cursor": {
          "ref": "b1729707-70f8-48eb-b1b8-8c3cbcafb9f6",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "21922f7a-6d86-4a92-97d7-ceef5a709da1"
        },
        "item": {
          "id": "a0c6a184-fc3e-453e-908b-3c6bd7f7b1fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c279899b-3792-476e-80ba-283655556ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7d63c9-ac60-4f67-8a64-1b527a23ea43",
        "cursor": {
          "ref": "6367211e-e29e-4510-a25b-9f1cb150d5ce",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ca457dd0-d7e1-4208-89ef-2e41ae5a15d5"
        },
        "item": {
          "id": "3a7d63c9-ac60-4f67-8a64-1b527a23ea43",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b94ca287-aac2-4f9f-91d5-e54f10f8eb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cec002-ace3-45ff-b18f-82ea53bf2d09",
        "cursor": {
          "ref": "dd1610d5-ca62-4a38-ae26-10837ed07192",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1d0bbfbe-602a-4079-b7c0-9113bbd3ea81"
        },
        "item": {
          "id": "26cec002-ace3-45ff-b18f-82ea53bf2d09",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "41a94783-7787-4c72-ac1c-6b6bbf50d1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b238c1-721a-4e9d-b604-d305e62f1651",
        "cursor": {
          "ref": "c4e3f6df-da09-406c-b3bc-e7374f72a06a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "82bf6199-0d5a-4910-8b11-00a2fd69b93f"
        },
        "item": {
          "id": "c2b238c1-721a-4e9d-b604-d305e62f1651",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c698f015-5454-4ab6-b51b-d1cbcc936371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d12a89-9f83-4eff-8850-e1001cdc10f6",
        "cursor": {
          "ref": "76544f30-1897-441c-9e08-7a46b89c21db",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "12a55117-4339-480b-bf9a-6394e3b0aa82"
        },
        "item": {
          "id": "14d12a89-9f83-4eff-8850-e1001cdc10f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "327dc859-e467-4928-a585-0228643840f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37575f00-c08a-4bdc-b9a6-27dec8e60489",
        "cursor": {
          "ref": "a023e034-0d0a-4275-8571-ba5074e22c9f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f4147d5d-96f9-44b2-9401-348453219eec"
        },
        "item": {
          "id": "37575f00-c08a-4bdc-b9a6-27dec8e60489",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e67c0eb3-912a-4474-9090-ccc4d2e519f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34104ccf-b085-4ed9-917e-d5d15944ced3",
        "cursor": {
          "ref": "9f8d2204-190b-4894-bccd-f763c50d3f88",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4f5c37a1-beb5-499c-b891-d30d80352027"
        },
        "item": {
          "id": "34104ccf-b085-4ed9-917e-d5d15944ced3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "45cd663f-a436-45c9-9032-0524f60b37cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5cd93d-dbea-45f6-bd59-744add74762f",
        "cursor": {
          "ref": "c5987a2c-04b5-429d-aefb-d01795ba9e89",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e0734f50-e2e9-4ffb-bb4a-65ff5db44e95"
        },
        "item": {
          "id": "fc5cd93d-dbea-45f6-bd59-744add74762f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c2b074da-54ba-41d4-b168-b06086567064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48f5327-ce68-45bd-9ee3-892cb91f7808",
        "cursor": {
          "ref": "8af5a663-c004-4af0-a18a-f769e0426625",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f6763423-c85d-4329-977c-1358444d0dbd"
        },
        "item": {
          "id": "f48f5327-ce68-45bd-9ee3-892cb91f7808",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ef42a2b-5393-4191-8316-f203d2c0cf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930b5722-eca7-4cfd-bde2-4684a45ae24f",
        "cursor": {
          "ref": "9e6f4f35-1d2b-4d65-b371-b9492a0437dc",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "08d6e5a6-2193-411f-99b8-ddea4e51914b"
        },
        "item": {
          "id": "930b5722-eca7-4cfd-bde2-4684a45ae24f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ccd7f15-b4a5-4af0-91c9-0a8e7e980095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c81b12e-3aa1-472b-9965-5d133244b24c",
        "cursor": {
          "ref": "a50bd46a-1b7b-4ae6-bfee-466e2c9426ed",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ad1c5135-d15e-42c1-b213-6261d84e5ee0"
        },
        "item": {
          "id": "2c81b12e-3aa1-472b-9965-5d133244b24c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "05d26b11-778b-4756-abe9-69d61f7d91f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38a2f76-e995-453c-b840-2fd58d8f4ab1",
        "cursor": {
          "ref": "d5947dad-da6c-4b9f-b9eb-ebaf8f97d537",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "95c5766e-fc91-44df-bee1-b24082e3e450"
        },
        "item": {
          "id": "f38a2f76-e995-453c-b840-2fd58d8f4ab1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bb4f14aa-f92c-49a3-9803-2b33365d5d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b438ec-7702-435a-a363-3503c7a56835",
        "cursor": {
          "ref": "f0bec2c3-1294-45cb-96db-23b02c9caae5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "37a47c36-08bd-47f1-ade7-30568f7ac8b5"
        },
        "item": {
          "id": "c2b438ec-7702-435a-a363-3503c7a56835",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8fbf0e9-a741-4060-9398-2635ec2e4277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d60cf00-ba73-432d-a76d-17e288cab97f",
        "cursor": {
          "ref": "9292e7ca-54da-4fe8-bdfc-ccdf7bf16061",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "226597a7-33a3-465e-8b45-51ca141c5ca2"
        },
        "item": {
          "id": "9d60cf00-ba73-432d-a76d-17e288cab97f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a0835d3f-3fbe-417d-95d6-c90239758a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f74858e-744d-42ba-a7bd-89515e07cddd",
        "cursor": {
          "ref": "b2dbe8b0-f94f-47f8-a706-37bdb0162baa",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "36a57293-d387-4f4c-a7a9-4500f6e7f7bc"
        },
        "item": {
          "id": "4f74858e-744d-42ba-a7bd-89515e07cddd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "485aeae6-432f-4ae2-9aa2-92cfa0cb0339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c6dc62-96af-4b71-83aa-6a4a2ef921ba",
        "cursor": {
          "ref": "1c07ce1f-71bf-4cac-8ed7-b78033ff6931",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0c3bdea9-d02b-43ce-ba6e-0a2897dd3a60"
        },
        "item": {
          "id": "26c6dc62-96af-4b71-83aa-6a4a2ef921ba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9a42e259-f06b-45fe-bf58-30e1d91db654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac89527-eef6-438e-b262-8a4c633e6b54",
        "cursor": {
          "ref": "6e433d5d-05c5-4af7-b287-52fbc3e1adb7",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d3e6eeb7-7d3b-4818-9f12-09184f62bc32"
        },
        "item": {
          "id": "eac89527-eef6-438e-b262-8a4c633e6b54",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "81b7dfc4-a713-4e86-b908-039ea793f831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc61922f-40cc-48f7-aa3b-4c8bb3679a5a",
        "cursor": {
          "ref": "95534f84-677f-4fa9-b928-86a56b6ebd6d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fd822a4e-5519-49fa-ad7d-57593802d2f3"
        },
        "item": {
          "id": "dc61922f-40cc-48f7-aa3b-4c8bb3679a5a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "55a82f78-9d8c-4315-9fa0-749f5d4c4b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f611a197-67b1-4899-88f0-74a754a60e6d",
        "cursor": {
          "ref": "892b93c0-15d1-48de-a201-d4dfe894ff22",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d9648e1b-bbdd-446b-bf46-e8b705eb2e90"
        },
        "item": {
          "id": "f611a197-67b1-4899-88f0-74a754a60e6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "72eb60b9-90ae-4228-b368-21ecb41537f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293661d7-a1a6-453d-a61a-c9481dfb8a31",
        "cursor": {
          "ref": "b8727dc2-21b7-4429-b96e-64b430b98093",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ffee41ad-a0f2-45a6-90a4-3af9b6cebffa"
        },
        "item": {
          "id": "293661d7-a1a6-453d-a61a-c9481dfb8a31",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dcfdc6e2-33fc-44ba-a846-43cb4906c1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac21b5eb-02c2-4a95-a7ab-6930ba89793e",
        "cursor": {
          "ref": "325bde18-753c-47fc-a5f0-aa0cebbad059",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5febeaf1-427c-47b5-9f33-78b2ff412506"
        },
        "item": {
          "id": "ac21b5eb-02c2-4a95-a7ab-6930ba89793e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c73a3b86-332b-4990-8d31-7bcab04db57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8168d54-f764-4e92-aea0-5dd8a1ce33bf",
        "cursor": {
          "ref": "36af6d77-91fe-4c1e-b6df-3bcdeda2e078",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d3b8099a-818d-44fe-8561-98ba38a7d9f3"
        },
        "item": {
          "id": "e8168d54-f764-4e92-aea0-5dd8a1ce33bf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "56e8616e-1e2e-48ea-a8dc-a87fba2d12d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32b2bca-4b26-4d00-88f5-0e22f2320f61",
        "cursor": {
          "ref": "b40f74db-743b-4222-84ab-988c46457060",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e15e9e56-628c-4497-a2f6-74a7d2e33cf8"
        },
        "item": {
          "id": "e32b2bca-4b26-4d00-88f5-0e22f2320f61",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "31dbc7ac-fe21-4d14-90a4-ba5aebb13129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7a16da-bbb9-47b4-8fbb-0ba5fa1480cd",
        "cursor": {
          "ref": "11565d56-8834-4ea4-b912-1045731da47e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d1c5a7b5-ff44-4a6f-8165-0c5de0d24366"
        },
        "item": {
          "id": "dd7a16da-bbb9-47b4-8fbb-0ba5fa1480cd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1d213201-a44b-4f0a-80a3-001d2ba80158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacbd823-5e97-4700-b001-13ba0d2f8c0f",
        "cursor": {
          "ref": "2597ef35-759b-4241-bb92-470138a8bdec",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a159dc1a-6783-404f-a28a-5e34a7891874"
        },
        "item": {
          "id": "aacbd823-5e97-4700-b001-13ba0d2f8c0f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "af970608-c4ad-40b7-8863-508c7fe5865b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfe02c0-025f-4e5e-9e45-da75539d72b0",
        "cursor": {
          "ref": "e3663254-06b4-4e8f-b031-da261b797087",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "731317a1-8a39-4d37-8a46-416fccab4f6f"
        },
        "item": {
          "id": "1cfe02c0-025f-4e5e-9e45-da75539d72b0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b51b3ee3-10f5-444e-bbbc-620b935c176b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91503184-73c9-4799-a9e5-cd65f85b1a02",
        "cursor": {
          "ref": "965ff7bc-21fa-4a68-928b-7dda74e122f1",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1d8b1b14-a729-40c2-a61b-057fe8de4a66"
        },
        "item": {
          "id": "91503184-73c9-4799-a9e5-cd65f85b1a02",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d392a968-0c00-4c03-8538-5d6a12ac3310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1ed462-ecde-4915-9de5-b7133592ee02",
        "cursor": {
          "ref": "e47ae9a9-a806-4a43-a1d1-5f875aa000bc",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c5930388-1f9a-4821-be6b-c57f878348fc"
        },
        "item": {
          "id": "5c1ed462-ecde-4915-9de5-b7133592ee02",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "49111de6-0221-49fa-b3fd-8ee78fbcb4a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924a22c6-882b-4b3d-937b-ef8b5f941150",
        "cursor": {
          "ref": "c4a5de2b-1d1d-4131-a6bc-18894d70a724",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "19811596-bd2f-43b7-80c9-889b5ebc0082"
        },
        "item": {
          "id": "924a22c6-882b-4b3d-937b-ef8b5f941150",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5db93c16-2afe-4790-8994-245578336994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5037c87-51ec-4e31-afe6-64cfab3ca3ba",
        "cursor": {
          "ref": "298dd866-d991-47c7-a210-f16a1d7da26c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e62dff74-2f26-4591-bf6f-b6636aca395a"
        },
        "item": {
          "id": "d5037c87-51ec-4e31-afe6-64cfab3ca3ba",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5e781e9e-eb39-4cf0-a9b9-0b1c0658ee73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7222610a-3ecb-4838-953b-16cc858aa3e3",
        "cursor": {
          "ref": "2e7e7c0d-3509-41b6-bf79-3432bd05ee2b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "59226440-41dc-4fdd-9f68-8eb34b1c3e38"
        },
        "item": {
          "id": "7222610a-3ecb-4838-953b-16cc858aa3e3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f21f2218-4da3-48f6-81f3-9fd94fd1067b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3668f4-40f5-46de-b4ea-1f534954566f",
        "cursor": {
          "ref": "9bfa1fb2-77a8-4c9f-98d9-6bb098df52ab",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e7480bef-32b7-4a5c-a7e8-7aff5050b9c6"
        },
        "item": {
          "id": "ad3668f4-40f5-46de-b4ea-1f534954566f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a13cb4c1-d43c-4b48-bfdf-124b38ded9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10940add-6a21-4d88-b324-3c7c4e106fae",
        "cursor": {
          "ref": "467aa34f-29ab-4a35-844d-6abb8feb9b1c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0c3736f1-d812-44ea-bd51-696150d5f4e6"
        },
        "item": {
          "id": "10940add-6a21-4d88-b324-3c7c4e106fae",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "99a578f9-9249-440d-b5f2-2da82fde0e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e2010e-e5a2-48b2-a3c0-5b64174e9141",
        "cursor": {
          "ref": "74a7f339-16ed-4529-95cb-be75e98b244f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "da0ad0ed-1e88-4b7d-952d-8c5210db616d"
        },
        "item": {
          "id": "63e2010e-e5a2-48b2-a3c0-5b64174e9141",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b8f177dd-2b54-4f0d-8f3b-833507bc1e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02b363b-1f9f-46e8-b72d-4a98d3b65209",
        "cursor": {
          "ref": "74c71e38-71ea-4e33-a023-8c3d3aa9484c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "85503f7d-9660-4121-8841-775cad934fb7"
        },
        "item": {
          "id": "b02b363b-1f9f-46e8-b72d-4a98d3b65209",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "49a1bdde-dfa0-4035-aaff-673b8633891e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4c3a4a-c10c-4974-a30e-26fb523e4c5c",
        "cursor": {
          "ref": "fa1b4c41-11e1-4d2f-b15d-e0485b355b01",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c66bd316-328f-4aab-a931-7cd3ce439a21"
        },
        "item": {
          "id": "0a4c3a4a-c10c-4974-a30e-26fb523e4c5c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d314da73-b773-4aa6-819d-64e11b51a2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aa705f-b67e-46f0-8977-b9ee7b1950d0",
        "cursor": {
          "ref": "d5dcf41f-c13f-4005-966e-c30cce879314",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b8dabe0b-f388-4744-b8f1-51f32e1b15c2"
        },
        "item": {
          "id": "06aa705f-b67e-46f0-8977-b9ee7b1950d0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "61e001a6-90d6-40a1-b59e-c91818f2bc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d28a65f-1111-4d33-bbd6-425f3bfee9c0",
        "cursor": {
          "ref": "71c0b76a-6f27-4800-9c37-87379736531a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "01d0803a-7f3b-4d40-aba7-7edc7711092d"
        },
        "item": {
          "id": "5d28a65f-1111-4d33-bbd6-425f3bfee9c0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "45085f54-f85d-427c-a139-564d75f7cec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018c73be-3228-4e08-88c1-65ac4d4c7aea",
        "cursor": {
          "ref": "ca77cde7-9be1-4a74-99fc-0084ae1366ef",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9cddc04f-1318-4296-8fd7-7b5a32f1d05d"
        },
        "item": {
          "id": "018c73be-3228-4e08-88c1-65ac4d4c7aea",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9b6520c3-12e0-46f3-be81-d91d10173f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc59ac5f-a2ae-45bd-8c94-95bceadf1c54",
        "cursor": {
          "ref": "e036e0a4-9951-4ae8-950f-bc56f411f907",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "02d10ea5-f6b1-482c-b336-a7ba10f68633"
        },
        "item": {
          "id": "cc59ac5f-a2ae-45bd-8c94-95bceadf1c54",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ca01e461-0bc2-4224-ba9c-639e7e691389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f052472-5264-4da4-ab73-cef19ce31601",
        "cursor": {
          "ref": "7362d8d2-8450-4a6d-8add-93e65804521b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7b19ecfd-cb23-4720-be86-c64a3a59f66a"
        },
        "item": {
          "id": "1f052472-5264-4da4-ab73-cef19ce31601",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e5ea5484-9bfd-46a4-80cb-7f306fd0c932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57a8df0-8882-4a0d-a091-b1017c6dfec6",
        "cursor": {
          "ref": "d4cb60eb-e792-4f14-96ba-55084bc5d353",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e393d441-a0b8-42c5-a8a1-7217d28f8320"
        },
        "item": {
          "id": "d57a8df0-8882-4a0d-a091-b1017c6dfec6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ba55daae-1ab6-4544-bcad-79008aa83f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bb792c-0692-4f12-8710-641973b305c7",
        "cursor": {
          "ref": "bb9d8a73-7772-42f3-950a-58bfd06b0f6f",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b350f058-ca11-487b-b822-107feb2c3260"
        },
        "item": {
          "id": "41bb792c-0692-4f12-8710-641973b305c7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dac8847c-cd0f-4a4a-89e0-b892c6f012d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e65d6a-8753-4eef-be3e-11a400a430f7",
        "cursor": {
          "ref": "c8e1bd6c-db4b-4730-a7ef-16ffce43f73e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bc488da3-a67f-4579-b04d-7a2f08d787e9"
        },
        "item": {
          "id": "b0e65d6a-8753-4eef-be3e-11a400a430f7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b717f720-868c-4704-b7ba-ac687b3e9c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dcc5f7-90f6-4fe5-89ce-a9414755b2f8",
        "cursor": {
          "ref": "d92d2ec0-9d77-43ed-bf09-2869f2b23599",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c7e58e50-bf0d-4f17-82b9-a2c6c072cec3"
        },
        "item": {
          "id": "87dcc5f7-90f6-4fe5-89ce-a9414755b2f8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "38084f6c-faf5-4da8-8620-4a50e9d487c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43c6954-40cc-46bf-a493-5154d100ba07",
        "cursor": {
          "ref": "a39a83bc-8c15-4de2-bfd2-def062e0108c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "64c945ab-1d3d-4f85-ae2f-5f0989bf15dd"
        },
        "item": {
          "id": "b43c6954-40cc-46bf-a493-5154d100ba07",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3d625ed1-81b8-4bf7-8486-2fc1b5b7971c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9480e3e8-4c68-4f45-af32-f3176c677930",
        "cursor": {
          "ref": "d7c7d9c6-992c-4340-83ca-9911195ccd96",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "86485a94-d63b-4b56-9fc7-b8aaea68ff86"
        },
        "item": {
          "id": "9480e3e8-4c68-4f45-af32-f3176c677930",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "43614b54-4a39-4dab-ba06-4ffdd1d079ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2feeb5be-f59c-4dfa-883e-d3401fe742eb",
        "cursor": {
          "ref": "0ce0401d-844e-40f8-b4bf-65129b04d836",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "580b62e6-556b-4e3a-91b2-7b370a8c96c0"
        },
        "item": {
          "id": "2feeb5be-f59c-4dfa-883e-d3401fe742eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "20a41554-b954-4022-81a3-1fdcca851d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beca9555-012a-46ff-af0f-3705f4a8b6fa",
        "cursor": {
          "ref": "31005507-656e-4b75-a6cd-adef29238f5b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a989107a-8911-4930-b262-a60d638bdd00"
        },
        "item": {
          "id": "beca9555-012a-46ff-af0f-3705f4a8b6fa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3e0cdee6-24be-434c-9bc9-cee0b83a1f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7043e0-3437-4fa1-adeb-dd187edcd705",
        "cursor": {
          "ref": "206b8533-415f-47f5-abf3-516f4afe3063",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "325a1df8-3a38-4c4a-89e2-8b9671f236f5"
        },
        "item": {
          "id": "6a7043e0-3437-4fa1-adeb-dd187edcd705",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "98880cae-87c3-4e76-ab4d-852dcf0848ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16106ad-64cf-4087-bd6a-10744b30a177",
        "cursor": {
          "ref": "b0d78c75-a58a-4763-b239-c47394d7c950",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cc97e423-8120-4fa2-9e7e-d6df68ba0f52"
        },
        "item": {
          "id": "d16106ad-64cf-4087-bd6a-10744b30a177",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c0c8a0a2-5f7e-453a-bb3c-ddcb59b5a6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350ddc5c-0551-45b5-ab26-8c280bf3d580",
        "cursor": {
          "ref": "62b631f0-7897-4735-bcef-3b4b27ca4e1b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "016fb79d-3f63-4e63-95b2-a96ed99a1bdb"
        },
        "item": {
          "id": "350ddc5c-0551-45b5-ab26-8c280bf3d580",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e5c33378-1f54-42b3-970f-f7feeef5206c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083099b8-5289-4303-8ea4-34cf703fb54c",
        "cursor": {
          "ref": "6e2eaeb3-1e37-4a6a-84b1-d799611d84aa",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b64ff253-909e-4c48-a121-0a5289afabcb"
        },
        "item": {
          "id": "083099b8-5289-4303-8ea4-34cf703fb54c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "16a63c72-5ec3-4100-93e4-9bf5c7775135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b77324-2c97-4a7c-a198-ffb55b4b49cb",
        "cursor": {
          "ref": "17b95f79-2682-4c63-885e-74b0c6e8ef96",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1e553047-8af0-4220-b30b-99ca9fb76f42"
        },
        "item": {
          "id": "76b77324-2c97-4a7c-a198-ffb55b4b49cb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6eb3c733-698c-4789-90b0-2dc51762f676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a554b520-c4a2-4481-83b6-608c3db5b441",
        "cursor": {
          "ref": "b790cfa6-152e-439f-a1ae-0326e2a54a7d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9f0369de-6031-44df-8fb1-1b39d62c0a00"
        },
        "item": {
          "id": "a554b520-c4a2-4481-83b6-608c3db5b441",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "12752568-7c75-4671-8151-c38b1a9fc63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97783f9-dc1c-4154-a947-55c7416c0e87",
        "cursor": {
          "ref": "30953fb9-beb5-4523-a1ff-1dcd6fbe2790",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "faf1b38f-7a9a-44e4-af46-0f4ad04ad6a0"
        },
        "item": {
          "id": "c97783f9-dc1c-4154-a947-55c7416c0e87",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b07ae808-6862-41d5-beea-d033789a5b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95ed4d5-438c-4e4f-a88b-908c383f8345",
        "cursor": {
          "ref": "54a04662-e66b-43ff-ac30-66a4d0191677",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "969a68f0-a441-43a2-93ac-d40baef117e9"
        },
        "item": {
          "id": "e95ed4d5-438c-4e4f-a88b-908c383f8345",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8e43a6c9-9201-4913-9378-7df9eac7c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bf9f76-94ff-4b12-97f3-b8d060818070",
        "cursor": {
          "ref": "20f897e0-a31a-4503-bd48-eea63c35a3da",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aeb49323-621e-42bd-8b63-ee4e53e38a10"
        },
        "item": {
          "id": "e8bf9f76-94ff-4b12-97f3-b8d060818070",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c41d67b9-7b97-4e0b-92dc-c813f6234b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c9dee2-ddb6-42bb-8fc0-0f7c56b14e03",
        "cursor": {
          "ref": "610cdae3-68ec-45be-bb68-a57f0e242238",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "eb25b2a1-c3ce-4b3e-b8bc-6703e1cb8f76"
        },
        "item": {
          "id": "a5c9dee2-ddb6-42bb-8fc0-0f7c56b14e03",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e5f95bc4-7680-48d2-8f08-b6a119f835bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069fb219-6b89-4b46-9839-c879f7011e7e",
        "cursor": {
          "ref": "1f152518-9fe6-4524-b31f-5a45ae9b4177",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4cbf55fa-65ff-412b-b9ac-24fdd2db11c6"
        },
        "item": {
          "id": "069fb219-6b89-4b46-9839-c879f7011e7e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5263bc37-7c96-434a-a422-7fc2da6cee0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce991d5b-3241-48e1-a278-f4f46e82d443",
        "cursor": {
          "ref": "d110a49b-3a2a-4b09-90a0-acf35a63b7c0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cd31ec72-6d4c-48b1-8102-7f8edf1b5020"
        },
        "item": {
          "id": "ce991d5b-3241-48e1-a278-f4f46e82d443",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ab424ad6-8924-4998-9e1c-9a145e4f3dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbd4968-00fa-46d4-91fd-b2b7d7afe8a7",
        "cursor": {
          "ref": "30d3c06b-d0a9-4c77-bf26-83e61d9db86b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6374bf0d-f9d5-4337-8f98-dbb7d1424c69"
        },
        "item": {
          "id": "3fbd4968-00fa-46d4-91fd-b2b7d7afe8a7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1de365c1-1220-4e02-b411-02c5ed0969cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbc7799-96db-42f3-a1b7-cc222ed44aaf",
        "cursor": {
          "ref": "6f60110b-3bb1-4aa0-8c8d-748bd095a423",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "da45b8bf-3ebe-4d74-bee9-128da97900e4"
        },
        "item": {
          "id": "7cbc7799-96db-42f3-a1b7-cc222ed44aaf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "74056b67-5ffa-480a-8c6f-e1dda7985381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741af642-b083-4550-abcc-f8893c59b677",
        "cursor": {
          "ref": "79cb9ab5-8361-4c90-bdbb-af13585c0cd5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9bfcd98d-8d1b-4813-8545-676f45a001e3"
        },
        "item": {
          "id": "741af642-b083-4550-abcc-f8893c59b677",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6eefc524-9a6d-42dc-88b8-6001adaab3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ea5a55-b098-40a0-8fcb-9abe632e7919",
        "cursor": {
          "ref": "9715d513-97f8-4236-ace8-5d315484127d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fdf9e3e3-a197-409d-9a04-553d637281ce"
        },
        "item": {
          "id": "91ea5a55-b098-40a0-8fcb-9abe632e7919",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "85269ed3-11c9-491b-b71d-0c93da5fb0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb97da4c-ea70-4e4c-b6b7-481de51cd775",
        "cursor": {
          "ref": "1cb3b640-1fa7-4f53-acc0-3224a35e346f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "50995f4c-ade7-4889-b27a-046e05aaab1b"
        },
        "item": {
          "id": "fb97da4c-ea70-4e4c-b6b7-481de51cd775",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3f8133c6-ee43-42a2-83bd-e3985fa9f551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a250f4ff-8bf4-4aed-8ad8-41590bceaeec",
        "cursor": {
          "ref": "4b47459c-0980-4fd9-b6e9-77eaf9755099",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef0df56b-5804-4701-b7f0-12e73e5549e1"
        },
        "item": {
          "id": "a250f4ff-8bf4-4aed-8ad8-41590bceaeec",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cb11238a-7ae8-41ea-8f2b-78230df0c5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2013e5-ff2f-4c98-abf8-6dd70dd3df13",
        "cursor": {
          "ref": "b128236b-8cde-488e-88df-0962146dd1cd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5a1a4c79-4558-40d9-afeb-1609bdc0b75a"
        },
        "item": {
          "id": "ce2013e5-ff2f-4c98-abf8-6dd70dd3df13",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "269a1e72-a7c7-4b1e-be8c-dc9f5f8bf672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8e499f-f9f1-448b-a633-3d1af93f8cf3",
        "cursor": {
          "ref": "75adb699-8bb0-41e4-83f7-704ddd841baa",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3015f033-6eb1-4bb1-919d-6c5d696a6246"
        },
        "item": {
          "id": "ba8e499f-f9f1-448b-a633-3d1af93f8cf3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1a3dcf06-46b4-4cf1-be20-22fd15880b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef28614c-b0de-4741-aac0-199a1cdbcd53",
        "cursor": {
          "ref": "4530eb0b-fdce-4aa0-b180-73c102f89375",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8619d8f9-2ceb-43b0-86ca-7d6d66a9b4d3"
        },
        "item": {
          "id": "ef28614c-b0de-4741-aac0-199a1cdbcd53",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f957dfa0-1f43-4dab-a437-54b06ce5ef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cc5633-d4b6-4b41-99f9-d6be8be066f3",
        "cursor": {
          "ref": "e8260203-24d2-44bf-a35e-a314d49a5009",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6f560437-1814-4aab-9547-848be6a8f24d"
        },
        "item": {
          "id": "b8cc5633-d4b6-4b41-99f9-d6be8be066f3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e57144b9-2d7e-4a54-8754-7892903467c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf2346d-96ac-470c-ae70-cbef25081bba",
        "cursor": {
          "ref": "5a8323b0-81a5-49f0-bbd8-ef9c82700b70",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "67196d83-c77d-4f24-9b26-0daf52fef430"
        },
        "item": {
          "id": "1cf2346d-96ac-470c-ae70-cbef25081bba",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "477a3686-f9cb-4b80-9511-e87d8fd879fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1abbf1-41a4-4033-b128-db47c4bcc751",
        "cursor": {
          "ref": "3ab44bed-71f0-42f5-a710-98684926d802",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "64075449-0099-4a9b-8633-37d648f4d544"
        },
        "item": {
          "id": "ab1abbf1-41a4-4033-b128-db47c4bcc751",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "50e6e768-6ba2-4b66-8cf7-38ac4aff77f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ab4fc2-fac9-442a-a2f4-776f1392211d",
        "cursor": {
          "ref": "c2823d93-eff7-4768-83ea-d258c5ddb076",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a31d6a85-2d16-4f71-89ae-4271f97073bf"
        },
        "item": {
          "id": "82ab4fc2-fac9-442a-a2f4-776f1392211d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b4c8427e-fc25-4800-8afa-63caef149808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397248ba-ceee-461d-acfe-a4048a5d762e",
        "cursor": {
          "ref": "0c1b1ab8-2309-4cee-a0f0-97de681c6526",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d12be77c-ef46-47a3-b3a9-4e5353e923b3"
        },
        "item": {
          "id": "397248ba-ceee-461d-acfe-a4048a5d762e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a0cd4a88-8edb-4c35-8be5-64d6a635cc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d7749a-290e-46e8-9b17-24a3faef52be",
        "cursor": {
          "ref": "a91f3f71-428f-40fc-8fc9-7109a8245637",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8ab4886b-7165-44e6-8b26-a736e1590adb"
        },
        "item": {
          "id": "81d7749a-290e-46e8-9b17-24a3faef52be",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3b84d6bd-83ac-4e0a-919e-ca4d13817dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6df507f-51ce-4981-a03a-80b6ae01aa22",
        "cursor": {
          "ref": "6c8e367a-a100-4674-8deb-283925a3d656",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "15c3ee9c-0707-43c9-96b4-a5e455c3d15f"
        },
        "item": {
          "id": "b6df507f-51ce-4981-a03a-80b6ae01aa22",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6201011d-ddd2-490c-9956-df66271c5fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ae6334-07a2-4b3a-9162-5360598670d3",
        "cursor": {
          "ref": "af4bb761-9d04-49f6-b1e3-6beb19129416",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "62dd86ab-c4b8-4b91-892e-82416423232a"
        },
        "item": {
          "id": "32ae6334-07a2-4b3a-9162-5360598670d3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8829df9f-8ae3-4eef-83d7-5a231590881f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a14bf48-916b-4c87-ac3b-a0eebb5bc254",
        "cursor": {
          "ref": "f1c0cce2-4e62-4a8a-8111-2ce6ae420048",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f1bae819-dd85-413d-b9c1-d2d743b42685"
        },
        "item": {
          "id": "3a14bf48-916b-4c87-ac3b-a0eebb5bc254",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3c36eb72-432c-4f20-9739-ca1b7ef913e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69616488-2421-4ed0-b61b-7d0230cf8641",
        "cursor": {
          "ref": "2335d8bd-639a-4acf-818f-6e68eb772003",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "51ecf960-44f2-4359-926a-85e03435bff6"
        },
        "item": {
          "id": "69616488-2421-4ed0-b61b-7d0230cf8641",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "df386014-d9da-4bfd-a39a-aa2fedca9c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871966b4-b835-477d-a988-fd7bd44a7edd",
        "cursor": {
          "ref": "ee1d1046-9b2d-4633-adbc-5e4d6838cde9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3db25b3e-3707-4f32-b9da-c6d4c506acc6"
        },
        "item": {
          "id": "871966b4-b835-477d-a988-fd7bd44a7edd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "443fd50e-3485-4a58-94cb-30a71490497d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc38786-277a-4526-a0b7-f6196cdfc3bb",
        "cursor": {
          "ref": "741eff43-9ccd-41ef-ac71-1ad569cc8fbb",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0f4a185f-73ff-4a8e-bf48-4d02b13f595f"
        },
        "item": {
          "id": "abc38786-277a-4526-a0b7-f6196cdfc3bb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "15f6400c-acf9-48ff-8eec-e39a4af0504d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4e2e90-6c01-4413-b80e-610dc65c9559",
        "cursor": {
          "ref": "79268b83-384e-4c79-bb76-f04b4b18b7b6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3dc62a7b-485a-4a74-a7fe-20ef7e81c3b1"
        },
        "item": {
          "id": "0c4e2e90-6c01-4413-b80e-610dc65c9559",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2e77bc13-cb3b-49d1-a71c-366532fca951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919cb3c7-7164-4830-b906-1fc91673ab77",
        "cursor": {
          "ref": "a4ed38d6-cb44-4cdc-848d-a5752c1f4027",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "61c2d99b-62e2-47ff-ad29-905793824ba8"
        },
        "item": {
          "id": "919cb3c7-7164-4830-b906-1fc91673ab77",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4d97c717-d9fc-41f5-a48c-64ad1817bd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e7f75c-51ee-44f7-9642-1a139bee879e",
        "cursor": {
          "ref": "39dc5f95-f09c-4cb4-88f6-dd129729c49f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f93b7e54-317b-4357-b7f6-710b269ab803"
        },
        "item": {
          "id": "a9e7f75c-51ee-44f7-9642-1a139bee879e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fed42fa8-59fb-4e18-81b7-6d6d6131dff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca2f200-5f51-4e27-ad56-2bcdbf862a44",
        "cursor": {
          "ref": "28879fd4-2708-4aef-93ba-dbb520c4d8a3",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8532408a-a33c-4b13-9a4e-d538c05c197f"
        },
        "item": {
          "id": "8ca2f200-5f51-4e27-ad56-2bcdbf862a44",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bac3f1b3-dae5-4907-98bf-a3a940b5e652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81369ad4-755e-4d10-83ea-a268362822c4",
        "cursor": {
          "ref": "b7d82793-0088-42e7-9a76-a41299c182a8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c8aa9ec1-983d-4840-abb2-53a89a114eab"
        },
        "item": {
          "id": "81369ad4-755e-4d10-83ea-a268362822c4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "39e72972-72f4-497b-97ce-270e28347119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d396f39-6c93-4185-8d55-ff72bd49324e",
        "cursor": {
          "ref": "c81eea5f-fc20-4dcf-943b-cf0a2ed16607",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d1970f5a-441e-4fc9-9c63-d410653b98c9"
        },
        "item": {
          "id": "7d396f39-6c93-4185-8d55-ff72bd49324e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a1e1cf84-f9f1-4e60-ada2-c0607a00bd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3615f00e-7f1c-4ad1-8ee7-6356f83950dd",
        "cursor": {
          "ref": "5209b6b2-d0fd-4a18-90e8-d86b87712a16",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c1c196f1-0b71-4f52-a3ad-c26ec4b20bdd"
        },
        "item": {
          "id": "3615f00e-7f1c-4ad1-8ee7-6356f83950dd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "adb15333-a843-4fae-b6b5-6f309d8e844b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4082bbd-f6cf-422c-8d21-1d1c6bfe238a",
        "cursor": {
          "ref": "48d1bdbc-f039-4ef4-b747-0ec73c898142",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "df4287d9-481b-4c66-b048-ef23fa634db3"
        },
        "item": {
          "id": "a4082bbd-f6cf-422c-8d21-1d1c6bfe238a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "45560c7e-f5cf-48e2-93b5-13da74c4aeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbfea8d-2200-42df-9aea-bebf49c00e2e",
        "cursor": {
          "ref": "bdcd9b5b-6445-4d33-9755-d6f59957efcb",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c43b2c0-9df8-4b19-a753-98cc39aa09c1"
        },
        "item": {
          "id": "8dbfea8d-2200-42df-9aea-bebf49c00e2e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "41a08964-eb6b-4de6-8308-b004b55e4e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b5611f-654c-46d3-b087-2852b14a86bd",
        "cursor": {
          "ref": "bd598c5c-d2c1-4de7-a60a-302f06f2c917",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a933aa6e-11f8-421f-95e3-44d38d871a43"
        },
        "item": {
          "id": "78b5611f-654c-46d3-b087-2852b14a86bd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "96385233-39ff-4891-ba6c-bd50ef1a9c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7af368-d2c4-4adf-9f1a-7c9692ea7fd2",
        "cursor": {
          "ref": "abf3bcd4-a021-410c-94fb-9647a791beee",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ae3f78aa-729f-40cd-b8dd-07a0def4292c"
        },
        "item": {
          "id": "8c7af368-d2c4-4adf-9f1a-7c9692ea7fd2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "872367bb-97dd-4399-8cb7-5fa2996363d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f313d0-7eb8-4d0c-8523-906928fcac4f",
        "cursor": {
          "ref": "66f71d8f-fc98-4611-a5fe-89a9a330b6ee",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a1963796-5952-4d3d-a9f2-c62ff007441c"
        },
        "item": {
          "id": "26f313d0-7eb8-4d0c-8523-906928fcac4f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a9024308-1695-48a8-b2f2-dd26545bd7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a60cec-59dd-4494-a2e7-7a17071b4ab2",
        "cursor": {
          "ref": "392c4dc8-f67b-40c0-b645-24d65839becb",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d309ad52-d822-4473-9138-e99e248b7ddc"
        },
        "item": {
          "id": "52a60cec-59dd-4494-a2e7-7a17071b4ab2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "245e9327-f26a-4150-bf70-c0f7268c1d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc2554a-ce78-4aeb-a3c9-2e251112e706",
        "cursor": {
          "ref": "26dca2af-73c3-4775-ab6a-f346cedd7930",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fff183f1-1715-4ded-aa6d-fabfad2de74b"
        },
        "item": {
          "id": "5fc2554a-ce78-4aeb-a3c9-2e251112e706",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "af842892-fdc1-42ea-bfc0-72b0ea7f4de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba93a0e8-c7ee-41e9-a82e-6e6de9eea001",
        "cursor": {
          "ref": "23e4b63d-d4ea-44e2-a489-dd2cbded83e0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1f617888-4ac2-4061-881f-549f133a3aaf"
        },
        "item": {
          "id": "ba93a0e8-c7ee-41e9-a82e-6e6de9eea001",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c61a4028-9dc1-4dd6-b62f-e62e7ef956a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3f7eec-6aac-4100-97bb-1a01d9731b4f",
        "cursor": {
          "ref": "7d20a906-9ef5-42a9-bac2-e1b513398d1a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "92562c1c-24e7-47c1-b727-7f551b360f19"
        },
        "item": {
          "id": "fa3f7eec-6aac-4100-97bb-1a01d9731b4f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8dca601f-505e-4960-9846-ea02a14d4ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4caec7f-f04c-4f68-8b8d-d00f20b8d1d6",
        "cursor": {
          "ref": "1d0bd517-623a-448b-b4a5-e6eee795331c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0e389477-fcbc-4104-98bf-ea497527af44"
        },
        "item": {
          "id": "f4caec7f-f04c-4f68-8b8d-d00f20b8d1d6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9d907be7-ee48-4a64-9cd0-1877b6bb5ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b35fa10-0e0c-4cbf-b1b6-2700a370fcc8",
        "cursor": {
          "ref": "d679cc72-b09f-4173-af71-030f64cd2aa8",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b0cf2908-77ec-4489-a67c-0dad312eb1d5"
        },
        "item": {
          "id": "8b35fa10-0e0c-4cbf-b1b6-2700a370fcc8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7b4fa36e-7b07-413a-9476-0f51d3114721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e741de11-2141-40ff-befd-831d30bf7000",
        "cursor": {
          "ref": "7f7fa62b-06a9-4d2c-a9ad-91909983dd49",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3abb8cfe-3520-43e7-8521-7d25cb6969f9"
        },
        "item": {
          "id": "e741de11-2141-40ff-befd-831d30bf7000",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2c47ee14-fec2-421f-96a7-906f18fe00de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001b8560-d8c4-4989-83ee-9ea95bbd3c70",
        "cursor": {
          "ref": "fc879351-e782-4948-b9bd-0c81440380e1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3a5336da-4be0-4da3-95db-b639696c2eb9"
        },
        "item": {
          "id": "001b8560-d8c4-4989-83ee-9ea95bbd3c70",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4e76627e-8613-4f38-acb4-2aeea409cde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87cd799-065d-4527-bee0-bbcc0c53a0d8",
        "cursor": {
          "ref": "e2ef4bed-cd3c-4d2d-a3a5-0c8058585bc3",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "289f14d4-9ecd-47b5-a235-2c95b7b5dcd0"
        },
        "item": {
          "id": "c87cd799-065d-4527-bee0-bbcc0c53a0d8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "84df24eb-69c6-49e8-a53e-496915444f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6c4d90-ca51-45d5-bc7b-668afc44a1e9",
        "cursor": {
          "ref": "e4466c23-3cb7-4152-9ea4-73239c9c2203",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "747fe889-beae-45d3-b9c1-c49a745ca6bf"
        },
        "item": {
          "id": "cc6c4d90-ca51-45d5-bc7b-668afc44a1e9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ccd4ed61-0d3d-4775-ba64-6ecf7fe85f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9954ae32-ca91-41a7-b335-87cd5b816e9f",
        "cursor": {
          "ref": "04ec6786-0e59-45f5-906a-62df232ba4e4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4f053384-985d-4810-9462-b846235348c8"
        },
        "item": {
          "id": "9954ae32-ca91-41a7-b335-87cd5b816e9f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "50419287-391a-45b1-9d5b-e831923fc880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcfc432-ad61-49e0-949d-1be2f0f79c7d",
        "cursor": {
          "ref": "f5b6ff03-5cae-4982-9953-a23d4d986d8a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1405cb46-cc94-4b8c-a426-c9fb20bbdc01"
        },
        "item": {
          "id": "cfcfc432-ad61-49e0-949d-1be2f0f79c7d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "31127bf3-c094-4259-bf2b-ec8a1da7d8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73e57e3-691e-4282-8f2e-1ae55ad85425",
        "cursor": {
          "ref": "600dd873-827d-41c2-b2a8-e67e9191273c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ce7c5769-2b7d-43b5-957d-dd8bc0f2c4a1"
        },
        "item": {
          "id": "b73e57e3-691e-4282-8f2e-1ae55ad85425",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "507754ed-f4b8-45b6-9269-af6200fdebe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a70447-f8ce-4310-9279-e93272def1d1",
        "cursor": {
          "ref": "e0205498-4e5d-4dc9-aba2-a1b2ad9327b0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "faaf288c-57d7-41de-b9ee-c06564eacb99"
        },
        "item": {
          "id": "35a70447-f8ce-4310-9279-e93272def1d1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "329c006a-2e79-4c27-9b7f-26b028661ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cee184d-58d3-4673-b20a-b62f8f8a17eb",
        "cursor": {
          "ref": "9c983e0a-3ee9-4030-8797-0ad1e444ddce",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e17a2128-9148-4ec8-88d8-52d49e49a03a"
        },
        "item": {
          "id": "3cee184d-58d3-4673-b20a-b62f8f8a17eb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "abbcbdf2-fe70-41a3-ac6a-2b4891c627d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b84aab-dc19-41f9-9a27-2bff6176ef4d",
        "cursor": {
          "ref": "339c85c9-f3d3-4c00-8b0b-e7d8c907277c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "18184bf5-cdb2-4fb3-977f-c20a2814e6a1"
        },
        "item": {
          "id": "e2b84aab-dc19-41f9-9a27-2bff6176ef4d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "756c6b66-7086-44fb-90d2-7a797fc4cc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198acfcb-9792-4dda-b520-b1b68733160c",
        "cursor": {
          "ref": "5075875b-4c97-448d-a643-2f5a4ce3d61d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6ef2a701-825f-42bf-ad3a-3e315d4957cb"
        },
        "item": {
          "id": "198acfcb-9792-4dda-b520-b1b68733160c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "15fab6e9-1ae5-4912-8f3b-0872c2f3960c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efc5fb5-067b-4233-86da-956e0193f17d",
        "cursor": {
          "ref": "9e4c2014-0582-4cfa-ad08-07bc62ab9398",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "43af8ace-c105-422b-aaa8-dc68dec530fc"
        },
        "item": {
          "id": "6efc5fb5-067b-4233-86da-956e0193f17d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "10dda0be-28cf-4408-b2e0-4adcd2dd8910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c196f771-a3ae-4ac3-afca-b29f172ff0ae",
        "cursor": {
          "ref": "059b1b04-ff0a-4c1e-b47c-72623fbe1b42",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bae73d33-de87-4d0c-bd19-6e59a76a6b6e"
        },
        "item": {
          "id": "c196f771-a3ae-4ac3-afca-b29f172ff0ae",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6de3de77-12c6-412c-a440-5c1bc8610581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20f683f-b5a9-4fee-8882-0456db15d947",
        "cursor": {
          "ref": "5d93f28b-fb8a-4d83-aac9-44cf42a1be76",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f5f2347b-f42c-4568-815a-88d0443a2243"
        },
        "item": {
          "id": "d20f683f-b5a9-4fee-8882-0456db15d947",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "15c8e9c7-9c02-4c2f-92fa-b7bb5595c21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86b0d69-2577-4a96-9fcb-177cc963d9b8",
        "cursor": {
          "ref": "0b283f68-8d2e-4d3b-ab4d-cb7db16541e0",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f363ef11-8d3e-42d1-9de9-9b0a290109cd"
        },
        "item": {
          "id": "d86b0d69-2577-4a96-9fcb-177cc963d9b8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "32fe99f7-cbac-4c3a-b9f6-e0218b39e3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8453af53-ec4c-4454-9628-de412ad01b97",
        "cursor": {
          "ref": "5a576f62-a2f9-4b93-a9d4-8e0eb1cc0d6a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cf646b27-332a-49e0-8646-1ecb7420a4cf"
        },
        "item": {
          "id": "8453af53-ec4c-4454-9628-de412ad01b97",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6f1cad65-4cf7-4517-8466-7826af4785d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a70fbab-2713-4268-b20c-7b55f2e5acbc",
        "cursor": {
          "ref": "3baf6f8a-e704-4fb1-8940-54fd9ca78405",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2d01268d-e75d-4d9d-9111-676f912e7c78"
        },
        "item": {
          "id": "0a70fbab-2713-4268-b20c-7b55f2e5acbc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b8a254bf-0d3e-4c54-92d6-ba08329efb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b69478-8267-4b48-b40d-4f690f7b2987",
        "cursor": {
          "ref": "5c8bd316-44e2-433c-9bea-d396b441efec",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d936fa83-b939-4de7-b5ff-02d1edaef1b7"
        },
        "item": {
          "id": "44b69478-8267-4b48-b40d-4f690f7b2987",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "09768505-52d1-4099-a6a9-3eab8c36d737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847f07d2-ef90-4269-88dc-9ac40407b821",
        "cursor": {
          "ref": "b8cfe396-6f38-46f4-a750-5601b1aba7c5",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "059348df-056c-4f0e-b53e-166ecb82a218"
        },
        "item": {
          "id": "847f07d2-ef90-4269-88dc-9ac40407b821",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "147571fa-ed71-4b5a-aad8-fcb8a3795dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dc158c-3ac0-44d3-b260-ee0e7ee2ea78",
        "cursor": {
          "ref": "f747ce0b-6731-4cad-bb43-4391390cdef9",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f8025069-7bca-4bad-aa39-215d7821199b"
        },
        "item": {
          "id": "80dc158c-3ac0-44d3-b260-ee0e7ee2ea78",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1f95e8e9-cb7e-4529-9a43-f80ea0d2ce36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844be58b-66d3-42da-bd8b-d894d1207d5c",
        "cursor": {
          "ref": "cfa6548f-39bf-4e75-942e-5cab16072762",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9556a3d5-46f4-44b8-8972-962c8aa85284"
        },
        "item": {
          "id": "844be58b-66d3-42da-bd8b-d894d1207d5c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9874beb5-9eb7-47ce-88d0-19d13dc14525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefdc0c7-529b-4b45-8e49-3bd7ce258770",
        "cursor": {
          "ref": "00296dce-6cb9-422a-8e73-4956b2ff1385",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4e4086a3-c07d-43dd-beaf-086d1ce0ac12"
        },
        "item": {
          "id": "fefdc0c7-529b-4b45-8e49-3bd7ce258770",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bce4adfb-1771-4a4e-8e21-1eaba8b65257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb26a74-160f-4101-8b38-acf0a7fd1478",
        "cursor": {
          "ref": "455e401f-27d4-4fb8-9ddb-6423744c4021",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9de71ddf-fe67-49a8-8754-6712e132bc55"
        },
        "item": {
          "id": "6bb26a74-160f-4101-8b38-acf0a7fd1478",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c935961c-f037-4fc2-b62d-674087ad4df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af78319-6a61-4140-9b2d-5e9f26da6e7b",
        "cursor": {
          "ref": "da3c0df6-30fd-4e31-b35b-48b6fa6893fc",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "105666e1-64dd-412e-9d6c-cd5764f68261"
        },
        "item": {
          "id": "9af78319-6a61-4140-9b2d-5e9f26da6e7b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9d6c777f-7126-4906-917f-9a35d804db9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40247064-154a-49a9-8546-64a38f98df98",
        "cursor": {
          "ref": "e269d875-fb3f-49ba-b91a-5c1be6d3e4d6",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ce263f0b-bff6-44a3-b06b-f454f9034d11"
        },
        "item": {
          "id": "40247064-154a-49a9-8546-64a38f98df98",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "87656a6d-9e0e-4633-89f7-92a40091343d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e286fa-5e13-4efb-bd72-52746e33d357",
        "cursor": {
          "ref": "454d80a6-23c1-4172-933d-b0d2f4d1469f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fe102d70-b9e9-4b3e-b766-22c5c0f48bce"
        },
        "item": {
          "id": "95e286fa-5e13-4efb-bd72-52746e33d357",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d230714a-a1d8-432d-979c-1c84b4c214f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faead67-7a6c-44e6-9054-8f8ae7328eae",
        "cursor": {
          "ref": "7ff71bf8-273b-4efe-a7de-4f14f2d1344e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5e263f53-2184-465e-9a7c-3bef8888147a"
        },
        "item": {
          "id": "9faead67-7a6c-44e6-9054-8f8ae7328eae",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ec2bf79f-6b1e-4d7e-baf1-6a3e9b301f05",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce617dbe-9403-4f8d-af06-d9c188fe15f3",
        "cursor": {
          "ref": "6e21b613-429f-4c3c-a5b4-1e94cac806fe",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "13d903cf-ad84-4bce-940d-2619f821fbaf"
        },
        "item": {
          "id": "ce617dbe-9403-4f8d-af06-d9c188fe15f3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c86d99a1-8fcd-4251-95fc-2b131837daaa",
          "status": "OK",
          "code": 200,
          "responseTime": 1442,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8627bc-83ce-4500-9ef3-cb0c4af2e290",
        "cursor": {
          "ref": "ab8f59cf-cb5c-4e40-81d7-869f5e0d3921",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d85a9cc9-de85-4bce-8c66-94bc58422021"
        },
        "item": {
          "id": "0d8627bc-83ce-4500-9ef3-cb0c4af2e290",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c230c541-1240-48c3-bed2-f7af4c56847a",
          "status": "OK",
          "code": 200,
          "responseTime": 1560,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0439f4d-d327-431e-9cf7-52cbb6ecec9c",
        "cursor": {
          "ref": "de9676cc-70ca-4253-b11c-7adc1abc51c7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c2f62959-7125-4ef2-8c33-c37660b9e0d2"
        },
        "item": {
          "id": "d0439f4d-d327-431e-9cf7-52cbb6ecec9c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0c09a385-9105-43a0-879b-40e4dbede78b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0439f4d-d327-431e-9cf7-52cbb6ecec9c",
        "cursor": {
          "ref": "de9676cc-70ca-4253-b11c-7adc1abc51c7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c2f62959-7125-4ef2-8c33-c37660b9e0d2"
        },
        "item": {
          "id": "d0439f4d-d327-431e-9cf7-52cbb6ecec9c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0c09a385-9105-43a0-879b-40e4dbede78b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e455ac-8e9e-4572-813f-adcf92c030bf",
        "cursor": {
          "ref": "fd91ee4f-41f4-41f8-8877-58d3653485a3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3daba8eb-5b49-43c7-9177-514d81341e2b"
        },
        "item": {
          "id": "31e455ac-8e9e-4572-813f-adcf92c030bf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6edb5add-f3a3-46d9-8eed-daa896d17d7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0526dbc-05cb-4cc6-84ea-2f88519ec8fe",
        "cursor": {
          "ref": "4be0fe5a-24ff-41d5-bc8c-a02e1f52737a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c344793d-c125-4489-bfa6-9598c8f059b1"
        },
        "item": {
          "id": "f0526dbc-05cb-4cc6-84ea-2f88519ec8fe",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "10b7d75b-3738-453b-a079-da993e817729",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}