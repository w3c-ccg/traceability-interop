{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "13476efb-218a-4fe4-9738-951dd53205e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8def24ed-2b27-4245-bb0e-6ec08f6492a8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50878492-902c-40ae-b591-6a3287a803c7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c646a7dc-b620-4837-8db4-ff6cb425d635"
                }
              }
            ]
          },
          {
            "id": "c6363e75-520b-47ef-b0e1-649a2d7d0dec",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "674d5577-a112-4b3a-a52f-4ec54a79cc4b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "389f85d5-ea1b-4c4a-86c3-9f7413518e22"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1ea91010-ee80-4f79-87bc-b458374c4203",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f349a1af-7d1f-48f0-a73e-1fd887d7277d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a821f34-d15c-4fd4-a70d-dc425fe0036a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49680c08-6ab3-4585-a224-21f29341605d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed6ac500-f69e-466a-a3c1-bb41f18f75e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4544d256-265e-4c94-910a-4407cebe824e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecb515bf-bd59-4316-9aa8-66f19870e159"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d46658b-5e28-4804-ba5a-54cbb4eaeb74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc612cd4-b003-4444-8911-7b70e441d27f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf28e6f6-0cc2-4e27-8a2a-0bf58abce17a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "18fca006-5c43-44fe-99bb-007c7ea681dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f0c1421-ddd4-4ecb-8bb0-7f21f1ba42cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9003c92c-fe25-4924-b7e3-a0664f761a33"
            }
          }
        ]
      },
      {
        "id": "d8552063-843b-444f-b8bd-c54aeb786667",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fb08af29-dac4-4294-97af-63b044a6e57c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ab6398d-f224-415e-bc5d-0f687672417b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b520405b-e12f-419e-b805-3004a0a5af96",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85edb2e1-e72a-4cff-b939-25b291290d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5118b28-0de4-4e03-ab67-2ec7d36bbe9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d27274-cf9f-4df6-ac2a-7cc7bfc1af0e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbcf9a6-4d20-4722-b96f-1305f4ec19f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "360afcd4-1f70-447e-a6f0-a08e146bf066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcf8d87-c8f6-46b0-b3c4-2871091933e9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0341f13a-cd2c-41ea-8cb0-b5319eaf426c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f44cda2-fc92-4448-8595-7ac7f093c874"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d1b0bfb-6d7e-4a3d-a575-808f300edc60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc7fe40e-4263-4c2b-8daa-5fb361f96f94",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54e28d6-f0e4-4f3b-aed9-85ecbb0f63b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "411c27f8-3a0c-406e-ba11-219a9517cbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a89ee90-8f6b-468c-9c0f-4a476be76c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5b8b58-f733-426f-8b01-691b8cd20b52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1043d22c-7271-4893-a300-9fce1d0e2447",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d05df0e-bc00-4953-bbd7-c5d481a1cf77",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75b954b7-ba94-4976-8054-602a9f79e75f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ef278738-e09e-46f7-bb6f-c2bc4e0cf59d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8112ee41-3ccb-4dfb-9a06-b5019362c8b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d07bf85d-559d-49ea-a02a-094def2c728f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf34a02d-e34b-41e4-88da-bb272b1f3462",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ccc9c4a-0134-4f04-a477-81169d064ff2"
            }
          }
        ]
      },
      {
        "id": "cd2f9d3a-621d-41b1-ad68-4dce329c99e0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5b28be1d-d673-464f-ab27-a284f967e21e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b523f327-ad76-4dbb-9954-cae9401d0348",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a52f19db-6571-40cc-80b4-8b4733158352",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af403f0d-d6f8-4808-acc3-9a9a5c19fc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c988517-5b67-4d10-8e02-f6303b3bd3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e9a880-9975-455b-8f58-e6512e9bae80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e402566-dc39-44e0-b32e-8934015e9ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21828a06-a2f7-48d7-89e7-f5048abefc33",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c45187-dc5a-4c88-b3dc-fc3b95177fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26f6493-1d86-4998-a496-7e7d4499cb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdade40f-d512-438d-8131-f665aa530b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc47b2df-39c1-458d-9926-f0b4f741f8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665fa4e4-dc5b-420c-aac4-e46c19434a2d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e66a337-629f-4496-b98e-dbe5af05d5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abadfa1d-80e0-4cfa-8397-5a6b668963ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec48d3f-385d-4b1a-abb5-0b0c13d34a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a63b6457-e70f-4b4c-85b7-6da1e790f4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbbafce-0948-430c-a423-9182951a6869",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c3ef67-f7dc-4d22-8ebf-f57932262b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7436751d-fd82-44c8-87ab-afe5bb9cafd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e5b7ed-b277-4904-a91f-3a41be484c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5e8a89d-e4b5-4a19-b834-144f42500a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feef63ca-9bee-4331-9498-cf435bb10650",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bff90d-46cb-4024-8879-7a6eeb237fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664b92c4-0e35-458c-a226-5105c9d1ea3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baebd67-e388-4314-bf4a-d2b092aba9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b36445f3-60cb-40f5-abd0-eb4fe7d963d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd166ff-a616-4b46-bdb0-4fb4f2cccc03",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d221e18-b741-4248-925f-99b70e617ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453bd7d5-2480-41a6-9fc5-b3489aee7547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02eb385f-5cf0-4cec-a30d-cc270e338d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2588a2c7-2ae8-43a9-a6d4-98ebbdbe92ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c34035-8916-4292-a328-48ecc52ee9ee",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0470409e-0c06-4af3-bc02-7aeb80f847ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4856df0-6a22-4499-ba8d-b07755710c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cd0071-e3d0-47d4-a74d-50d2fb1647b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "566db6ed-1ac8-4958-9b29-47fc72cfd713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2b61a4-2af8-4bf2-b250-93e8d991dac3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b5fa87-e280-4403-8f92-943cd7b46f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debfc031-078a-4b8f-aa04-2812b803cf20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a3a0e6-07db-4663-aa87-2a7f7c741528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41c90f91-433a-4cea-851f-134cc2d32782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698ab181-a648-4077-a5ae-2daa1291fe6c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b04bea-b206-4d7d-acb9-12cd1dc32f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb863baa-7015-4ea5-904d-b295825a6054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d2e471-68d5-4b46-a93f-fcb80b83ef1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f092bfb-599b-4e24-b7a5-4cf49eb88162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44129400-ffef-4a6e-979a-864a0c4fb8a6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1aee723-b5a5-41b9-ac76-f26ac7a05b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64d295b-a30e-4f9d-90a2-55cf86d788f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade57e3f-204f-4ef2-8a72-fd662e177bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d44940f-f756-493c-acba-b8eabc7c2476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68b865e-113a-4f69-803e-8d4c5c2e77c7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0414ff32-d3b3-4689-844c-d4b37cd12d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ddd5d6-e449-45e4-b3de-3301d6933246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8460dcc8-99b5-4a5e-9c63-d099548e2c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98df8a5e-6df1-4a4b-9214-900d193f913c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2972d020-4efd-494d-adcd-ba3f384eb38a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e08cf33-7278-41ef-9a8c-8373d065642c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6740a7-fc98-4c98-bfee-fe677e015f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe22ef18-4622-41e3-9bba-e7fa053e37c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0198fb46-b8e3-4669-9b9f-c495b707fb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedc5486-ec62-42a2-ac18-1ce518723706",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d750f4-b36c-47eb-85c2-7ff9041e484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70c398a-8ce3-4c0a-a516-2e3dbc615b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7891f533-bcb8-442d-9740-1d098c9e7153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b39fa48-7bcc-4c79-a977-251ca509b51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ad814d-99db-4074-a4e6-59752e8671dc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed12635-f655-403c-8a95-7e0895bedf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e279a7-44ff-4a08-8d8e-18fdfec7e90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ce4acf-27f0-4774-a42c-6363cb192b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f27fc63-349d-4008-9712-664ad2604d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae27bf26-5ccc-417f-a5e8-95e21e01bed6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c787b28-d20a-4dc9-8f76-4dcaa214cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0a5261-d6b2-494a-9633-f861c737c54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50456806-0b6e-471a-bba5-014514004228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0eda3be-5ef7-4c9c-b7b2-5b10861f35a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec2098d-c20c-451c-8c9f-55a8a67fd94e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501eda05-f984-4e2a-bd5e-886d85f5766b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86065f2c-6811-41ee-831e-7fe2d1954632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564810b6-d369-4762-90fd-a3ab169fc6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8c7c19b-8d6c-4c4a-b47d-373ab9bf99c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637fe0e1-9df5-41a3-a4ff-8cb979559cb4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a360b7-2c26-48c9-991a-51d92c828a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5ab0dc-cf2b-461c-ade7-6a7a2b2fcc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621c2c0d-096a-4502-9d91-01e2b0efc472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79720b6d-b8ea-441e-9b68-933cbc04fc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a20cb4c-69ed-4b53-aa1a-7af7b63a85f2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b8ebdb-5bd8-4f00-bdf0-25dd5ca443d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980d4148-eeb8-4bf2-98d3-0c08df214bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ce07e7-8754-40de-bc0c-c74801a70c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f4a7db-6db8-47b0-89b2-d41814fe4b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a5245a-1984-49d0-8688-e319772ef297",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ef8979-f46e-4bd4-a3c3-f83db164f73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac1bdac-8ffa-4dc4-88d6-1615bcc183aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4699ac-40c0-4b2a-9413-d88c4a6afb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b62e2f4-9f5a-4485-b013-68b258764106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91f05b3-1c38-4b48-84ee-ab12a078f14d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afd2c87-4da6-4f77-984d-77fde291b4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0920a2ee-9783-4dc2-b366-93b0cb739be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d61689-7538-47d9-9f0d-233539dcf3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6315b2f-7e33-42b4-b1a7-e1085123742f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ff4443-d584-4879-8161-bbc36180a6d2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf414f8-6438-4ddd-b886-dbec504e2888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7bf98b-8578-44eb-8c32-fea8af3c1bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db9535e-83d9-4225-8571-8ca126a23d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e248b5-952a-4416-8707-825b7078da8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916761df-11d4-4f60-96aa-60fade85e6f5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784a4b72-c47f-4bc2-9a3a-2614ad8d32e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b301b64-f528-4ca6-a60e-a6e12ba3a8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3dc39f-1eea-4062-b82c-2f068f45c1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73cf454f-f1e7-4859-b244-f64d667df5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df0cd91-46a0-4519-9e36-bdff6623dc0a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1e67d8-3e1d-4a85-aa2c-e94e833e1c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d480ada-2728-4a67-a6b8-dc61effe16d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfda5b1-1664-4aba-8810-70e6913e15e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7970cf3e-d75b-4ec7-b0de-949f9715a844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8e1bfd-0f3f-4bcc-bd6e-bfb36885a8b7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d20e46-0f31-46a4-b74e-c2009a1fd45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5a6e90-0a61-4ed7-9c5a-820e9adc8ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec282093-4df1-4e09-9143-d149f8b35303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "373458d9-23a6-402d-8806-f2348e795b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7688dc-98b5-4cfa-8dab-4217524ef82c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dca4ae-a46f-4981-8320-0006e1d2fb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf42319-f215-47f6-8efe-9f0fcf4576f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c89a58-afc0-45f4-80c3-13874f747933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "985255f2-68c2-45b4-892a-d60cd27aaf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66fe8ae-4558-475b-a9f2-47ec56e2cdab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e560a2f4-19f2-4f88-90a4-6190a2cfeaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a07b3c-6ec0-45de-8e86-3924beb6c532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c439962f-0787-4296-b442-6af295956074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3c12b7-f11e-46f5-a3b1-7760fe178038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428cbcfb-8650-4fac-a486-6fa77ccefb60",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4c225e-e324-425a-acc7-aa3063c2ba12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52413dcd-0e4a-46a1-8193-2cf6a36faf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98bc718-8f22-4af9-b393-b0e732bb46ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "025af2c4-13e2-47c9-8a8e-0fd8f6deb053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b2d141-1c8a-4aff-ae40-c1ad92bc098a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16179768-dca5-4d9c-8aa4-4e2d82bc38c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c19329-9887-4816-a76f-cbceb61e7a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdddf58-91f8-4c21-841b-e13d4472b0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5077503-4bc5-418c-8b3e-23622ee3d8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445b3f03-9ab4-457b-843f-655c95270f6e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad99b1e4-61a0-437a-b65b-21d444026fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff02acd-2501-4bcf-9712-4d0b1641e1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd7815c-7b5e-4eaa-abc6-257f5264680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7354d34-3e46-403f-ad93-cdc2ceb2721b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a8d34d-4611-4b61-be7a-2ed74828acf0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfe7740-857f-418d-ad99-15ebc093c168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ba6e7e-ad58-498b-ac23-54f12b28a9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08560359-e34b-422d-b1ff-445fdd12c2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "05fdc628-570b-4979-a53c-acd19f43aeab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c42cf10-f770-40fe-8a58-2a06c522e005",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344f0f74-ab03-4501-a2eb-db7ee7dd0916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a4cacb-4d2d-4dc6-a426-0482bcc03fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851f5ff6-b36c-4c50-879a-c1b339bc21ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b79f3b1-f7f1-4afa-9003-89753832181d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8387af7-ead2-4abc-9222-6a0063951c19",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca67b0c2-24e9-4ee8-92a9-49a34b1afd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eed0429-ee9e-4e66-b34d-b0134c2db318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c73c0-6472-4e27-8c40-1c06e5b27b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb116dd-71b5-4232-8f6e-9fbcf9420901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42adc6f-ab2b-4c15-996c-8566964ce8c1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9408adc3-6589-494b-8ffb-bc2a03bc2cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7067c42b-13b4-4862-87ae-36a44bcf816c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d185e29a-ea73-4fb4-a2a7-c94362ee6c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74887989-75eb-4849-a705-eb9be75bdb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f0003e-b7de-4473-91c5-a1999da4183b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29796f75-369c-4c56-99dc-b82fefa4bb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd29b655-ca20-4b4b-a94e-c140ace56af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1c4f3a-dd7b-497c-9d6b-ca7b4b048066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7faa3b-869d-4800-b487-a48eb12ee9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30df0bd-68e1-472a-9cfe-853e3679b250",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beb5ba7-40ee-477c-ac49-0932218276d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f941ad51-3667-43ce-a6a4-1db347fcca23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c86ac66-fff5-452e-8a1b-8402edae9f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "133698af-f98b-42be-93fc-d29971bfca92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac0731f-2952-4d1b-bc8a-fc218c7aa6a8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a93c55-b026-41ad-9feb-7724c59f0a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0faa1519-a7fb-48c7-8b87-f2931bb22445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4c1c67-2597-408a-bdbf-e347d35a2909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d055dd-5d19-4ef0-a2f0-aa5a18ece35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99be197-3804-483a-9350-4349b9be869b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099cae85-6714-4226-95fb-cb8e43353bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94788dd-ad55-4fd9-898d-c71c3f88d5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9cd057-80eb-4c5c-a979-fac0f129f9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "523ad1d7-b301-4119-a9ce-0ddb5c721399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc98ac18-2258-4aa8-a051-66346c1afe6d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2919798-fddc-4f36-874d-566511bfaabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d3c3f4-9655-41ba-b830-4242a8d67db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbdaf0a-bdc7-4aa7-995f-01cfb0ec41b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dffb2e-edbf-40d2-b728-fdc87ab65925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193a8500-f76b-4498-a4a0-14c2b1ac9e48",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2514a64a-1ea3-41a4-8aee-6b6f1ec20c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d40e7e-e149-4b2d-b629-1c26bd90642d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753758b5-2639-4f2c-a7c5-bd2552eb0a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0122cb-60ec-4281-8cee-9f5bef55e1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a0a704-02ef-4b7f-b356-92f05d05c612",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea6c646-749e-4f8e-b044-2fa748a487b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156ccc9d-145e-467c-b591-13f1a9d6f926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0637546-847b-42b4-95fe-d8645f46173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32fcad6b-9931-4c74-a4cd-e1050e25914a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffb532b-d528-476e-bbd9-a463bff56a85",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd8e47-a69c-4251-8c08-1ff74f248374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d267ed9-2191-4cb5-8bb0-8c834955d210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfb67e3-177f-4b6d-a50a-42e89c40de58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05812b00-57d4-4f0d-9e91-e82002466507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05361093-ce0c-4063-865e-e4680c0e61b4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b3bcb6-159b-4ebd-8c26-5aefbb041e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90bfa63-b99f-4d34-aa50-a84b09a76ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc82da2b-dcc7-4902-b399-11205eef05fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa76e48-15f7-48fa-a4dc-a8c80664da4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e289985-90ee-4de4-a940-9efd3ac6c119",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a3e56a-bdc5-4824-b6ea-dfede65f3747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c0aa18-ddd9-43ff-a482-960fef9ad79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388576ad-9488-44f6-9e37-ab874a13ee5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "23718ec4-b97a-4e18-830d-12ad6d0094b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44f0c3c-605a-4f20-b34e-83e5f5533fa8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612057b5-0557-4191-b3a3-01e4b30c2fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3126ced7-ab13-4875-a028-aa55206cf188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021bd463-3f04-4f8f-9257-6976de9e84c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a33aa2b1-1a4b-4140-abe8-6d0b39e17c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80bacfd-9eda-44f4-8b6d-f446d9e1ffd9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bb8e6c-d5b2-46ce-be64-40b3c58566f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11375a02-b392-43ab-ae63-dbd7da8ccb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0853256d-aa3e-4449-bac8-e2e8843f80d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "744470e6-4c82-44dc-84cd-6fc2147493a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836b48de-9a9b-4427-b808-9ac465781ad9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a75d627-925a-4939-a6bc-caa498919879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8683562b-aea7-443e-ae62-d3a39a218e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6162d7-af63-4b6c-af2a-273e929bb3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adbfce89-6ef2-4da2-a475-2a26ead975f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bcf151-10fd-443b-88b0-787efa3f4a91",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3b69f9-d6ed-4209-a192-88d9728b7a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e407777a-66bd-4ed0-b30d-059abb05c07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cb967e-3c2c-4874-9eec-ebb7fba253f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "631fc23b-14bc-4fb5-8ded-c41afd1b07d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdf1135-aec5-4ae7-a098-cadadcabe5bd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1264c496-a7d0-4b4e-a0cb-c9973669566a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5758a4c-8fff-4ca6-911e-f4623dad5774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf469996-3e11-4ae1-882a-27475a4d62e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5788400d-5b1f-4ca1-b19b-90781ab5c422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df640b5-eb62-4fc7-88d9-2a125ebc1e07",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3df3998-a2b5-414c-a094-677618df4e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f6afae-a551-4f47-a25c-78eab5f5aca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad678ff-a9b7-4c6a-b630-69a28eb81d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3490b9b6-9bdf-4199-864f-4de453a6ccf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7f187c-c151-46fd-85b8-9aa766324081",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd0b8be-eee1-43fd-910a-8774975a87a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4815c98e-2c7d-422f-afd8-5aed00a12c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910290e9-10df-4717-9257-79474a6b4e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02fba439-37f3-4328-8db8-6a8a76399ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c97a98f-947c-4373-ada4-ae8406c60016",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285d0a17-4df8-4d67-8734-ae7ec608ef6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc862432-3a76-4055-9456-4affbc7e8c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3024a748-492f-46c7-a51b-4fc53e413582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df73ec2-09df-4a57-9605-f57e2031268d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bf7bde-c177-416d-add0-3fe30e8c3bfd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24b9fe6-fa02-47ff-8fef-8c8a21ef7530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87eb3657-6de6-4e89-abd7-f5ef65f3cae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f63fc3b-89f8-4e3d-b40b-40b02c819f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44066c60-40d6-48d6-b8e2-cfab47a63f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744f574c-d453-4fbe-96cc-f648c246af92",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c558452-4daf-4b2e-865c-397ed57decd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd6ec38-ce9e-4ab3-94f0-c246661db496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1eca865-aae0-4eea-ba60-79b4c43ea815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a300a1e-fe8a-48d8-8459-3c5e3396218c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e792a1b3-10ae-4394-871f-85750d8660df",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959e1802-50d7-4540-98bd-81ee3bcd770b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520c25ae-9c75-434e-9491-a3a8ab466c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdce294-ca25-4489-95da-b8b78f03b344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "971adad2-43ec-4964-846f-4f2824da7b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1281e9-36e5-4a66-9ffa-104339d27f40",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295c6c52-de07-4b9c-b3ab-642947281021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c900a14-ea4b-4bdd-9dc5-014fe2ddded6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db73b40d-b6d5-447f-a4db-adf6bc88a4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "186cf45a-dfe7-44c8-8235-6639ab6f2beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc30346c-c5b1-4139-8f4d-1109d818eeef",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a7d9be-929b-4e07-a8dd-fec66f2123eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3447ba-e614-4980-b786-1530445f78db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a2322c-5214-4360-93e5-ba4376ef4377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "61116ad7-13d1-484d-91cd-955435dde920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074e7996-5c8e-42dc-b2db-2cd70866687b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80fc125-2e01-4248-91dd-3fbc2dece028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a230ff3-a73d-4401-959c-ba60ba213fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929bfc6c-90e4-4cf0-ad8d-95d1d5d2df43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d26d17-5305-4cc7-a393-08e4272fbb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ce4969-9749-4bed-b4fa-a564fd8e4d81",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66429e15-7108-40b0-a216-877e8ed733f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e466ffa9-32f7-45b9-ac74-0ed2ed78aad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5288a8-5316-4e4f-913d-400491634816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b43c029-276e-4e0b-8cf5-96d8ddc80f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3b5054-6f89-441c-bef7-ef547ca957a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a579ca59-32f3-4005-87c2-86b70b30ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1033b5ca-9740-48db-8395-2786c5debc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2451a9-d07d-4db4-adf0-315f6260f636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1289c367-7446-4e9e-8605-48c3ed20e164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087e8e17-008d-43ad-b016-987afa1839e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357f2b87-f399-4e0b-8efa-f09435897cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df71e3a4-dd3a-443d-bd01-9a91e0c904b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af44769-aec9-4060-9d75-fe8b2a76d75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84c47826-91a4-4974-a227-812b40cbb9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa1dd20-0ee9-4ef1-9944-d323a3a9d8e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c985418d-d4fe-4541-9dc0-0dc2df13e073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6ce35b-9561-4850-8f98-4a6c374b5968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95824fb7-1f2b-45fc-97fb-785c7250d83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f24f845-2434-457b-8440-7dcd47504e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64b4fef-ff70-4b40-b364-b78a7fbae8e9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715b9a02-9907-4e3a-b87c-6b29051acd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6fa3db-749b-4acb-bbb7-00b813a10fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe74f11-54b3-422b-baa4-67c5b3dec485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "aecfce7f-8a28-4daa-95bd-3633ef6f81cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40e8b83-8d58-4b92-a72c-8067fef417b6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb9bc3c-045b-4bbf-9446-08a6b19f63d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bab1a8-ed70-4764-84c6-382e0c65cc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96adfe5-369b-4fa9-8d02-869a17ae000b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc806eeb-467a-4962-9ead-9c5e20de3270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80655997-d214-4d55-abd4-042b7108c46c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2257d08b-7208-48ac-ba19-11c670420143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956e7f54-8643-493b-8b8d-4375d7bb49b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44e018b-8a9f-4b76-9b66-6fa983b31c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac2e1f6-5de8-4538-9ff7-4efa9b89dced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cd3959-bab4-497d-9eb5-ff0bc7f6b7d4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793055b9-32c2-40ee-b76d-164750746231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8049cb-3d60-4afe-b48d-7851a20bba80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab07386-301b-4593-8d56-d332aafc3538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "caadfb76-f591-4058-b96f-a699bf82c9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c6f7e3-eee4-465f-b4b9-f14f2b96d841",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b97182b-7294-4c47-ab38-12dab8a6544f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7b90e6-f387-4c7a-af93-9fc4ab1824da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba34f30e-4f68-4c55-8c28-7503fda9dbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c506572-9f4b-42a9-9837-63f508750f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6807e1fc-2b07-4860-a06d-e2b406a66efd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c323b738-8b33-44b8-b8c6-59f4e23c5e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d670d919-3329-4edd-9cf1-320669c5d4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad07d04-becf-4c9c-81de-d6b476215ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa238f5-5f88-448e-be1e-573c0f30fff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faaa79a-2f39-45c8-b333-cb900ce09b8a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfb29cc-2c00-4a08-be76-4774961ba518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1a9c14-3686-421a-8ae6-0d72defcda18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7bd2f5-2d62-4fca-941e-c916d0196438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac1440b-30ef-4b02-855e-dfb7175b1838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2d2c84-6ab3-4780-aff0-5838c037309f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6202744c-3966-42c1-a9cb-eeeab4f02e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca306a0f-c291-45d6-b1d5-50c8b5483f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bef5fb4-4b52-4141-9004-42bb3b71e49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c35fd493-9c33-4a01-9981-5ddac0786864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71f4d80-9659-4022-ba20-23107dd7b7f5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6a98ea-be4b-4538-b303-21348255d87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab46b0d5-dd30-431b-a429-8649bbadd5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f385bf4-afd5-4b34-810e-1a2bde277c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1887f3-8303-4095-b147-419750c26173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222206db-e130-4b51-9349-cecf4014f67b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f978b6f3-3822-401a-a72b-e5f344171fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef18e98-1bfa-4d11-8f0f-4f1a151635b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1415b1-f1e7-4712-a48e-05f48ac307a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8a61f9-c9c8-4a07-b1ce-29b7497a9e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29d5761-730d-44d8-9cff-cff98c3e6f14",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f880a40-156d-487d-bb87-89f4a345a7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b330b7-fda0-42f7-8b86-d6633bf96249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9a0ede-9ae7-459d-8d51-58dc3f218fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1da67d9-5f4c-45f1-a288-86a6fd0e0787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b523eb-b996-4c37-8b14-7c49f45c9828",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd41a98-05e6-4717-bae4-34956d412c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210ba7bb-b162-4b48-86b7-01d93ae24191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2031e9b-b73e-47bf-9f51-af05f60ea406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d4c552-2180-468f-a3fa-e7e5f306bf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3043b9ca-e41e-4594-9212-75057503ffd1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17310288-ca44-4036-a4a5-9feb51dd14fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1a846a-b1cf-4b7e-a0d3-8f9587554c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa8133a-4592-4c4d-bd5d-9e77496b9acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35bdabf5-301e-473c-a345-4792bfdae684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84425341-ce09-48b7-b86d-f3bb610000a5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339ffe64-8257-4505-b9b2-8294e6d5944b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda5c24f-cd3d-496d-b1a0-60adf39a3eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83292468-3c85-4492-b64e-64c19de95a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64f0dbae-02de-4189-906e-00dceb05c49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac17c1c-f7ee-4041-88e3-984729affef6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3f281f-6462-4c7f-8fb9-b94f98a1899e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802e30c8-0587-4bfd-bb18-5104d2f1c659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67438850-1e28-427c-a9de-2e2505a60bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "568caa6f-b3ce-4159-981b-de1063bb4c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b79c2c8-c48b-49ff-9ca9-ba5ae492f95a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7431e605-238e-4be6-a82e-ca0ea56d2fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf817ffc-6351-41e2-aea1-536e5f2e45bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61c494c-f193-44bd-987c-89cfe0969ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2b2b22-1163-409b-b9a3-1b45ee2e8152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b99d6dd-2d06-454a-8a17-1128178c1167",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86158f82-2c22-46b3-9bc1-cab31688f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad1a5a4-c5e8-429a-a2fb-6478dc5c7c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0a63b7-f705-4daf-8e9a-d5a2b25b71ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5683f9da-08f1-4064-a506-a83c6dcc7458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25418905-aab6-4f0c-9334-f32f027b7aaf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a41c184-e9d3-4507-a1dd-3032bc6c9ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc28393-2a75-44b6-a0d8-6c2be79acc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4227faf3-c360-40d9-b65a-c43e6ef07552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d22e2445-02ce-4cb3-a8df-42752fda1af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48377f09-d49b-4d12-9b4e-ed93451c46b1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1972c8cf-00dd-4ec9-852f-7e7fec85c191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555509ca-1f78-491f-a1ff-8bbab5e405b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71306c4d-b1b4-4d84-8c78-605c2c8c665f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6485e67f-2998-4446-879c-f4f574bc5ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e37ad5-3866-46c8-8390-8cfe6f821b91",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6932a3a1-c0b6-4ba7-a225-01b670db0311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b8e33d-a557-4ec7-898c-965178a3b1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2639f630-4693-4001-92e8-f949074d0f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7442d88c-ef3f-4c81-9f00-0f278b60e886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9befdb66-2903-43c6-a4d1-7e7eb635cac7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780fb4e6-6174-4ea5-a683-d9419da61a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63acc1e9-8837-4951-82bc-4b5211d710a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20367cf2-d634-4d61-82d1-e8d75ff3a3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4ed378-bf0c-49c2-8c84-7859563cd70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b447745-5a7c-4b96-9083-c9acd11e8384",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442deaa2-ee1d-4b63-8576-b6f48a15634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95941112-2a62-43ab-a5a1-5ae40e3a65f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd5de2c-9b3d-4593-99d4-b8d6b4d11bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca8a7f1-399c-4d56-b889-06fab4f6c0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6052bbee-1814-4563-854d-0343944a9812",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7d53f7-08a2-4eda-9646-39002f83cffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd02588b-7c42-4465-8362-84d0a8e71008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0272ab40-59aa-4fef-83b5-11ee35c39868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da4ef746-ac14-487d-bc49-d9407f189083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fb06bd-aa70-4c9f-bdde-79c43b788b50",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9528e7-fa1b-4eab-a229-8dd60ff39dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a864aa-e90d-46bd-b873-5f584dc866d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9875b0e1-2925-4a99-9b65-e23a59347dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce30f890-fa80-4bc4-845a-92608f322dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2818594-ad76-43e0-90d8-7d70f14c41fc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1a2518-3c1a-4550-b68a-9ee33d2c1ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513a2067-79f0-4781-911b-7fa3f453a6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f777bf1b-0aea-4fc9-8363-3ebe9932c44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c55dd1-1f0c-4d10-bd08-956cbbd5fd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41acd61c-d93a-4b6d-88b5-889726aae77d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccda8bd-87f5-41ce-bdf9-3895c8e3fb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577dce30-8b45-43f2-8595-dbbf1c0ba9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80155d4-f455-4f1a-9ce0-91230a2eefff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c78a112-5eb4-48b1-8edf-b02db3ffa4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fe5be8-38bb-4626-9f67-785482b25d6b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabda095-cd7e-4ca1-b49d-73ed487aa49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32a929c-b133-4ea4-bf8a-567032c38596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c193e654-08f1-42d7-983b-38df237fe1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db41af5e-a7b1-4cb8-b0e9-7372ed2fb992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3346bc1-c57d-4252-afd7-06faad40b9fa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a5e5f8-f481-43dc-955b-2e25318877ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2be105d-9b3c-49cb-9ec5-2300cea41eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21961b28-39ad-44f9-a7b9-71b90ccde391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "986b7f70-66d6-4414-9523-c5d328062689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb564c75-ef43-40e6-9cea-7226650bc048",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec41f21-10ff-45e6-88bb-f7508d97fcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9176df-a9ac-47b3-b6c1-c8fc4337b99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf056f2-9667-4a0b-9557-b92892dd9e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2acf67-148c-4915-95a2-d6b54f4e8643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13f9dd7-17ad-4b57-a4fa-7e2f576502f5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff51b2f8-2fd0-4c93-b0ab-a43b87757192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858895cc-3c49-4077-8d36-956abe2d0937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f197c87-dfbc-4465-8126-1b0068f33949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4437e70d-f4fa-4a45-951f-c90693796730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ba7e51-b3cb-4501-a1fd-3c75a34cd263",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826ae811-5d24-467a-ae11-4b0d6a4eca54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "03705ffb-cd54-4bfc-8927-e8dd3e607ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17231195-d56d-477f-b278-90117f7f6280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b54f4582-c490-4d5e-ba1f-795946326a2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f2156db-0043-4484-b359-277a00c19175",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "159cabf0-40b0-4863-af13-5e571376424e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4040b549-2876-41e7-8eb7-13f355351827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f9e9af6-8bae-4cfd-8387-d87f51226674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f427d4d-a1fb-4b2c-9399-4bbad44deedb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f646d08-9421-4900-a204-bf5fa4a1dd17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc29db5b-e194-40ff-8e0e-f1dd5dcffd56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55b96246-36f8-49c5-bf58-335db0190827"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "165a6cf2-4d84-4803-864e-3a510fa2aa95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "100110ac-86fe-4eaa-b8d5-949f8d0a5f5b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "597eff8f-0780-43cd-b626-9fd10341483c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d375ee1-9ff1-4a89-a3ec-0659d4086cec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "823e9bdc-49dd-4aa1-b50f-5f9d700e9286",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe0b89be-235d-4aca-9836-8de78269221c"
                }
              }
            ]
          },
          {
            "id": "379d08e5-bc0d-496f-8ea4-8d3eddc0627d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f6d33d5-7bfe-4269-8f89-ef066f6b8aec",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5b50bb54-441b-4ab2-a3b3-8dd8ac2080ff",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915f2d9e-73f7-44ed-b376-fb4f733e4e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c65d359c-c550-4a87-b736-d6c384b27225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b16347-8981-435b-93f7-2996bde385ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eba6541-0a68-4ee1-b8e6-08a87ea4d546"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cee7cf89-fe27-4442-acbb-1b6a9bbc835e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b3ec7a8-55c1-490d-8eed-6540cb43d145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "661451eb-afa9-4754-af73-6d9567953d53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e388f133-7d6e-471f-b846-76b94ce12412",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d67b4c4-a24d-4697-95bf-4ac0695af1d3"
                    }
                  }
                ]
              },
              {
                "id": "ba878443-4666-4434-840f-028f6470fec5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "824d0c94-c6e8-4951-8759-9562c1384af6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcfaeb3c-999b-4ad2-b61c-1ccff9eeb1c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7c8ee76-4c38-46d9-9b55-51c2e6cc306a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4af101f0-20e4-4074-8365-30887309e372"
                    }
                  }
                ]
              },
              {
                "id": "0b8e691b-33ed-4e68-a6a1-dae2408cad16",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "973969b6-8e3e-46b1-ad84-572fb5fbd8a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78d8b15f-48f2-49c7-addb-2610a1bdf3d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "704dc4f0-d4b6-423c-be17-d8fe53be2c91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2defc1a1-c7ab-4122-85af-956269e0d07f"
                    }
                  }
                ]
              },
              {
                "id": "d41d1092-f2bf-45ad-9844-effce7fb21dd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6c33be6-942b-485f-92d7-673834c6bfc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0bc3092-a029-4292-850c-917f76adc922"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02617d30-af58-4be9-b505-4df3c11b03d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1958adc6-ed38-48e5-9474-1ce8dae4c580"
                    }
                  }
                ]
              },
              {
                "id": "435d6423-d8eb-457b-8449-94e7032ee6bd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0730fc4d-ab81-4a44-968b-dc374bdf86bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f23b819c-8ef4-48f4-9f0c-e343bea95793"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87317c53-de19-48d5-87ec-c20f1bb0a797",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "973d6b0f-cdc0-4de6-9ee8-052641ccd847"
                    }
                  }
                ]
              },
              {
                "id": "6ddf04f8-757e-4884-b42e-8c44dde81f50",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be037860-b0f1-4edc-99e9-aa4e22581b2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb8a7029-c31f-462e-b786-6e55aed8f020"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae2991ff-48a4-4760-8ba1-5c4f7a12e545",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4023349-728f-4093-9c37-de12b951df0c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6620c346-a875-4124-9f4f-1f9e58236d28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "facbd9d0-e3d6-4e52-b6ae-574ef4112d3c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f213baa9-2d32-460e-ad0b-d5db158f0a4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d80fc5f4-73a7-4ce6-b51a-b2c5ff68d093"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b0be0a6-823d-4bbc-bac0-3fea6df1ab9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "094f98f5-f8b9-4e9f-b309-2c70111b12b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e992a19-63d6-4449-9651-af546cb57b06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4624c04-eb9a-4ce5-ad78-5e2301b068fe"
            }
          }
        ]
      },
      {
        "id": "3399cac2-cacb-4483-b7b5-112998b71b84",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "89cad771-a354-4b01-9cd4-ab40994a60f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86e08234-a5dc-43ba-beea-75cc58fe3031",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71df5204-2e69-4198-b66c-d6caaeb44e3a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a285bd-2069-4f8d-8e42-3ced4c538052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426cd287-dda7-4f2c-90fc-81c7b2dfc8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a56c69-1ec4-49e1-ae97-b915ed0a2fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e46a2df-3c16-4fa7-a065-1fccfeb1da05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5288d6f4-f53a-4ba9-bad6-deeb5ff71075",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f544ac74-6436-4036-87fd-58403398d1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b83f23c-971c-43d6-9457-b28383c86126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f18475e-e80b-4aef-94c0-38c9c43fdd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a77560a5-e7b5-4696-a3c3-f236050e171c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00aba324-494b-4867-8665-e22c889020f6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921b8cb4-6bb3-4db9-b867-dce1017b902c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e66dfa-eddb-4bf0-aada-bf90ecf3b372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4daf43-e327-45a1-bf9d-f5d64a33e0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e36a588d-86c3-48a8-b4a8-21101e151576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f5bd4e-7605-420c-af0c-6d3ee4e86e4c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b189d42a-de0d-40e3-b927-14291550737c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e236c28-6d1c-4dc0-a660-79b2c5cbde47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de78317-ddd3-4d83-b552-37a82a5dbe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "becb79f7-2c77-4e44-811a-9e6d04193361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878fe2d1-ddbb-4e70-9153-2d86b516f6b2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391bcb8f-0418-4c8b-bca8-8a4162d8336a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ce5cfa-4ac9-4056-9340-c585d250fcbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45aeb3e-33e6-451e-a583-e556802f8b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3af849-3413-4934-8469-3d0e0354fefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2453ca-3727-4419-a9f3-9574d543598b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43f65f1-e09c-4a2b-8ac5-e2223b51f4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d67a58e-e6c8-4c90-98bd-319c79cb0117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04aaccdc-1552-4e62-a256-fb9a1366d114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6989ff0-f71e-4b39-abc1-82614603d95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792d7eb2-f84a-4706-943b-8ea577c003a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f111da96-7e6b-43bc-b8cf-52e5f32c3137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e6e0b8-6664-4bab-8cc2-f10846053940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c89cba4-bd47-48f7-b3d5-be8f0acff5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4c50c9-18a3-489f-8690-e5e265013b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa8be9b-bda6-410a-b338-22ea0d91d562",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d248bb2-0378-4b20-bb18-eb248300220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af01bcd-d801-4a2c-abad-9510869ec62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8fcd8f-bd0f-42e9-ab74-2733e192651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a33b30-72d9-4aa3-b05f-e84940fd8dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1024c2d7-bb85-48f4-8dab-b7613416deba",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bdd87c-a6db-4505-9af2-f27ba8c3e4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1056fe0c-afcc-48c0-904c-3f78b23276dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaccd4c4-2922-4411-a85b-717ee27a1fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa95ca0-02ac-4d12-91ed-0c83d846e3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b2ffb2-e2f1-4f74-9772-629a07f2903d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab30bc5e-7557-4804-a8d8-2643f59e235a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad87c2a-f642-406e-a89f-bd5a4bdf1ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042ced85-3b5e-4c16-8d89-b7f11bbb53b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3d03b9-bc75-4f61-844f-a4401af1b592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820dc67d-27a0-4155-b579-e8cbac7f54a4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852f213f-e278-4afb-a26b-4f28b18e9a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cdc715-cc62-4ab3-b34c-703c6825ed1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607d82ab-959c-428d-93c7-489304851174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5332eadc-11b6-45d1-8cf6-7c577d45bd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054492f4-bacd-4120-9837-870a4c5da930",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7691ac-33ea-452e-9cc3-6e419ad937c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d957847-c42c-45f3-8003-bf3f35b711e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20751ef9-b18d-4c31-b5d6-72f300ae4215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e622713-46ef-4adb-94b5-31e9ae2b6d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f57317a-dbad-44b7-a4cd-0465f077cdb5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8382b94-d94f-4196-945a-57a8350557d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c333db-c877-4411-9666-f4795dd76e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ada46f9-3330-4eeb-b56d-89bf99fc4bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbde9c5a-be9a-4bf6-a94a-31b50b02c56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e896aaf-57b2-496b-b285-c15de9c03f05",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca6bdfa-2a16-4b53-b7df-08cb5a4f0caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec287bc-d368-4c86-8825-f0cf57d6ad19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4282241c-dfb4-4038-97d2-7963dc6edc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "122600b3-d324-46b8-bcf3-56984f4b12d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1656a0-3851-4b0c-ae2e-5f93a2be5a9a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2f48e5-b858-4dda-a3e2-1a4ab46adce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed49641a-e2f0-428f-a8bd-9eb50d0d66c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb4c500-29ca-4f3d-8949-c4e0e67b7c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "751925b3-9e99-479c-bf5c-aa1f6b224a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5a7cbf-b4f2-45c5-8f7b-61752820b0dc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdee624-2e59-4333-b0b0-01c01579ad2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bef788c-3244-4891-a6ed-c55054fbc5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5b0bf4-8cfa-4045-9dae-68f19560879a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc97cd54-aa9d-420d-ab13-a3133aa9edf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2812d930-3264-4f43-ad73-db1c883aafa3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e443a124-bc32-4968-869b-637a614952e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a852575-ac2a-4d62-ba4c-ff9dcec4d67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861171b6-549b-4609-adec-15cb7b1627ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3985a0-6f2c-4c25-aa12-8495c6a6b68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ec1d25-6d45-4138-b4ca-df8d11ad1485",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c0498-996f-4cc8-ad09-4d9e0c3d571e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8177e9a9-29b2-4f06-80a1-e5817c9042ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320c36b2-fb77-4027-ac90-868db43e620d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "757fd83c-4c9c-4789-9278-fff216f55843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b04368b-0c01-4aad-bb9d-285d3d1d95eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e25a3c9-4d19-4e82-9ddb-1b1ecd95f8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4eebaf-61f2-4674-93dc-3ae1b79bbce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb96787-beb0-45f6-b742-8862bb9df8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a41bbfd6-57ea-4500-b67d-c39a0bf69013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d8391e-d31a-45d8-93fd-21b698009db4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf0226f-0487-406a-9e79-793dedd11101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f3996e-cfcf-4c89-be64-10e8112221e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01fdc4d-07aa-49a5-86bc-3d1c18f9c11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e66f0a-c9d4-4ea0-9be3-591aa1a9070f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0baf34-abfa-4d5f-aae6-483538dcc151",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1037f6-c588-4434-b443-e21662cd87b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67eb3ea-4497-42df-97aa-3e3cf80f6261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e01d519-1b46-4ff1-94f4-162ce9b66ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6846ca0-c2e7-415a-bdf6-19e497006aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac277f25-6152-496e-b38b-fce492f1e117",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756ff54d-c583-42c1-b925-3eb458dd3898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcd00eb-a463-4531-b873-b6e350fa480a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a73b75-3729-4c23-b436-39e346f4a2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e267f4c-378e-41f9-86a8-72c4b5892d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997966d9-3828-431c-8e8c-b17a27b634b0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08472f44-9972-4da9-9d32-59a016ab54db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea3d2cc-8328-4cc7-a584-11da12c4a583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d865c9fd-be05-41d2-a1c3-597bf4e02cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3287202-5cea-4059-b2b0-7929da91d122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ce514e-d4fa-4b98-bc13-6ae3264e70a5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebdc54d-5988-4a6d-b1d8-1fd0e8dcd0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b488834d-294f-4966-a071-2ce232a44291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5970c86c-386c-4824-952b-cb0424de6d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ae1154-ae31-4ad9-897a-f6eb1b68f366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad818ee-64b3-4c79-a286-db30d8573bac",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd92152-53f9-4a42-83c1-ee5a93176c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d87dae3-c2db-4a90-a444-18931afd7e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f78c48-1b26-4abd-8cfc-60b971813db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "679300a5-6d57-4648-9dcd-ee3f465fa045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b404b5a7-c1e5-43f0-82a5-ae0d65b54232",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319b2cb4-ed4b-48b6-a954-f32ffaca5f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9209cf-edfc-4047-8dab-48f34d8b3ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea05b4f-515e-490d-a90f-5e3bb8da4185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e143165a-c523-4603-8bc0-a1e14d7b95c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050f2292-549e-4829-bd9c-ff0ecc7e21f0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d787ea-ae66-450f-86d7-8383de01601a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b88b6a-e816-4bb7-af67-9252416068f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747058b5-0986-412f-bb60-ba1821dfa61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a00e44c-f9b6-44ab-b806-49b989d09b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5f3a2f-dead-4f18-8030-60665e994610",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e303ee6e-9b6d-41de-86e8-947f9968bdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2176ea6d-4bda-4f02-8092-ffadaf3ac798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f8d483-dc5d-48f8-a6e1-b5647ef893a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12227302-e57e-4168-8446-f97e947b640f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb95c41-eb77-42d6-bc6a-083e433d8e1f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83882a66-b32e-4f9a-8fc6-63bc3202e0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3245869-c015-40ce-9861-c8c9eb85176b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91205c5c-d003-4d91-b693-c0a5632f020f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f485af8-f686-4a7c-9eda-c296d9da2968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75164354-f9da-4390-a050-4381b51cfccb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e2eb0e-a270-4581-851c-a63bca08c222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2fe930-f3b4-40c4-893f-c158a0a67f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6dc6b4-362a-4baf-8b4d-962e36d2eafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa9eff3-f6fd-48b6-9696-1a5568682125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e6e512-7417-4267-bfd7-56adffbdf685",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49fe13b-37af-4f7a-8b6d-040b5ddf17d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd99f4dd-640b-41f0-89ec-19ade0aa3501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8780bf6-5292-4f6e-8584-45f2d37a73a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad407618-eaa2-4efb-b796-d8483715a10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04495478-7094-4922-8bf5-2a6acdf4b977",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f18a67-0353-42f8-9abc-ade793c4f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b39903-2f12-43de-8099-c761e28fbd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88d3422-5dea-4fde-9d3e-7550dcdc360e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b69d25-89e2-44c4-8f4d-078b94827a31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab9beced-a615-42de-aebc-d7c3ce00d3fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1057c3a-3ed6-4273-a551-5ef7f92a022d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfec7be-7b65-47ac-88c6-ccede952f212",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ea2caa-a89e-4ea9-919d-1ecee30f012d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305de146-b222-4911-a187-130fc20a6e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "638ee447-d259-4860-8113-2dffe6c2c1fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "560ab322-f7d9-451a-ab89-f1dad28201fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5263ea2-0ac7-4ded-8c21-ec1ffbb49b56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7508dee1-c6a4-419c-b975-3a4430715b3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "838194da-c2ad-449e-8743-864b084210d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e303fdf6-2ed1-413d-8a54-e575e9a0f62e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02a03262-a921-427c-bf21-5cd75ffa04c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21fbf1b8-00f1-4d1b-8ba5-52ab06b08307",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dab184a-d5fc-4eb5-9d73-850730d2bd18"
            }
          }
        ]
      },
      {
        "id": "6aaa6efa-707a-4b53-8323-0b35963d80e6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ed232ea7-eada-4512-a016-8c181ddbdcdf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32852bd8-cd9c-4e0d-9e53-aa834094edae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f272687d-efc2-4149-b3c2-99a56b219908",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf0165f-8abf-4ae4-b1d9-5dac6b2ad269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6af278-93ff-4943-abba-1f115ef1fe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85b6909-0ca9-4b71-84d4-6a4dcb4e39b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff8e77e-6059-4c21-934a-7903b556f118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4d345d-830c-4599-b73c-4c6663616b0f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44ab419-17c6-457e-8dae-e1a69df5aa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48869d9e-0f02-4783-8d23-92b5e01688ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447ddb59-d890-4f58-bea7-6a984e3e4175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54ed7a90-9311-44fe-b500-e11147730735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6ba191-9aa6-4a16-bef4-e633802b14eb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04b3acc-fce9-4f1d-8dcc-64aa84aaa88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226df7eb-6330-4ed6-81cc-edcaabcb9fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf9f174-b916-4e83-9335-dbdd68395202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d719be1d-006d-4dfd-9ddd-a8ba0a3b99d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311a81e2-4995-4351-9a93-7af6364ed434",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b031ded9-a9b0-4888-8785-e5fe74defa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c771b1-80c3-45ce-b2de-6b72b3a8bd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed6dbfa-b2ec-4199-941b-1146383576c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "696bdb19-88ed-4b48-ae47-aad89f2fd34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e99ac1-ced3-4e6b-bf74-058f6fd5af0b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462ac8b1-1afb-46ec-b8d8-65d0eab2505f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcac9b0-a9a4-4f35-bb5d-94ace87b8b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c127a0-b59c-413a-a59d-11f20e90024e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab5edb1-4bf1-4c99-bca6-36dccee562ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ff8d77-6d0e-40a5-ad99-005118c432cb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265d4cca-720a-4379-9c5e-ae737c0c238a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab1f9a6-8727-4239-b076-35262cf6e252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17ef565-1aeb-4964-a9aa-9ff81986468e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ed6e47-e2ec-4994-919e-4ae7b8cccd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801ed607-663e-4a6a-b253-028349b7b68e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4606f76-76d5-4164-816a-17678a8de0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6792154-3d76-4dd2-9012-ab370e1bae26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd019c9-8f6b-4ced-ad0c-6f3e1757c298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a40a8884-af80-4a53-92ff-db20e026fd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d01ac9-b911-429e-b251-c3a55cd9e3b1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0485e137-0823-4af6-9ff3-51dfc8062178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fdc0187-6d77-4765-8e84-b4dd82acac01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39dac55-b7c4-43e6-abd5-5525cdca1561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a96f2a-a871-4b00-bdb6-ab6de2352c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d180659d-ba4e-4b64-ba5e-5c185ff0a3f5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63f9896-0d95-40da-8fd8-cf30a5e5c764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0dec36a-4100-49be-8c62-f330407b33dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50722718-ae4f-4775-b2ce-e8d2f1f300d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34fa9b28-1f23-4094-9277-76efb7bb7102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a67800b-9814-4d58-95f0-a413e8b81840",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c3c8fb-1be8-4dcb-afd0-1748a7230833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67d105b-898a-41fd-8536-ce7a252a97aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03115604-1223-4c96-911f-3f1a8c38ad15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e74c93e5-1f99-4b3c-bc84-7aad82eabc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef320cbf-2277-4212-a393-ecd9bcde964e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b6a819-4d27-4b88-9f21-aace2c1bef98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7718d3a5-d787-4f81-9d96-757a4f02a3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f020870-80ef-4180-b917-994afd7f30ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "645b9d7c-ef57-4c75-856c-0610044ae10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730de943-3fa4-4a48-a687-327f4fde99ea",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd8a76b-c607-469b-a8a4-e337c7f2839c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c56f78-6517-4ca1-aad3-862a7276c2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f477e9a6-44f9-440d-a0bd-79ecf2008181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "401b16d5-cadc-47fe-90cf-94efc3644c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1bacb1-02b0-48ff-bf56-b354a251071b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0318217c-eac8-4f2f-9879-6d5fdbe71648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0605181-242e-4fb4-8210-45522bc0370e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ba48fb-c3f1-4181-89ff-4e0b36de2082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79753912-68a6-40e9-94bd-ea9c0395bfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9bbe0b-cda3-4408-b6a7-e1ec99025a74",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc83039e-181b-4799-b049-a8699bb3979b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69324734-dbb2-49f0-8ef2-17146be8bb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc7a050-5def-4229-a338-0cc039aaaf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "483c721d-350c-4780-b0b0-4931f65baa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b049012-5693-48e4-b5c7-b26e84b86ed6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3fe59c-8ef4-4aa9-af2b-28d84fd10083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272df023-aec5-4f63-a407-a84d40804a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5f9931-c9e4-4427-b778-33ca6f5df342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a80c05-a73e-461e-af4f-c12f4cf943e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3e13bb-a0d8-4498-8f6c-72211a6eefc4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab622e2-4208-4d1b-8a0d-0790f11aac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c863a19-7952-4e8e-bb55-1fc5d431a658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49738c6-425b-4bfa-a617-56a7ccb28b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6e2906-78a5-4633-90d2-24b9c684c11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a935cd-d03f-4946-a9aa-2453811b716a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1d1b1e-db92-4640-976b-309b80d8801a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c745c73-a52c-45ed-b99d-dbcbe7af05b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8ad26b-a4af-4dee-9300-2931ddfd9446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9d8193-5dcd-45e0-86f7-29d2c01a3468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0218974-bef1-406a-997d-ebf60057a212",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c588c790-a5d6-46be-8157-0df5b489afb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec6470d-ea60-4bb3-92bf-b4eeac892d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b6e585-4b7e-4c9d-80a3-7ca4d067e7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d9e33e-1086-4301-81e5-0e0717b32083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a13634f-9653-4a37-8e2e-323ed11403ac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9349f9fd-3ce0-4869-88d1-55ccf3f8fc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86dd451-bcf2-49f3-b374-c1c6cd4eccf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acaf4d2-2813-4116-9d5d-aba068a6527b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4873143a-ac0f-4a0b-b9c2-79571a704771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0be234e-b0c5-4369-9f52-65c6f4d37048",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083cb32a-c13f-4246-893a-df004ccc74b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d1b02e-8598-4d36-82ca-8f88ba4fb0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb75c6f3-126d-4d1a-b330-4de6be17596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd5cc70-8c13-419a-92fd-f2b3df0c80a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5d8f2d-1e4c-4295-bc9b-b81c4c7ea4f6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47f27b5-b504-46f2-a7b3-1c4ace56d175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3d136d-8cc1-4347-8dce-c0eca2e11cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1f4cdf-d8ab-49b9-843b-3aeff7b8ceac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91340b87-74c6-42f1-93b0-f5867ab96b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcfe6b7-94bc-4f64-bdf7-bb631ea2c90c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afca13e2-d55b-4651-9cb6-01d4836843ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3757ef22-1b0b-4b9c-affe-a1eff5ec1e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad5a918-3c70-46b9-92c0-795fd4a3e510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24865ddd-3e4b-4d80-acb9-a2fbd2701e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a320d35a-efb3-436e-b620-f55a727799f7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faed0d5-ae09-4c70-8076-d03822c2caad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6b36d3-1f25-46ff-9e44-9a284593953b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f25f931-b7b7-47cd-b8e0-f9136d0f36d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99800fdd-5c27-40b8-b906-70b0d0f152be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5e4f7d-20b1-4e63-b325-5b4ff227e941",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75379d9-5890-4962-a38b-6cfe6b44e384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7954b9ae-fe41-4251-8af6-77613dd2eea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce5a5eb-be1f-40a8-9d7b-5f4f800e8531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc48ec88-9044-481a-8097-f03aba8a2051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf20ebbb-5c91-4b65-a00e-3917146e950b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454ca98d-82e8-447f-90ec-c16c845448db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead4f560-c19e-487d-95ef-8a98775459fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f871873-0952-49a4-b6ac-3290721ef411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f002ad9d-b527-4e36-8bc9-6e1c789620a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8170c9-6dce-418c-99c9-8c872b6b5a0a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3bfff9-54ee-4b68-891f-9a5d1de8a5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3808d10a-302c-443f-b823-40aafcdb962e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8e66bd-3375-4e73-8274-e2715fd4ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d2c6e5-139c-4879-8db1-46a219ccb37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9f0d52-c772-4359-aecc-b670703213df",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a30f83-ffd5-4dc6-9daa-a34213d5ec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e68bb3e-66ea-4150-b9b3-71b1599ebbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaee3f3c-d0aa-4d66-9b45-e4181d6c95a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a629ee06-70a6-4529-b631-8abf830994e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5952aedb-f4a1-416a-ad49-5d72b96fa4bb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50685f07-5426-49d5-93ef-47e59d52b273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce45b381-afb5-465f-9cc8-84c9c0036df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623b7916-e460-4dff-86e4-023dffaca9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f51f2fea-5413-45c2-b9fe-f41539089d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e46731d-387d-4758-a8ce-900b5d7aad94",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c762179-5fc4-4b8d-9cd7-cbc4a00ee7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06da2d4d-d9de-4b57-9bbe-3eab59ba0435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e811f7d1-ab87-45e0-81e4-bed9a97497c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd231da-552b-4773-b08a-3b10a5765cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b097961c-b35d-4a84-94bc-38a01c450764",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183eee27-8898-4c31-bd08-a13d8752c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d997f7d-a339-4b4e-82c1-53afe014ede2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65179b86-6cc8-434d-a842-54ad68af7a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2ed5d7-ad16-446b-85df-db2fd1abf105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbe43c0-1379-4ad4-850b-e30030d4368c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bee20d-65e4-489c-9be0-db6cfa306283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289faa49-c0fb-44af-a2aa-0a83f86952a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c25a33-2d1c-46a0-93c6-3b0ddae820aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "363cc472-07aa-498a-9197-33b3be8444ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ace941-6e66-49cf-9a88-410037f43e66",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290adbbc-7dfb-4573-bc4e-012e18c49377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa559d42-f4db-4a22-86ce-767fb8b75d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7e249f-81cd-467a-96fd-624722c353a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "629494d4-00eb-43d0-b43a-dffa676c200c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39717893-e8d2-47d2-a256-1f705a1ed8fd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3574ef1-354e-4082-836e-96be1894be76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51f65fb-85b7-426d-a22c-739d494d33d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68813a2-68f2-4564-b826-049b65e944b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad65c3d-a729-407d-8709-62e65f3c8b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b5ea6f-dbb5-409c-b5cd-6b9ee16bb717",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88913ff1-a600-4ca2-8ffc-2defb9d643f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd77df5c-9872-4bba-a6ae-9078704f90dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686792aa-49d6-48df-852e-4c438ce9f39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed35ddce-2325-450e-a51a-b454ca4bbac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9690ee9-de69-4aaf-bae0-674c9fb50308",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b59447-7738-4b85-afc3-4343bfca5431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e627353-e457-4fa0-b299-0fbe7519b265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d289823c-8047-4712-a8ae-69709a384a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ca0d59-f7c8-4fbd-94c5-d362a35d9f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c320cad2-03b8-45a2-88c9-e17e367111ef",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6efca2-c1a1-4a04-9524-52e5fe89ef86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824a321d-c7a9-4df8-b8c4-57e50e19e89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaba439-b8cc-4484-8d52-a6612a740332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2864ade-0dac-4002-b0f8-f011650ada0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b68ed71-adb8-4e3a-9911-9b09eb5a5ab3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc65638-8841-4400-85c5-295eedfa50ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939e9ce2-d627-41ac-bcbf-6ae2fe0e2396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec5dc99-3b67-4790-863b-6f55638e89a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfcd0c1-618b-4eab-932f-168c34ad8fd0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4cc3916-2206-46c7-bc0c-5c35009300c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06eda669-5f45-4c39-8bba-0dab7ee7d8e4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d657b1aa-7205-4b68-89e1-2ee846f50544",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "92e61a69-42a7-4f8f-8770-32c718179411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25fb95b-7dda-4be8-8fe0-e833d218fafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd37340c-c428-4bba-a39e-3c55920fc33e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36e99e1f-4ede-4c8d-aa72-076e6e360b4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc4c1570-3425-4f2a-905e-5d6e9179121a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ba3b8ba-c292-496e-bd7f-02b0842ae5ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7723efc-3412-4daf-926a-88047d8d0898"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d7c7d95-a471-4523-ae86-e24a39e12615",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5ea3400-109a-40f0-b1eb-2470c334b7eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "500d19e6-64c1-4bc2-b873-21769c2a2ef0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "182a87fb-762f-498f-91ce-9bdfc1639619"
            }
          }
        ]
      },
      {
        "id": "228bf9b6-805e-42de-8667-683344e512e6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "24db631e-75d7-4ba9-84d9-03316024ff7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8029d067-bd38-4c42-9abd-7509ca540c9a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4618937c-3c93-4436-b194-7e3762ad458b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17099b30-5817-4e8a-a107-e9e82f9182f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be18d7b-44ad-43d0-8f41-e9567f1bdc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e139d75a-fe66-45e3-9fe3-5754c0a5dc86",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9213ba16-aebe-4067-b40f-0504bf50cd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c17983d-b5b1-4fa6-b39b-ec9259a88506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d932bc1-c44b-4ad8-a7fc-52c41487a894",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01411ac2-146e-451f-9a98-df0b3e8a83ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3e7062-a691-4b60-af8b-b9773527abfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71afab2-e68b-49e9-99a5-082b3b05ffd5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdc6dee-9569-4d09-8f7c-67ddbee3a0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68840df-9ce9-4c36-b6e0-1f27d6bff806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f029fd-971c-4b95-a805-30d1385bc104",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042e5bac-3933-4448-a163-59369942b277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1da00d2-9bd2-4b8f-86ec-e532ad46dbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eb6455-4b68-4966-868f-b52e2219b0d6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504104ef-44ea-44fb-8170-7d8cd88ddc53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad6d3bd-9d36-41d2-bbfb-f126833eee3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38794613-7fc6-46c2-aa9e-56b9e5d7cc4c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf311b1-5a42-49d9-8973-d103f1a80af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187b1198-53bf-47e2-8787-03efe1125be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1a36f9-a055-4bfe-b436-06f690f24fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6254adc2-b394-4ffd-8662-cb9d9e085565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9d136b-33d2-4d41-bd50-cb0a1e02b9dd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa79e6d5-d138-4ee4-bda2-5d69d488b195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801730b6-e86c-46c5-8523-8a4fc9c2b580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c73c240-22e7-4ab3-af6a-8dd185950333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86649085-1f8b-4f35-b32d-b537a6fd301c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934e526a-979c-429b-a2ef-81020f3588be",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f271c86d-ac66-45ee-aa29-6d679693fe2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4851497e-2b31-4361-8223-e656c87db1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4708e6-0629-4718-ab57-90deb98b7ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce170a24-1188-4488-83b4-c3670ab5cd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ef44f9-fa48-4a28-9770-5e1c6ba643de",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ac1c1e-bbdd-4728-ad64-ac6ca0c217b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bcad2a7-88fc-402e-b8e9-56616a8ddabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3ccce8-89ae-41a1-b883-6201abdd7dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe70515-6926-406b-9d06-528f0ac063f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b965380f-d9ce-404b-8e2d-43d986dcb1bc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1139de-1923-462c-80a3-8cad154e1c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008c33a3-96e3-47eb-a86b-9e88a52e264f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6890db7c-1e6b-4cf2-ad2d-f20136ae97d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940cf9f6-4ced-4eb0-bfe9-2fb938da4aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b66299-8d7b-4961-9e60-cc553d9b0fa0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edbe7ae-d218-40ee-b223-6cf325b5a7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfaa9271-f9e5-4f0d-9261-c68703947b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b647b75-9688-40d5-a431-5252a35aae71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2acb6e5-525a-424f-a880-f7544925c694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04711fb7-87f7-4b6c-8663-6c17583a55f3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ff9e64-7b50-4f6a-8816-cd1d465d1002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "341e06ed-b52a-4731-a985-c8183f415ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e29256d-cd64-42dc-980f-3c9ba08aba66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f72b3f4-f2a7-4ce5-b8c1-3834cce0f6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e616aa5-76f9-4821-bd57-5a9e48cb8918",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3450609-1af1-4700-b3d2-b47c855d7e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32950477-4a0c-4ec8-a7a5-950402b33405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620add6a-3fdb-43d6-95e1-efe8035a2475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bea95e9-153f-4dba-b3f8-3c4d20a112ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f5d53a-498f-4b1d-925a-edacec0cba06",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592cf205-9b5e-4359-9766-a4f6f1433471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362926f4-8af0-41e7-9415-6d8ac585a1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500e76ba-1ef8-46f0-a438-d445c4bd068d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52074c24-2200-4273-ae5a-b511e4799e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170ac1fc-3827-4652-a650-5bdc3076e585",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2dc311-efb4-477c-8108-b9f12fe0bc37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a77141f-4f18-454e-831c-c9a5c72c7e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d533e2-2022-4b10-b8fb-2004b96c6a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3738adc3-8d7e-4baa-99a0-85089bbf3ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b2b897-3666-4f9c-b40f-94876b13e1c1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c874607d-82b1-4ef2-b6a7-6806153be62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ffd261-d61e-4a64-bdf3-e218f1be5b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb07fd3-59a4-47f6-8ca8-006448da7307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e187312-ccf9-45c9-9a5b-3988e4e6a181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2fe909-adf3-4e9c-bac6-caf543d6c1c1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb023e7-7bfa-4d03-999b-d7856cec9592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59437efd-aaab-4ed8-bd43-cfafa5bdd52c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353249a9-c909-480f-8eb4-4b259dc2b559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c3023e-6e98-4182-9c7a-691113bb5d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a843e7e-5033-47dc-9273-19e9a347b6f7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ff8a9d-fd5e-4c58-b4ad-8ed4cbedb85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f5a020-5dc5-489d-88bf-f623983476da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8391e0-e85d-400e-b5c4-6bbe2584f967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339b13e5-7454-409e-ae13-820a0a658386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ac38eb-51a1-4264-850c-093c1eff8f13",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246fdcae-c8ad-47f1-9aac-4c6e45e37fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323e8293-6b9b-4149-8247-fd9a9c45826d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d9ca3d-24cb-4d01-8d2d-877131e97133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4534f5d-cd52-4185-a696-f4a98d181683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bb0c56-d14e-4394-9abc-e2590c75ef17",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a1d16b-9811-446a-aec1-bbf2ec9971aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e44fb35-fd7b-415a-9b44-8f0c32c8b3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8238ebac-3817-4906-9bff-f29a35d43213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbe60dd-69bb-424d-a681-4266e1f8ab54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc9a4a2-d1da-41cf-b775-f960fe197b72",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fad4ad-884b-48f4-83d1-9e1ec0e40f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb112ac6-4c18-4a72-b1bf-4601e7990697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7dd6e7-d1eb-4e0e-ab9d-a72b63ec7ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb421e6-8d51-4954-b5bb-49c034ffff39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9a8577-64c3-4332-80f7-42c037b18531",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861979a0-5b62-42d2-aeb7-ac70e454baff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873a2945-4bf9-4f2d-91f6-5ce5142ee763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bfa4fa-ecb0-4dc4-95b9-49f87153c57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082e1a0f-b9eb-442d-9bfe-832c37676230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febce032-04c6-43d1-9dbf-4a0e55bb012b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2639874-8e69-4c0b-b061-be3b3656cebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e6f4ed-6368-40dd-8884-5e1aab136160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5f2059-c7b6-4739-b655-49bfd8159033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876d2e6c-f17c-41e8-a613-0d8d48bc4c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb56316-24b8-4ff9-9ea3-2b2e0b392242",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cac8ae-86b6-4c8c-b454-5171efd85f90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ef680e-7afc-4467-8c87-0a2a767e12a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e1d18c-2dc6-4620-b925-32c8dd8248a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c577b9-eee2-4a3f-921e-5f0869276676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579641a7-4e50-4e1a-ac6e-d3db7f98a001",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253f4fe8-e7c5-478d-9d16-5aa54855eb93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69200a2-203e-497f-a8dc-cbd9fc99a7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a57c96-af7d-4435-a900-2dcc95854431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53275222-c7d8-49be-a6b7-375c642f48b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0306e8-e4f8-4fe1-8493-073106cc9d23",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2865cfa-a3c6-4b42-85b3-bb3a8489d6ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8330c35-b35c-47ae-8e0c-396ec24a73f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cd25b4-76ca-4db9-86ba-23ce337a9b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0d89a9-2133-497d-957d-2e9db52a9b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf9cb64-4797-4ee5-9efd-f8492a584f26",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0983fc-ca9d-4f5f-986f-9663e4da8dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d65e28-6270-4d28-9818-426c132a333b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c40eed-00b6-4617-b266-11bad1637f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385b6113-8535-4528-abf0-3d304a3fc50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdc648e-bcb0-4be2-89de-4ab386c261da",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17ebbf1-6873-49f8-ab75-aa53c0b6ba81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ebaec5f-dce6-4470-a714-e2bf83b25055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db1de51-1cc6-4cd4-ac39-6420c774ab0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8dd5bd3-dcc3-4fb7-a59a-3ccf57db7863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9615826b-64dd-4564-8293-663e8d7677ac",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40964d8-6e40-4394-8b9b-3286887cea8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce0a5a46-8095-4616-bbf9-10f72cc28aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabe69ec-9dce-4c2d-a493-5f56ea5ce1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01babb8f-7e40-44c9-ab4a-3bbe4e136ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a180115-aa2a-4fed-b744-8cd1282e60bd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2a1cdc-27e4-48c8-99fd-c786108ea9ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415d43d1-a3f3-405b-a1ca-356d89bb6116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a012f9-f638-4f88-836c-c3e6f3f96561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210df11d-8cf1-4095-bd6d-68691b6eb0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59abef1c-8225-48f0-8f17-782b6f9ffe0d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744ab31c-fc4b-4e7b-b65f-51b08cc5c79b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b233417-4f15-4574-96ba-113bcaa132fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79ec31d-d6b2-41d0-9156-f38310ce8743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3bf728-102d-406c-8df2-c8e566d4c0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eebd38-067c-44a0-bc87-541c7db8ec36",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13e9ca5-ab6f-4717-aea9-0ec1e557a736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655050ef-a8fc-494a-8201-184aecc71105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f7f1d1-a236-490f-ac27-15ca58588d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151ce563-978a-4e69-a7fa-52c25d4392fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c59cc3-84a8-4f08-a866-f952121beadd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ffe6d0-1d28-46fc-ab85-99c54e943e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b9cd24-9219-48b3-bd21-cb980b45bee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c70959b-b2a1-4372-81d2-c565f0c065cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13582b65-a1a0-48cd-894d-2af83b5c5815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f7cf5-85c3-46fb-9e6b-ebf87fcc5fe8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d518e3-1fcc-4972-86ff-17006f30f172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfe6587-6db7-4985-8b73-16acddef64f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279869ff-5e51-4558-a57e-cdffd8f356b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2755a8b-910c-473d-8670-02f595b68f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ddf061-b47d-4529-ba23-4ea3bb8a3743",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad21473b-e709-4239-a152-15a4d3cbc18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c7313c-375b-4c06-911a-d67ebd078044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471b4b9f-d636-4709-914d-05de0488d057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5095341-70fe-44a9-a08b-f4433cbd2215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc0b6a3-ad21-48af-af9b-be308b05cdca",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cd7c17-873a-473f-a5b5-978f8171c589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba09e94-a317-4a95-8a2f-3c5f43fa24d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b6bb92-1e68-4e0a-8820-0392b8a2a0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ca2551-4f12-4657-8322-7ca5e30c6d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bda0f9-cd56-43eb-9022-8143d15cd9f5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3dc7e3-6528-4e03-8c38-fa83d0eb7aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1b82ab-9c6e-4073-aced-daeb00c8212b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdd79a6-92ff-4d18-80a6-231c67e45d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2722ec4d-2ac2-4287-a29a-8b7e784cccf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e1da1f-b730-4e14-89c1-27713c879a58",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c633763c-4b0f-425c-8267-2ed3deb1dda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e13e2b-bb74-4b11-a4e0-f08ea613489c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628e28e2-40f6-484e-ac59-79562d059af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dae72f-cc10-4942-b69f-3d02977cdfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a85f73-5942-44de-9a70-3894a4a12026",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e72c05-236e-4d5a-8648-8008f6d6e956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8699f2-abd0-4d79-8981-7820732d1ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7334f066-88b9-41ad-915a-f049903b0f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac5e2e3-26bd-434e-8134-da2af2db8154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c80aaaf-46c1-4761-9414-29f91e15e0a8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b9258d-8cdb-41bb-828b-7e433ebb1d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf952ac-b0e4-4e94-b6a2-728cb27f54e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a336f4f-d394-4457-91db-1d13ed3ce535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250ecb81-8b9a-4c01-85bd-1071a03cc8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb04abd-f6ad-4ce5-b363-31a78537561a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca944816-b339-45c0-9ade-bfd9e79f5cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c54ec1-48e5-4f3a-a234-8522de25e6ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c83c2b7-8a26-458c-9d97-a80709a401d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf61f15-5585-48d6-a7c4-8522517ffde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85351bbb-f211-44bc-8bcc-488acf6f9d07",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c7dc8d-7ffe-4453-9ca9-ace67ee2ae25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6fa487-4c5d-4450-ba69-9d4c8439f4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30ddcdc-dbc0-4f20-b549-0b4a865321a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3d3b4e-f129-4740-af81-08d895f19283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a9d9ee-17ff-4705-95f6-cfb872785285",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535190b0-3ea7-4ac3-9480-83715380786e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3e0e3f-43e0-4a8e-bb38-ec8fc09f9de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea97643-7021-426a-a530-38c3c39cff18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a67db6-1f1e-4486-ba19-a944b1cb1d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f58db8a-34d0-4fab-975e-728dbf535bb8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8d6d8b-5fed-4727-be1a-5e9de4eddd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e0c566-5553-437a-ae3c-56404bcfec29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16db938-cf66-4a17-9e58-98e5e51d7148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb233e2-c90b-451c-9ab9-ccd41ffd60d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da77e6a-7cd0-4bea-99ba-7c49f43fd276",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9413b704-ee69-4409-b38a-1109cf9f3d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82c1dee-9cbb-44df-aff0-f742c5038636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787d278d-548a-4757-afc3-205f6165c6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496699a5-5235-472c-b2a3-cec74a07f042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471b94fe-4f40-4c6b-904f-c6d9189c1f69",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0fe68a-b0d3-4901-ae02-58e795bf101c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc46216-c36a-4a4e-b7d5-4fac8ce236db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd1df9f-c44d-4d30-a540-cfb9f347b3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e0cd77-d182-4155-bff9-065e9ef557f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91fd746-05e2-4d70-865c-0cbc857f5449",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd0299c-dad1-4c83-b6cc-bae5a7bc8283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ad046f-26b1-4ff0-8e52-0bc637e7db3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14a6e3e-f240-45b2-9b0d-4893c20d12b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784ed437-e935-4472-95b9-c68116e6c2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dc25b5-86df-4c4e-9521-7f3bb9513a85",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41873301-3dd1-4991-9e6f-b39fd69f5441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac701f04-d230-490c-ac59-3a319ecaac49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e04d312-53e5-4d0d-9ab9-498e7c1cc483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fea41b-e27c-4775-a9aa-665fea7ee7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e849893-2849-4f83-8d7d-1de6dc6450da",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa81785d-a653-4c75-bb40-1ab35058c71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244d52a2-8560-4fe3-8fc3-ad7eae58f197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38a4674-f41d-459e-9787-a5cb650a4ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f08042-014c-4525-ae7c-9264c5991677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b90d107-9b45-44be-8129-a84bd146245b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de53de36-3547-455c-9ac9-80b3d5df4977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576dec17-c6aa-47b4-b62d-7d65ffd9d1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9acfacc-4ab3-4b7f-bf5d-dade85f9a259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4d419e-d056-489d-9ded-23c947375a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339bb010-19a4-40b8-bf6f-7a02b4125224",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b64fe8e-e99e-4dea-b4ad-1e23030deb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72108c2a-014e-4542-826f-8baf7d3965ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e3f9de-0c77-48c5-acf6-11dc0d760b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ffb179-f06f-43b9-87c6-b4af9914cd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3897fd1d-ec7e-48de-963c-478495e6b7b3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c97c24-d562-47be-88ff-1932d7312018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d30d15d-f295-4558-9744-9c833a8d3c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a602aa-ea82-48ec-a359-d6ba012fd3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190d6a8f-48a7-4f5c-b3e0-820c5381cebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8df494-04ae-409a-a941-ef85c24adf38",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070b5ae3-1d3d-4b04-8962-410bed51cbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21effda-17f5-4ddc-a38a-5b4a83121d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e027db0c-8d65-4c57-8c72-4123939f0dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca99aea-0d8b-4d1a-9b1c-80f3d878468b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee3c50a-ed2e-4812-abbf-3e5242ee36cd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438d04e7-96b3-438e-9ef8-dcaa6a2c09ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107ebaf6-0178-4e03-a203-f4a0332a4bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199b84ec-1f25-420c-bf75-642c353f97b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4f8d24-c2ae-44f1-8735-5c074b9a6846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5319e8-9e5c-4cfa-afab-d00c840dac71",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa91fbba-2b2c-41e7-b8c0-662546714134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca929b9-31bb-4586-8ee9-0476fb67967c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaa19df-09c6-42de-9343-87755a75d0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7df5306-349d-4565-9358-7f840d5b848c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c700d5f5-44ba-49b9-92e5-9ec8eaff9bec",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5797f04-7654-44b9-9b71-7077c42b3f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281d3193-d2e9-46b1-b19b-33facd43fcd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4865e653-c513-4bb8-b37a-8d1a26fbc4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f3b737-fc5a-4ac6-8551-a96dc7ca3fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973f20d3-3b67-4a9e-9478-7b326284a61c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0591ead0-155c-4f61-8748-ed9fa4462e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1f2085-b582-4644-b54e-dede199eee22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07a6801-be6d-4d2d-b966-36f77a073f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc72b6f9-6db0-4a5d-9479-11b2766e7f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c35522d-22c0-4935-a9dc-ceea77e0764d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29267aa9-4e03-4b3e-be09-6fc5461c330f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec31052-abc3-41c9-900e-a2b01d444f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a5dd47-3465-4590-b69b-decdf2c4d725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a833433c-c199-40a5-bbef-f95a734fcd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c434e007-6185-4597-af18-6be7112188d0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4d1342-106c-496b-8738-9969a8629e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f71609-bf9f-46f7-af8f-79619b3e75e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9282c175-b487-45e5-90de-a6c2b1f4b72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a241c0-77e1-4dd6-ad0d-0a694b3e16ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93061828-c7a2-4e4e-861a-da682a3285e9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf27c62b-135a-4e38-8554-7f96192af340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9e8d6f-b69a-4714-a470-4aa0a50cbf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb522a1-5d34-48c7-82eb-34fb48318d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9188f9-938f-454f-a23c-292551d6335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ff2344-2ff1-45a9-877f-7e5b64dbd7b0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab3f2c5-ab3f-443b-97d9-e210317f05a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2791c5b-1928-4a21-a71e-8779ab80544c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4c7198-edd9-4c7c-a617-f2abbb48a7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37e88e8-4b6b-4e99-98ab-f7e63bb5ca5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e2834c-3f45-4c33-9818-61d3fe5af150",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bba1ab-9fe9-41b2-92da-7cb04c402b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde487b4-0901-4196-98a7-0863bc79410b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e31317-e4e8-45e5-b9ec-046c3b7d6ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c03b7ed-2bb4-4c1c-84a8-7228b521914f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c68cfaf-bd09-41a5-9cac-73766f7c2c68",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dc013f-3319-470a-ac05-f17452744809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c26882-2d85-4679-a51e-1753bdb2091c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80f5ba8-aaa7-42a6-9ccd-f68b8274b1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f987cb-04be-4fcf-bc31-47e66af7ede4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70eae54e-061b-4524-adf5-cc6595337501",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99124355-13a0-4aea-bf5f-a606112c58e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db8a4997-334f-49c2-89ca-046582c41b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c0dbd4-fb68-4003-9a85-d4b35a89abb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68cb81f-e155-469c-8859-f1836cee738e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e143fc0-81db-43cf-b460-161a5ff60379",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0c1eed-b13c-4e93-8064-be80592b74a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eab7937-7a9f-4b38-95bf-f2deee71a337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5080b8-85d4-4b9f-8d15-90bd998d105f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f2472b-d0be-4225-bd99-605ecdb398fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c6751f-3cce-4446-b3d6-71d9e7093ad7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83824d6a-cae6-4f8f-96b8-38383a85e351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87994cc-b5ef-4599-916d-ee5b3f52fcf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bac1ac-4a47-4391-8f38-d9c0279708af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d08331e2-1f06-45c7-8d7d-8adeeac7f7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61b46e0-c399-47ef-bc01-513117117828",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7209c71-2f28-4a04-bd65-9bce0672ff96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd23279-147d-4dcc-9c96-6b9e8b59717b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30ff8b1-7c00-4188-a504-fe65ac0db811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3937efb-16e5-4505-8d57-eac4fd56436e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dace0152-51b7-49e1-bcef-137b71305d4e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ad30df-0167-4997-b045-055f37393a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e504e211-364f-4294-9bfe-0ec08c62d5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024c411d-1a73-4fb6-86bf-dba08283eff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbca59c-c8de-4b83-91d2-7b3d51f3d0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2919057c-cd44-45bc-bf58-e233a83077cc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cb7cb5-9a23-4916-b3e7-7aad8e598e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26cd3734-f3f0-429f-9ca2-ff8d6e23c775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51293d1-a329-4bb5-b764-a32a3fe2249c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19aa7d5-61c5-4388-a656-ed1e2cff8e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911190bc-e5bf-4407-9086-66e12c02ac1f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaa971d-aa84-47f8-b272-10e55ba9c451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee46fa6-df18-4586-99af-221e5d8835c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f3d069-c685-4d15-809d-b492595459a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5468e32-a2e3-496d-8c19-66c58b1c9034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da746b55-a846-40d7-97d8-4d88c6c90396",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae07bec1-837c-412d-a93f-861a0daa7b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59dbf17c-9fe9-489c-8fef-a4105f2eaede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f412a5-d24d-479f-8c4c-334a4c62086f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff9cec2-3c32-440c-906d-ca035b496c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139dbc14-1efc-4459-8831-568c6fe0b689",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f3c571-d5e5-4f24-b91f-25c421019d7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b3d99e-7843-4dd2-bd06-a86d356c81e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25a5c13-2de0-4247-a160-4757b1b1cb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67316e1a-29b7-4cd8-9902-d2521dbd0f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a5fd59-5808-408e-8a22-02c019baeda8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27831537-f1ec-41a7-8e37-21c2ddae651e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1617782e-2f5a-4188-b2c1-1626cdd42433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e2b11f-2176-422b-b36c-6e014f9690d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a420baef-6c98-406f-825d-c224a6919a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8551766f-f1fd-4434-8fe7-98d0a5f98039",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d72d3f-8751-4edd-a65a-27a4a56a671a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb77ce6-9c5b-47af-9e44-4c07a74ebc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56b0cce-2ecb-494b-835a-4a74bef2f6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4799b53-3820-4915-adc8-c86b8b3971c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f9cf56-8d3e-47d7-93c6-dacfc2f23771",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e502d55d-59cd-458c-8abf-9c3af8c834a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d0151e4-5feb-4132-b654-f6ff2e487874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327ca380-1e6f-40d7-aedc-5d5abca40aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16317d5b-2527-44df-9a54-b74acda545aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8089f0cf-d96a-4381-b4af-68d8b858e72c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e91914-f66c-499c-a0e2-7a99777bfbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41758595-4fae-4039-82dc-359b3104f3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d00c3bb-3f4e-4e0f-a90a-96ad02c74d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7a0aec-becd-4af5-925e-dec517adaaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e721aaa2-707b-4ec1-8c15-adb841091305",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37e3aca-bcb1-48cd-a62b-550080b45c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8593681-798e-4a0a-8477-511f640f7a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c315ae5-b504-4617-87c7-4629f6fda53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e20aaed-e285-46ba-b613-74504628fbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c98c63f-54ce-4a09-b7ee-03136341e90f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737c8aa5-3daf-439f-8ca1-1c8b7c85d7de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4f6692-1156-4579-9843-6a15e251bf40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04772b5a-306b-47fa-b25d-7726c13cb634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c567d9-3656-4a89-98e3-818bd642fbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fe58a5-b0cf-443d-b7e3-71eff706f149",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6e8803-0f66-4919-8c95-b82ebb751fff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b668a849-5cc9-4762-84e8-6ffb3e3715b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60629eb-0105-40e0-aa3c-923c0179fafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73a2add-547d-4a36-8d7e-6ae9e5a1bc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac622db4-f4a5-4fa5-8148-ba52eaceb0df",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b26d6d-97f7-4c40-ab28-5d1039bf2de5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89fbf464-1e1c-459c-b450-465edc272c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e0054e-435a-405b-a60c-d2220b841c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa5a666-0d85-451a-b373-529ae22af78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa36789-bbf6-47b5-91fe-3975962942cc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71dbc33-315b-4222-98e6-ba89be2c9af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fc81ad3-6afe-4cb9-8501-112b4634f49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13de3842-3223-4af0-9807-4e89798e4a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7d0434-5e14-439b-b6bb-352def3f1e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61302212-2064-49b4-aa6c-396ab38a4778",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd73c320-4469-4c7f-a417-223297d5cbdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd7557e-6e50-4404-8d55-b6dbf0928a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61aa27c-b524-4324-b798-a5b6f239c919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99b580e-29e8-42cd-82c8-d5e5e6353b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd568246-738c-499c-b1fa-1f667ed628a9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163542ce-d466-46a9-9f6a-14c746d191e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b98a5c-7e8e-4108-b155-080c742ad318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e9f3ca-dc37-45d0-91c5-bc98e1bfd933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd3129c-75cc-4246-9b8f-bf801a918ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c08b42-a5dd-4351-81a8-d29e8bd0002a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1910538f-5634-419e-9d48-97e811dc5c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8a72e9-06a8-405a-a197-c48e474fa93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b3e007-8fa7-4834-a840-3b45d50d13d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ed2678-8e1b-4ca4-929a-95d67ed975e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67e82de-6aae-4784-b639-632076133107",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf38878-9b0e-4e5c-90b2-df92fd435b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5296c4c2-93b2-442a-9b8d-29d717d49ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedfd1c5-9fa6-4e33-9e1e-113d0b5d6f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413cbb25-c285-4dc4-9306-3be9c801cc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a2b9ed-3f49-44b5-a7bf-725a9a04f830",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617688df-bb67-4463-808c-f1b802587171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e3c114-25dd-4105-b4f3-8078c7399259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1513efd-4160-459b-bedd-16a075fe230f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2debba1-e4d9-46e6-989a-e877c7f17a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee61063e-7033-45f8-ba02-1140990b2d24",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb778f7c-54e5-4791-9744-3bdae0a2e3a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac3afc7d-4b0f-4267-9385-819e4ee59dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f3bcf7-47ba-4893-a6a6-4e45151ff99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98158ce-9aad-4b61-ab59-e8ed4aa93d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b443d61-5812-420f-b33d-dcfdde65d7cf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d21301-c72f-49c9-ad2f-e5774fac3a3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f2ce92-d197-46ba-b9ab-984d78aca506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be614d5-bad2-4d79-a401-e7d6971feb1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15537fc9-af68-4fd6-8d77-6690f2c561b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6873ecd8-df6a-4de8-97fe-e35aa0a13489",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1426554a-236e-483a-893d-dc0945fdae3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ff3183-6ba4-4f6d-9f39-5b9f7f3308f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097e2ec7-a9eb-4b91-8fbe-62c9fc0a28fc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82d8c4c-a215-456b-906c-a199cbc153a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40b9fd5-507b-44ed-b160-9c9cf6c6fb21",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509b805f-b2eb-4e59-ae3a-28b5b350d691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc0d38cd-9765-4a3d-bf22-442987ce1ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd06260a-d252-492b-97c2-46220e85c3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef82446-67f7-4c54-9908-44ad28c51a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1784ba8c-c2f3-417d-a446-b0eb74323093",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba05d071-3cb3-4d57-a680-65f93f37b515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fba44683-eadf-46d6-8998-8101c5b9cb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471ff7c6-fa9f-4530-a70a-d15e361b8261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df6fd7d-5e7c-4e0b-a90b-10c360a4253b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a04a1cb-5abc-4520-8e19-b9924d63f10a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e5bc86-d7f5-4216-bd77-00974953a73b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420db7aa-02e8-4289-ad33-ca819b3fbd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73832070-1726-43da-913d-2c4acc5abf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78568298-4769-4aad-81ee-85083626f352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f09146-82ea-4d64-8358-8097edd7d74d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8188e411-cb51-42e7-805a-0b37bfabea3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8c9a44-5ebb-4eec-b60c-a2d805ea8c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55263fe5-8987-466e-b32b-1aa74bb5beb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce67c04d-914a-479d-9fd4-b725e5286f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd44c19-99f3-46e2-8abb-89c0e2071cd4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccc5d65-b298-46f2-853d-1baa221e781b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d186585-a238-4a6a-b75d-ebd3c000838b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de61de8d-0d53-4908-add0-4cc521aea406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d85821-0124-494b-8fe9-ef238be77053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d5b1b7-be48-4f4a-8d71-2ed7857d88de",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d79019-e875-409a-9149-f5066517e275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72fe8bfe-d5f5-435c-8760-bba2e74fd94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6749b6d8-72fa-4b4b-acb7-a48ee58c4078",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca328c6a-452a-4938-8b7e-8b7a1acd23fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f46e12-8aed-4f61-b4c3-4d37c8aeff68",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d60bfb8-85a1-4b39-bcfa-5c0704f89dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec59f86-cdb5-419b-84d4-9d25fea90c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204de687-02bf-4dc6-b444-701c9a3ee180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f42e6a-d7bd-4a4f-8631-0be9425c7d93"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fce3c888-4fb9-4d28-80ff-e7ccd5e1643e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50a3068b-1a2b-4f11-bc5c-699d6481f439"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b813da3-45e8-4955-a1a6-d1de2b3e5b04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fb2e55a-9e5b-42f1-b461-7aee92806477"
                    }
                  }
                ]
              },
              {
                "id": "c7838b85-8539-410d-b2d6-c242cd2208b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95d42a1f-702e-4020-b929-a143bdfda17d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3411e9bb-84b7-4be9-82b9-df684c5f4b12",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "29908563-ce34-4a3c-a1bc-028e873c4771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc20179-6bce-4a8f-8a83-3dd42f3cbf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6874efc2-d4c6-43fd-bf5f-20604b818ca5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "926aaf47-64ff-4c69-a8ce-b4c6ab6ae4e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e5ddf66-632c-4794-adcf-e55963cd1f1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de44459c-379d-46b3-a84d-d27954ae69ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f5b081c-3722-4b4e-9926-9056c84ab53f"
                    }
                  }
                ]
              },
              {
                "id": "3fa513a4-1eb6-41aa-bc64-41c06d7eecfd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8037e192-ef41-4292-bf89-1d36fc0c4a4e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16654ab8-c75a-441d-8b7c-4f639e804e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "24f6f3da-009c-466b-9ef0-cc453baf1fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1089d24-5f55-4461-b204-f26f2ffc260a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e1b5b9-063f-41b3-ac93-fc07cea6df95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "819fd634-ac2d-495d-8100-bd6ae6638133",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8be0fac-591f-4816-a7e4-aee8509eba21",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abbd3a53-aaa3-4488-9df8-9891d3adb16c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "268c05a2-3508-467c-a0e2-253672b55e44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90e4109f-3c6a-4a74-8133-86f28d6a528f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a6448d6-f7b2-4bb5-90c4-d9fa54fc8f8b"
                    }
                  }
                ]
              },
              {
                "id": "27ac3492-da64-4b0c-a20c-33c96627249d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9baa41f7-2733-4b11-b4a9-15052f36baec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c227253d-2476-41af-8439-b2fcfef98fcf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2463e09-9b05-4fa4-b126-28099e419e7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfede07d-344a-4679-9904-f000263f161c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e720ab9f-6d88-4cef-9f59-d147f8f4c146",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "954886c5-4cb0-417d-9b51-580b1012b8b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c61d0f3-f429-47d6-8f26-c329ab751cb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb35184a-c536-4d22-8b8b-0505df20a21f"
            }
          }
        ]
      },
      {
        "id": "bfdefd1d-2eda-44c3-8ce4-449eaf53c08d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "641a2d60-b64a-4de2-9544-97caff2d9801",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22adb644-7da6-4ba1-a7f4-e5b67420168b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a4cbbca-2e97-4811-8a7a-d133f974a0ee",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1729f90-54ba-4f94-888d-76085849bb7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "81c50719-89fa-4e1a-a036-1114b863eb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95db6454-4d08-4e61-b422-7756e5dafb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54d8576c-ef1a-4c6a-9b74-818aefee2789"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "421b04f6-876d-4f14-8076-8ee33fb32b43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "623b5374-bf6e-4025-8060-78ca7eee9d59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b913b3b-b1c6-4772-9fd7-8c4818a68dbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4972d7db-4b8e-47fe-a0b9-edb68dccd99f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58cf6e22-e1e5-41a9-a688-b86960bf28ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3007add9-eebc-473b-ae8a-7e94fe6f59f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3112242-6107-45b0-9539-5027d6d979ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b0fddb7-398a-49b8-b22e-a69cb8d91ffc"
            }
          }
        ]
      },
      {
        "id": "e410b92d-1c74-49e1-ac03-6c9729295121",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ae3d8eaa-e756-4820-a156-377afcd05f3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12b9ce87-cb9a-4b9f-a20b-8e6160c5e3f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49d188c3-bd3e-4e24-a666-776f1dff34c0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33119cb-8c35-4f3b-a875-fe3360d62d4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbb07945-c2e0-4189-a98d-d2752ae2dd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed33ec3-f307-4696-bc02-8f207ecd09da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2acb96d8-df77-4f84-8744-11e8e22db3ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c66dcd4-14f2-4ba0-b85f-574aa0961095",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c29c6529-a065-47ec-9c0a-ccb3e6d4c909"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22c9c7cd-cfc5-4961-9c52-c8978c5ca75f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dad325e-70b1-4120-ac91-3bdedb058c8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78466b1f-f31e-404e-b770-1ccd1d686920",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6aa98628-5a0b-4d71-96fd-d2a0e8acf099"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c03d756-3993-4cbe-8dd2-0095545fb7a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9af85c29-de7d-41cc-8757-3f9ddb378cc4"
            }
          }
        ]
      },
      {
        "id": "57a17159-b302-4d9a-9ad6-ffef5f2d55cc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e2e790b7-c5d5-44c6-b1da-ce5d278cb4df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2da8b001-7612-4625-bb31-52893c25d626",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea14b53c-109a-4ba3-a05e-2b55fad8586a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a209ba3-553b-493b-a3f8-380a0c88fad7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6376576-e8f0-427c-ae51-70c94951e040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f47db2-4b78-4cb8-b7eb-6b060b323f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e79a100-f5dc-4a05-ac40-e42b43fcebae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23851e42-1849-479e-88fb-d9557be01557",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "232e2a2f-a436-4697-a32e-9d427c66ae8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fed5ec3-16a9-4904-ac45-c04f759d88e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6685fa46-710a-45f6-945e-7010b1470ed0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b3339b9-55d1-48a6-94c2-4636b4bd522c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a0610d9-a3e3-4f29-aff2-31f9bebdc32b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22cab7e1-2812-457a-9f09-04032c37c594",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23b8a2e4-4aae-428e-a3dc-132337239181"
            }
          }
        ]
      },
      {
        "id": "c6df57d1-40b3-40a5-8a15-11cc1629e883",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57f2aa67-71e9-4057-a360-994384a069d5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f91b277-da5e-419c-b1ed-84bbee4f9e1f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c98baa38-4d88-4630-b05b-bfa3bc581575",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "144d58d9-dccf-47cb-92c6-2823a313f4e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62b2546c-03dc-40df-bdde-787a4c245d85",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 124.33684210526316,
      "responseMin": 5,
      "responseMax": 9263,
      "responseSd": 602.5312503016145,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704587986206,
      "completed": 1704588031005
    },
    "executions": [
      {
        "id": "8def24ed-2b27-4245-bb0e-6ec08f6492a8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9744dcca-ff85-4bb7-922d-e3411200fa92",
          "httpRequestId": "4ac493f4-a41f-4e4b-9d9e-eab9087f578d"
        },
        "item": {
          "id": "8def24ed-2b27-4245-bb0e-6ec08f6492a8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bf44352f-72cd-4d50-963d-a5a04c58ae78",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "c6363e75-520b-47ef-b0e1-649a2d7d0dec",
        "cursor": {
          "ref": "6c694242-031f-43d1-84c5-bb638274382c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "71a7fe26-c6a6-4aae-8270-9513e4b3103c"
        },
        "item": {
          "id": "c6363e75-520b-47ef-b0e1-649a2d7d0dec",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8bb2279b-74bf-4cfb-a589-56937a1ef836",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "8a821f34-d15c-4fd4-a70d-dc425fe0036a",
        "cursor": {
          "ref": "1f9e9b80-ebcc-4e48-a52b-851f6a235361",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9d2bbc04-f518-413e-9f3c-f1e1fef3a1e7"
        },
        "item": {
          "id": "8a821f34-d15c-4fd4-a70d-dc425fe0036a",
          "name": "did_json"
        },
        "response": {
          "id": "99188944-1e4c-4ac2-b086-0070ea3d81f4",
          "status": "OK",
          "code": 200,
          "responseTime": 344,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b520405b-e12f-419e-b805-3004a0a5af96",
        "cursor": {
          "ref": "cdadae0a-bbea-4319-a9d4-3bb1b2805b13",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f750e8e-8c05-45ef-b7fe-b231afb69fb6"
        },
        "item": {
          "id": "b520405b-e12f-419e-b805-3004a0a5af96",
          "name": "did:invalid"
        },
        "response": {
          "id": "644f99f0-4d4a-4d99-8227-fabfae55ed06",
          "status": "Not Found",
          "code": 404,
          "responseTime": 594,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b520405b-e12f-419e-b805-3004a0a5af96",
        "cursor": {
          "ref": "cdadae0a-bbea-4319-a9d4-3bb1b2805b13",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f750e8e-8c05-45ef-b7fe-b231afb69fb6"
        },
        "item": {
          "id": "b520405b-e12f-419e-b805-3004a0a5af96",
          "name": "did:invalid"
        },
        "response": {
          "id": "644f99f0-4d4a-4d99-8227-fabfae55ed06",
          "status": "Not Found",
          "code": 404,
          "responseTime": 594,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d27274-cf9f-4df6-ac2a-7cc7bfc1af0e",
        "cursor": {
          "ref": "1b7056e6-5da1-4e39-b973-6a205dfa1388",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "adcfd365-b5db-40fb-bdfd-b62c9b8d7f68"
        },
        "item": {
          "id": "c5d27274-cf9f-4df6-ac2a-7cc7bfc1af0e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f6eabbf7-35ce-4f71-918f-86a5cb3454dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcf8d87-c8f6-46b0-b3c4-2871091933e9",
        "cursor": {
          "ref": "21e19789-9b37-482b-8236-3904d430292c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8ab53741-dd02-4f3b-abe7-9781b5db335b"
        },
        "item": {
          "id": "fdcf8d87-c8f6-46b0-b3c4-2871091933e9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cbc347d4-5cbc-4377-8a9c-588d91c64c00",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7fe40e-4263-4c2b-8daa-5fb361f96f94",
        "cursor": {
          "ref": "467b7a89-1a21-4f7d-a23f-50e12148dc65",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e746c57f-0deb-4ae0-9f3f-34d2bf050a47"
        },
        "item": {
          "id": "fc7fe40e-4263-4c2b-8daa-5fb361f96f94",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6237dc6b-2048-4463-b7cc-7960affc6a2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d05df0e-bc00-4953-bbd7-c5d481a1cf77",
        "cursor": {
          "ref": "4a8d2259-a0b4-4aa3-acae-1276ab505c77",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f1c22472-a780-4573-ab33-f8e1d1abc569"
        },
        "item": {
          "id": "7d05df0e-bc00-4953-bbd7-c5d481a1cf77",
          "name": "identifiers"
        },
        "response": {
          "id": "39b10272-4390-4a53-9f64-cdbf197ff18a",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52f19db-6571-40cc-80b4-8b4733158352",
        "cursor": {
          "ref": "d817f30f-585e-4384-b2fc-9eb0797fd34b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2f09eae9-4f39-4ded-b53d-49b7d05cc865"
        },
        "item": {
          "id": "a52f19db-6571-40cc-80b4-8b4733158352",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "35055a13-fe95-4aa6-9537-7bce88c54c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21828a06-a2f7-48d7-89e7-f5048abefc33",
        "cursor": {
          "ref": "0d3df227-993a-42f9-9def-1030f5c8f419",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "baf482ba-5c48-48ef-af75-e4838f3403cf"
        },
        "item": {
          "id": "21828a06-a2f7-48d7-89e7-f5048abefc33",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cd738f79-d0da-4345-8ef0-239b3efe94b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665fa4e4-dc5b-420c-aac4-e46c19434a2d",
        "cursor": {
          "ref": "a9962bb8-181d-435b-9ad4-3befff9ebd11",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d519c095-748a-4f7a-95c1-946652d89e79"
        },
        "item": {
          "id": "665fa4e4-dc5b-420c-aac4-e46c19434a2d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dd8fb77a-71fa-42ef-a263-28da0922057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbbafce-0948-430c-a423-9182951a6869",
        "cursor": {
          "ref": "b81a318d-1bb9-49d0-b3b6-5da067f88108",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "78589654-530e-4acc-a346-50e6fd06ba57"
        },
        "item": {
          "id": "3cbbafce-0948-430c-a423-9182951a6869",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a72b6d4b-a833-49a0-84ab-8f675d1b9262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feef63ca-9bee-4331-9498-cf435bb10650",
        "cursor": {
          "ref": "eff0e143-2d94-4c57-b99d-df9abcf28d23",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ec3d2955-48e5-4754-9413-7f90d65c82f8"
        },
        "item": {
          "id": "feef63ca-9bee-4331-9498-cf435bb10650",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "183ea920-e60e-4946-ae19-1edc7caaf2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd166ff-a616-4b46-bdb0-4fb4f2cccc03",
        "cursor": {
          "ref": "94cab453-c4ee-4ce6-aea8-992c219f1c26",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "da725218-d40d-4673-bd5a-67b255391228"
        },
        "item": {
          "id": "4fd166ff-a616-4b46-bdb0-4fb4f2cccc03",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "37bb7019-c9c7-464d-912e-1a0470cea342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c34035-8916-4292-a328-48ecc52ee9ee",
        "cursor": {
          "ref": "539d588b-a86f-41a0-8bfd-79e0424d722d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "992003af-c4ae-470d-90ea-75fdcc99fdfb"
        },
        "item": {
          "id": "b0c34035-8916-4292-a328-48ecc52ee9ee",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f9b6da7e-a84f-40fb-a44b-0062d7b63f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2b61a4-2af8-4bf2-b250-93e8d991dac3",
        "cursor": {
          "ref": "8cac6501-1d47-47e5-838b-e575fbcfa69d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ff3383d2-d13e-4e8f-82ef-0843fa739953"
        },
        "item": {
          "id": "9e2b61a4-2af8-4bf2-b250-93e8d991dac3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0a3baea5-3162-4c36-89f5-2a3a95c35300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698ab181-a648-4077-a5ae-2daa1291fe6c",
        "cursor": {
          "ref": "68b8d17c-f35a-446c-9ae4-2bea62f2fc4f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "760d9705-161f-437d-b06f-6087289263a6"
        },
        "item": {
          "id": "698ab181-a648-4077-a5ae-2daa1291fe6c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "649f1199-3ce8-435d-8134-9857a0a226a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44129400-ffef-4a6e-979a-864a0c4fb8a6",
        "cursor": {
          "ref": "f6ae2fb1-88b9-46db-8b18-6cbf2c17f318",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4a3e3c51-f7c6-4a91-b662-11bd3fbc5f7f"
        },
        "item": {
          "id": "44129400-ffef-4a6e-979a-864a0c4fb8a6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "271fa9c2-95ad-4601-9165-4af3e556a129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68b865e-113a-4f69-803e-8d4c5c2e77c7",
        "cursor": {
          "ref": "e12ade1e-a424-4d08-a5ef-aca10b710c65",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e310df77-0561-4fd4-8c93-00a0c5e6f29a"
        },
        "item": {
          "id": "c68b865e-113a-4f69-803e-8d4c5c2e77c7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d5985307-93b0-49fb-b723-a5419b0487a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2972d020-4efd-494d-adcd-ba3f384eb38a",
        "cursor": {
          "ref": "a5e13f10-f923-4717-9d7f-8fcca5815aa9",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2040f849-641b-4de4-a572-ca735e12aec1"
        },
        "item": {
          "id": "2972d020-4efd-494d-adcd-ba3f384eb38a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "53a85cdf-2607-48e0-882f-bce5b21d8013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedc5486-ec62-42a2-ac18-1ce518723706",
        "cursor": {
          "ref": "4e9fa06a-e1e9-4360-8c8e-3d0a93d89316",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b85b1917-93ff-4392-8243-0d348fdbe759"
        },
        "item": {
          "id": "aedc5486-ec62-42a2-ac18-1ce518723706",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fdfe5bb2-9913-4f33-9977-a47c6c5e7bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ad814d-99db-4074-a4e6-59752e8671dc",
        "cursor": {
          "ref": "f4e00915-9505-44cc-903b-913ccb53b010",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a04c5edb-d647-4c84-a146-a008f9b4421c"
        },
        "item": {
          "id": "f6ad814d-99db-4074-a4e6-59752e8671dc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9ad343ce-2273-4cd9-88d4-c90e4f8d678e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae27bf26-5ccc-417f-a5e8-95e21e01bed6",
        "cursor": {
          "ref": "3aaeb152-8537-4bc8-996f-4adf89fccdc1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f0579d29-8db5-4c56-8460-05e2f872b3a8"
        },
        "item": {
          "id": "ae27bf26-5ccc-417f-a5e8-95e21e01bed6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "47cdb09e-2c1a-4fb0-98fe-7e6c0cff925f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec2098d-c20c-451c-8c9f-55a8a67fd94e",
        "cursor": {
          "ref": "7a324d34-8b61-4650-87cf-6c86d704f09e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ae31ee2a-4c35-44f3-baa7-772dbfadd3e7"
        },
        "item": {
          "id": "7ec2098d-c20c-451c-8c9f-55a8a67fd94e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0110850b-cc0b-47ae-90d4-455f0aea57e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637fe0e1-9df5-41a3-a4ff-8cb979559cb4",
        "cursor": {
          "ref": "cbce933c-f223-465e-a024-a4bb1f354f4c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8524d67b-72eb-4914-9200-451078453b03"
        },
        "item": {
          "id": "637fe0e1-9df5-41a3-a4ff-8cb979559cb4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8c891262-7f9a-4412-8d6b-d9f41862dba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a20cb4c-69ed-4b53-aa1a-7af7b63a85f2",
        "cursor": {
          "ref": "995134a5-ea1a-4378-a355-b17d0893ff46",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "621c000b-d1a9-4aad-a09a-92e50fb61845"
        },
        "item": {
          "id": "7a20cb4c-69ed-4b53-aa1a-7af7b63a85f2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "48a1083e-a840-41c7-a3cd-d487aaa93a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a5245a-1984-49d0-8688-e319772ef297",
        "cursor": {
          "ref": "397f3ef0-db10-4425-a87c-5043458c0f42",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b4a6762c-6cf0-40d7-bfee-03340e8cffb1"
        },
        "item": {
          "id": "e0a5245a-1984-49d0-8688-e319772ef297",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "633bd4d0-20d6-454d-9b75-14db2d585f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91f05b3-1c38-4b48-84ee-ab12a078f14d",
        "cursor": {
          "ref": "724d51c0-2796-40bd-a4c9-4f8eb6720a43",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "84bb9bab-b3ea-4e51-a17d-7129e2e5d68a"
        },
        "item": {
          "id": "e91f05b3-1c38-4b48-84ee-ab12a078f14d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "254422d0-7186-4fdc-95d2-ab0fd2226b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ff4443-d584-4879-8161-bbc36180a6d2",
        "cursor": {
          "ref": "b303ca01-0603-4e73-98b5-74334e174c7f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8b94b4ed-1aa9-46d2-94e0-a830d51ccf9e"
        },
        "item": {
          "id": "13ff4443-d584-4879-8161-bbc36180a6d2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a06a83fe-9b65-4fe4-924a-fa89e7a22db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916761df-11d4-4f60-96aa-60fade85e6f5",
        "cursor": {
          "ref": "0eb19518-3908-4cf4-8dc1-d86965a4e3ec",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "26813912-86fc-41c1-8190-40ff650da273"
        },
        "item": {
          "id": "916761df-11d4-4f60-96aa-60fade85e6f5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "34a3cb47-ed1e-4a86-aefe-217159f8d0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df0cd91-46a0-4519-9e36-bdff6623dc0a",
        "cursor": {
          "ref": "e39e7f9a-c3dc-4e18-9e32-7afba388bad5",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e50b3625-99bc-4bea-9414-4f1848f7f24f"
        },
        "item": {
          "id": "6df0cd91-46a0-4519-9e36-bdff6623dc0a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0c2c0448-63a6-4704-ae7d-0bb167cd1af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8e1bfd-0f3f-4bcc-bd6e-bfb36885a8b7",
        "cursor": {
          "ref": "8c84aeab-4627-4b1b-a090-edd202b2d4cf",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "756ebaeb-341a-47b0-9d7a-d37a4f77ecfe"
        },
        "item": {
          "id": "8e8e1bfd-0f3f-4bcc-bd6e-bfb36885a8b7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2eb373a5-d4a8-4326-8c56-9591b475c150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7688dc-98b5-4cfa-8dab-4217524ef82c",
        "cursor": {
          "ref": "2d66f603-5d5a-440a-a06d-4981fa093a8a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bca84bbc-0342-44c5-aa03-207b9942c6ba"
        },
        "item": {
          "id": "1e7688dc-98b5-4cfa-8dab-4217524ef82c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f8d9f085-2053-4a02-8b35-fc7cb78d43b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66fe8ae-4558-475b-a9f2-47ec56e2cdab",
        "cursor": {
          "ref": "e7c608d5-758b-4c87-82d2-02b418e59a02",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5a522647-63ce-42df-991b-32eb113f61f2"
        },
        "item": {
          "id": "d66fe8ae-4558-475b-a9f2-47ec56e2cdab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1307f16a-92c1-43bd-9609-083b5202a780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428cbcfb-8650-4fac-a486-6fa77ccefb60",
        "cursor": {
          "ref": "d2cef696-74cd-45ca-9584-6e737e4e109a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7f255224-2536-423a-83c6-07eb6048f7b2"
        },
        "item": {
          "id": "428cbcfb-8650-4fac-a486-6fa77ccefb60",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5b63f5c3-e85d-4039-9e08-bbab7f7ed5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b2d141-1c8a-4aff-ae40-c1ad92bc098a",
        "cursor": {
          "ref": "71703665-22cb-4f58-9575-768fe87c3002",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c3dd74c6-6d33-46dc-bccb-2827cb5c2967"
        },
        "item": {
          "id": "c3b2d141-1c8a-4aff-ae40-c1ad92bc098a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c732f5b9-0ed5-4cef-bf4e-fa06ebe0cc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445b3f03-9ab4-457b-843f-655c95270f6e",
        "cursor": {
          "ref": "9c2195d3-dbdc-4fab-a2ff-88872ae0b5c5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2ae2b5fc-6f6e-4345-9942-107c885eed1d"
        },
        "item": {
          "id": "445b3f03-9ab4-457b-843f-655c95270f6e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "da17305e-a497-46ba-9530-ba62688a28f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a8d34d-4611-4b61-be7a-2ed74828acf0",
        "cursor": {
          "ref": "599d31d7-b9f4-44f5-b81c-7a6327797f69",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2f400228-c4ef-4269-932e-ddfe10b894f5"
        },
        "item": {
          "id": "88a8d34d-4611-4b61-be7a-2ed74828acf0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "90174635-5da3-4fc8-a94a-0f993a6cf547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c42cf10-f770-40fe-8a58-2a06c522e005",
        "cursor": {
          "ref": "7f65ede8-c98c-4a20-aa51-13064acb8fa0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a0ccdbfd-80d9-431b-b7cf-3a4037cd4252"
        },
        "item": {
          "id": "4c42cf10-f770-40fe-8a58-2a06c522e005",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5bc06ba8-f6f2-4679-b186-a0a651c8fdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8387af7-ead2-4abc-9222-6a0063951c19",
        "cursor": {
          "ref": "a391176d-cf50-43d0-ac40-a0bf795db198",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8bad81d5-63d2-4996-a1c7-12214403da48"
        },
        "item": {
          "id": "a8387af7-ead2-4abc-9222-6a0063951c19",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a4f640e3-5fee-421f-865d-00ef906e13c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42adc6f-ab2b-4c15-996c-8566964ce8c1",
        "cursor": {
          "ref": "3d9b58d1-9669-4523-903b-67596221a141",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "388a5be4-b59d-44f2-9c66-2af86a8bf7d9"
        },
        "item": {
          "id": "f42adc6f-ab2b-4c15-996c-8566964ce8c1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "489258ea-4b99-4d56-b5ad-6f5edbc01e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f0003e-b7de-4473-91c5-a1999da4183b",
        "cursor": {
          "ref": "e889abdf-7fc8-4213-9194-1c0b05b75f20",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "32b37515-e32a-4992-b06e-e3e0814ba499"
        },
        "item": {
          "id": "70f0003e-b7de-4473-91c5-a1999da4183b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "435ce9fa-711e-47db-82a4-7a4ad15c0d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30df0bd-68e1-472a-9cfe-853e3679b250",
        "cursor": {
          "ref": "67e747e3-7d02-4920-973a-b1bcfa20962c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "899fcf2e-8172-4d27-aec1-1143734d8649"
        },
        "item": {
          "id": "c30df0bd-68e1-472a-9cfe-853e3679b250",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a86ee6d7-85e9-4fe2-893d-661f0ba14ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac0731f-2952-4d1b-bc8a-fc218c7aa6a8",
        "cursor": {
          "ref": "c29f1c35-4801-40ef-ba4f-1b6765777d9a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c8b40d05-8698-4f66-98b3-321ba275368a"
        },
        "item": {
          "id": "cac0731f-2952-4d1b-bc8a-fc218c7aa6a8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "98d7e5ff-8d47-4b6e-9e29-a25b241e85b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99be197-3804-483a-9350-4349b9be869b",
        "cursor": {
          "ref": "09891b27-ccf6-47e4-b959-cee29a851c3c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d8746838-c2f5-4c4c-b43f-bfbaf039c2af"
        },
        "item": {
          "id": "d99be197-3804-483a-9350-4349b9be869b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "686f94f2-8e7a-4c79-a6a0-9997f6f90525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc98ac18-2258-4aa8-a051-66346c1afe6d",
        "cursor": {
          "ref": "9eea72d7-9cfd-42d0-adb5-82676bf9fcb2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "354bda14-35da-4aa0-8057-4a5c4fcddb7b"
        },
        "item": {
          "id": "cc98ac18-2258-4aa8-a051-66346c1afe6d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "375dde66-42da-4b37-b044-3d98c35575ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193a8500-f76b-4498-a4a0-14c2b1ac9e48",
        "cursor": {
          "ref": "8ef7dc2c-256b-4921-81b4-d8d80700994d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "97467476-0bc8-4bf6-beaa-29b8c9715a50"
        },
        "item": {
          "id": "193a8500-f76b-4498-a4a0-14c2b1ac9e48",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8066b919-2242-4f5e-9d28-778d272a70c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a0a704-02ef-4b7f-b356-92f05d05c612",
        "cursor": {
          "ref": "9193ded3-b4de-475a-a42d-f4bc2d5027a2",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c11cc940-8e37-409c-88f0-7e81247acb84"
        },
        "item": {
          "id": "08a0a704-02ef-4b7f-b356-92f05d05c612",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "11001f65-9d26-47b2-a14a-da39b825ce1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffb532b-d528-476e-bbd9-a463bff56a85",
        "cursor": {
          "ref": "941adcbf-a96b-4269-afd1-ca74d95db8f7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "20f05ef0-329a-4a10-8580-39cc5919e8cb"
        },
        "item": {
          "id": "cffb532b-d528-476e-bbd9-a463bff56a85",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a25317a4-c3e7-4c2e-87d3-6356342f9800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05361093-ce0c-4063-865e-e4680c0e61b4",
        "cursor": {
          "ref": "48ae40a8-8903-461e-9d96-40abe1f40180",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "55c1d212-c67d-45bf-943c-06dbbfbcc3d8"
        },
        "item": {
          "id": "05361093-ce0c-4063-865e-e4680c0e61b4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6c107da9-ffe4-45e0-906a-d1b8bb0f6819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e289985-90ee-4de4-a940-9efd3ac6c119",
        "cursor": {
          "ref": "ecbabafb-4f54-4435-848f-645da816ea21",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "110a7690-0856-4930-80b3-517793bad626"
        },
        "item": {
          "id": "8e289985-90ee-4de4-a940-9efd3ac6c119",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9c763c6c-9471-4aad-924e-3b0b444ed311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44f0c3c-605a-4f20-b34e-83e5f5533fa8",
        "cursor": {
          "ref": "610eac3e-f1b9-4790-8242-f9ceae44446b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "24e4a543-1e2f-4977-8bfa-73437ef9df95"
        },
        "item": {
          "id": "f44f0c3c-605a-4f20-b34e-83e5f5533fa8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cafc09ab-9198-45c4-9eef-08b55e7f2df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80bacfd-9eda-44f4-8b6d-f446d9e1ffd9",
        "cursor": {
          "ref": "418cbadd-df02-4a46-9ef8-17c4be3b4b87",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7ad56065-eb4b-4f90-b2eb-614dce0f9191"
        },
        "item": {
          "id": "c80bacfd-9eda-44f4-8b6d-f446d9e1ffd9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b85bf881-f017-4a26-9aeb-f7b1816eb505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836b48de-9a9b-4427-b808-9ac465781ad9",
        "cursor": {
          "ref": "814d1ed1-4cb5-409a-8fd5-4c283042ef33",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d2e177d7-9cad-4138-91b7-00c7c5ef3cce"
        },
        "item": {
          "id": "836b48de-9a9b-4427-b808-9ac465781ad9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c6454441-350e-412c-bc71-d3409fc1ceb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bcf151-10fd-443b-88b0-787efa3f4a91",
        "cursor": {
          "ref": "a509a9c6-57ac-4069-8d2d-04d0a3c94c03",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2a830670-1d22-44b2-a982-d17c110d15d1"
        },
        "item": {
          "id": "87bcf151-10fd-443b-88b0-787efa3f4a91",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c147e830-f54a-4768-8c85-2d103772d3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdf1135-aec5-4ae7-a098-cadadcabe5bd",
        "cursor": {
          "ref": "7f034e54-8973-4f99-b3e4-5ee5a7277c95",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4736c704-beda-4493-a347-373ac241aa28"
        },
        "item": {
          "id": "9cdf1135-aec5-4ae7-a098-cadadcabe5bd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f8caa590-6a6b-49ae-ba69-599dbd759c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df640b5-eb62-4fc7-88d9-2a125ebc1e07",
        "cursor": {
          "ref": "c1d54eb8-b8f1-403a-b864-5cdc831fb4a9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b9b45372-cfbf-46a0-a712-6d94f9927dd2"
        },
        "item": {
          "id": "9df640b5-eb62-4fc7-88d9-2a125ebc1e07",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "79382c11-c440-4e3c-83bb-421134c5d14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7f187c-c151-46fd-85b8-9aa766324081",
        "cursor": {
          "ref": "edc48589-7f24-4222-8db0-93d8136c816f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "068eef5a-538d-4dea-b61d-45f46e1b1460"
        },
        "item": {
          "id": "ef7f187c-c151-46fd-85b8-9aa766324081",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "55e39041-c8f1-4f82-88f6-7e50db987ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c97a98f-947c-4373-ada4-ae8406c60016",
        "cursor": {
          "ref": "5bcdc190-d246-46f0-b1ea-0f3e9cac91c4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cfba7449-9abd-4509-9d7b-419992e872c4"
        },
        "item": {
          "id": "5c97a98f-947c-4373-ada4-ae8406c60016",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "54dc144e-03fd-4519-bbd6-57582452d366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bf7bde-c177-416d-add0-3fe30e8c3bfd",
        "cursor": {
          "ref": "048307f8-174d-4494-8adc-9fea73a545d7",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "54be407f-305f-45cd-adc9-a7c86aa441ef"
        },
        "item": {
          "id": "26bf7bde-c177-416d-add0-3fe30e8c3bfd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e2f325af-c726-4d30-96d1-6d4cc8f77d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744f574c-d453-4fbe-96cc-f648c246af92",
        "cursor": {
          "ref": "df3c15c1-de19-4aea-8e12-53bc21705f94",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2eb62c8a-fd18-4296-8e1f-0ac40e1f9712"
        },
        "item": {
          "id": "744f574c-d453-4fbe-96cc-f648c246af92",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9ceb09ed-3e75-4f4e-a8c6-ad4821ea4d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e792a1b3-10ae-4394-871f-85750d8660df",
        "cursor": {
          "ref": "2917af31-5a00-4376-b430-c9b0bda03f4f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "48071bf8-8f20-439e-bc8d-dae12cd2b010"
        },
        "item": {
          "id": "e792a1b3-10ae-4394-871f-85750d8660df",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "110462bf-444b-4f8d-919a-b3da4cbeaa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1281e9-36e5-4a66-9ffa-104339d27f40",
        "cursor": {
          "ref": "68557707-658c-4405-9d62-a3d7301e58d3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "62e4907b-60e5-42ae-96b0-a62581a1ce39"
        },
        "item": {
          "id": "7a1281e9-36e5-4a66-9ffa-104339d27f40",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5c505d2f-2b32-41be-bebb-144311db5ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc30346c-c5b1-4139-8f4d-1109d818eeef",
        "cursor": {
          "ref": "a6603e45-c52e-4a4c-a78f-f98b92604967",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0f95ca0a-5ae8-4874-96fa-35e757815249"
        },
        "item": {
          "id": "dc30346c-c5b1-4139-8f4d-1109d818eeef",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e64f3db9-ca1a-4312-bbda-45c7a5431d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074e7996-5c8e-42dc-b2db-2cd70866687b",
        "cursor": {
          "ref": "b5388043-0559-4c7e-aae8-0add9570f7bf",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bad50214-a9b2-4061-940d-586369d15732"
        },
        "item": {
          "id": "074e7996-5c8e-42dc-b2db-2cd70866687b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4ee53df3-4287-4edb-b216-a3134004e6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ce4969-9749-4bed-b4fa-a564fd8e4d81",
        "cursor": {
          "ref": "989910b3-206c-4a80-8469-2c9bbc9d028f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9f1dfc3a-9f08-4518-8f8d-9902c26ad3ef"
        },
        "item": {
          "id": "f5ce4969-9749-4bed-b4fa-a564fd8e4d81",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "74769ffe-b707-4b04-ae15-69f3a06de891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3b5054-6f89-441c-bef7-ef547ca957a3",
        "cursor": {
          "ref": "894e773f-608e-4766-8bc7-d08899682f29",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7634fdfb-4d0f-462c-adaf-af5f49152e1f"
        },
        "item": {
          "id": "0c3b5054-6f89-441c-bef7-ef547ca957a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cc260312-31d4-4e2b-9aac-cd31880aefcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087e8e17-008d-43ad-b016-987afa1839e2",
        "cursor": {
          "ref": "df65ea84-0cf6-4551-9a16-d490441d6107",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a28fdb3c-5158-4ebc-8562-a89173a73749"
        },
        "item": {
          "id": "087e8e17-008d-43ad-b016-987afa1839e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6d56fafa-f39f-48bd-9759-9c1b591c0d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa1dd20-0ee9-4ef1-9944-d323a3a9d8e5",
        "cursor": {
          "ref": "70dc636c-ea27-4dea-a7c2-64e6517c493b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7bfe2017-0582-4f7b-80b5-cea5f132cf88"
        },
        "item": {
          "id": "aaa1dd20-0ee9-4ef1-9944-d323a3a9d8e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cf94707f-52c3-45c6-aa7d-16610f70520f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64b4fef-ff70-4b40-b364-b78a7fbae8e9",
        "cursor": {
          "ref": "96c5536f-2c25-415d-9c43-1b483f918136",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "459d6668-b310-47ea-a852-91968c44de31"
        },
        "item": {
          "id": "b64b4fef-ff70-4b40-b364-b78a7fbae8e9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "78405335-749e-4135-a380-82580e76745a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40e8b83-8d58-4b92-a72c-8067fef417b6",
        "cursor": {
          "ref": "b05d14d2-5cf5-4816-9048-67b5c8594955",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3013311a-9d73-4145-b4d3-2b1011aa4492"
        },
        "item": {
          "id": "c40e8b83-8d58-4b92-a72c-8067fef417b6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1eb9f680-f1bc-4580-8e6a-86895b3ae140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80655997-d214-4d55-abd4-042b7108c46c",
        "cursor": {
          "ref": "fa5a9f28-136a-4b68-a124-0986d5db5cc6",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ea96773d-2767-434c-bac1-933efb04e169"
        },
        "item": {
          "id": "80655997-d214-4d55-abd4-042b7108c46c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b7156805-f01d-4bdd-9bff-5103a588d1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cd3959-bab4-497d-9eb5-ff0bc7f6b7d4",
        "cursor": {
          "ref": "9eb1b04c-2f69-456d-819f-93e47c77d359",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "05e27d90-52a8-4f78-88a9-43170a37e444"
        },
        "item": {
          "id": "63cd3959-bab4-497d-9eb5-ff0bc7f6b7d4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a7623625-b350-4ccd-a062-2cd0f5209d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c6f7e3-eee4-465f-b4b9-f14f2b96d841",
        "cursor": {
          "ref": "3e406e12-18ec-48b6-a069-41ca3c2a3ee0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f9443c19-838f-45fd-a6f3-afe6f4851dc1"
        },
        "item": {
          "id": "51c6f7e3-eee4-465f-b4b9-f14f2b96d841",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ea178555-cf60-4b35-864e-49dac4ff09b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6807e1fc-2b07-4860-a06d-e2b406a66efd",
        "cursor": {
          "ref": "7d12b5fb-991b-4587-8ab0-b15878850dea",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2c1be831-4c02-4e54-9983-97e2fba4a1f8"
        },
        "item": {
          "id": "6807e1fc-2b07-4860-a06d-e2b406a66efd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8ed63747-d77c-429e-8b7f-3807e4c96d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faaa79a-2f39-45c8-b333-cb900ce09b8a",
        "cursor": {
          "ref": "21882197-d74e-409c-8f69-3832056183b4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3ed7e5fd-53c5-49db-93c5-554eca7b8dee"
        },
        "item": {
          "id": "4faaa79a-2f39-45c8-b333-cb900ce09b8a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b1962bcd-3737-4e02-bf2c-068dd2c67e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2d2c84-6ab3-4780-aff0-5838c037309f",
        "cursor": {
          "ref": "ee169da4-4c4c-45d9-9009-6a9c69412f08",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c6926c86-ba87-46a3-a6f6-f74cbe5690f8"
        },
        "item": {
          "id": "4f2d2c84-6ab3-4780-aff0-5838c037309f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d6b79a6b-2033-45fb-b891-8d962a544bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71f4d80-9659-4022-ba20-23107dd7b7f5",
        "cursor": {
          "ref": "eeb06839-5da7-45be-a45b-ead801e4c664",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d3d101c9-e7d2-4032-bb6e-ec804c4ea5f9"
        },
        "item": {
          "id": "e71f4d80-9659-4022-ba20-23107dd7b7f5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "79c73712-f6ec-4025-b3ff-44940d0ad109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222206db-e130-4b51-9349-cecf4014f67b",
        "cursor": {
          "ref": "84a05efe-e95f-4632-b517-39cf277f39a3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a56207a-4c80-4de8-a6b4-f882e29fd1d1"
        },
        "item": {
          "id": "222206db-e130-4b51-9349-cecf4014f67b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ddead8ec-0aed-406a-8df3-0eb36f52644e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29d5761-730d-44d8-9cff-cff98c3e6f14",
        "cursor": {
          "ref": "04beb283-b8f3-4a99-b154-cdeb02ce3e99",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "feb11156-47b9-4b48-b387-96e5a537bedf"
        },
        "item": {
          "id": "a29d5761-730d-44d8-9cff-cff98c3e6f14",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "33041c2d-352d-490e-aeda-6b621fa70224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b523eb-b996-4c37-8b14-7c49f45c9828",
        "cursor": {
          "ref": "86df55d9-8853-4fe4-b1eb-b0ca866ddaee",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dcaa99d3-5a64-4ded-bf35-e340c8e005e3"
        },
        "item": {
          "id": "60b523eb-b996-4c37-8b14-7c49f45c9828",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c6ee5460-00bd-4296-a6ae-6e706f6b7365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3043b9ca-e41e-4594-9212-75057503ffd1",
        "cursor": {
          "ref": "8f4b7d05-1497-4e37-81f4-5045753224e0",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e6e994ac-13ce-4266-80de-310bcd1bce20"
        },
        "item": {
          "id": "3043b9ca-e41e-4594-9212-75057503ffd1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9eeada60-c7a0-4b4f-8ee2-3f2f7b2962cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84425341-ce09-48b7-b86d-f3bb610000a5",
        "cursor": {
          "ref": "31b19f69-c6ef-4e92-bccb-26502105dc2c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fda81354-6384-45e4-8430-4b57d501f0e4"
        },
        "item": {
          "id": "84425341-ce09-48b7-b86d-f3bb610000a5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eab3170a-1bf5-4b9b-8b31-5d60763f8c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac17c1c-f7ee-4041-88e3-984729affef6",
        "cursor": {
          "ref": "9dc474bb-6376-4bb6-8906-c36120d1a216",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "15f8209a-f2d7-4fa9-852c-35db497fdff0"
        },
        "item": {
          "id": "4ac17c1c-f7ee-4041-88e3-984729affef6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ba028eff-d9f4-4d56-b990-8549d8cec8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b79c2c8-c48b-49ff-9ca9-ba5ae492f95a",
        "cursor": {
          "ref": "60d89491-8415-4c5d-8dbe-a7203f74a288",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "28a98bde-8189-453c-af1b-59f02630a0ed"
        },
        "item": {
          "id": "2b79c2c8-c48b-49ff-9ca9-ba5ae492f95a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6208999a-0d88-4cea-93c7-c5a6e2d42957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b99d6dd-2d06-454a-8a17-1128178c1167",
        "cursor": {
          "ref": "54cde02d-7e85-4e98-83d4-7e9ba66fa847",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "18fa9d59-4769-41ca-b205-be179f66334b"
        },
        "item": {
          "id": "9b99d6dd-2d06-454a-8a17-1128178c1167",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e85eb726-66c2-49af-8f1f-e871fdf66a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25418905-aab6-4f0c-9334-f32f027b7aaf",
        "cursor": {
          "ref": "93508952-e7e2-44fa-8478-2be480f238f6",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3c509cb7-8a5d-4c9e-b4c4-d896678861d7"
        },
        "item": {
          "id": "25418905-aab6-4f0c-9334-f32f027b7aaf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bcb5d185-a6a0-4f46-b334-8c05f6ba8937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48377f09-d49b-4d12-9b4e-ed93451c46b1",
        "cursor": {
          "ref": "3a75d6b8-d32d-423f-8b7c-03c24a98d415",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5bd6c1ca-f665-41e4-a957-045a1d4bff2e"
        },
        "item": {
          "id": "48377f09-d49b-4d12-9b4e-ed93451c46b1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fc66f08a-f3bd-45e6-9da6-150ef28ec629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e37ad5-3866-46c8-8390-8cfe6f821b91",
        "cursor": {
          "ref": "76af5760-144b-42d0-b2b8-e9c4eb929028",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cadc517c-c51d-4e7d-91f8-922915b0e4e9"
        },
        "item": {
          "id": "46e37ad5-3866-46c8-8390-8cfe6f821b91",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "528dc66f-4797-436a-bde3-73719236ed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9befdb66-2903-43c6-a4d1-7e7eb635cac7",
        "cursor": {
          "ref": "85995633-de34-47d5-ac29-54d0bfe33023",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "acdea801-79a8-4bdb-8324-ec8f02e429f9"
        },
        "item": {
          "id": "9befdb66-2903-43c6-a4d1-7e7eb635cac7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "08c09dd5-0c83-4e25-84d5-7f93eda62eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b447745-5a7c-4b96-9083-c9acd11e8384",
        "cursor": {
          "ref": "9c2ae3cd-ba2e-48ad-a217-b9cd91d83337",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5c8387ce-c3e1-47f7-a071-5ec3591395a7"
        },
        "item": {
          "id": "0b447745-5a7c-4b96-9083-c9acd11e8384",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e4a76d9e-b16a-489b-81d0-e575c5444643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6052bbee-1814-4563-854d-0343944a9812",
        "cursor": {
          "ref": "2d97b8b0-abac-4a3b-840c-6286bd2d8909",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4686b784-9038-4258-8088-a97d30413ab4"
        },
        "item": {
          "id": "6052bbee-1814-4563-854d-0343944a9812",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6dd65b1d-275d-425b-ab11-fa301e0e7e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fb06bd-aa70-4c9f-bdde-79c43b788b50",
        "cursor": {
          "ref": "aecd93a1-06d5-472d-9ab9-bf181a5ae477",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "004d1dcf-6cfe-4e5e-b665-f07bf80575ea"
        },
        "item": {
          "id": "34fb06bd-aa70-4c9f-bdde-79c43b788b50",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "491ae7ae-0514-4cae-b22f-c4b85b1b6f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2818594-ad76-43e0-90d8-7d70f14c41fc",
        "cursor": {
          "ref": "45dfa4c9-2dc9-4391-aef1-d7107cd62478",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a6879353-4078-4688-ba1b-1d95c9c79248"
        },
        "item": {
          "id": "c2818594-ad76-43e0-90d8-7d70f14c41fc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "971329e3-e65c-4ab0-b890-69ad2543d95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41acd61c-d93a-4b6d-88b5-889726aae77d",
        "cursor": {
          "ref": "37deec59-adeb-4a68-973b-0bf90e4ff261",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1e19beaa-2d3c-47c3-89b6-4f846f35ab22"
        },
        "item": {
          "id": "41acd61c-d93a-4b6d-88b5-889726aae77d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0aa7f449-10f7-4da9-8d5d-fb61f4b8a5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fe5be8-38bb-4626-9f67-785482b25d6b",
        "cursor": {
          "ref": "4f723db9-4dd2-41e1-8a7d-f9d63afdce1c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0d0b9a4a-7f37-40f9-9ed2-0e875b2eb137"
        },
        "item": {
          "id": "34fe5be8-38bb-4626-9f67-785482b25d6b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8c54a7ff-3d31-4dc7-b6a5-01f8e8d3de36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3346bc1-c57d-4252-afd7-06faad40b9fa",
        "cursor": {
          "ref": "ff96c673-597f-47f1-adbc-1ba6b6d9f538",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "07d22e8f-69a9-4b9b-bdd2-a5db8d6092c5"
        },
        "item": {
          "id": "c3346bc1-c57d-4252-afd7-06faad40b9fa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8b32aec3-2e4b-4819-b351-4d4e6b54dec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb564c75-ef43-40e6-9cea-7226650bc048",
        "cursor": {
          "ref": "ef39632c-917f-4215-b0d2-ca59e27ddb03",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "80397e5b-0176-481f-8651-25fea1618ccf"
        },
        "item": {
          "id": "eb564c75-ef43-40e6-9cea-7226650bc048",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9385da81-ec9e-472f-9fd3-31e1c1e1ff71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13f9dd7-17ad-4b57-a4fa-7e2f576502f5",
        "cursor": {
          "ref": "e3228b4b-fd7c-4f83-9fe8-f1ea9a973d11",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b7a851f1-02d8-4448-a788-84387e4d711f"
        },
        "item": {
          "id": "a13f9dd7-17ad-4b57-a4fa-7e2f576502f5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f44310bc-ec13-44b5-85ed-84067e236a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ba7e51-b3cb-4501-a1fd-3c75a34cd263",
        "cursor": {
          "ref": "2da0a078-0c72-4fee-9400-92b7890c408d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1750c44e-3d31-4a13-a57f-8865a041e214"
        },
        "item": {
          "id": "09ba7e51-b3cb-4501-a1fd-3c75a34cd263",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8aee494e-4745-4427-969f-7f3461e8355a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159cabf0-40b0-4863-af13-5e571376424e",
        "cursor": {
          "ref": "45055171-a4fd-4d61-aa1b-26464b007edd",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d2abb431-4861-480c-b951-96e45f5fb577"
        },
        "item": {
          "id": "159cabf0-40b0-4863-af13-5e571376424e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a73693ae-6e40-4f01-9f1c-b95e8d3c872a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b50bb54-441b-4ab2-a3b3-8dd8ac2080ff",
        "cursor": {
          "ref": "9f61a6dc-baff-42d9-a039-909246182ef3",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b40f4d81-5b25-4ae6-b959-c3b082e6d952"
        },
        "item": {
          "id": "5b50bb54-441b-4ab2-a3b3-8dd8ac2080ff",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2330888b-15a3-47e1-8dac-a2ece563c87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cee7cf89-fe27-4442-acbb-1b6a9bbc835e",
        "cursor": {
          "ref": "a52a71ea-4605-427b-8e2e-d3e7264af811",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a166f109-f7f2-48ef-b848-d0d601472086"
        },
        "item": {
          "id": "cee7cf89-fe27-4442-acbb-1b6a9bbc835e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "101546cc-b9a2-4105-be10-7acbd6a995b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ba878443-4666-4434-840f-028f6470fec5",
        "cursor": {
          "ref": "27c157d5-2cc8-497e-a859-bac402d9e260",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "07d5b0ca-e2d8-4aa5-87b7-2219d2b05b80"
        },
        "item": {
          "id": "ba878443-4666-4434-840f-028f6470fec5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "64c6d3c2-049c-4a85-b45d-ded1613c6b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0b8e691b-33ed-4e68-a6a1-dae2408cad16",
        "cursor": {
          "ref": "8784aff2-1c97-45de-8994-023f9dcf20b3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9c757536-5812-4348-914a-8ad0c753f2e6"
        },
        "item": {
          "id": "0b8e691b-33ed-4e68-a6a1-dae2408cad16",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0e2db0ec-f566-47c9-986c-a9ba1e128acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d41d1092-f2bf-45ad-9844-effce7fb21dd",
        "cursor": {
          "ref": "7253910a-2764-4754-bf02-eedd53f3890f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "203c2e74-3aaf-4788-9f1c-17f17f8e0b8b"
        },
        "item": {
          "id": "d41d1092-f2bf-45ad-9844-effce7fb21dd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "aaaafe47-e452-4205-a34a-578d189a1cab",
          "status": "Created",
          "code": 201,
          "responseTime": 9263,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "435d6423-d8eb-457b-8449-94e7032ee6bd",
        "cursor": {
          "ref": "8359e765-db45-4ada-bc63-201ab2bf4aa8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7a0bbf8f-6af5-4249-aa7d-ef44f404810a"
        },
        "item": {
          "id": "435d6423-d8eb-457b-8449-94e7032ee6bd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "57ebaff0-c66f-4d10-966b-6146b59b4ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6ddf04f8-757e-4884-b42e-8c44dde81f50",
        "cursor": {
          "ref": "52d42e50-d8b4-475e-b3f0-a456ba87b92b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "25261636-708a-415b-b9d5-59ce1aa11f5f"
        },
        "item": {
          "id": "6ddf04f8-757e-4884-b42e-8c44dde81f50",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e61e8e1c-3fda-40cc-9a87-b9388f79619e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "71df5204-2e69-4198-b66c-d6caaeb44e3a",
        "cursor": {
          "ref": "17906284-a896-45b6-8276-7b5ba69dc691",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ba6c6f6-7f07-425e-b01f-68ab635ac982"
        },
        "item": {
          "id": "71df5204-2e69-4198-b66c-d6caaeb44e3a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "76738647-38cc-44d3-bce7-ba882dc823eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5288d6f4-f53a-4ba9-bad6-deeb5ff71075",
        "cursor": {
          "ref": "7a4e86e6-5c4a-47a7-8490-c1cbdf8874ef",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "88176943-c6dc-46c7-a766-4cb1ec805b81"
        },
        "item": {
          "id": "5288d6f4-f53a-4ba9-bad6-deeb5ff71075",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6381c25c-fbdb-4fb3-9439-5ffe8cbf69e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00aba324-494b-4867-8665-e22c889020f6",
        "cursor": {
          "ref": "78ac8130-0134-4c42-ace3-9ff2e36a0add",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "df2992e1-a778-49ac-bf1d-a6f74418363f"
        },
        "item": {
          "id": "00aba324-494b-4867-8665-e22c889020f6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "465cbfab-e6c6-49d1-ac30-b658b5e8905d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f5bd4e-7605-420c-af0c-6d3ee4e86e4c",
        "cursor": {
          "ref": "77e565c3-d4cd-4a10-9277-ec2e5840257a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "072ba9cb-6311-45b9-af9c-d4683beb7a46"
        },
        "item": {
          "id": "73f5bd4e-7605-420c-af0c-6d3ee4e86e4c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6343b509-6ea0-4f0a-b7ca-274d66926e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878fe2d1-ddbb-4e70-9153-2d86b516f6b2",
        "cursor": {
          "ref": "bf9fbd66-d566-4d29-a7bb-30184c4a6a31",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b491fca5-b759-430c-bcf7-29147bbf1207"
        },
        "item": {
          "id": "878fe2d1-ddbb-4e70-9153-2d86b516f6b2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9876443d-8d62-4ccf-9463-ea489fd67040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2453ca-3727-4419-a9f3-9574d543598b",
        "cursor": {
          "ref": "aa53a848-cd0c-4a3a-960a-04e79509182a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "00db7933-c65c-416c-9ff1-a4de110265b5"
        },
        "item": {
          "id": "4e2453ca-3727-4419-a9f3-9574d543598b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0cd15500-efdd-4586-8680-8de028975952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792d7eb2-f84a-4706-943b-8ea577c003a0",
        "cursor": {
          "ref": "6cc45fa4-341f-480f-8796-5be0b5f784ed",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bab5ae35-887e-4b31-ae1f-f571f3e80966"
        },
        "item": {
          "id": "792d7eb2-f84a-4706-943b-8ea577c003a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "43538db7-5d09-40e3-b064-943a656d2e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa8be9b-bda6-410a-b338-22ea0d91d562",
        "cursor": {
          "ref": "f8fb4a14-4d2f-4f61-85b1-4630a7d598c1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8d8270dc-3c54-4816-90d6-3dfd66813597"
        },
        "item": {
          "id": "daa8be9b-bda6-410a-b338-22ea0d91d562",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4ce11b3a-b636-4dc9-b98e-7a6687f038cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1024c2d7-bb85-48f4-8dab-b7613416deba",
        "cursor": {
          "ref": "caa7d399-eeea-4b62-a4c5-741ec0867923",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "adcf2ab1-0a96-474b-9469-6daaad437717"
        },
        "item": {
          "id": "1024c2d7-bb85-48f4-8dab-b7613416deba",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "77b9edf8-ecc2-4a2a-beb9-1ca012095b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b2ffb2-e2f1-4f74-9772-629a07f2903d",
        "cursor": {
          "ref": "20e942e1-f1a3-40c4-ae18-eb81ff866cd1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6f0e8ad2-b154-4265-9a82-f08cdf54e00e"
        },
        "item": {
          "id": "22b2ffb2-e2f1-4f74-9772-629a07f2903d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5bc00c3b-588f-49f4-9205-f7d1cfafe1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820dc67d-27a0-4155-b579-e8cbac7f54a4",
        "cursor": {
          "ref": "7c6aa44d-819c-4f60-b5f4-31ebd20c4b7e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3c37a7ea-baa3-40a6-9fb6-971e95336866"
        },
        "item": {
          "id": "820dc67d-27a0-4155-b579-e8cbac7f54a4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9b087849-f65c-41b5-a39a-40edc86587d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054492f4-bacd-4120-9837-870a4c5da930",
        "cursor": {
          "ref": "e9754e20-1e67-4cef-8893-811f1d38bd4e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "15970dd7-cf7a-4856-b025-a035c3856cf9"
        },
        "item": {
          "id": "054492f4-bacd-4120-9837-870a4c5da930",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "27410ff2-4009-4d95-9392-b1954bc9ca9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f57317a-dbad-44b7-a4cd-0465f077cdb5",
        "cursor": {
          "ref": "79461372-c55e-468a-88d1-7c5ca32f22f8",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "76ec85d0-cb5b-40ee-aa46-ed822be4cb39"
        },
        "item": {
          "id": "8f57317a-dbad-44b7-a4cd-0465f077cdb5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "66398592-ed3b-47b2-8160-8d2cbe5882a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e896aaf-57b2-496b-b285-c15de9c03f05",
        "cursor": {
          "ref": "29d7afb8-3f79-4926-90b8-cfde9ec7e7b4",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aa6d015c-1997-4c63-90a2-a5b1afb1eade"
        },
        "item": {
          "id": "4e896aaf-57b2-496b-b285-c15de9c03f05",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5af28e0b-77df-40cf-912d-a72d09550eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1656a0-3851-4b0c-ae2e-5f93a2be5a9a",
        "cursor": {
          "ref": "de88065a-e2e3-4f87-a3c1-ea680d1fc619",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8c135708-f213-49b2-9839-cdf377d0156d"
        },
        "item": {
          "id": "bd1656a0-3851-4b0c-ae2e-5f93a2be5a9a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "81493b92-ba80-4983-9ef0-0498b9616b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5a7cbf-b4f2-45c5-8f7b-61752820b0dc",
        "cursor": {
          "ref": "5ca4cf10-7149-4581-a8fe-2275e35b0a83",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8f66ca5a-8a15-4032-939f-405f252f02e6"
        },
        "item": {
          "id": "2e5a7cbf-b4f2-45c5-8f7b-61752820b0dc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bad46669-4dfd-44b4-8a7d-b7bbdc3e86d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2812d930-3264-4f43-ad73-db1c883aafa3",
        "cursor": {
          "ref": "8c4a07b0-30a7-4532-a72a-3a48cc045746",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "71abf508-ec49-4b1f-aee1-40b3c5c80d08"
        },
        "item": {
          "id": "2812d930-3264-4f43-ad73-db1c883aafa3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2ff7bc1c-42bd-4a09-bf77-20de2123ef06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ec1d25-6d45-4138-b4ca-df8d11ad1485",
        "cursor": {
          "ref": "c0ea2a15-2435-4d81-b288-e1e42e9bd4b3",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b42e49b4-6abc-4cff-b0b6-978a77037c0c"
        },
        "item": {
          "id": "b3ec1d25-6d45-4138-b4ca-df8d11ad1485",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5da273b9-f065-4b11-838c-c820946053e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b04368b-0c01-4aad-bb9d-285d3d1d95eb",
        "cursor": {
          "ref": "de7607e7-6df3-4ac5-9bbb-c203121821ee",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "37566759-43cb-40a2-9a7b-142dc01717a6"
        },
        "item": {
          "id": "0b04368b-0c01-4aad-bb9d-285d3d1d95eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1ee06288-e5a3-444e-9aa6-2aff5af01f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d8391e-d31a-45d8-93fd-21b698009db4",
        "cursor": {
          "ref": "a4933b46-c30e-4c82-8d80-2413a3ad9b86",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ab1d6f99-bdd6-4662-ac4b-817e8fd595fa"
        },
        "item": {
          "id": "a9d8391e-d31a-45d8-93fd-21b698009db4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d4568124-4498-4435-b596-cc0656b89732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0baf34-abfa-4d5f-aae6-483538dcc151",
        "cursor": {
          "ref": "57421497-09a3-40f9-b065-ca3e74971d2e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bdb9335f-1f89-4a4d-81be-eaf7f6cd67bb"
        },
        "item": {
          "id": "cc0baf34-abfa-4d5f-aae6-483538dcc151",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4ad117a3-9abd-4b03-a9a0-6dde5dd0ca4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac277f25-6152-496e-b38b-fce492f1e117",
        "cursor": {
          "ref": "932a7089-74dc-4e53-9e9f-e388c4cb7e88",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "59cd2401-76bd-496f-8359-bc68a5a50796"
        },
        "item": {
          "id": "ac277f25-6152-496e-b38b-fce492f1e117",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ed292f97-b606-47ae-8840-b743a9da9f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997966d9-3828-431c-8e8c-b17a27b634b0",
        "cursor": {
          "ref": "b617dc50-cb32-456f-a707-dc195e0e8ba5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "600f3287-206b-44ad-b0cf-4f6792b3eda2"
        },
        "item": {
          "id": "997966d9-3828-431c-8e8c-b17a27b634b0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f0227cb7-2ae9-4951-9d89-1a72bfb272ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ce514e-d4fa-4b98-bc13-6ae3264e70a5",
        "cursor": {
          "ref": "0c37621c-027a-49b8-867d-77f6ecbb94c4",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0be8ab06-5839-46b0-b0a5-194ac6979bc8"
        },
        "item": {
          "id": "94ce514e-d4fa-4b98-bc13-6ae3264e70a5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c918675b-066a-45af-95eb-70d3d9f48b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad818ee-64b3-4c79-a286-db30d8573bac",
        "cursor": {
          "ref": "30f15357-c1ff-467f-9944-3926ca2018be",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2eb11c4d-f1de-404b-b910-928578a0293a"
        },
        "item": {
          "id": "3ad818ee-64b3-4c79-a286-db30d8573bac",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "96689281-a027-4bfb-b904-9bc4dee85ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b404b5a7-c1e5-43f0-82a5-ae0d65b54232",
        "cursor": {
          "ref": "8e0a35dc-e004-49df-9f86-32b44a43b359",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b31faa69-ae08-4302-919b-77acfe6d2550"
        },
        "item": {
          "id": "b404b5a7-c1e5-43f0-82a5-ae0d65b54232",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d77ba441-4f6a-4703-8d48-44bd5948742f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050f2292-549e-4829-bd9c-ff0ecc7e21f0",
        "cursor": {
          "ref": "3298fe70-d442-4cfe-a251-2baa033fe862",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "43225420-c474-4d09-81ee-9791ec6b93f1"
        },
        "item": {
          "id": "050f2292-549e-4829-bd9c-ff0ecc7e21f0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f87c2338-2a5c-4391-8347-01ab9ee13b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5f3a2f-dead-4f18-8030-60665e994610",
        "cursor": {
          "ref": "00cf8f61-f198-49d5-8cb9-10b54cae9ecf",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "414ed7f4-10f2-4f22-8a03-3b6c237ecc83"
        },
        "item": {
          "id": "9e5f3a2f-dead-4f18-8030-60665e994610",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bca572b3-0ec3-4e82-9ea3-db6ae33253a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb95c41-eb77-42d6-bc6a-083e433d8e1f",
        "cursor": {
          "ref": "62193ac3-6fd8-4ebb-836d-d3360f4e2c76",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ebc97674-3205-421e-ba51-b74325d5028b"
        },
        "item": {
          "id": "dbb95c41-eb77-42d6-bc6a-083e433d8e1f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "61c960f9-dbfe-4f71-b14d-1e8a32d7254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75164354-f9da-4390-a050-4381b51cfccb",
        "cursor": {
          "ref": "3cb7d4b4-8efb-4da7-bd84-08f273a38232",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1aea7ccb-47d1-4500-a28b-2be07ae78ea7"
        },
        "item": {
          "id": "75164354-f9da-4390-a050-4381b51cfccb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e28f5425-59b2-48eb-b90f-24a41d9ebcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e6e512-7417-4267-bfd7-56adffbdf685",
        "cursor": {
          "ref": "face28b7-119d-44c8-9482-050b0781d1c3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "63db9fad-2ec1-4092-900d-3290f9892e89"
        },
        "item": {
          "id": "d2e6e512-7417-4267-bfd7-56adffbdf685",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0985ef4e-28b0-4271-a373-8145b5cd44e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04495478-7094-4922-8bf5-2a6acdf4b977",
        "cursor": {
          "ref": "b2467e67-38c3-42b9-a531-2f7ffebeed00",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6579b4bc-c73f-43d6-b4e0-8825f3b540f7"
        },
        "item": {
          "id": "04495478-7094-4922-8bf5-2a6acdf4b977",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d9360985-4cd3-4754-9081-05206a3a3804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1057c3a-3ed6-4273-a551-5ef7f92a022d",
        "cursor": {
          "ref": "ed9d85ce-fb52-450b-8bbd-17ec0ec1dada",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "017a105d-e014-4e81-9227-0944fa2217aa"
        },
        "item": {
          "id": "b1057c3a-3ed6-4273-a551-5ef7f92a022d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a16a9c1f-b608-4e70-bce9-3b9abfd9cb62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f272687d-efc2-4149-b3c2-99a56b219908",
        "cursor": {
          "ref": "6261f53a-1498-4e94-be0f-69b73351389f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c45af4ed-03d6-49a8-96dd-20bf8cfe1bea"
        },
        "item": {
          "id": "f272687d-efc2-4149-b3c2-99a56b219908",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fa3cc1c9-a5c8-4a77-b625-f238ac2cd3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4d345d-830c-4599-b73c-4c6663616b0f",
        "cursor": {
          "ref": "0c880492-3447-4c1d-b2ec-e6d522213ddb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7b58c98f-49a8-4980-8430-9f0e98b96609"
        },
        "item": {
          "id": "bf4d345d-830c-4599-b73c-4c6663616b0f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "93199b14-bcb4-4a02-bb9d-42940a94c4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6ba191-9aa6-4a16-bef4-e633802b14eb",
        "cursor": {
          "ref": "91954560-ff2c-43c3-8220-fdb782e1f319",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eceef0d3-63df-4149-b59c-e008e1065aa3"
        },
        "item": {
          "id": "ed6ba191-9aa6-4a16-bef4-e633802b14eb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "13c4b9a7-4d84-4185-8c2c-1c06f8e989a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311a81e2-4995-4351-9a93-7af6364ed434",
        "cursor": {
          "ref": "b0105074-dd07-4188-96e7-5af0958cd6b5",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a51735cd-a1cc-4126-9ba2-157f2e67657d"
        },
        "item": {
          "id": "311a81e2-4995-4351-9a93-7af6364ed434",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3515028f-1e6e-48b2-b7de-c9d9144fdb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e99ac1-ced3-4e6b-bf74-058f6fd5af0b",
        "cursor": {
          "ref": "4441f2d4-e37f-434a-bd19-906c93ac584f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "014bd9c4-af14-4dc5-91bf-94518d7c0545"
        },
        "item": {
          "id": "15e99ac1-ced3-4e6b-bf74-058f6fd5af0b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0bf0e112-5fa7-406c-9c57-15ac875d72f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ff8d77-6d0e-40a5-ad99-005118c432cb",
        "cursor": {
          "ref": "8d7c144c-d0e8-4ca4-8a24-97b8292160bf",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e9e3c181-b332-46ce-8ac9-6985571d5fa7"
        },
        "item": {
          "id": "70ff8d77-6d0e-40a5-ad99-005118c432cb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "74547b54-60c0-406a-b035-fda60fd5eb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801ed607-663e-4a6a-b253-028349b7b68e",
        "cursor": {
          "ref": "d987d429-b4d1-45a6-b1f4-ee05c852c09c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d992c5d8-98a6-433e-b76e-351668f14d13"
        },
        "item": {
          "id": "801ed607-663e-4a6a-b253-028349b7b68e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5066d9c6-86cf-4d38-83ac-702ac7a020b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d01ac9-b911-429e-b251-c3a55cd9e3b1",
        "cursor": {
          "ref": "a1b33ab3-4d00-4491-8559-678629aa046a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "67ac6fe0-6321-48ae-a30a-e87594c2f607"
        },
        "item": {
          "id": "d7d01ac9-b911-429e-b251-c3a55cd9e3b1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8eaee813-d074-4c38-a628-9b6a3a8d23dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d180659d-ba4e-4b64-ba5e-5c185ff0a3f5",
        "cursor": {
          "ref": "1e361faf-fbcc-4f4a-a4b4-8415276f5ff4",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fc8ae0c7-034a-4c98-b12a-b830fc501870"
        },
        "item": {
          "id": "d180659d-ba4e-4b64-ba5e-5c185ff0a3f5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1208200c-4306-4bed-9c37-4e48d2af10cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a67800b-9814-4d58-95f0-a413e8b81840",
        "cursor": {
          "ref": "c13d917d-0ed0-43c9-93c8-bd0be8dff2a2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "480d3efa-2e24-48cb-b4a7-9668a9318ac9"
        },
        "item": {
          "id": "1a67800b-9814-4d58-95f0-a413e8b81840",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "07d0faf4-bf33-4727-9f2e-0fa4bed5f73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef320cbf-2277-4212-a393-ecd9bcde964e",
        "cursor": {
          "ref": "dfc97d72-280f-446b-a476-fda48573c82e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "33d1c82a-c82b-4c21-890b-07e57cab8e20"
        },
        "item": {
          "id": "ef320cbf-2277-4212-a393-ecd9bcde964e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "90248f84-521d-44ff-baff-aabec8d6c625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730de943-3fa4-4a48-a687-327f4fde99ea",
        "cursor": {
          "ref": "371a54a8-2fb7-449a-b00e-29c539f7f2c8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a91bd96f-32aa-49ce-aa47-838f61c09c17"
        },
        "item": {
          "id": "730de943-3fa4-4a48-a687-327f4fde99ea",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ca226a77-16ba-4e92-9f5a-ad2721fc0ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1bacb1-02b0-48ff-bf56-b354a251071b",
        "cursor": {
          "ref": "50ed8a44-4dba-4106-96e5-a0a05277fee6",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e8222a55-c5f7-4ead-b7d3-b599f5f8c61f"
        },
        "item": {
          "id": "db1bacb1-02b0-48ff-bf56-b354a251071b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f851d1b1-924b-48f7-bf7e-dd19ccb0cf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9bbe0b-cda3-4408-b6a7-e1ec99025a74",
        "cursor": {
          "ref": "f649170c-2f56-4df2-9860-d89719da63bc",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4f0c40cc-6738-4d3d-b953-0598db26954a"
        },
        "item": {
          "id": "0b9bbe0b-cda3-4408-b6a7-e1ec99025a74",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "034320dc-1668-48f0-ae98-21f655844a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b049012-5693-48e4-b5c7-b26e84b86ed6",
        "cursor": {
          "ref": "fb562c50-1260-480d-9e2a-9f21a6b3a6b9",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "15255c6c-5359-4dd3-93af-6b9c40be711f"
        },
        "item": {
          "id": "2b049012-5693-48e4-b5c7-b26e84b86ed6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f017f08f-9b44-44f9-881a-db8bff48fe82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3e13bb-a0d8-4498-8f6c-72211a6eefc4",
        "cursor": {
          "ref": "fe314e8c-75f4-4512-964f-aff9da691ebf",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d88422ae-22aa-4f9d-a6a4-80aaf4ddcd6e"
        },
        "item": {
          "id": "4e3e13bb-a0d8-4498-8f6c-72211a6eefc4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ca8f38b-272b-44c0-8b08-41accc384a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a935cd-d03f-4946-a9aa-2453811b716a",
        "cursor": {
          "ref": "12528996-aeae-4995-8354-b95877179e1a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d19711b8-2b3b-4a35-beea-a498d2db06c1"
        },
        "item": {
          "id": "29a935cd-d03f-4946-a9aa-2453811b716a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3bbfdbaf-5bc7-4abb-8075-8575c3fa3d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0218974-bef1-406a-997d-ebf60057a212",
        "cursor": {
          "ref": "3b55a19f-678b-4ce0-aa10-2dfeee15a159",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2235b719-b4bc-4ef5-9a64-2994cf2b49b7"
        },
        "item": {
          "id": "b0218974-bef1-406a-997d-ebf60057a212",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e8028e69-56c5-470e-a636-2f71b632609c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a13634f-9653-4a37-8e2e-323ed11403ac",
        "cursor": {
          "ref": "db9149a1-0230-450d-b075-fb74ac8cd6d0",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b8f419f9-22dc-47ae-80ef-f46433c149f7"
        },
        "item": {
          "id": "6a13634f-9653-4a37-8e2e-323ed11403ac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc314c63-5a7a-4853-892e-a34802430af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0be234e-b0c5-4369-9f52-65c6f4d37048",
        "cursor": {
          "ref": "0a2faeec-a008-4761-bc15-e655552f7c32",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dd6ae71f-f75d-4daa-b0c4-889ce3419208"
        },
        "item": {
          "id": "f0be234e-b0c5-4369-9f52-65c6f4d37048",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0c337c07-0718-410e-a951-cd289c36b167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5d8f2d-1e4c-4295-bc9b-b81c4c7ea4f6",
        "cursor": {
          "ref": "0123535d-1db5-4c30-a308-0e4ce8d6c604",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cd970dde-2492-44d0-88b6-78b209e2aedc"
        },
        "item": {
          "id": "dc5d8f2d-1e4c-4295-bc9b-b81c4c7ea4f6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "787ba19f-36f8-4b61-967b-3545f2c27a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcfe6b7-94bc-4f64-bdf7-bb631ea2c90c",
        "cursor": {
          "ref": "bab69187-d44d-44d5-b12a-a71d4a2ac19d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5b09863e-d2b7-424c-8813-76ebe37ecbcb"
        },
        "item": {
          "id": "abcfe6b7-94bc-4f64-bdf7-bb631ea2c90c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0c3dd373-7715-4539-bbec-398c993d9ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a320d35a-efb3-436e-b620-f55a727799f7",
        "cursor": {
          "ref": "0a0a3ac4-8586-4524-82ee-9c8359ce09a0",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a05311f8-ef6f-4a48-b33c-3b80f2432fd3"
        },
        "item": {
          "id": "a320d35a-efb3-436e-b620-f55a727799f7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "736bdaed-3fcd-49cd-9468-7f1a5a397f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5e4f7d-20b1-4e63-b325-5b4ff227e941",
        "cursor": {
          "ref": "173be4c8-6ada-4226-8f3d-b91a5b929978",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c444cb70-427a-447d-a0e3-647c5a92b3e9"
        },
        "item": {
          "id": "6f5e4f7d-20b1-4e63-b325-5b4ff227e941",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4188fbce-275f-40e7-a610-f24ba78697fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf20ebbb-5c91-4b65-a00e-3917146e950b",
        "cursor": {
          "ref": "72e6731b-c788-4f88-9978-8914ec70b456",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1a7b6b78-0230-44af-a3f5-7ce5d0d2a415"
        },
        "item": {
          "id": "bf20ebbb-5c91-4b65-a00e-3917146e950b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "92b33390-50f5-4314-88e1-0dbeeb0bba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8170c9-6dce-418c-99c9-8c872b6b5a0a",
        "cursor": {
          "ref": "507fd570-e25a-40ba-b4b7-e57f6f3547ac",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "da9c77e5-d7d2-4fe5-86a9-69c1c47f412c"
        },
        "item": {
          "id": "fa8170c9-6dce-418c-99c9-8c872b6b5a0a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "659cff48-37eb-4650-aea6-1873e9e4253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9f0d52-c772-4359-aecc-b670703213df",
        "cursor": {
          "ref": "752a02f1-3ab1-4f28-822d-efe15a28b343",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b684a3c5-3751-4760-85ac-b3e841a22770"
        },
        "item": {
          "id": "6d9f0d52-c772-4359-aecc-b670703213df",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "66a7a901-3e2f-4883-b9e9-32b997bdf581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5952aedb-f4a1-416a-ad49-5d72b96fa4bb",
        "cursor": {
          "ref": "9f280268-fd55-424a-95fc-2f99e7ad0435",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1efca7ee-d6d2-462c-8558-a7030a75bc1b"
        },
        "item": {
          "id": "5952aedb-f4a1-416a-ad49-5d72b96fa4bb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f6f9f8ea-378e-4118-978b-2207f760fce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e46731d-387d-4758-a8ce-900b5d7aad94",
        "cursor": {
          "ref": "4a56fd6c-7ed1-4779-b2f9-ea9bbc3b4870",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "57f0a4fc-7082-4e5d-8a6f-f36c70823cee"
        },
        "item": {
          "id": "0e46731d-387d-4758-a8ce-900b5d7aad94",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3f01466f-425c-4576-80f4-a48639597027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b097961c-b35d-4a84-94bc-38a01c450764",
        "cursor": {
          "ref": "e803f362-2730-47a1-bd3b-c268a024624e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d7616ccd-f24f-49eb-bc96-a036446dbe55"
        },
        "item": {
          "id": "b097961c-b35d-4a84-94bc-38a01c450764",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "82ad8054-3490-42b1-83a7-9920e2c5d041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbe43c0-1379-4ad4-850b-e30030d4368c",
        "cursor": {
          "ref": "e0a4cb75-59a7-475b-b272-3f25f1bc39ce",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9582b855-ef2f-423b-b4cf-7daf468b7074"
        },
        "item": {
          "id": "bfbe43c0-1379-4ad4-850b-e30030d4368c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "80b00de3-6c1b-4e9f-bdf9-b30f5281f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ace941-6e66-49cf-9a88-410037f43e66",
        "cursor": {
          "ref": "dd3a328f-d37f-448d-be7b-6c0eb047cd69",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "90de1a2f-2805-4688-a3a6-8e022f101542"
        },
        "item": {
          "id": "36ace941-6e66-49cf-9a88-410037f43e66",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "663f2d94-33a0-4912-9f05-059ad7f60b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39717893-e8d2-47d2-a256-1f705a1ed8fd",
        "cursor": {
          "ref": "ba5e519d-d4ff-4760-8890-8ab43e7d4744",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "89bdf166-1073-485c-bd57-9b002133bbe7"
        },
        "item": {
          "id": "39717893-e8d2-47d2-a256-1f705a1ed8fd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "277df03d-73c6-46f2-baec-cdf68afb9e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b5ea6f-dbb5-409c-b5cd-6b9ee16bb717",
        "cursor": {
          "ref": "94b44646-6cd7-4de7-9f4b-6827a320be19",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4281bb5a-952c-4abb-81c9-b9a0145afd50"
        },
        "item": {
          "id": "42b5ea6f-dbb5-409c-b5cd-6b9ee16bb717",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "26661e7e-91b5-411b-ba07-58edbce0c34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9690ee9-de69-4aaf-bae0-674c9fb50308",
        "cursor": {
          "ref": "eeb9528d-e066-438e-bdfd-8f5d5b785bb5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "36f5f550-4402-404a-b2f6-5acc9aa9c2c4"
        },
        "item": {
          "id": "e9690ee9-de69-4aaf-bae0-674c9fb50308",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c2c33785-3ba1-4892-b732-e4877213538e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c320cad2-03b8-45a2-88c9-e17e367111ef",
        "cursor": {
          "ref": "c368d73c-ffd7-46c5-9a15-15808c5dc75f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "866bddf0-af0a-4382-bdb8-498eb456ee14"
        },
        "item": {
          "id": "c320cad2-03b8-45a2-88c9-e17e367111ef",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "25231633-06cf-4aea-932a-f5c0e336f6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b68ed71-adb8-4e3a-9911-9b09eb5a5ab3",
        "cursor": {
          "ref": "a092e32b-28be-473b-9b3e-0cf76483ac3f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ebd43453-5f35-450c-938d-97ad58e510c8"
        },
        "item": {
          "id": "2b68ed71-adb8-4e3a-9911-9b09eb5a5ab3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "706a1181-31c9-424e-8cf8-feac22c478f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eda669-5f45-4c39-8bba-0dab7ee7d8e4",
        "cursor": {
          "ref": "cb849ce9-8558-4ccc-8684-aaf63060eae9",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e9774de2-ecb0-4a9a-9065-b3caf7ce3c51"
        },
        "item": {
          "id": "06eda669-5f45-4c39-8bba-0dab7ee7d8e4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "63926612-9fc3-40b5-a7cf-8e70c409df28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4618937c-3c93-4436-b194-7e3762ad458b",
        "cursor": {
          "ref": "6c7d7e14-9638-4ce5-8d14-f6969f8f6d6b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fc6ec154-bf17-486c-be93-936f29b32754"
        },
        "item": {
          "id": "4618937c-3c93-4436-b194-7e3762ad458b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3bb4f249-a804-4165-9baf-73ba0d77c59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e139d75a-fe66-45e3-9fe3-5754c0a5dc86",
        "cursor": {
          "ref": "48f450aa-5d24-4aa8-b02f-404278fffcf0",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "89c0de47-92ae-4e90-889d-b1bf597a582e"
        },
        "item": {
          "id": "e139d75a-fe66-45e3-9fe3-5754c0a5dc86",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d10f6b6e-4b6e-4c09-b49f-f06f522330b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d932bc1-c44b-4ad8-a7fc-52c41487a894",
        "cursor": {
          "ref": "4000d55e-e6c6-4bb8-b2d9-acf8107e3902",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d7da9bda-4787-4f3e-a1a7-8bb92434ade3"
        },
        "item": {
          "id": "0d932bc1-c44b-4ad8-a7fc-52c41487a894",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1595b766-009a-41ef-a8da-c0b5b7a63fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71afab2-e68b-49e9-99a5-082b3b05ffd5",
        "cursor": {
          "ref": "baf69a55-1acc-4883-8195-0f635842e394",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9cef9f06-494c-4612-a933-ac5b1faed51a"
        },
        "item": {
          "id": "b71afab2-e68b-49e9-99a5-082b3b05ffd5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "10a57d66-90f0-4fc1-9587-6300c8d0074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f029fd-971c-4b95-a805-30d1385bc104",
        "cursor": {
          "ref": "281469b5-19f5-4b74-993c-a9fe30e39cef",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4cce7eba-f295-464f-8d37-6e769177fcb4"
        },
        "item": {
          "id": "19f029fd-971c-4b95-a805-30d1385bc104",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f9b5e037-135b-4e30-8307-b3d09c2a3f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eb6455-4b68-4966-868f-b52e2219b0d6",
        "cursor": {
          "ref": "656cd781-96fd-46ff-8dce-7c360cc01e9c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "27031207-618f-4a8f-8010-4afe290ce6ad"
        },
        "item": {
          "id": "39eb6455-4b68-4966-868f-b52e2219b0d6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5323e24d-90c0-4bfc-b512-bc5bbc5f436e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38794613-7fc6-46c2-aa9e-56b9e5d7cc4c",
        "cursor": {
          "ref": "ff95b1e6-2783-4a56-bc84-c917c6d0dd62",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "15ad2557-10f9-460e-a3b3-8f61ab9c7019"
        },
        "item": {
          "id": "38794613-7fc6-46c2-aa9e-56b9e5d7cc4c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7a7be7a6-cdd6-4e9c-84c1-3edc9d498cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9d136b-33d2-4d41-bd50-cb0a1e02b9dd",
        "cursor": {
          "ref": "64ef01c4-287f-4736-b2a0-cd9815465ffb",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5f5a0b8f-4e42-4f7a-9d41-13f5dd4a8df1"
        },
        "item": {
          "id": "7e9d136b-33d2-4d41-bd50-cb0a1e02b9dd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3f410210-0133-44a8-80c2-d57b0a2ac088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934e526a-979c-429b-a2ef-81020f3588be",
        "cursor": {
          "ref": "59673cc6-15d1-4eac-a681-2834edfb919e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9413c200-2543-4492-9bbe-feb35b554141"
        },
        "item": {
          "id": "934e526a-979c-429b-a2ef-81020f3588be",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "61c2bd20-351f-4316-91a8-ce89467c37b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ef44f9-fa48-4a28-9770-5e1c6ba643de",
        "cursor": {
          "ref": "928e5a93-c433-4a54-ad4d-7fab1190ce7b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7a1f5be8-a171-4b65-96da-9d78adfd95f5"
        },
        "item": {
          "id": "07ef44f9-fa48-4a28-9770-5e1c6ba643de",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f638e066-2a69-4009-ba8b-c7ba117e312d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b965380f-d9ce-404b-8e2d-43d986dcb1bc",
        "cursor": {
          "ref": "3e9b61c8-3d26-4c76-bc02-f6ea464425b5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d6ffce63-147b-45a9-8cad-9a2a731673bf"
        },
        "item": {
          "id": "b965380f-d9ce-404b-8e2d-43d986dcb1bc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9cd9c4ff-d7f3-4851-b664-68836732d56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b66299-8d7b-4961-9e60-cc553d9b0fa0",
        "cursor": {
          "ref": "fe9024bd-0fcd-4643-b416-62a1db24fae0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e590e17a-3d59-4cd8-a651-ff1394fbc67a"
        },
        "item": {
          "id": "65b66299-8d7b-4961-9e60-cc553d9b0fa0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c6ed70c3-38a4-4d43-8936-5eeba7f4186a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04711fb7-87f7-4b6c-8663-6c17583a55f3",
        "cursor": {
          "ref": "1ee45301-8e0e-4e77-883c-ea82ce216fc0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c237ce10-3f47-4567-a42c-c76a9de4bfee"
        },
        "item": {
          "id": "04711fb7-87f7-4b6c-8663-6c17583a55f3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8b28fc05-8f9f-48b8-a22c-05f092b0ec4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e616aa5-76f9-4821-bd57-5a9e48cb8918",
        "cursor": {
          "ref": "17acb09e-599c-47c4-81c6-4ee06e0b925d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6c8ec412-9cbb-4a1a-b8da-97b5bdad458f"
        },
        "item": {
          "id": "7e616aa5-76f9-4821-bd57-5a9e48cb8918",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "45a056dd-24ef-40b7-938d-c300786904b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f5d53a-498f-4b1d-925a-edacec0cba06",
        "cursor": {
          "ref": "804fd28b-34bf-4f02-a04c-8838c13ecd2b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "19b689af-0895-429f-8e8f-e99e7f7942d1"
        },
        "item": {
          "id": "82f5d53a-498f-4b1d-925a-edacec0cba06",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5c936548-fbe7-486b-a1ce-7485d5128a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170ac1fc-3827-4652-a650-5bdc3076e585",
        "cursor": {
          "ref": "1065bde8-3c9d-4104-b803-98e73cf61a63",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2a3509be-ccc2-4429-ba6e-44a500c74f21"
        },
        "item": {
          "id": "170ac1fc-3827-4652-a650-5bdc3076e585",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0453968c-7b0c-46d4-a2db-6e5ac4f8e992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b2b897-3666-4f9c-b40f-94876b13e1c1",
        "cursor": {
          "ref": "fdc99e45-7f09-4abe-a63a-347a00be14e6",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "14a3474d-d0b7-4a4c-9dc0-88396a0123ec"
        },
        "item": {
          "id": "74b2b897-3666-4f9c-b40f-94876b13e1c1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "739c88ee-0da0-4bd9-acb6-fc0c538ca409",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "5a2fe909-adf3-4e9c-bac6-caf543d6c1c1",
        "cursor": {
          "ref": "e1ce7f15-8a44-4371-83f1-78b80eca3447",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2f2a43ef-ac9f-45f7-bcca-b452dda9cb59"
        },
        "item": {
          "id": "5a2fe909-adf3-4e9c-bac6-caf543d6c1c1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8f20cba5-66c1-474b-9821-02e5aa8bbfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a843e7e-5033-47dc-9273-19e9a347b6f7",
        "cursor": {
          "ref": "aabfc3e7-61c6-4d31-aacf-66aa7287bc71",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "da17fc65-9933-4ea1-ad66-7d3acea475d0"
        },
        "item": {
          "id": "9a843e7e-5033-47dc-9273-19e9a347b6f7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "178f234e-a253-4efa-bae6-24739becd0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ac38eb-51a1-4264-850c-093c1eff8f13",
        "cursor": {
          "ref": "bbb9e771-1174-475c-8a4f-337469ef48ad",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1e08c421-44f1-442a-a0d0-58dc66cc4a7b"
        },
        "item": {
          "id": "e2ac38eb-51a1-4264-850c-093c1eff8f13",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "76340396-9666-4fc6-bcba-5295424eb3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bb0c56-d14e-4394-9abc-e2590c75ef17",
        "cursor": {
          "ref": "fd83bdb8-7ef9-4977-a039-a36d2c8816c0",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ace04d40-a0ab-4b8c-88bb-5d5b85b4c8f3"
        },
        "item": {
          "id": "c9bb0c56-d14e-4394-9abc-e2590c75ef17",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "25e4e112-23a9-4fdc-bf44-a47c5994d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc9a4a2-d1da-41cf-b775-f960fe197b72",
        "cursor": {
          "ref": "c6fca55a-d54d-48b0-8810-0f393d1e47d2",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "93c80b2f-07c4-4e0f-86a0-4c93f19203af"
        },
        "item": {
          "id": "1dc9a4a2-d1da-41cf-b775-f960fe197b72",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2662c237-838a-4a38-be84-92fcc6312361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9a8577-64c3-4332-80f7-42c037b18531",
        "cursor": {
          "ref": "bb8eb98e-7819-438a-bd6a-79572017a619",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8aa205fd-52fc-42a8-89c2-9e65eb3ed463"
        },
        "item": {
          "id": "4c9a8577-64c3-4332-80f7-42c037b18531",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0c01ee77-c4ef-4b39-971d-8d8f9ae0fed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febce032-04c6-43d1-9dbf-4a0e55bb012b",
        "cursor": {
          "ref": "a1287e53-e3f9-44ca-81a6-f29bbd56b22b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8171e057-ed84-45f1-98a5-0e759896e442"
        },
        "item": {
          "id": "febce032-04c6-43d1-9dbf-4a0e55bb012b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c3d9511b-5c23-486a-9383-f2a05f07cf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb56316-24b8-4ff9-9ea3-2b2e0b392242",
        "cursor": {
          "ref": "aa905b7a-5fc7-4566-a0d9-4225dc01f62b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1bb63b65-5cc7-4c99-88c6-855cae4741c6"
        },
        "item": {
          "id": "5eb56316-24b8-4ff9-9ea3-2b2e0b392242",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0c65601b-da7c-4d7d-b9e5-e1749d915fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579641a7-4e50-4e1a-ac6e-d3db7f98a001",
        "cursor": {
          "ref": "551bbb41-3a9e-410a-9db8-7bf184f4e958",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "82fe655b-e2cd-4c14-bf8b-53c379d3577e"
        },
        "item": {
          "id": "579641a7-4e50-4e1a-ac6e-d3db7f98a001",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "02d83b91-1caf-4227-81b4-36f2a2e7735d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0306e8-e4f8-4fe1-8493-073106cc9d23",
        "cursor": {
          "ref": "8d4ac08b-214c-4a2b-b750-48f757789e1f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f1e464d0-b71a-4f61-9da4-3197426a0ff4"
        },
        "item": {
          "id": "8e0306e8-e4f8-4fe1-8493-073106cc9d23",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "16ae8fc0-9863-4629-a15b-4c6a402a186c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf9cb64-4797-4ee5-9efd-f8492a584f26",
        "cursor": {
          "ref": "c059557c-0c5f-4dfe-99ce-b0453e7d4918",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2d474314-8f64-4df3-bc27-3ba427f78c7a"
        },
        "item": {
          "id": "6bf9cb64-4797-4ee5-9efd-f8492a584f26",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fe26ebd2-993c-4d1b-9982-8428a914cdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdc648e-bcb0-4be2-89de-4ab386c261da",
        "cursor": {
          "ref": "9061cb34-2ea3-47e8-89be-f9d36a56a553",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf6ae9ae-8e21-407b-aef8-5d4439e8ffd4"
        },
        "item": {
          "id": "3cdc648e-bcb0-4be2-89de-4ab386c261da",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e75bf3eb-4a71-43d1-b7ef-f68fe40f6853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9615826b-64dd-4564-8293-663e8d7677ac",
        "cursor": {
          "ref": "5200aced-b094-4a8c-8cfb-23535aa190c3",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7322a7a5-5e82-4412-8c59-4c81bfdcb1f9"
        },
        "item": {
          "id": "9615826b-64dd-4564-8293-663e8d7677ac",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2c6c5fa1-8967-41ba-8077-a2e01317a4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a180115-aa2a-4fed-b744-8cd1282e60bd",
        "cursor": {
          "ref": "4588d6b2-caa0-489b-ad95-63e95b9083fb",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "466627df-b811-47bc-864f-c691d1c55f38"
        },
        "item": {
          "id": "0a180115-aa2a-4fed-b744-8cd1282e60bd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eafae8fe-c8cc-4fcb-8ff0-92d6faeda1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59abef1c-8225-48f0-8f17-782b6f9ffe0d",
        "cursor": {
          "ref": "e1a496b4-bfa7-4074-91f6-8b4985bcffb8",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d6ed3422-d1c4-4e34-b579-234fa06b8b48"
        },
        "item": {
          "id": "59abef1c-8225-48f0-8f17-782b6f9ffe0d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "45275deb-d272-4790-8c64-8ad791d0e67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64eebd38-067c-44a0-bc87-541c7db8ec36",
        "cursor": {
          "ref": "deab8a69-2504-47f5-92f1-96c7f7493f35",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4ab15fb2-c436-4b4b-b7a3-c09e316abc6a"
        },
        "item": {
          "id": "64eebd38-067c-44a0-bc87-541c7db8ec36",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7cd90571-eda1-4af7-baf0-63e40a5fbd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c59cc3-84a8-4f08-a866-f952121beadd",
        "cursor": {
          "ref": "55c26e2c-150e-459d-83ac-5b9e7ab3261d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "430844c1-5648-4cf7-b3ce-b1a513197710"
        },
        "item": {
          "id": "28c59cc3-84a8-4f08-a866-f952121beadd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f040ec33-24bf-4dda-8d2f-2b2b2e39710e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f7cf5-85c3-46fb-9e6b-ebf87fcc5fe8",
        "cursor": {
          "ref": "563891bd-9c5e-4976-a795-b83f049a24ba",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4a7a2885-d099-4b3c-8b31-1066218d6bc3"
        },
        "item": {
          "id": "319f7cf5-85c3-46fb-9e6b-ebf87fcc5fe8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3513fae2-6b70-43ed-9de4-ff1f435d582e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ddf061-b47d-4529-ba23-4ea3bb8a3743",
        "cursor": {
          "ref": "016b31c6-f743-4408-aa3f-42546e7d279f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a3afb2a5-5447-4fce-ab66-8d46e5a173ff"
        },
        "item": {
          "id": "e0ddf061-b47d-4529-ba23-4ea3bb8a3743",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9f0b0da4-9f3a-4a09-aa34-8384b456c4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc0b6a3-ad21-48af-af9b-be308b05cdca",
        "cursor": {
          "ref": "2089d48f-a329-4c55-9750-8c03a9a51b2f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "18251f1e-f348-417c-9995-bbe75f982047"
        },
        "item": {
          "id": "bcc0b6a3-ad21-48af-af9b-be308b05cdca",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c090cd80-89a1-4606-82d7-1e32af569477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bda0f9-cd56-43eb-9022-8143d15cd9f5",
        "cursor": {
          "ref": "a362b9ba-f104-4f8f-a7d7-52873fbac9c5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f13e1602-0e74-4e99-b421-3000d09d5696"
        },
        "item": {
          "id": "10bda0f9-cd56-43eb-9022-8143d15cd9f5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "20e5a02d-2046-4bc8-ac3a-9d178263ae8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e1da1f-b730-4e14-89c1-27713c879a58",
        "cursor": {
          "ref": "0587ccde-8996-48eb-87d1-1ccc12b37a89",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "91b4b535-9c59-4043-979d-5cd4a511b32e"
        },
        "item": {
          "id": "44e1da1f-b730-4e14-89c1-27713c879a58",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "97ec941b-e20a-460f-b261-a548d8b5ffc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a85f73-5942-44de-9a70-3894a4a12026",
        "cursor": {
          "ref": "1dd7b4d5-c389-4d4b-90a7-2cc37c150f82",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "788c43af-ef9c-454e-9d13-5c835cce1b82"
        },
        "item": {
          "id": "98a85f73-5942-44de-9a70-3894a4a12026",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7cf05abb-f9e8-4e13-a2eb-dd13ca1373d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c80aaaf-46c1-4761-9414-29f91e15e0a8",
        "cursor": {
          "ref": "bbec1623-9025-454e-9fd4-8515d57004bd",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4308d239-990b-4b18-9f6e-94f9302c8017"
        },
        "item": {
          "id": "1c80aaaf-46c1-4761-9414-29f91e15e0a8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4a071236-9dac-417f-8bb7-c2a94adc3ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb04abd-f6ad-4ce5-b363-31a78537561a",
        "cursor": {
          "ref": "dde7f9ca-65d4-44aa-84bf-8ed0028cbfc3",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b5deea5b-59aa-4c0b-a003-4316d582dd3e"
        },
        "item": {
          "id": "fbb04abd-f6ad-4ce5-b363-31a78537561a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c54153b7-9687-4e7a-8736-68226b1a73c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85351bbb-f211-44bc-8bcc-488acf6f9d07",
        "cursor": {
          "ref": "20ae0858-1f53-4515-9267-5c9e8d7ae1cb",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a2a0ee13-24ef-4a37-b63e-167912fe817a"
        },
        "item": {
          "id": "85351bbb-f211-44bc-8bcc-488acf6f9d07",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "13896270-214b-4a9f-a9df-3919bdd09f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a9d9ee-17ff-4705-95f6-cfb872785285",
        "cursor": {
          "ref": "e0baefdd-d7c6-4a6c-9aff-e5324b0a7adb",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b83e2fbe-2e1f-434f-bce1-f9bd80b91a71"
        },
        "item": {
          "id": "66a9d9ee-17ff-4705-95f6-cfb872785285",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "18860b39-8b82-4853-93a8-a24214633edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f58db8a-34d0-4fab-975e-728dbf535bb8",
        "cursor": {
          "ref": "7fa0d8ed-eacd-4fcb-8e04-41e18511dace",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f5d19aea-fc8e-4953-9de0-1d5f1b8dd3f8"
        },
        "item": {
          "id": "0f58db8a-34d0-4fab-975e-728dbf535bb8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "21a5e738-12a6-4f7c-8101-ece5a30511e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da77e6a-7cd0-4bea-99ba-7c49f43fd276",
        "cursor": {
          "ref": "52635012-28e5-4607-8978-e3bbe351b3f5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c477f9d1-d8ef-4a1c-9546-cab01d0ad5ee"
        },
        "item": {
          "id": "7da77e6a-7cd0-4bea-99ba-7c49f43fd276",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "470594b0-665e-46ea-9ebc-2ce072156b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471b94fe-4f40-4c6b-904f-c6d9189c1f69",
        "cursor": {
          "ref": "17c22645-6082-4c98-b77a-5e7850f8886c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8e53f190-f29f-4efe-b83f-36b57c180574"
        },
        "item": {
          "id": "471b94fe-4f40-4c6b-904f-c6d9189c1f69",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a2714d3a-dd06-4cf7-8cf1-4289a217d9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91fd746-05e2-4d70-865c-0cbc857f5449",
        "cursor": {
          "ref": "e0938a46-9729-453d-a493-9976a566c408",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c5e3438e-07f4-4481-98ae-2e5eb0a6d3a4"
        },
        "item": {
          "id": "c91fd746-05e2-4d70-865c-0cbc857f5449",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2240ce98-9b27-48c9-b0b9-085c43115d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dc25b5-86df-4c4e-9521-7f3bb9513a85",
        "cursor": {
          "ref": "e63ad170-aaae-4680-8b6a-60f7308a7620",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "496247de-3637-4be2-85fe-328d8ae2f024"
        },
        "item": {
          "id": "e9dc25b5-86df-4c4e-9521-7f3bb9513a85",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6e18b338-6001-4205-b71d-46f01c4cb59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e849893-2849-4f83-8d7d-1de6dc6450da",
        "cursor": {
          "ref": "66a13dba-f545-4c19-b894-ea341ec4edf5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f6791574-9b87-4f30-aec7-d85404926f63"
        },
        "item": {
          "id": "3e849893-2849-4f83-8d7d-1de6dc6450da",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "07e13323-c329-4de7-a179-4e14d21c133b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b90d107-9b45-44be-8129-a84bd146245b",
        "cursor": {
          "ref": "c1dab8e7-332e-4c20-9335-4a130db2d0bd",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "91a80ccf-e421-4e9e-910e-6e2576728ff0"
        },
        "item": {
          "id": "1b90d107-9b45-44be-8129-a84bd146245b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8e2b80f8-d5c9-432c-8fa4-7017645f6394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339bb010-19a4-40b8-bf6f-7a02b4125224",
        "cursor": {
          "ref": "92a20d94-0e29-40fe-9a36-a285a2363cd3",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "75ad3204-4b9c-42b2-aa63-a91646726d9b"
        },
        "item": {
          "id": "339bb010-19a4-40b8-bf6f-7a02b4125224",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a8c3091f-aa19-4094-9c17-00d6e7a41ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3897fd1d-ec7e-48de-963c-478495e6b7b3",
        "cursor": {
          "ref": "b9c1dd02-2e54-49c4-81af-0b1189575b3e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d4389866-2498-4feb-8ccf-06234cd5c329"
        },
        "item": {
          "id": "3897fd1d-ec7e-48de-963c-478495e6b7b3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f989c124-5dc8-4b1f-9aa2-bad60e3fc3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8df494-04ae-409a-a941-ef85c24adf38",
        "cursor": {
          "ref": "fbe03b8b-d7b6-44f9-9fd9-4f8268990158",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5a5c2523-1206-43f7-8972-5185fc51f8e0"
        },
        "item": {
          "id": "5c8df494-04ae-409a-a941-ef85c24adf38",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ead94edc-780d-4282-bfa6-9bf0c0f42e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee3c50a-ed2e-4812-abbf-3e5242ee36cd",
        "cursor": {
          "ref": "8b48d8a7-98fb-4415-922d-b6d1dd028be3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ebf447f9-ebae-4211-9f30-28e685f44d91"
        },
        "item": {
          "id": "1ee3c50a-ed2e-4812-abbf-3e5242ee36cd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e97b1619-d4f9-41af-a204-0c5eee57153d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5319e8-9e5c-4cfa-afab-d00c840dac71",
        "cursor": {
          "ref": "860463e3-4d6d-4e56-9aad-42f17de64fc7",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "092935f5-82ea-4eeb-b3fa-8f3b84e25d63"
        },
        "item": {
          "id": "7f5319e8-9e5c-4cfa-afab-d00c840dac71",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "efced62a-8fe8-4f0b-a4e1-71c281c5d461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c700d5f5-44ba-49b9-92e5-9ec8eaff9bec",
        "cursor": {
          "ref": "a6968a91-57b5-4ae3-832e-e73de1250bcb",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8afb1ee7-d0c9-4129-ae68-2811ab596d91"
        },
        "item": {
          "id": "c700d5f5-44ba-49b9-92e5-9ec8eaff9bec",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b4552ddf-3088-4545-84e4-4043c90aa422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973f20d3-3b67-4a9e-9478-7b326284a61c",
        "cursor": {
          "ref": "ea1d81ae-45b1-4824-8f48-604cc3867ef2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eabbdf0c-d4d0-4d1b-b05c-0c27cb19fc6a"
        },
        "item": {
          "id": "973f20d3-3b67-4a9e-9478-7b326284a61c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "12d63132-51c8-4bc0-a2ef-9dad035cd42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c35522d-22c0-4935-a9dc-ceea77e0764d",
        "cursor": {
          "ref": "2205caf2-375a-4e07-85f8-21ac76cb8abe",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ad4118a5-42cd-499b-9b93-9eaba34eba58"
        },
        "item": {
          "id": "5c35522d-22c0-4935-a9dc-ceea77e0764d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "54bb3a2d-d0dc-4f2e-9f62-d24960b0a454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c434e007-6185-4597-af18-6be7112188d0",
        "cursor": {
          "ref": "ccad6113-2b15-47c8-9f59-be9c21349e8a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3b8170fd-8a83-448b-8b5d-83394ed2efa4"
        },
        "item": {
          "id": "c434e007-6185-4597-af18-6be7112188d0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "72051287-d485-4f44-9fb8-9334a4c76516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93061828-c7a2-4e4e-861a-da682a3285e9",
        "cursor": {
          "ref": "8d65949d-b3a5-453a-a61f-126f0733137f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7642479b-e5f0-45c3-bc11-6d64699eec54"
        },
        "item": {
          "id": "93061828-c7a2-4e4e-861a-da682a3285e9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c88bc272-9bc2-432b-a4ce-545fc7d7a848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ff2344-2ff1-45a9-877f-7e5b64dbd7b0",
        "cursor": {
          "ref": "028a1808-03f4-4787-98d8-e519c7fb5336",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "78cb2ec4-fff4-426c-b848-de16a39c788c"
        },
        "item": {
          "id": "80ff2344-2ff1-45a9-877f-7e5b64dbd7b0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9059e427-31df-48c7-b384-06685801146a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e2834c-3f45-4c33-9818-61d3fe5af150",
        "cursor": {
          "ref": "5ec143de-6545-4f87-b30e-51915f87cc5c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4a09f7aa-1d5a-427b-9342-2a169ea50fc9"
        },
        "item": {
          "id": "12e2834c-3f45-4c33-9818-61d3fe5af150",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3a8ae2c4-98a1-46db-8bbe-6661866b38e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c68cfaf-bd09-41a5-9cac-73766f7c2c68",
        "cursor": {
          "ref": "2f70d44a-1bed-4422-b2fb-e3debd50ea14",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3351127c-e50c-4597-9e7e-734a23fcc445"
        },
        "item": {
          "id": "7c68cfaf-bd09-41a5-9cac-73766f7c2c68",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "43b84d93-9052-4416-baaf-41fdbc8bc3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70eae54e-061b-4524-adf5-cc6595337501",
        "cursor": {
          "ref": "cd121c8d-0baf-4617-a990-3401203d95f0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4281435e-46bc-494d-bc70-ea81cdf50831"
        },
        "item": {
          "id": "70eae54e-061b-4524-adf5-cc6595337501",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2e0422e4-c988-4ac5-8ad1-1b8a8e22b699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e143fc0-81db-43cf-b460-161a5ff60379",
        "cursor": {
          "ref": "f58bb449-649a-42ed-a76a-8258cefa71a6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a6bde6c8-1287-4f44-8b17-b56190c62e81"
        },
        "item": {
          "id": "7e143fc0-81db-43cf-b460-161a5ff60379",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ba9cf3b9-c868-4f01-b005-41d32a25090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c6751f-3cce-4446-b3d6-71d9e7093ad7",
        "cursor": {
          "ref": "c4d2bf35-c9bc-4e38-a812-966166d3c871",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0e5d0a2c-8796-4779-897e-e0c7cfb16f6c"
        },
        "item": {
          "id": "06c6751f-3cce-4446-b3d6-71d9e7093ad7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8f14914a-e591-403c-bb7d-01311a96a8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61b46e0-c399-47ef-bc01-513117117828",
        "cursor": {
          "ref": "e3a2ab05-a421-4cf9-8448-0c29ad3e4ab1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b4b45a85-a784-4012-8755-1f63ac30f7fb"
        },
        "item": {
          "id": "d61b46e0-c399-47ef-bc01-513117117828",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0e397d57-2925-47e4-aab5-baccb43a9259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dace0152-51b7-49e1-bcef-137b71305d4e",
        "cursor": {
          "ref": "5b576593-a6f3-4dc2-8ae3-aca89dc158ad",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2a4e71bc-104e-42ec-8ba9-50256915a951"
        },
        "item": {
          "id": "dace0152-51b7-49e1-bcef-137b71305d4e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "34f57b42-76c4-4849-9683-f75181ac86a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2919057c-cd44-45bc-bf58-e233a83077cc",
        "cursor": {
          "ref": "dbbfd985-7ac0-472b-b8fe-e647b67e276f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1bf45a0a-b26b-42de-9dad-edadb894e183"
        },
        "item": {
          "id": "2919057c-cd44-45bc-bf58-e233a83077cc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "746770e3-4a7e-41ae-a551-1619d70fc268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911190bc-e5bf-4407-9086-66e12c02ac1f",
        "cursor": {
          "ref": "e71ccb5c-71d4-49c6-b206-098d3dffdd67",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "63b54cd5-061a-46e6-b900-6326f4aa1ff6"
        },
        "item": {
          "id": "911190bc-e5bf-4407-9086-66e12c02ac1f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9e25a935-820b-4b5c-aa17-345e418720e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da746b55-a846-40d7-97d8-4d88c6c90396",
        "cursor": {
          "ref": "87b6e622-caed-476e-b94f-23a63c93fae8",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "08d28d69-d9aa-4f11-b7e1-3dd869fb1366"
        },
        "item": {
          "id": "da746b55-a846-40d7-97d8-4d88c6c90396",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ea268c20-96e9-4b5e-8d5f-27e3f0e8714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139dbc14-1efc-4459-8831-568c6fe0b689",
        "cursor": {
          "ref": "ab419880-578d-4b4e-b075-8bc856542098",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "eeed7a72-362d-427d-9fa1-13ffd3e44317"
        },
        "item": {
          "id": "139dbc14-1efc-4459-8831-568c6fe0b689",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "28506088-b337-4d67-9979-7d51e4357641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a5fd59-5808-408e-8a22-02c019baeda8",
        "cursor": {
          "ref": "78e7efd1-9408-412d-ab18-ef19fa2387d7",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "33bae46d-90c0-4295-a820-da753c6148e9"
        },
        "item": {
          "id": "98a5fd59-5808-408e-8a22-02c019baeda8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b67031e7-a4b6-40e1-9122-c1be4fd102b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8551766f-f1fd-4434-8fe7-98d0a5f98039",
        "cursor": {
          "ref": "f2ed9464-36fb-463b-b97c-9867c220138c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b43f2758-10f1-4fb5-8ef0-4d8267b7455c"
        },
        "item": {
          "id": "8551766f-f1fd-4434-8fe7-98d0a5f98039",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2dd01897-1b1b-4d6b-b343-be31cfb3b8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f9cf56-8d3e-47d7-93c6-dacfc2f23771",
        "cursor": {
          "ref": "771b418b-a86a-4f64-bcb6-473e4cbae09d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bd492746-5f40-41c3-92cc-008e59bf3f1c"
        },
        "item": {
          "id": "d1f9cf56-8d3e-47d7-93c6-dacfc2f23771",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d5305ecc-4a92-4fa4-b9a2-0d49380b477b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8089f0cf-d96a-4381-b4af-68d8b858e72c",
        "cursor": {
          "ref": "964bb29a-e984-4f2c-acf0-f458b5e4060a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f50a4b57-e9ad-48e8-8a6d-ca1340f63fb3"
        },
        "item": {
          "id": "8089f0cf-d96a-4381-b4af-68d8b858e72c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "47467d8a-4fff-4984-b475-9c8db133ae61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e721aaa2-707b-4ec1-8c15-adb841091305",
        "cursor": {
          "ref": "95a4ab98-1e98-4a95-9cec-d48294f65b8d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0bf15d36-b6fe-4b9e-a508-c2b7c81072cb"
        },
        "item": {
          "id": "e721aaa2-707b-4ec1-8c15-adb841091305",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fbb8cad0-639c-4d3f-83e9-badcecce3cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c98c63f-54ce-4a09-b7ee-03136341e90f",
        "cursor": {
          "ref": "00f837df-275c-4289-a0c0-d4c3214f084f",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "10107c29-42eb-4a1c-a32f-d74c74a07ba7"
        },
        "item": {
          "id": "9c98c63f-54ce-4a09-b7ee-03136341e90f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4b6631fe-8a74-4c3a-ab6d-486400516819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fe58a5-b0cf-443d-b7e3-71eff706f149",
        "cursor": {
          "ref": "0d121c09-733a-495b-880e-9e83de806035",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5cae87a7-88b4-46d5-b75c-09105e2749b2"
        },
        "item": {
          "id": "d4fe58a5-b0cf-443d-b7e3-71eff706f149",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "add3767e-a81e-4e64-8568-b5aa68778160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac622db4-f4a5-4fa5-8148-ba52eaceb0df",
        "cursor": {
          "ref": "edfb0e5a-f6dc-4731-bb33-4995efd7cd81",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3321ecae-15fa-42f7-9aa3-d8b71fb6ba46"
        },
        "item": {
          "id": "ac622db4-f4a5-4fa5-8148-ba52eaceb0df",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e231ecf3-f1a6-4d1a-8837-01e535aeaef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa36789-bbf6-47b5-91fe-3975962942cc",
        "cursor": {
          "ref": "e6bcf1c4-d932-4444-8f3f-34724d30439d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bd6e8ee8-835f-4992-9dbb-18a207d7fe6e"
        },
        "item": {
          "id": "4aa36789-bbf6-47b5-91fe-3975962942cc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9bd1176e-7dec-444e-bfb7-f8b5bb270a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61302212-2064-49b4-aa6c-396ab38a4778",
        "cursor": {
          "ref": "9a24daa3-989f-4fbd-8a80-fff02f88a68a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "78c6365b-8246-448d-904d-2bb2ceb3534c"
        },
        "item": {
          "id": "61302212-2064-49b4-aa6c-396ab38a4778",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4c686bd2-1b6a-4d4c-8a5c-9297fae2e855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd568246-738c-499c-b1fa-1f667ed628a9",
        "cursor": {
          "ref": "c6941865-690c-4fdd-a980-3dbd3a232736",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "09aba671-0683-4a17-b267-c8980ea1f5b6"
        },
        "item": {
          "id": "dd568246-738c-499c-b1fa-1f667ed628a9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "21a7091a-ba64-48cf-9515-3368ec2caaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c08b42-a5dd-4351-81a8-d29e8bd0002a",
        "cursor": {
          "ref": "023ffb3e-e289-4c98-bcbc-70ac00d02c07",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e2661a00-0256-4023-8654-70c0ea27fc6a"
        },
        "item": {
          "id": "87c08b42-a5dd-4351-81a8-d29e8bd0002a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5fb1a1d3-9403-4c05-9dbf-10fc0a32b442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67e82de-6aae-4784-b639-632076133107",
        "cursor": {
          "ref": "4657a7d9-9fa4-4785-ab03-7e7b4e246978",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "32564cfc-20e6-4ab5-bf68-d0b578cde065"
        },
        "item": {
          "id": "a67e82de-6aae-4784-b639-632076133107",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "40e48e06-1118-4b26-8673-bdc813bf1086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a2b9ed-3f49-44b5-a7bf-725a9a04f830",
        "cursor": {
          "ref": "3f08ac54-a0e4-4132-87a6-e80cf9e03fa2",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c3cc4cf6-83b5-49a8-a2f3-f895b4a602cd"
        },
        "item": {
          "id": "f5a2b9ed-3f49-44b5-a7bf-725a9a04f830",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a52bb32a-d44c-4358-a79b-627e91d4d388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee61063e-7033-45f8-ba02-1140990b2d24",
        "cursor": {
          "ref": "116f906d-642f-4292-bbe0-d0e34c7ad5e2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e47cacd4-5487-49c1-bb6d-de7a5534b860"
        },
        "item": {
          "id": "ee61063e-7033-45f8-ba02-1140990b2d24",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "79dd5743-a2f7-4e57-9038-5bc95984ac7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b443d61-5812-420f-b33d-dcfdde65d7cf",
        "cursor": {
          "ref": "19f9fe9c-ecbf-48bf-af8a-7cd619bfc8b6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3bfa07d9-5c4d-4a33-9670-d5aca9cf77eb"
        },
        "item": {
          "id": "2b443d61-5812-420f-b33d-dcfdde65d7cf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3b14faf0-eab0-4bd1-92a8-5012f3d35d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6873ecd8-df6a-4de8-97fe-e35aa0a13489",
        "cursor": {
          "ref": "34adb841-b5bb-453b-9d09-8e7f1cf26e93",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0f797894-082d-47cb-9bf1-0423351f302e"
        },
        "item": {
          "id": "6873ecd8-df6a-4de8-97fe-e35aa0a13489",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "74dacb1a-333b-42c4-9b5a-490a2e4e97be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40b9fd5-507b-44ed-b160-9c9cf6c6fb21",
        "cursor": {
          "ref": "0de468ed-e84b-4c8d-8da2-8ba819af581f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ec29fd59-1533-4a25-8363-1fcdd7d6aa3f"
        },
        "item": {
          "id": "c40b9fd5-507b-44ed-b160-9c9cf6c6fb21",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "be93d3c0-016b-49e3-b9c8-11aa8dd0977c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1784ba8c-c2f3-417d-a446-b0eb74323093",
        "cursor": {
          "ref": "92e2b720-f6dd-4b02-b79c-1b0fe5daa506",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "61cb62d1-844e-4a58-81ba-879ecc2607f1"
        },
        "item": {
          "id": "1784ba8c-c2f3-417d-a446-b0eb74323093",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "82789d94-1b51-4efb-8667-66d969c60090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a04a1cb-5abc-4520-8e19-b9924d63f10a",
        "cursor": {
          "ref": "6f6b4390-33cf-49f6-8298-e36ce4c3efd2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "08064a17-7927-47e6-bd13-0e8f351d926a"
        },
        "item": {
          "id": "2a04a1cb-5abc-4520-8e19-b9924d63f10a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "84d58686-975b-49cc-a115-970720474830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f09146-82ea-4d64-8358-8097edd7d74d",
        "cursor": {
          "ref": "e595edc6-de24-49c3-846d-0cb5ab2078b8",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "008ed0a4-6da0-4f52-b636-6e6f267cce3b"
        },
        "item": {
          "id": "21f09146-82ea-4d64-8358-8097edd7d74d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "06af6eaf-aaf4-42a7-b68b-50b961faefe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd44c19-99f3-46e2-8abb-89c0e2071cd4",
        "cursor": {
          "ref": "1b00ebfd-5268-43e6-94b1-b0000b3c4f68",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b99dbd8f-9019-45fd-a095-92d0d2b0257a"
        },
        "item": {
          "id": "cdd44c19-99f3-46e2-8abb-89c0e2071cd4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "14f0ac63-f371-4d75-8353-0d9a588b8a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d5b1b7-be48-4f4a-8d71-2ed7857d88de",
        "cursor": {
          "ref": "5ea43075-8cee-4518-8abf-27a6c17f481a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b68b5f65-5981-43b5-9974-0babc8061df8"
        },
        "item": {
          "id": "79d5b1b7-be48-4f4a-8d71-2ed7857d88de",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4074228f-b121-44bc-815a-fc73594f722b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f46e12-8aed-4f61-b4c3-4d37c8aeff68",
        "cursor": {
          "ref": "644123e6-a641-47e2-b6aa-5c2c9f60a798",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1a8ff9a0-3ee7-4796-a859-506886bb484f"
        },
        "item": {
          "id": "f1f46e12-8aed-4f61-b4c3-4d37c8aeff68",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c8142b08-3ea5-44f6-9fe5-8d7bc8c9521f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d42a1f-702e-4020-b929-a143bdfda17d",
        "cursor": {
          "ref": "c7fea499-303e-46ab-b917-f46caad3c3c0",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "303a9716-e057-4390-ac3b-5beb3ad0ce8d"
        },
        "item": {
          "id": "95d42a1f-702e-4020-b929-a143bdfda17d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "212a9443-65ae-440a-acd1-fe004d811708",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8037e192-ef41-4292-bf89-1d36fc0c4a4e",
        "cursor": {
          "ref": "f61ff83c-c7f4-4ab7-8052-34d610bfcf47",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "22f4142c-80af-42bb-a6f7-72183ffee43c"
        },
        "item": {
          "id": "8037e192-ef41-4292-bf89-1d36fc0c4a4e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1d449e3b-f418-448f-aca1-f34f1dffd4c4",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8be0fac-591f-4816-a7e4-aee8509eba21",
        "cursor": {
          "ref": "b3df72a0-d506-4414-9b7b-a4c78ba40718",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "76152231-690f-4375-888b-05307dcda223"
        },
        "item": {
          "id": "a8be0fac-591f-4816-a7e4-aee8509eba21",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a890856a-9619-4251-98ca-675fefd6f800",
          "status": "OK",
          "code": 200,
          "responseTime": 3477,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ac3492-da64-4b0c-a20c-33c96627249d",
        "cursor": {
          "ref": "b96816b5-952a-4bde-86a1-5b9518c8a022",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "77a0026c-0ff4-4657-bef9-c76b59003cec"
        },
        "item": {
          "id": "27ac3492-da64-4b0c-a20c-33c96627249d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "765c631e-4dce-4abd-90a4-6c4cd2a2bcd4",
          "status": "OK",
          "code": 200,
          "responseTime": 2403,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4cbbca-2e97-4811-8a7a-d133f974a0ee",
        "cursor": {
          "ref": "cf5ec2d2-c2de-42d4-a3fb-92053e36953d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e27363ba-78a4-4138-acab-b1a9db6ae244"
        },
        "item": {
          "id": "8a4cbbca-2e97-4811-8a7a-d133f974a0ee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "271c7847-8888-42fa-a984-2a6318442f7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4cbbca-2e97-4811-8a7a-d133f974a0ee",
        "cursor": {
          "ref": "cf5ec2d2-c2de-42d4-a3fb-92053e36953d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e27363ba-78a4-4138-acab-b1a9db6ae244"
        },
        "item": {
          "id": "8a4cbbca-2e97-4811-8a7a-d133f974a0ee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "271c7847-8888-42fa-a984-2a6318442f7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d188c3-bd3e-4e24-a666-776f1dff34c0",
        "cursor": {
          "ref": "792d3b02-f706-433c-af56-c1916ce42b09",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6db9c75d-1070-4917-a87c-edb22a746431"
        },
        "item": {
          "id": "49d188c3-bd3e-4e24-a666-776f1dff34c0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "71a71c18-0a5c-41dd-b3fe-c6834f655d60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea14b53c-109a-4ba3-a05e-2b55fad8586a",
        "cursor": {
          "ref": "5c9f20f6-52d4-4954-b903-19180a10da55",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "fb0bd674-ab00-421f-ad05-9da1ee889a9d"
        },
        "item": {
          "id": "ea14b53c-109a-4ba3-a05e-2b55fad8586a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d588655f-2e63-4339-b871-ba97bfecd5c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}