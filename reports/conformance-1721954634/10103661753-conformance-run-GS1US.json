{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "43ebe697-d6f6-4295-a053-fab02613c6b0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "87bbe348-f284-4c25-a5b1-763d5d713bf3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2d3b7d0-4847-4a64-8188-5a85fdb8196f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "36ed2235-bcb5-42cc-a4cb-de9864da79e7"
                }
              }
            ]
          },
          {
            "id": "e480589c-afa7-49de-bcc5-ed5ead957db8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf3859ce-4006-4722-bd1f-f223de799540",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c8c408c9-e0d8-4bfd-b957-1b4f273d0e45"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c427cf13-f0c4-498d-87e4-5d5283eca237",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "13e24019-1d20-4c13-a74e-4e1cb788950d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc080833-7faa-4434-a151-9b5951020d99",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "130d26fa-29af-4cb7-a26d-50311afad12b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0d0f179-83f9-4470-bad0-b5474f057743"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edd4a263-363d-4136-9825-2fb84c32793f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbb265eb-10b7-4177-94cf-f4c959496abb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0af9a210-40da-425f-ab46-0450740cf77c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4b19969-ef85-47b2-9144-65838b7ca175"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c48b60f8-6cdf-4663-b346-770d305cc3a8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ce2fb118-add6-4232-a622-a7c0b4b24dfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff6c19ec-c999-47b3-b0bd-588f5fed832d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c428449-c565-4b5d-b5a2-05f1fba22231"
            }
          }
        ]
      },
      {
        "id": "e943ed34-1de8-49bd-9c2e-16c055c81c55",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "79282a63-5505-44d5-989b-70c550953846",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0438f14-9bc7-4585-8265-e832c34d34e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "841f78e6-690e-4df7-b51b-9456ee31b526",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bf67ad-3d86-4413-9288-3a81fcd51586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b36934b1-cfcd-4849-a8e8-d01536e0e337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7527310-c7f3-4152-a3fc-aeb5678e522d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0248594-e3cb-45fc-a4c7-70c54d555770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2ded33c-f87d-496b-91bf-8b77480267b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6176f90c-bd4d-4db6-81ed-e50b80241b45",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15106f92-4224-4030-9df2-a86d78377e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "977b5529-e42c-4949-b5cd-c5661eaac97b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b3ea01f-ea2c-4271-9339-ad78590a40ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a282bb1f-bcd7-4be6-9e0b-cd5b9ef9f20c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c82b416-4384-486c-9851-481b0ea8a611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34aa0588-b168-412d-a85c-8a9b1f2ce92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55b5b5c-ffdc-4188-99a9-5d501417879f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad68fb23-fbbb-4778-abb9-546cab7b9fb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "799199d6-d65f-4395-9f84-a48a5746a135",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df6da540-4550-41be-b066-7f647a1afd12",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfa12bd0-e701-425a-a805-f2bf79d841a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0779bcdc-c64f-446b-9083-03529ac44b4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcdb7800-ce9b-4265-9485-14127904e649",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b924ef11-01af-4b99-9707-e27eca6b0235"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b670a5b-769b-413e-9e09-43347258c5a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2d6c230-c512-4222-8d18-9887574bc4a3"
            }
          }
        ]
      },
      {
        "id": "4320924c-561b-4f17-ae02-388d46641e55",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f96dd63a-c208-4e06-a0c0-ce84d95abe32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89b2f0bf-665f-46b1-9336-76d1536dbcd5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "72ec4b20-1c77-4617-894d-3eb1860fe800",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958fb0d3-8b3f-4384-ab37-351612d46efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e82808-4347-454c-8170-c13d6f5237e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cd8555-21f8-4f45-9bbf-081c06a7de50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "396b4b8a-e515-4cc8-bf5b-52eaac80d8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d62150-b5c3-4437-bd9c-a0fb82cf3a97",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574678a7-3cbf-49d0-90fc-ac1e7a0301cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7835b67a-6d6d-4414-8379-c91314f1baa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c855a88e-9e8f-4376-b11a-4d10bf7ad85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "157c4274-4740-41a8-90ea-e3940d0dbecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb1b894-317b-407d-ac37-2c7e1cf24afe",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087bde1d-4643-4fd3-aa0f-7519ccd53821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4198dc5-d934-4fe7-9cd4-53ef2eec1b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d897b846-e67e-4412-a03f-ae9843e5608f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40ecb52f-0412-48b0-b7db-95d88240bbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61d46cd-7860-479a-9315-27da5f3bc753",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d30198-75d1-4342-8e63-78e0d5ad8344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4710c113-0bcc-4c45-92b6-92b44ef1f100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e76587a-96ce-4aa2-919b-2457a79a6301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d23d504-6a2c-429e-bdb2-5539adc8fc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730cdd8f-436c-460f-ad49-f9347ebe4181",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b799b0c4-3406-40cc-82e9-707fe12b8f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6e7f68-b8f3-4228-8a18-7b1937fa7aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddb4bae-6103-4d66-8149-caf50f650e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e4f8076-c1ba-4544-bfa9-ae035a9beff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6e879b-e0bb-4aad-abda-e72b22fed485",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa008b7-8e32-4864-8011-2da2596e21fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d853e36d-4f7e-4f0a-b473-d221c613823f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b37a537-b2d0-4699-85ba-1f021e71bc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a73a4b1-de39-4020-a1c1-f26251f30d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88a2d66-a7a2-416c-95f0-6d55fd82b728",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075043ab-1a20-4f0e-bd02-9a41a70f1473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9d9a31-4b21-4707-ad7f-a3a7ff600b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d74d182-565d-4ac9-9c22-e1e8af2eb343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac82ca75-be86-4ace-b979-9217bc85bef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6896ce64-a544-40be-a8da-57de1462b8fe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db166b7-acf5-46d1-84d2-e8ecd7370c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463e4e4e-8a83-4723-93b5-a355a409485b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec9b817-cc01-4f61-9a4c-da6649e344fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84b75d17-32ae-41fd-918b-9a298f3bdf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a92c07-922e-46dc-a0f1-05bcbfccba36",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828d6493-e3a9-487d-9757-10d4fe902c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a32d27-c2b4-4ba1-98e2-565c6b96c22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce790e55-4c43-4dd5-acd0-e6e98123e2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ead4a9aa-df71-45dc-b920-73ad8e64f16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca16fac5-df05-484c-afd1-3f36082a0d6c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545907b7-d6e5-4d9e-b590-ee1165b84c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced7719d-37d8-4e6e-bf30-b728dd8f0a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cc5ff8-7b89-4829-ab4a-6ec8c2533962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2bc7c8f-29ec-4fd2-aadb-7bd9c2761635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bcf2cb-f232-4252-a8f9-1acb1881b1f1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dcf3a2-b7aa-4773-8f68-41d7159e71ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b29c3ca-f752-483e-bb4b-04006bf902b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace2ff7c-3975-4a7f-8bee-4a0f3eb2da17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deb61eaf-2491-440c-87e2-03b8d4c6add3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d4aa05-3ac7-464c-9d1b-647611de8009",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5331c76-bad2-4b80-93c1-0e89285fbd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828f3016-cf2c-47ae-8ac6-ddb39cb76424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2aa6c0-7fca-4e1b-a30e-b75cdce7835f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41b884d4-82fe-4fc9-89e5-614002c8d6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614a93de-1d26-432f-ab2f-7a405cda5c6f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f6abbc-0cd0-4803-b3f5-f30af27f63cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff9e137-3e9c-4e32-b2a3-12e53dafa248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc6583f-07eb-49ba-845f-bd55294f7e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9e8aa75-fd4b-4474-9d4e-55b7f8315598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c818a7-ce84-4896-a87b-022e8ca9e1ae",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d761b9-5378-44c7-9755-50b6109dd6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a321ef3d-c9e7-467e-a0ae-c5a0bc9a9af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c7a26f-bc2e-44a4-b862-774095c0295c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d89efab-ca34-4e2e-9bf9-211d9357021a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2959fbb-e241-46e9-a3b5-128f52be80f9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93938ca0-2bf2-4402-baee-4af779990759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2d6041-eb21-49a1-bf39-64dec66dcff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0b9030-5ad0-4a2e-8fbd-05cf12e48cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4490557-b0eb-4ffc-8a47-328432e277b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353afd51-a6b5-4e00-aeb5-d88d6f8c7a1b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0f666e-685b-4257-af3a-b41dd58fa7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11365f8-2c6b-4853-9d1e-cc22b3143b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2eddcb-0555-4b6f-9fbe-75970fd94a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dd6b3fd-42cc-4e90-a492-a63782ed9905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64744968-480a-4420-8da1-73bfc18a2b1f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ddb6d9-9b64-444f-8825-8c8edc67399c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c303808c-14ac-4e85-a6fb-9d523afd1432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5723665a-f028-4f0d-bc4c-652d76e86d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fa30db8-ba47-44ba-8f76-1f92fca8fe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35b4b0d-d9fe-41e2-8d76-2a767bcce775",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb16905-3694-4eb8-9040-50e22889733e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa868605-5fb3-4359-9fd6-31286466e73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5afe36-4c78-4431-a216-65db1a83c110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "43dff55d-713a-40df-a5ce-5dfcb1e5af82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb20b919-d0bb-49a0-a040-c9f56bd8239b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3065f8-c022-4566-9eb2-8e2fdab13692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab93c6fc-4500-48ae-abd0-ec5cf7c61eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278762ea-a85f-4283-86aa-3a47df7a735d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c34c76-4cc6-4755-8b7e-f4d23affcd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b92425-3d0c-48a9-bb93-9f337de5a38e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5c7520-4690-4b9c-b402-bc71af38ce5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ffd46c-941b-4541-acf8-6d339ac51b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bac022-b2c5-497c-80d8-d4231ef30b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1c6411-e541-4320-93f5-de6c19a3e822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dd37ac-5ccc-4f2b-9c55-9d3879aa86d2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b329609f-50c0-4b8c-9081-a91ae0a4f0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fffe831-525f-4c45-abd4-0f88a1b74255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310aae12-9560-4eb3-93e6-e8aa6db06cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ef1260-a301-4a0c-85f0-7bf396282a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef80988c-9738-4368-a68d-2de886141146",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a373e769-ec92-482f-af47-30493df8ae18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b29fee7-cde6-4498-92a2-a33ea3b067ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbb2fed-769f-42b5-80f5-d1867795eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39eee895-507a-48f9-b59f-3ef5b2640206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a31eac-591e-4c79-80e1-58ca98e71c16",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de818de-188b-438b-9726-109356ed3c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8ec5fe-9a7d-4461-96bf-96470b503570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d6c7d8-fa00-4f34-9b2e-eeddfec4c105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f71b843-c4e1-40cc-8778-458168e9b8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abe8811-ffd7-4a5f-8b2c-084771c7fedf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1fe606-3f20-4911-9f5e-1d1356af7661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8a5f7b-7b5d-4049-afbd-9bbbe85ce1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31676a08-5bc6-4cf0-a24d-1a3c5d9b8003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b1783a-b9ef-4e2c-b878-1fc2211cd672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db29570f-c324-4d79-92ff-f22f798fd0f6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5620b53-7896-47f5-9d0f-a4789276627c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e4ce99-f211-4e81-8f71-eaeaf7ea57cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881ad8f2-894c-47b9-ade0-705297d44f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "293904d7-ed0a-40f3-a5aa-a7a2d1342af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac861b0d-950e-4db8-b07b-f3cc98c4ef19",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eafdec2-726c-4eb0-b797-b39e6e798e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1452f50-6d36-45d7-ab49-83e9dd118418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ed4646-2935-4eca-bed6-2af6797029cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f63e8d7-a91c-436b-bf81-7462aafbde55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74193adb-f7d6-4fde-969c-488c8ae94a39",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3adcebe-f0de-4163-aa27-a4998e2bc170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9402f3-303e-49e0-8d24-cbc5ee3b5f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a19b9fe-d4b0-4c43-86db-0d9f62a9e579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b8a9b4-dc8f-4a9c-8479-ffde54acd1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a49288e-269a-4d50-b2ed-c470bb0226fc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7f7eba-2fb3-4704-87b3-ab3ebb69078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c15210-c210-44f6-a152-4bcfca3d7bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97b78c9-a9d9-40dd-924d-98d195632933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e199c12e-1f5e-460f-853f-26159490866c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b5c13b-95dd-43d4-9bd5-b91a49545e4d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee0a5ec-16c0-4d45-901a-51fe769a7c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d66587-b331-4fd9-b2d0-ffe730c31a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab5ffac-312d-44ed-98b2-964d1da2eedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "546abcfd-a8e4-41d0-bd3f-1724d9d66f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f1dac4-4ae5-4dbc-8198-40dd6f73c118",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb5972a-fb03-4bac-a1d8-0e0ca7e13f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8caf20-296a-43ce-96b2-c0f45644d90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574a4fa3-fa6d-4f75-b816-44ff1d120733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a5f659-39dd-46ba-96b9-9de29bedc9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ce7ead-4774-4728-abac-6d24a905869f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a23f1f-84e0-4192-a810-2f64c62a5330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31b7744-db4d-4059-957d-4a31e6bc1616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da17c972-0a5c-438f-a30c-d478ba9a7f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da71399-8ef8-4158-ac02-5ba54ad959fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdce755-1122-41c0-828b-7df421a06db0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1bf313-8e9a-49c3-ba0e-52da9a483e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a3e0f1-901e-4020-ba34-29e067d76320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a60e7f-8eeb-4dc6-bb56-1d79907f14aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7c44c9-3bf2-4e26-8d23-bf1d54106571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758411c9-d152-4585-98e8-9d1a8d53d68b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82359133-a1e4-47e6-a3e1-f3898fef3c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6fca45-3ba1-48af-be6d-3356ec0de05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46ba668-26d5-4574-b891-fc1bf5d2636d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad95463e-07e4-4f09-9210-7c1d0dd2ee36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2ba225-a316-41f9-88d1-3b2120423fb7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a8f727-8ea2-4bd1-a1c2-01189eb94464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390f1ead-7d5a-4dc5-a36e-df821c3851b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2741ea-6440-42da-8641-83025eee4750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbcd9bc0-137d-4839-a32f-f9957ceb02d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ec8c1e-1198-4247-b116-34b5b53b8ca7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91635652-0208-45e0-81db-7cc2a750bc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e37b92-4eab-4929-a7fd-53886eae4bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197bba08-41e4-4ff7-88b4-44e03e485df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4937ffa9-cbbc-46fc-a186-0c92cc9135ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60940744-c29e-4665-aa4d-736875cd6256",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab4e46a-99ac-46a4-aafc-db9f61983344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e79d2672-be76-4537-9caa-dbdc81daed7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daebc9a0-37b4-4391-b1ae-a460dd2106c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d208b9-a49e-43dc-bdbb-44180eb9c99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795a5763-c83c-4445-897f-a7e27a7e790d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428209ee-4caf-4b57-a77b-b0a0d0fdf618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d336bd96-d831-498f-b058-b4de1aaa3d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe7f211-15b1-4fcd-a2f0-42ea12c8f7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c995af2e-5751-4212-8c25-81c0f140e539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3faae1-9f48-4a37-b2fd-e4557e26a2ab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552be672-c851-4897-af14-906414013489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd248bf3-6628-4bc2-aea0-7c1454e0e2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac70591-f4bb-4840-b63d-2513a696889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3f30fb-4766-42c4-9c5e-b03307fcaabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6247c25-5891-4fca-9227-1a83946bec8d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dc96ec-c4a5-466c-b1d5-8a78ee6cb304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c358670a-0239-473b-a697-3d9ecf1c7163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d3999f-2a31-4412-9936-78c3db86db3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36eb5c9f-92bf-4974-a344-7d0f99c71316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2004ee75-8091-4c95-8dfd-0ababfe38dfc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f4ae23-ddb8-43f3-9480-aea40c8f4584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e54b89a-6ba9-4fa8-a567-231eb3f7b46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac44ac32-fbe3-437e-aeea-7b569cbf06f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c457bdc-6ce3-4570-aad3-dce1d3e8edfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5783c10a-f6f4-4192-9372-ce0490514cd5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57355389-cc34-4f3a-b566-c1b4a7820164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35183f1-92c7-4df0-9bed-1282f406cbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba1b479-3440-46ec-bd46-45aec5b23bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fef96e8-a24f-4fbe-b846-b397e1dfe28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8049077b-6f8f-4f1c-8d01-40a2dcf376fa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643a268d-41e8-4f68-937a-0bbdc8043394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54621056-17ba-4064-88ca-44e5a01ca847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94666c18-939b-46f4-be94-6b670967b4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "85441e85-d385-4607-9c89-a7d918490db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d9b0fa-029c-4225-ab6a-285648f288cb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa51ffb-fafe-4cc3-b18b-030380cd4c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8f8fc2-590c-4c21-8ec2-87bd879fac72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7489b8-6df4-4d1f-9613-0f53dba3c616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "68bb053c-50e9-476a-a436-04d62a298d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2a225d-32d0-49d0-9a7e-8ed2139f4964",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658c5a94-5591-40ab-92db-fa959c9dff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdd81b9-c122-46e6-9c93-600527f036a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faeb22cd-32ef-4894-87b9-2600d90ba194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "959c58d5-7c55-4d70-8016-f6ec6a1ff1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a146700-5a1b-4187-8455-77a0ee5de5ad",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c42d59-d594-45a5-9d06-b05cb43cdee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f42f53-8e81-47d3-b404-d44422860b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf87c9e1-956d-48d5-9014-2c321a5d7f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3bbe6f-6336-46a2-b830-25d21ce59110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798532a0-abb2-4aff-b2f7-14df04962e6c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c234d36-aa8d-4154-8081-0cfb0fbb241f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7adb4c-bf34-465f-9934-08c0e9efbba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9238fc3e-5105-4188-b675-a882a6bdf82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1fcb2e-ef24-4564-a255-a42e1e1cf982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e860876-a3c3-4365-86bf-20bce6dbec3f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ae6092-5cc9-4f41-b315-654d46c2addd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39230dcc-8022-4c75-bb3a-04be940bd43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ea9123-792e-4945-b9d6-32449d9005dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acdba1e3-c26f-428b-a542-c94ee99c505f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4934673-b95c-4a05-8a1f-e1686e06acce",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5c5f41-1562-4d06-897d-90e9799afd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc47ab4-ba4e-4867-8ac3-a41f37828573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6490a25-777e-4584-af80-f2629811d3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb65c85-4783-4298-a665-5b5638baead0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e04be72-2a3f-4852-90b5-085e07e51374",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e576e81-90f0-4469-ae37-68f27abee021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608b4aa5-fd81-4c44-9cfb-f0d6060d677e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9c4d53-1498-40e4-97ec-43c2051364b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31ec2cf0-9e47-4b76-b0b7-3cd394dd8cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9e377d-f5a2-4110-ae01-526ac30e66c9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1534710-6e75-4b81-a786-89e623c03714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d93fff-1e7b-4e40-aaf3-38397cf86eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e0a393-7ea4-4842-92bc-c3ceb59e9054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa00129-f734-4e84-a9cb-807773db9db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc038d6-1ab4-4da3-a992-2ee0dbce425d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac53d753-12aa-4ae0-9605-ec52e4e49cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b246b82d-afd7-4800-a641-c722311eaef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd094b99-5657-42e7-b09d-6173faa08574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e26d7d50-50ec-4e91-a245-4ce64824c9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ae9b54-8e6f-4c64-85d6-ad199d7cda4f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b418eab4-0562-451c-b1cd-ecf50585abf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30f9e7b-7fdc-4075-b489-fd6a42e45512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e11734-05ef-481c-a235-682c495ea3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "398fe0c5-c28a-4161-a924-bffd0ceef32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9745e7-a5ab-4217-9c3b-545025ffdbde",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc176969-e20e-4e1e-8c8e-87f12d497732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c21811d-6b92-4e9a-8127-55704c33cb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee00e88d-56a1-4578-89cb-30f375f4f5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "157d39ca-4339-4613-9aad-64fba3cbd681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362828ad-fdf9-4cd1-8491-4e3491f2fcab",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bf061f-3393-4a60-a68d-a8c972587e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b1263d-c8ee-40dc-929d-46bf1cfad131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b391e23d-2001-4ad5-b3e8-9c7f20b330ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f39327-8c3f-4f2a-8979-824a872a6f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0707420-9782-4772-912e-8ffa49b52e8a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d82aaa3-c989-4ce7-a561-affe71184aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1c9d32-8d67-45af-bd62-40b270f89370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435fe605-df0b-456b-9861-0f7a1e11e837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ab6cfb-32c2-486a-8fbc-face80d929cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb07df2-478b-4c46-b98f-1fd9aa528cc5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd8b933-0e60-4341-a249-7f63502d8aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd2f0ac-1225-40a2-b4e8-e30c52280f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaddb2c9-c8f0-46e1-95cf-8cb7ad89bf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "69a12d7d-e178-40f2-a4e2-da3ba0c79088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adba1c6c-46f2-4178-8942-4923a3b64b76",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcb1a6c-485b-40af-b2a1-a64398bbd5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1836cc-2bdc-49e0-9c6e-05b1241b11b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dde103d-1807-4790-831e-f98a64d40ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af656e01-5316-483f-a812-45c1294ae53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be694865-34a4-4487-b150-26f97addb025",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e1b966-a884-481a-84b0-5fda1db23559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0649bf7a-427a-42db-a52f-f85261220599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8b8d0d-6383-43fc-a72f-b02e6e36327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b9138d-b842-476f-825a-e282fa2c1865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1237e5ec-48d4-4eb1-a393-3daa625961b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c20216f-8447-41d2-b40b-5b6d9ea3d0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c554d04-2e73-460e-bc2d-56ee94fd2054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c1e224-8eb6-454d-8f8e-9be9ce5a85f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a455fdf-3427-4d5b-b2d9-822bb0488f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f4ad62-d66d-4c75-b82f-5e4088201e6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9340da61-e2fe-46eb-ae74-92aa8031fad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673bd8ac-d6cf-475f-a346-ae3fdc272172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba3ec31-79e4-48a5-82dc-64c55ffafe8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a165742-b20b-4d86-b218-9813112c197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e104d2-a2f0-4e71-a1a4-6328d6413d52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e6eff0-e3a0-414d-8902-21a94bbc5417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450af193-3e2f-477f-9a82-c2deacad0f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9598d13-bbe7-49df-b946-f6225bdc1d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca8d669-899c-46d3-abab-5080fe359be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b329ae85-0ab6-45b5-96f7-0f0b7f1d200f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a10fff4-46ed-46dd-a6fd-e0ef0983ca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62daaefd-4a70-47f9-9e9e-322a565f59a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cadf67-8caa-4360-a523-a09b09054f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4766ae-521a-40ca-a43e-45065338acc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa531f9-b7e5-4d9f-a3d9-b38a38c20895",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514131b5-88d8-468c-81f2-c323550d0ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc203237-e42f-4c3e-a501-e185d31b8fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c95a5c1-526d-4b2e-b237-a7862625a006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f50b872-a5a4-4710-8299-a56563b311f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2e9b42-a32f-42e4-86d3-d5c96c74fb62",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484a85d9-a444-47aa-b369-7133eb6aaef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36436ae5-4656-4ff8-94df-1dfbeccebebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c633cd8-7f00-481b-9534-8d0598e0024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4166b333-a138-4879-b070-106e93ac5bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32108b7a-6c7b-4aa8-b010-e5c020d10016",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af76adc4-08a7-48cf-a9b3-6af28fbf6c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3522176-0287-41e8-90a6-46eb1c5991ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cfb90c-7d1c-426a-9409-fa7210324aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06bdc1f1-cdf1-4571-8d09-19f22c6cefab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5838c9-52a7-43a5-ab44-d40d88468929",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a966b15-c770-4d11-a0f8-9dd1277dc476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e20c83-94e6-4b0b-bca4-1c47052f3a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a52f07-5121-43ef-bb21-b1bce9ab01be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f58059a-cd07-468c-8e03-6ebdd6935827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fa6675-cb0f-418d-8d93-12eee53e0902",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e03234-2a42-49e9-bbb1-3857c8a1d6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0e91ff-2e4c-441f-8583-ecdbe99a1c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c94f2f-f0ba-45c5-8a0a-33b5c9f00a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77a75da6-4d98-4f85-a262-8f39f5226680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f2acdd-dcf5-4386-b012-cf4ea5a2c46a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6db8f1b-c757-4903-8b14-513632ec1105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18eb1d6-f532-4d49-8ee2-bc1e0052b62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceaea78-670b-4a35-90ad-fdeea2161f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd50019a-fdc7-4c4b-9374-78f95de9c70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e779c9e6-704d-43af-899d-412b966eb36b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b78f56-a6d9-4650-bbca-20763b436f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ff11be-543a-4556-99b5-e48442dcb18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b19c47-91ef-43a7-9c6b-2c20aba490f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9237186a-ca5a-40ce-a916-68b11a7256c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2484e3ab-c24f-44c8-bf36-738a2d5da3e9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b44196-da04-4189-82f6-9d9f5f054ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd57637-a854-419b-9d15-1af2d2bb9f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d958ad-60fb-4fa9-977f-57f679c24e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "464cc3f4-2dfc-45ff-8a15-2b2691f58196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a8d54f-dc47-4dae-ac1f-590aac5b13e7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb58d130-91dd-42ca-9082-d45d1911fee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad64c1b7-eea6-45df-9174-48f3f529f50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc3c314-a226-41fd-aa86-faa7e1d9f5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "217e73bb-fabb-451a-a230-bb082c4f7ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35181cf4-0d27-434e-bab0-d9ee8cbfc8fa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0510d5-19b4-4e45-abc8-3e43aca45915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecfe321-29bb-4823-a0a3-b918cf08e916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b20164-2381-4c94-a94a-3247d39625de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af5775f4-dcb1-4d1a-9176-209b1bc60ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41519956-ef54-4368-b4e6-c6b7ca5c2fb4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069a1db8-c4a6-4c71-be54-b0c546346cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46c4f36-90ae-4fa7-93a9-d5dc49017346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c32300-fef1-4c13-bb09-0bb192c90694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5da92357-c8c3-42d7-82ed-528453492fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90825c06-59fe-46c2-a6fc-95d424e02d62",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60b0dd6-9a60-4b39-91d2-42d664358490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc664a2-380b-4927-b939-a367d03f87ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fac247-863d-429a-a61b-14c1085b33dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "355ed868-ee55-498c-98b7-5231d7eda21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37068d6b-ef58-4f96-a39a-46006eb452c3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9661ce70-5d61-4b4f-9133-3006084ced09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa419c1e-9dbc-4f80-a329-6093f9c54e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732f74a2-a681-4bec-9c58-eae1a1e9715f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd42a1b0-74ac-43d8-a0a3-ae262acd7960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f603ff-4468-466b-bfe7-973e27570120",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f27195-086c-4cfc-8807-d21a81502cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c018b13-a21e-4e41-bd92-3a39ced677f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c8924c-4f9d-4c37-8103-547ebe931566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b724b3e-376b-4782-840e-521bcf4faed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8782c434-2f69-4868-ab44-8a6b286dbdf7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a4bdd8-3d55-499c-8af0-c5017b62ed27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd6a5ff-861b-4668-b37b-3222658f7540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1410b56-1b49-48de-b414-a22828e38857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71dfd13d-665f-4229-8b20-4c3c50f29059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3622108-7864-40a0-8f5d-713391ce0e7b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acc1b64-804f-4461-bd8c-0fe27f3629f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5412d028-89bf-44e9-b772-d6c76753402d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5d9170-a1e5-4a0e-a5a2-ffa418560ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00d83116-77b8-4356-b9d8-cdd48e4db71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce2dc08-8490-40d0-b01e-97570e3c43ec",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5083cc-bd20-4fcd-9080-1f51d9b514be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260e8b58-c4a2-41f6-b68c-2f54d4989b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc78c10-44de-4dcf-838c-8626b4b51658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f87d627c-60a6-4384-be50-7115b78d1484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa3e3b4-a5aa-4f71-9f35-d21f51bd99fc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257d6ac0-0aa3-4333-84dc-a7b59ea135a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac870360-bb73-4a77-ae98-7c6ab6536d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea2ce9d-e583-4a18-abaa-3d68c4091caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23d8b6a0-0b0d-4612-80bb-2be13154a829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972a205b-a880-4b1f-b18f-2e0ddf4685bc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b830373-6a00-42bc-b933-f8f80762695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3e2a64-5cb1-4de1-9186-b327d9342725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f757c0-c515-46d0-9bd4-c24748d79960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fe98bc-fa0f-4347-970f-6731fc2817b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e437afb-fc11-43d5-85cb-7feb39a49102",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5f8c1e-d96e-4999-8d31-6a6fdc88ef56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984b6678-a3eb-4345-ba42-c8e15b7bcd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5105ba28-5f83-4028-83df-53adab8aee31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e08f5611-885b-4fb8-b476-3975f299aa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9fabb5-dad2-4bf0-bdbe-db19d634cc14",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35dca49-2b94-4c9e-b481-eb193c32c92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c59bee-f26c-4b77-a4b3-4db6e425e823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1d9c0f-140a-4295-b1c9-88346fbbdcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2af372-baa0-4e2d-9efb-d2b02a87c9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6419fa50-a0b9-4efd-aa83-1912e3d94ea3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15787c5-81e5-4ab7-922d-ccdace17bca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4057001b-88b3-4ab2-a15d-1a1e959df479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6a1a53-9224-4c41-aac3-cd20afc3e947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd06d67-8177-4db1-bbce-b65b476a1ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285fcffb-a268-4068-bd87-419e7a643f07",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ade8ce-bd83-4d16-9ca6-4e38e402842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19d698b-0e62-464e-b1ed-fe92136b13c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1367846-8321-44a4-835c-d4c0aa8ee42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7430de99-ea16-4cc1-8fa6-4541c8ceb061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41593d07-ccfa-4839-afa6-cd83756fac27",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589f1922-933e-4d2f-b6a7-3a05b6346cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8dcd08b-4ab5-4cee-ad0d-9f46524dcd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7154ab4a-4865-4990-a037-82141b6dae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e59a8cc3-0831-4c03-858c-7fb720480e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abde88a3-bd16-4821-b344-d795a971e6f8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3555bfaa-1603-47aa-bc1a-67c6b8d8b1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af40d4a8-391b-4d07-a95d-551e73b77247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd2b0b3-2b94-41d0-9b5d-b082f3ad2adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8064d3c-2f11-45e5-93f9-c6629b027bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee720f0e-50a4-4b75-87cf-a1bcd23bfc1a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd27b7a-420b-48dd-b9af-74d200d79822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ce9ac5-de55-4586-bdab-86fa775beed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50863163-f375-4e15-a81d-313bd832ef47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e70fe1-6366-456c-a5e1-f27c0cc8d7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8bfbb5-7698-4bec-8a71-780f157a2557",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a27b137-4c05-494a-ba1c-ec67d516a9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf796f03-b3ec-4bc5-860a-33a3f3dc76dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47e1f69-9a72-42f9-9c1e-3408d2d4e028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9815c784-5914-4979-8721-51544215779b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9bde45-bbbc-4193-9b97-9ce615ecec51",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc17531-b3b4-4d45-baf3-646cf81599f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac515ea-5dc6-47bf-a93d-c927e599413f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798f43ff-61b8-4477-9051-995143db83dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc828cb0-0b9a-4398-89e1-fc2ebef927a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ec5b18-114c-4069-9707-403eb187c38e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec73d338-1192-416f-91f7-37082c640d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57113ef1-42e9-44c1-bb23-7eb31646efb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974250e0-0574-46a3-b623-c4a8805bf68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5912091-8f3c-40b7-9c42-326dcfff0de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb19b746-838b-4e31-8877-9e0ec4fa5b53",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e836c05-7ac4-4f22-8adc-9b47aceec5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e7b585e1-4097-4ca2-bde3-8973ae754506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043799c3-d75a-4ded-83ae-db9bf18c67cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac718480-28c9-454e-a60f-40aab93ac1f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8fa8e914-1728-4f5f-9004-ece53228476a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f203908c-1253-4e27-8f79-d1de7fe4bf1a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf86e8e5-666c-45f0-b8b4-1fe428c40e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75cfd3a9-d3e1-4d8b-a14d-b67852e66015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099be819-b9af-4505-bc8f-4448decc047d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "507cc65f-0b26-4fa8-9896-37fc0d3e4289"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96502e67-9c41-485d-88c1-c2e4b335265e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e2c0b1e-8889-4e36-afae-6fa9beae5346"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6480669e-f90a-45e1-825e-b422cc4dd48c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f536b5f-6939-4e60-a56d-b039d485fefe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d411f487-1398-433f-82a6-770fb9ea2c21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37fc4ddd-a25e-4e7a-bdf3-4db85f37170e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ecef7145-d1e1-4060-a63d-fa48de458ec1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b2063d7-d893-4fd4-ae68-9187dcafd7f2"
                }
              }
            ]
          },
          {
            "id": "20c7ff7e-3d0b-4dd1-8eb9-6b4949836182",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94742719-302b-4662-8087-714e5ea0b148",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ab1a8def-3ab5-43ad-9edb-051967284a93",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f00158-6ee5-4251-9ba4-189358158447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ccaa4924-a863-438b-89be-9b9a7ad9ba6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c344ef6f-3a64-493d-9c5b-265d5a76e60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae1d336-e930-4ca0-96c8-9febee383560"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c086cd03-7e62-43eb-a852-62b7a6aafcd0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65751449-3476-4ea7-a1f8-6c6eb2e1a86d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ac9a20d-b56e-4a02-b991-5dfde3bbebe2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f336bd2-9caa-4e9b-9e63-1b185c72a247",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49cf9c27-144c-4b49-8a1f-79b21472cf95"
                    }
                  }
                ]
              },
              {
                "id": "2875e530-a77b-4805-94e3-bb143960322e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81d7bcfa-66ef-4013-b992-37ec7037ccb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5edaeaf-1ad8-4e7b-9c16-e9d6869dec15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75057c19-2751-43da-820f-399c59dd68b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "785b3d24-c319-47e7-bb39-fa5e4b4a71cc"
                    }
                  }
                ]
              },
              {
                "id": "30977561-beeb-4184-939f-19657df2cce0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e92bf3da-cb56-4f02-bd1d-9dfcf6d51448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b508dab-028c-4490-812b-51c72a76e583"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33c1989c-5ec6-44ab-85ad-c9c7f90630b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31a10e5a-434f-4498-80c7-a155968153f0"
                    }
                  }
                ]
              },
              {
                "id": "93e0c0a1-7c9b-4fe4-8f2b-8ba02b822279",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e438652-2c4d-4ce2-915a-4c42123d50af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "241521f1-541c-445e-86cc-cb9e23cafca9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16567489-464e-4cad-b93a-03fe893b0f2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6d62fa63-6279-4a9e-9d02-8b20548c514b"
                    }
                  }
                ]
              },
              {
                "id": "1cd3173e-071c-48db-bc10-11101c9183ce",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5971ac2c-375a-41e6-9d1d-db012004f1a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00241ab8-080c-4543-b849-448ff7e96147"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ed95a56-888c-4132-bcb5-32403e8b92d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2d1f3980-dbe7-409d-aae7-27e107c235a7"
                    }
                  }
                ]
              },
              {
                "id": "4fbbad2c-2125-499a-b961-6c859e4d2bdb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2107f88-df58-4a76-9516-09b071593960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30f04e89-e456-43f0-b477-a15a0d514e84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23a07b48-d66a-4158-9153-8a533e7c1d77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d47ed1e-7b44-43da-a3c3-a3716d4a1c34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f4b25fd-1b53-40e5-82db-dd466271e4d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a8823d4a-324f-40dd-a8db-319e58b882aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3067c494-f97d-4e3a-b5f3-f15ab19bbcef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66e8a2f5-7aaf-47a6-a505-b64150941a34"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbd777ab-d99c-42ab-a7f1-3acfbb60cc1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "284719f6-f4a2-42f9-aff5-21ff28a5465b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddfe5efb-78a5-4ae4-a488-f9b491120f33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0d8fe5b-c90d-4f7a-a6d2-a6c14679e49c"
            }
          }
        ]
      },
      {
        "id": "4c735200-d69d-40d6-8209-de0d90d8a183",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f67a0493-e704-4e06-bb49-b954c879c684",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5536569a-bbb2-4f70-80e5-8a700f8a366c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "608ce08a-051a-40d3-a716-442f49adf5e4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05eff4f-e2f6-459c-824d-961207c36e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f0e47e-ac0c-45bb-bba6-12fa98360fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf534bf-adb1-4dad-bbca-e5d48cd17341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec228b1-9041-4389-b7f7-b8e4d2db618f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5052bd-e109-4254-9e1f-80aac86e004b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8de546-851f-4ce6-bdb9-a00c3b7983c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc29e64-e6ef-44da-8ab1-6319933478c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e101212-f7ff-4f4b-a214-07e174cb0550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdfe3ca-cbf7-4dd0-922f-11cd4c004fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b62ff5-27cb-4a21-9546-ffd5e29365fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e36a87-b81e-4682-83b6-639cb59ee407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2858353-24ec-47c2-ac1d-1b73b47d576b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1576c785-c63f-480c-a61f-3b3cd5505200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b65b5d19-556d-4495-a352-6a7c50ac26e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f14dd79-294c-4c64-a91f-97d25430c97c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115300de-7033-448b-97b1-7f75edc6bb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c76a18c-4200-4f09-8bd3-2f92eb248fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4db4bac-3f74-4b07-b98a-6da99d9e9b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e9856b-31ee-4c3d-9acf-3b13044e5f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291cac75-607e-433e-b0c7-c54a12f688c0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6409ea-a62c-4261-ade7-1214b38bde28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bd52f7-d7b3-465e-a5d9-1cc2dc4a5b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8f1480-0bee-4cd7-bf60-156dd0a903ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87ce211-9817-431b-a561-f429f00a71a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a358a5-2cb8-4360-9c22-9c679db1dc76",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed768536-45a2-4563-8d7b-719a67587736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1578afd-ddfb-4539-a85a-e926ca55b26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a2d74c-02c2-4bc6-9f6e-8186cdcd045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61d9b15c-6f5b-47f5-9d8a-3f148f0b5af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14fd52b-e420-4a5e-8c3c-d4ea643f3a00",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41210acd-9c76-4e91-9141-e8fb424a2264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c44c38-bd0f-4984-869a-055bbc382af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f94dbac-6627-48ed-832d-4d0659ec5a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "638bb582-5e58-49e7-9ae4-a434eb595b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb2dc8c-d0e9-4f50-9c6a-77677a25dac4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf5df6b-2b86-41a8-930a-19cd1fcc991f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538f61b2-2837-4603-8aa5-6de3592fd776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb15200-4183-41e0-8f9e-78f2a1a26e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "468a7bb0-0c6f-44e1-80c5-8715fcce8926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8224a1-430e-46fb-90e7-9392d89e15f4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47112fcb-8989-4b1f-b723-9ca2eb95a598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8aa2f3-7e7c-4461-8576-bba92a14dbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bfad94-a4b2-4eca-ba8d-eb4f8cb07518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48cbb073-935d-4230-adb5-84761acc3822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa8dc1c-dc7d-4479-9067-9639ded81084",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff57f07f-9131-4649-bd8d-15abf267085e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d685773-a50d-4390-9a86-11bb9daf51e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185aac81-e3fb-4edd-b23f-0994e9e629b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8643198a-2f7c-4ec8-9c44-c2bd3f8cb556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb364271-d34b-4561-bd93-198931218796",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ec0950-433a-4e42-91bf-67cefd1585e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a931991e-dea1-4fdd-a7b8-27bb769c128f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f23433-8435-421c-9562-ebf868fbe40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "77bca8f5-fea2-4c89-b0a1-f6d3cb072e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36304eb-edfb-47b3-8a1e-62b90f38e39f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7e6dce-1b1c-4f8d-aac5-5e552e5e6ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc87232-d1ab-4ea1-a3af-a81168871f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ed9fb4-c65a-4ba8-a686-f639bf92d27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e87a62ea-47d7-410c-89ca-85f21fdf668a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7fab8e-5039-483b-9082-2560e5489ecf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd697f3d-d575-4f73-ac4b-1b4126d8cf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea0c18e-b024-48d9-a82b-48e35567da70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f8bc45-992b-4303-b185-5c40ebb20fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c3aad9-7ce5-40db-98b8-c2bc6e58668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cbe9a0-b63b-487a-a202-77fce3644084",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acb7f05-0194-4ebe-ae7a-d1c42e7be7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bba159c-39b9-4387-9720-3b1ad6ea893b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87eda7e-e5ab-4f73-b080-4841ded39928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b300ee-67ab-407d-8562-94f9def234d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef825d3d-9b1e-475c-b60e-ea0fe74ede5f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bcae6c-4588-4420-bbee-45368655acd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baba8d59-f75a-4c16-8fb6-eb0386ad41f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f1bf76-9e9a-44c9-a224-3eed7f1ca180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b30e6373-c3bc-46e0-8190-a9bbe59bae68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7313f685-d9ca-4b4d-a229-290bd27fcb3f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a347359e-32f4-4e7d-b802-901cf6601da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3394abe6-86a0-469e-b71b-169bfe7b314d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044c0130-d5f9-4d34-af66-9677f4fe21a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb6dc37-9193-43a5-ac3b-1ec7f48a4758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb8287d-ecf1-4c7c-a4da-eb0e35a07558",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe51defe-7703-432e-95d3-063769ddf39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6d1631-3de3-4695-bf4d-73e93764f1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b551001-8fb2-4d57-8936-20620f4b313d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "73579ec1-75c0-45e5-9fbe-715ef36ce114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876608b0-c20b-4c29-aacc-9778435da482",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4374d8c3-48c0-478c-a9d9-5817bb0b2043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7243ba36-17f3-433d-82ad-429499d62082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52d3e6a-f1de-44c2-8b5d-645ba417f594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ec1478-4f33-4eda-8ed7-7cf0d89ac8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7533ef-6a08-4feb-bbfb-3e270296c979",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ab1ecb-648a-4f81-a300-a10cc1d042c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98408617-f184-4033-b0b1-a4f0cf2e0f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7766ae9-0b44-4941-8809-4b47ab3bfa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b53b3cf-1830-48d7-af83-3f6076e98c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036390dc-e06e-4b28-8301-21dbc7c73289",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b4da00-abad-4a61-9694-e903811d5a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b20cc5-a0d8-4605-975d-ab42661acf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f286f5-c24d-471b-90ad-7f304f2dbd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f11669a-3b74-4310-98a9-26934cee6bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c0af97-c64d-47be-882a-502f7167b9e4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3af748e-f127-4f30-815f-0cc87ca6632f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0e8838-42ab-4d45-a685-7b05d34594d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8279bd-a0f3-4fe4-b91c-0ca232b3b3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16ed8c91-1b43-46ff-9aaa-5cf6a50bff7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e123d9-9a38-443f-abb6-d7c0e3dfc38c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef85b236-94b7-453c-9a81-f199a2114f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd3ee36-e00d-4b52-8f8f-205341677653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9a5768-59aa-4ceb-b485-c40ced2e2ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b467d1c1-ff25-4b13-868a-fb4a60702113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c8ac8a-f3b9-4953-abdb-c62ce736392d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97113525-dca2-4587-956b-4c197abb3359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95f4715-09c0-47bb-aeb2-716b41979dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9911b1-bc4e-474e-b389-d32bb332b36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3d08f4-5843-4657-85e8-09d04e5b8b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf62029-240d-46ca-a6ac-5c5742fc76b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0379cbfe-432e-4a52-8b0a-90980caeccc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd58bd94-9e18-4d4a-8a2d-ad6fbdd81e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1206239e-a3a0-43de-b8e9-a156861a0b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9626deb4-15b6-418f-ba1e-13f5a0da53ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17501ade-052b-481f-bc89-d3418d2e3fda",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1674f7-d864-438c-91ac-076c88a00e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4e347e-32ba-4d97-92e8-6146c21c1e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae07dc2-d78a-4a49-8a89-f9491c0bae1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38aaac1b-fe5f-43e6-8590-fd70873ecd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bffaa3d-f25a-4735-a95a-ec9ec851d7f6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cda87a0-67c8-4607-a65b-b47d1da001e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3546f5f-0f99-4cfa-ba9a-1e3c4bfd5914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f7ee42-e66a-4906-b517-0352088249df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a3fef8-dd65-4730-8b4b-57b1c7983933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19ad136-ecbd-4ac9-833a-ac6bb366ea85",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1839bfb4-f958-498d-a4f1-c63647e87ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98acfd5-dff4-4841-aa42-ef10f61e9005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c754315a-770d-4e88-b852-509732c3f099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e7a556-bde1-4306-af0d-e1a86caa21cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dee7f88-af39-4db2-add8-be32cf2003c0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9375dbc4-f5f6-491a-9991-e2b6f5de1a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2aeb41-af6a-4e89-b32b-33203822b4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2fa21a-e475-4b5e-8ca7-9b4669a21baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3d3410-8269-4e46-be33-24ec2e1092aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef71af49-cc04-443c-8c79-42b0ae7865c5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe13210-a060-4b1f-80b8-e665254bd446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7c6988-74e8-4a35-b220-4b53678d07be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ca73b5-f662-4858-ac2d-1a83ba35650f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbd2e6f-c53c-49b7-998b-9c20c16458c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98de16b0-4a4c-460e-adfd-c2de5a35f58c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba045933-823a-4274-af9c-d6a3e75a4037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d685c731-c105-407a-b351-63ac26c26597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe21734e-4760-432d-9b13-80e7be3e7fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "807ccdd8-3e55-4b9c-a4ec-4e04451bf230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c264bb01-2c75-468a-8890-1b149b0cf137",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcec0f1a-3c69-41dc-8946-1be482cded4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db245810-9dba-4d56-900d-c1f303969dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8887ba4-c4bd-4163-aae9-9ae5b96239bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8649c233-d86e-4461-a535-632e702ed5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aea9f2c-9d85-471b-989d-96075f886152",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db125ba-91af-4860-89ba-3f28af1e2995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cabbab-4d48-447f-81c8-66498654bf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b9ce0e-9ff5-4927-8673-63ca0c4a67f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8b5b62-3d8f-448b-9eee-45d0a4e26e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c90454-5e74-47db-a4ea-db707d715550",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afda2e3-37c9-4f3b-a7e5-1d80044c0302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beef0eb2-1a48-4ab9-9cbc-f1af0e5bf8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ab76c1-50fc-4289-b5a6-f676d6b447d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8998782-408c-43e3-b198-7f5de8846998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41a7470-46c9-41d1-8ab1-c3f1291a6fbf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fda06c6-8424-4d89-85d8-e2c2f86288ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb2cceb-c9ec-49f0-8795-e01377fb379a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24ef66e-bc27-48c0-8cbb-29a51d242601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c53fcc0-3a46-4cad-b994-302cb636abda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24363d1-41a7-4e63-9a90-57e13ca3a30c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c7defd-28b9-442d-abf5-c09c28cd5c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d84913-7a0d-42b7-8c50-0d2fc8ac840e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca31221-b244-420a-85bb-c9948dfae6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3412ace0-8a8f-4670-9abd-d58fa775b5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568778c4-d649-417f-883e-2326c32716b0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647ac253-399a-4302-93a2-3b815be7a67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab931fb-5f54-4ee8-b7d3-f72b2738b39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f3184e-dd6f-4d55-947f-deba06bf69b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8d3e7f-e62e-4c46-92ce-8d85fc479751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a2504b-e72d-4b36-a2f5-ff4f62361adf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44158258-053f-40d9-a2e7-7e99ff304f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5aa65c9-c3ef-4459-b6a8-b719609fcd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cb1be4-2800-4cfb-a396-c9c08651c25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bedf7868-2dc9-4de5-80cc-a9e754e39b5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ce01f3a-29a6-4af5-ad9a-a1c18c19c8b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48db5f91-cbb2-450c-a163-a92f37cb8923",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf5ba41-ec20-4365-bbff-a38c1c59d20c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7cdf78ee-892d-4cec-97aa-18fdd3f8ecff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa31fde-1da1-418a-a65a-1e3bc82bc04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af6987b2-cc62-4099-8196-0a331a8d0c09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b38b46bd-35c5-4087-9fed-0faa17d15934",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a51c457-cc0c-45a3-a418-c3a2970d12b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee6f33b4-9af9-4270-b82e-6f51b7575164",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f00755c-074c-45fe-983b-c5e2af73c4d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2321f58-09c6-4179-9bb8-868908caa425",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b370636-5e61-46cf-85d9-18013c5f35f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e139279d-aed2-4020-8099-db1982c4dacf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3775ef8-3f62-4985-98aa-96378059bd9a"
            }
          }
        ]
      },
      {
        "id": "ebdcdfae-99ad-4791-9965-b25e7ce6eb7c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2f0c4730-35fe-4d35-9028-56a24270f01a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45c6887d-6367-4b26-896d-5bcddd8544a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27dea470-2d1b-496e-8f9a-c783d6ab9f8f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b561a7-f171-468c-93e3-f48c84e1195e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255a78ae-39fd-4df8-a611-980c92392d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b645a9-2a98-44ca-8e71-400cd06bab36",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af40046-a1b4-4d3d-9c41-83e6415c702b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a608223-3e16-45dd-9394-7f01f0b655d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4b8bd1-0cd8-4b26-8e38-1d9f961015cc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf777c0-2f70-4eb9-b716-c58b4268c760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f25f90-d705-46ca-b137-31734d8529d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43b6e86-86e7-4674-a5d7-7be720be9405",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4ad352-7d86-4bab-8b57-7532f69e2a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3846fc30-ce93-4e44-9f30-e2e6e168574a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5985fa-e376-4035-89c5-2ea8e67cd669",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513df490-3a9b-45e8-aa4c-06164373bc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ffb1a0-ea5d-4b5a-b4ca-bc8d35dfb891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74550b45-a2a5-435f-bd3c-e2909f9d7122",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f66f1-2518-4862-8a44-5779a9f4b069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd4b2ef-d4a6-467b-9181-ec56c6b06889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e28c094-1617-4633-81ad-a3f195e5f128",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff60a48-953f-46c8-8aed-09395a17ebe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd21f5ef-1eaf-459d-ae9f-5904e22a97c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fcd98f-d1d8-4a86-b3c2-3b012563ce07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c99b267-55c6-42aa-b898-0f0e42f9d79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4ca8cd-0b78-457f-9fd8-a1630caca0ce",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f036a02-6f05-4f9c-9c84-6e3944c29be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b0d384-ac8e-4252-a9bb-50e953ea0722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa4af80-0464-470c-9208-a7b8ba674f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e589235c-0980-4768-9697-3513f3eb924e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71951ab-0a90-4c7a-b4bd-7c7ed4394bb2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98321baf-caf8-4a52-a0cb-015a9af45f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95dffe3e-288e-495a-a5f7-377a3fe8ffd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb6436f-7d6f-4232-994a-30c1495de773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43db29e-d458-4df1-aa7e-8da6fcc7081d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4fc0f0-9790-494d-bf32-add6b1cb14a1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9996a08a-473a-413e-895e-e05b39a9a3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d771ef-5546-4a37-a998-e2c6d1f84dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c97220d-efa2-4c25-8d15-e922aafb0120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6213b63-8e7d-4072-baa4-a3606dde3df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6991cb3c-55a3-41a7-abd6-f8d1e34bdc76",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6617dac4-7930-4d79-a8c1-0746887ce0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a831c1e-3e22-4674-97ab-0408fa374fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f362c249-ebbd-47ee-b6a6-b9b221d92ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b495f3-ddac-45b1-9290-d810255a6fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15513a67-0afe-47c8-809a-b6c79afcaa07",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de112f17-7fd3-41f4-9e68-ea1ef78c04bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb1d80a-2e3b-4e36-b7c3-554d3da91087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32300811-31ed-4fdd-9bfe-f06249e66b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d723833-8368-4d74-a2cd-ff4e9297eb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e4e067-cae0-4acf-9148-220f30694e2b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841d4e7c-7117-40b3-b053-22cf407743a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac6329b-2df9-4785-8ed8-0dde20765372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd7656f-3235-4e6c-bab5-26070ff98c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e7a8a8-a141-428b-bfdf-d18307a00b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be466bde-5749-4535-a8c9-978de8254c5e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0012339b-c591-4c3d-8d68-c0559f3a06b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42ccc733-0008-4608-bb62-458214183327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d1e7bf-0ff4-46ba-98ef-cabd44a04a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540ca22d-72e2-4c84-b793-f88f620e0c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e747a6e2-afb6-4c14-90f6-fe122b692b1c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55152b89-ed9c-4a34-9f37-3d037b362226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f83634-1703-4e17-8b4d-0e4938e0a417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fdb174-bf63-4d8a-bee5-d642ea88a45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ac2da0-c075-4cd4-8e3e-b541120a5be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ed082a-0d76-4bcf-8346-1d1cdb75bf32",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b2f0c8-b622-4619-9d7d-ec311824abe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8907806b-f12f-4825-a2e3-19e6d4f5b2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed5df57-56d7-4b86-a87b-452bc5583bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ecf988-aa0e-4707-be98-6c61f13c4102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92be9596-9531-4d5c-a005-c983dc006206",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8773cbcc-3d75-4db1-ac38-8827b713ba3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e53531-762b-4c72-994f-cc93239d3389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92494987-c3ee-45f0-a6df-ae809618fcf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5816af-79f4-4245-8ac9-12708210439a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f19c27a-7e73-48fd-bba5-81775eb7708d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7d4d67-939c-42f2-87be-8551372912e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa900bae-74f1-4e3b-bfb9-05fcb8623be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5daf88f-1030-46aa-9443-bb51c69bc245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce19255c-f51c-43fe-a907-ebbac7ca4d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6b53e3-9029-4e7a-b417-e8ca6f3a4169",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64109cf-ed5b-4d03-a406-f0b4d15973dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046ea45d-1638-470e-bf85-20237dd3fce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f296ad1e-dfea-48f1-a477-f37702ba648e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bc461e-d487-4cad-8bd0-84c79be1c184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687ba836-7b43-434f-82f0-1a76ecd48723",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf882f7-49eb-4994-9ae1-8337d000f1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bffb23-9370-410e-a1d5-2e1503d6b93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65821c81-98ec-4fe4-88a1-06a08a654583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8e613c-c693-4220-be33-d6f107d02ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622c1c1b-fa85-417e-ae25-30c8d541540d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6864bb-edb1-41a5-98b2-cc08296b165b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc240f7d-2b53-4e53-b0c8-af0de3afd9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b77399-8f0c-4a89-9073-6796bca270b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78170380-ea3d-40d6-bc7b-37d285926196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3721023-4f4b-4d12-9139-33e6be9b3b3e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf9cd8b-040c-489f-b720-6991d0b4a113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4b0868-37b1-4590-bc50-667e65efc5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2eb3a0f-7c7a-4af6-a523-08d60759e1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3f2313-e7f0-4639-8d0b-20d6e76a9fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871e4319-fa70-4cee-bc32-c270c4112912",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da340975-32c2-4cd5-87eb-c0e942afc0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6e3d7f-6ef4-4f95-9e6d-1623b788b740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4b7fbd-3337-4d2a-82aa-83884f384c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc9935c-1ac7-4949-a859-098263a625e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fef37f-1677-4ba6-967a-8c82be1c2c8d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16601a3-00b4-4f58-9843-e139a3626652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b8e107-4c82-4a48-b33d-eec7f7c2fe24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d788189-017d-49ec-a1de-ba1a8d4acd18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa40bb05-679f-4574-87ca-326d59ee59ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141c6737-e946-48c7-9d16-ae9c99950f7f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a27a00f-4990-45ec-9d25-267120618313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa4f48cf-0982-42df-986a-93ced0eb9cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccce143d-e5c0-4274-954f-c5baa7692870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee36cf96-de7c-43fd-b49a-2d0bfa03ab1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7deeea6c-6188-43c4-9f78-acb1fff373fe",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42e9e0f-1faa-4f0f-a3f9-377d44e69b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b81880f-c4aa-4c21-b0a2-01b3d6dc4639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9c99a6-3258-4f36-9f98-ebd52ae2aea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8475105-c2eb-480f-a49a-d88ad309de35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc25fc83-f75a-4b91-9b52-a9a929df115e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfb0a27-3428-414c-8352-22e02d914c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d53950-cdc4-4928-9fc3-acc8805c17b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604be0b2-7e13-40d4-b979-7f0fe43ae6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f479d58a-6f43-4040-83cb-48bd2b1511d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1829360-c359-476d-ada5-d56068f0f8eb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b449c30-8eb1-496f-bdb4-1bcf9554fbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63679fc9-20c7-4ac6-a0a5-eca5b417a9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee1833c-b5a0-4a2b-a806-f5837ead8127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c33852-7e20-47c9-aa82-623f016dfce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7315027-0cff-4e60-9de8-9b579b36a2e9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6fc2bb-19df-4faa-bbe5-03eb06379c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cea6a63-a07a-4236-8c0e-044d0f8663c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999053ad-ef62-49f8-895d-49ffed2a6725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349a316e-8eac-476a-a8d5-315a4ab2f6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d21a7c-bb37-4840-b926-e6de66b9d0ba",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8b2962-5daa-421d-b766-3273a1d515c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c0c058-96e8-441e-b668-5d27cb8ea258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06d77c1-6a98-4937-811c-abe00b1068e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d65994-d8f2-489a-a063-d0d324e4feb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6cfbc8-3f7d-4a3f-b38c-5aeb8241139d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56c2285-2f67-4fdb-afbc-0e518b75e798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0b9cd7-7bae-435a-b619-f62a7d1eddc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2178279d-0817-428b-9cdc-fdc7f1e3b409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18d75c3-020b-4e8f-b65d-3634d68b6ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292dd023-bc23-4926-9f49-311566d307ff",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850b57d4-d6fa-4c9e-aed6-6075d7664232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca81a06-0acf-4dbb-8335-e9664222fc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15171698-7c14-4adc-a3f4-ce039cc2d891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f186e9-3489-4c64-8a74-8f9adaa7977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebba16b0-0cf5-4592-84b2-bf2f96a2b907",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbf4353-b9f9-4e7f-8444-4fe8bf1656ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "466fcd50-61d4-4b94-8e0f-ce4cdba23c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef28655-d925-4c5e-ba0b-9751be2b7ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ebf3d7-2898-4e91-8878-c21e5465840c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56883988-6d1f-4678-a356-bf9bf434ad12",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10081171-575c-448f-a28c-16ca34c17752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aeed5c8-8fc7-4f96-92f9-f96c5332c6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d03f00-388e-45da-be8a-b1e3ba8f1053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5a8e3e-097a-434e-85e2-60f4232a0542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ed1f32-48dd-4f03-930e-d31cc302b8e0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3c73a0-b7d6-43b3-8b8e-6272381e23e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8816dc2a-bfa0-4689-9a2e-daafa745b3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bc20c9-bba1-4426-95a7-a2b719e7643e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5adf35-e261-4855-8b10-16bef60de6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647a9bf7-7d7e-42c3-acad-175b68a2f159",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e23e3f-3d6c-4edb-9c36-1321655603bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f780cc-a1dc-4080-addf-13d71868f1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bbec54-c66a-4a37-9c78-9374e67d63fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad8dc29-5087-4c0c-af7d-c022f22f75be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb8f6ef-bbcf-4c9f-a856-bd3121a9428f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7366621-d5ea-49fd-9970-288be28c4010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c813de67-8ad5-47bf-b5b0-696fdae320db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009691ac-5cfb-44b0-a68e-1b5ae83504fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ad43f3-2ae6-4320-b1e5-f756001c7a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c98dbae-d73d-438e-a613-fa13fb097635",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f4766c-15f4-4ac3-b912-d5f02567c996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c79478-b964-4ac3-b288-ae7c90e4eff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f90040-53c6-422a-a605-c843d4ba6b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ba2dca-af56-4463-ab15-4818726ae313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b484de4a-eeb9-4636-9987-3521e3e265ab",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db9ce5d-bb84-4339-85ec-a458afd8c8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bc97fd-7690-4f31-9c42-37ae331b0dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c408d4e-1895-490f-9c65-7999fa0d4813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec3dd2a-b4b3-4ee8-a4de-6efb2358c3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfffcb8-46d4-470f-a208-2b74c91f9589",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beccc503-1e58-49dd-a262-e7c1791fe1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d688d240-e20a-4bf0-8976-0644641665db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78941c96-f680-4ef6-8a03-1a96d734e4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b07da8-dda7-43ac-bbf5-0c4805b796b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b06319-d805-4e14-8da1-bb047bae31e9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468faf00-3250-4489-b752-ae48c1cb9b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc73816-18d6-4a5b-880f-0ccd4ae474bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2bb84c-a759-48e4-8972-4ed70928d77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260f8101-eb1c-44c1-80bf-b647a5ecccda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce931990-69d9-4adc-bc0e-bea271ffdc10",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6529443-c17e-453d-b9eb-af3180ce1be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1db496-a11f-401d-9063-3270eb74be36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d1a3fd-9d0f-44f4-8f5c-dbbbdf305dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a76d533-9414-43bd-8478-c9b0ae168189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36df81e5-bea2-4493-82d4-525582c43745",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211f8c56-13b7-44d1-8455-ab4af151dd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58214884-2f55-4779-b0c8-fd6bf4e4c997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ad4597-7b00-42f5-8271-e937c87af7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d014a27d-723f-4231-be3b-36667b074ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c2d9a2-d866-4cb0-8010-49e58953b17f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e16012-dfff-4d7d-b682-b8ae01228743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20c0d3f-797e-4437-8bcd-6ac8d312cf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9770c4d-ad16-435c-8581-ce7d345f4bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0c345b-2475-4c78-9c49-6310266bd115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d99c73-383d-44b5-86ff-342eb21cc8e4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca521651-510b-421b-b6f9-0ea6e8715e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6607cb2-a562-4c98-8dc6-12a678b29c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f0216-6185-4f62-8ded-8c06ad4bc680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa1bd51-39d1-4289-ac28-cde5f5f029f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48ae2bd-4964-4059-9e13-d4b49ced2cd1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de8f31b-d1fb-4df9-bc7b-cf7edef7759b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6b74c4-a0b0-44f2-a7f6-61bfc10a37dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00906fc1-48e9-4bf8-a3e2-c2edf812c9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284164cb-9feb-4124-9f1d-51f40d52c705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794128ee-3999-476b-a933-961f58bedd21",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bbfef1-84cb-493e-a0ee-1f94dff84e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc12f036-4c1e-4a27-b70d-5d84879be7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeba266-6e21-4c6d-b41a-930132c488d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d24eef-759d-478a-a42c-3bbec9d6f4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29745d3f-840c-4d2b-abac-60a938ce00bf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3566a7c6-2be7-4f79-9d03-d6448c34daab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b72819-8bb2-4f39-8a39-71dcec7ca8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef232641-29a3-4dc8-b7d7-d776aa7cbfb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cc5ddc-4826-4d1e-91e9-4f58da15be61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bfcf47-ef57-4fef-9887-1ff3b7678697",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25502dd9-7f56-4ed3-a18e-6108cbb69f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87bc7cd-f3f2-4589-a92c-f3f49b25dbee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41da592f-13fc-42ca-9689-dffe990a0d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcffb9e-1d4d-4450-9671-446b04ed208b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15b6418-66b9-47db-beac-0bef43273ffb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff521e0-dd29-4bf7-a539-db11f3283185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c36bb6c-5a16-4e33-a22a-70eb4eed51cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3807ea62-d68c-41f9-879a-0bc616f7bb38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6bed9e-e752-46ab-a487-15b5eeca1f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3660c367-5945-47d8-81eb-478d72a1e839",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78e324a-c318-44cf-9d66-180806afba4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3520b525-c6a9-4688-91c6-7e4156153201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853b5031-f902-4f0b-ba7a-eb88ee9ce450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bec0121-a786-44e9-8140-cebd368366d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e5131d-f629-4c0a-bd36-df0dadf27030",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61518082-4646-4cab-93e3-d9952f140189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5730f9c-5478-4aa7-9a82-32b83c86aca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094be72a-08db-45bf-a46b-eb877a143d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33eebe7-98c2-48ff-bcb3-da5af00ce2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5476ca6-78b7-4c1b-9dbd-70a68d146809",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2288dd71-0ea4-4d73-97e4-8777fd6ae86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499645ba-7122-4eee-9b40-0f323ec6ccb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7c1564-33cc-4357-9a20-5b9c87ead7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79345e99-7a7f-419d-9d48-42cc1ba512b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8458b931-4706-4164-81cc-0290c0faa1b0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8788c964-aa70-4285-a6f2-4517d69ddc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608aec50-2427-499f-86c1-304d054fb061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6509587c-2dfd-4415-80c0-5babbdce481c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea0d424-b099-4b74-b9a0-1fca9d967a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de21d9bb-1963-4829-a243-39bfb49e9324",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09479f75-655f-483f-97be-293c8f5534dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ce9871-865f-4821-86cf-ac6f279f3fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f157fc0-c053-475e-8a1c-696497a938f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfa9c31-4577-473d-92a1-539ace5e4177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a842f602-53f4-43e8-a00f-c1cfaf8049fb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953020dd-1b59-4114-b80a-4539f72c1a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dce3874-9e01-4847-9286-3cd1bc4f65d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed4c5be-8b40-49bb-8566-07f48a909d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc48e12-01e3-46d0-a487-567b0389a799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3711b49d-eec6-4dee-a6e2-9018b3ec4b62",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0986c3-3c91-4c22-9802-bc4f70f323f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757569d2-e1ff-444f-b053-86a02e2c434c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd193002-a76b-4027-8343-bfe1992f2c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550fa931-747f-40b2-8da6-2c671af88352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13706d1d-219c-4520-94a8-7208d6fc8122",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e927210-e1b5-44c5-bdc7-1f620a28a0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f926e6-1c83-489a-8b60-07e65934b4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dd7964-3c40-412d-9318-19cfb195f673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956ee1ed-f21b-45ff-a2e4-6911c7fbf4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc71f39a-294d-42de-864e-0fe5c724eeb2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85f3ea6-a44e-4f0f-af12-504bec2b2cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87b90f2-6771-45a1-9a5f-8c518d23ea3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787cd11f-528e-473b-9fee-78adecc9972c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af62d429-5b06-4b3a-af83-219fdc1f29ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4550f5-47d8-44bd-9b5b-4422dfe043dd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc6b808-76d2-49cd-ae4c-e15a7cef5b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3699e0-45ac-4c3f-a94d-470f9e98fa49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d88417d-0701-4b43-9ece-b4463ae26030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391ed952-1e2e-4767-942c-afdedba0f629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6adec2-8f2a-42d6-9b78-7d2479cb95dd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db88678-652d-4907-9e27-7fa13aee52db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3da16b0-2f37-41ce-91fa-c094c4bfac29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3768cc-9307-4e87-9146-9ce95e307832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6e53e3-ae1b-4644-8a08-2ff85cc8783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ff02af-30a0-4d03-9bbe-f9a22b64fd84",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19837525-d438-4c92-9997-0cd7d55acbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdd42ae-d711-425d-9c17-84b7d1c872c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37902df0-6430-44f5-a92f-b09a08b14c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7775a23-e75f-4c8a-8b96-5c70bfbc7ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db0f4da-31ac-49cd-bb81-c07be0b4e53f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edbf2a8-bf71-468f-8a8e-67da4ad01f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1ec62e-0bc4-4b19-bb48-8c1374b114c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10513c78-2ee2-4ec4-80bf-3b0920af7d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b78b74-2d8f-45e3-bbcd-c01bbf053370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e943c947-5041-4f7c-bf47-999f5209ec96",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ac1476-2c44-4d79-b7db-473eddc585eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea7c7358-1e16-4bdd-9905-2795d15a9a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a660e6-7a3d-40c6-bcda-18174bf44840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2906ecf9-e65e-4f2b-a1bc-c88c18efa738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b62dfe-2169-4fd4-b864-e4d99172996d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee5b705-8a95-442b-b442-018860e07346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c738db06-0631-41eb-b0f7-8285e2b21a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ef145a-ca00-40e5-87ee-6b963c5ff962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca5ea96-cdc4-4a22-b6b8-f9825921d7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8e90e5-5cff-495a-b65f-8b89e3009262",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3d6db2-271c-487e-a1e9-03299c1a173e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb02f248-0c05-4361-b802-c30638b6ac0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2429659-0e36-42b9-80f0-1e7b24cb29d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fc4535-e22e-4e46-b974-de16068b5690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bc4827-763e-449f-91b5-9163266abb10",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90bcd5a-afc9-464e-b499-ff2778678e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bc9620-3ea4-499c-9350-58d74455f9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d789420-9732-464e-9f30-384837bb934f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b718c1-f3a3-4d6f-840c-e3a95cbcf709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b285384-dee1-46d1-9c23-2943c18195a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d266e696-1939-4dcb-bec8-b9d93f8e87cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2cfb9d8-afed-4f75-9e47-165ca58d78ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebedc414-b240-465d-8df9-a1cb5e7672f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ef4f39-db82-4a1d-8521-c06bc746c791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780e627b-a1b5-4077-a755-5d4cc50f627c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7dbdac-a693-4bab-a194-96e713bf3f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d389257d-d433-4199-a9d5-4a36fe92a7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ebabeb-d98c-42dd-9c45-20c567f32a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65e74c5-f1d0-40d5-a195-52afa40799a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dda9b34-8971-4c10-9841-25ef83823e16",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5de28c9-7ea6-400f-a520-bf5795877eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afcc9285-6e26-447b-b488-8219972cdc27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617ff7cb-f524-42b9-8bc3-10cf142b0eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4332db24-2da1-4f63-ade6-3a98f65ab649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f970b7-6c93-49d1-9a21-d4e163b50b6a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbba4df-f0c6-4c54-a4ad-73ba304291b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d76f2597-7613-4cfc-a5e0-7c129f85811c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947cec28-26db-4492-a185-1fc431a3cd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa30877-ee03-475c-abad-f0cc9f166592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d53296-34ee-489b-9f8d-02aa20c0a4ed",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72440949-86d0-4661-b91b-98296377aecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d624d2-477d-4320-9221-dacdc232e41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0a4354-9f6f-40be-ac4f-76cee9e38046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55fb4f3-69ce-4f4a-9f55-aaf015851eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5624bec0-96ad-4298-a7ab-326b4a958339",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0d446f-c0af-408f-8202-aa0ab4eefba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95b683b4-d93b-47ba-9318-e5a0dabb8eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3c44ca-5d9c-459f-962b-d6c84a286f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53dc8798-d9e0-4a8b-929d-397442d3516b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e926c4c-9abe-40be-9257-3b299153fa32",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c3dfbd-62eb-4e59-bbb7-f96c4d18643b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff379260-2913-4ad8-aa37-c52de3b8bd14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37448afa-6f1d-4c9c-ae16-59adb6342079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0f7670-9d8c-48fd-b4a3-87cbd786ef16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d43658-0f14-4098-b0ea-fde7b9524857",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fd2119-52bc-4f26-ba0f-084ab5346329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a9a811-37e9-41c2-a541-45d973fe48c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a42e2a-7b69-486e-b284-4a8f92c8ed3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc214138-2ea7-42e1-a0c4-740d11e97225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e012ee91-cb6f-42db-bf02-a243606435c1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4ae53e-233a-4806-8c60-531d6e7eac9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a7a3e7a-38a2-4462-b325-962ecc2e34cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ba809f-19cd-488d-b843-a1cb35e1eb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ab732b-bd40-4de6-9068-a17d89c6d407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198e1b8d-369b-4be3-a605-0e7d3c6bb833",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131f56e2-c4a9-4ca9-866c-459f45a584d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cd6db3c-8376-4afd-b242-56bc7e79263c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431ada97-6277-4c94-a918-421324db06f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f757fbc2-6aea-4ec0-a696-eb7c1c0c9aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26056a21-a0f8-45dd-b6fa-26489093c31d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0022f0b4-27db-435c-99b4-040ed7f3ea6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f49656-2780-40f4-b066-b122c7578bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435f1388-2145-4ea4-9f84-a18efb1f1437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0302197a-a972-407a-9da3-06c355d237e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589fee62-4737-4090-95eb-f209215f0cf8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad3b499-7ce4-4b8e-b3ac-97dde76fe85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "628af6e8-e2fc-4da2-a5fb-3058ee06e3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d186f8-ef25-4a26-870a-8715425c6457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd21f52-832d-4d76-9dca-c66bf791624c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36cd28c-5676-4a49-a5bb-6653eb9aba51",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bf0659-293f-4a5d-8f93-8d3fb16417be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30e4edc-d80f-43fd-93be-ad8a2e79474c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54496699-346e-4788-826e-acfbf406680b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965a27f5-5080-40a0-aa13-15a94aed54ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4028197-d7f3-4b2a-9b17-278699ac4fb7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1231e3c0-2b63-4edb-ab97-2669a5f7ce0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f97f061-bee8-4b7b-a310-07e48d2510d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd08d112-1526-41b9-99a9-75ce5e8f7dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe7e1fc-f236-4d9c-aa9b-bcdeedfeb22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0127a85-ee9b-4ea5-931f-11c7b1af4895",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b1e693-52e7-48e0-a495-de097e12bd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b69acb-4ad2-4c17-8367-4f7d21030d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5585335e-6834-46df-8569-eabc4224f28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb781fbe-d88e-4e9a-b74c-1cfbe8809ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a07718-5406-45c6-832e-97b670c9c04f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4880a39-d16d-4a4d-9cd1-a58d55f236f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da8a63f-a166-48e2-b646-cf67144e494d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff54b379-e266-4faa-9209-1a2aec00a009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b439b1af-fc54-4ba0-9b49-e2636f020ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46b9f6e-8543-4cc5-bd09-6f39f580fa70",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5179bb60-ad3e-472f-9310-13846362e360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f77c4aa-c834-4b81-a7bb-78772f1748bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901b47ad-0f01-4753-850f-b9932a3d96ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217bf00a-8a1d-4db8-9810-a43d924084f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b58c6d-69b9-4087-8ea3-6fdb31c61914",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec517cb-fadf-4a2c-876b-77035d7ebe66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376129ed-0bf9-41f2-b77b-284c86964e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32783624-89e1-4bc2-bb5a-be2d316dd182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f428f6e-dc06-483e-83e8-94364b477fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c48274-c7e9-4579-b9dd-e93a28848045",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f38726-b508-4fd4-9ec7-e9ccd4b96a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f5fc7a-5857-4d9d-bf62-7ae27f00ccbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a562f2-e441-4fcf-bc58-7521be6025e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd94970-f5a2-4da5-aa4f-21dad8fce8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ee8dcb-c0ea-479e-a822-b33c8ad6dccc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc0591e-53e0-41b3-8261-c542bf164ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56bb5b65-504b-438c-87e9-62938c7910e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38307b36-532a-4201-a6e9-a90e77cf8d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6be5fe-a48e-4282-9798-09bfceb814a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9275af15-d9ae-4147-80be-841db895f6cc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01525cf-4f2a-46af-bae6-9c7651840534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85acf4ba-3055-43c7-a00f-f7e0733d72d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd6d1b5-75f6-45df-9209-edbdda32cd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad9d1b5-4300-4846-8fc1-634e0e7b2d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1beed1b-2fae-4814-8903-d07650510ffb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa9ec8c-e57b-4149-b212-90460d520447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77ce312-feb1-4d56-9116-b0e6c3d4c372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e767f29-9bad-4e99-b5e8-61238be1a389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ac5090-4968-46e5-a9d3-c7db15a3eb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2dea4f-3b74-423d-af73-f94cc5a6ef8b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71ba048-4c90-43d0-bb3c-d3ad4f323075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "243fdd02-1d19-4412-b47b-1c3de5feb5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfbeb34-48cb-44aa-9668-3c7f3fdaec89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34841e50-425b-42a7-846f-b995f63073da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3195e8b2-5fca-4746-8205-88d9201a8347",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0c6d12-bd12-404c-887a-4708701ed3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262cd890-c27b-4107-9588-4329a57fd6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a2efe7-4976-45aa-92be-5ece042cad54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2350f45b-4dc7-4bfa-ba63-81c31c43b23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae9c07b-e5e4-4ff1-a416-717c95423846",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca8b5fb-a602-42ee-af5a-5e3b9922f036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bca556f-4a8b-46b1-8558-e2ae9e1cf549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e71f26f-769f-4481-a9eb-cfc2aa3ceeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b2ff5d-c12c-4f75-8dc6-5c2f3b2c614e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7690d425-8e7a-420a-8430-b00c63167622",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98a70a9-e6ac-4a61-a34e-27ec341e6dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a74b3e3-c340-4c48-a939-d8ccd3409c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232699e8-d027-4a5a-ab2a-173084f843dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596f7c79-96e9-48e2-ba4d-56a0f778d0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455fc408-c33a-49a2-9255-1fa478020742",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23d5227-86bd-423d-86d6-2fe37a78a5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af526b99-2817-4107-bce4-b7900c42a3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a288c6-6dde-46dd-9790-fe322aecfd2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c342e8-acf5-4c3a-8ba4-23d69be5cb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91972baf-4291-4dcf-b8d2-2dc2a0164c72",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0a6f1c-6df2-40e7-a669-32b9c8799363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3806c4d0-3b08-41fc-a4ee-327ee6b47dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47218193-2282-4b83-b998-a607b616b0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6ce3c9-58b0-40bb-8713-1cc7435c453d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30fa84d-afba-46f6-9182-afbf0e67ee7e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dff2db-9360-4c46-98bf-f9c0f6a1a3b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff2fdb9-ca00-4f5e-b098-696ef5edb338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03eba5e-a4b3-4630-82a6-69e29b2bec0f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bd353f-884b-4306-b634-31ccb32ba45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b921ea-554f-46f6-83ec-afbf5dc59a1e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196d33e6-ee5c-48d5-8089-310eca2617fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1327d0e9-67b9-4e1a-a69e-a148ca29becd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e070f41-6d82-4c13-ac46-65a73343596a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a666db8-7c2d-449b-ae5f-e9fc01f37313"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2e743c8-fed5-4ff4-98b0-53963a64c5d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8107aa3b-8d2f-4057-a9f6-0ec8ef51aca3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bd07013-a9c5-47bc-abf9-dd8d43c484e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "087cfa3e-ce72-4467-9d59-afcd601b074b"
                    }
                  }
                ]
              },
              {
                "id": "60fde1b2-2397-4e9f-9023-a57def90d709",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a068ceab-fa23-4648-9a7f-1f6f498c9e0d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032a67a3-26e4-4702-9e64-b14c5c05ac02",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "da00e1c7-da30-43e6-9461-60d853eb2c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1751af-cced-49a7-b6e6-0256f8f0fa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93adc259-e2fb-42bd-9934-b1aea2184d3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af050f00-019f-475f-bb5c-9f5e0239e8c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c19ac2de-8347-4045-aaf8-bfd7bd8cd0f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88641870-2728-460f-b024-0960d95098a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2254c5d7-8fdc-4768-80ff-3242aa99bfe4"
                    }
                  }
                ]
              },
              {
                "id": "d5f59fa3-87b4-4028-b198-3de16932d254",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0bc6c9a8-9dc7-4841-b952-f304c3853022",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21820166-85d2-40e7-aa1b-e96a26af02d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "df3e0e5d-0e6c-416c-849c-e6552aa0cc8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9941e3b3-0477-41c6-b1f4-8713cc1d5ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8aa12b2-d071-4761-87e9-b4163f2bd2c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "41978bfe-8523-44d6-a279-466ec30df72b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd23dd12-34a4-4d4f-ad5b-3df295e009a0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "096698f7-6dd5-49a7-a0df-42a177c20456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7193b10d-dff3-42af-9a65-266461a7fec6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "215817cf-9621-4d85-bd82-190fbf98c2da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a973e15d-a863-439a-b26e-b9f71e72380d"
                    }
                  }
                ]
              },
              {
                "id": "218c011d-e5b9-4ac8-8c87-4b3058802443",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3091e1d5-75ab-4919-bf87-16448d55ac9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "267aa683-6fd5-4471-8279-cee941d7799a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b99233c-1502-4c1f-bc68-8c88ae12345b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a2ea7ae-6a15-4a5f-940f-0fd2fc54c734"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a479353-17f8-4264-8b21-c5fb92442cd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0bbd9726-a3fc-4483-a011-db554afa5819"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fcc0aa2-b80f-4e94-9e0a-d7a32fe6ba44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16026433-b893-4854-be54-4301e2f56d5b"
            }
          }
        ]
      },
      {
        "id": "c67b6e4a-f5b8-4d5b-b56d-c2181c55c23c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a9f91db-198c-4625-a96e-f9043da8a6db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b728806-4a2e-4ac7-84ec-55b1a10bbd0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb23efd8-11bc-4bf7-9637-b112bebf5893",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b6689d-1f8f-4141-89c7-1e398c09b1d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e097da3-9735-4f0a-9d8e-c1a2cb10ab20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7f1a59-b07c-4e04-ba77-df7e56fd0532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a6fdf0d-e014-4473-8b7b-e7277fe15175"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b428df8-4ff8-4c56-831a-ab55d6d4bbee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29239db6-18b3-4382-8ccb-d3543f6b73ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e54a2bf4-fd1d-4373-bed8-3803fd129067",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13eceb3c-9af4-4011-9dea-47d2807f98e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9dfd5fa-f5f2-4f44-9dc0-480037f1154d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "11f0d7f8-050f-42a4-9d43-583f3c276956"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cea0fa14-db30-4968-b743-ff87e53f0e99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "812b7d0c-cc3a-4f75-be1c-ed4f92bd92cc"
            }
          }
        ]
      },
      {
        "id": "b9a6084b-81b3-4d91-88a2-a35ec38e9b2a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9b01cdb2-c4e2-467f-b0de-80f9a6975152",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e4a5a5d-6043-4e31-88fa-be0b8db87459",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1b2f3bc-c9b4-45a8-a3fb-bc67e0262eaf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8252f35e-212b-4784-aff0-7a6981a7f384",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8a0e0b5-e9ff-492e-ab25-b37e141df1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d93cb69-2852-498d-86b7-fbf74d70f0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b562fed-977b-46ce-9031-a19f2aa91998"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7156c350-2944-4546-87a5-c702605aaad5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b26f6ea6-34a3-486a-a5e6-543bc032c1bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5adfd34-1f4a-4ef9-849b-28902cae3c9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f90bf549-97e3-4dcd-ac4f-c0b7eac2c593"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f8b19dc-da83-4eba-ac2e-30f7cf210d4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e52051d-35db-41ca-bb47-1d3bc137e887"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cff65b9c-b42f-40c4-ab22-e0c6e292a791",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ab00984-3cf4-450d-aef2-9981194c3991"
            }
          }
        ]
      },
      {
        "id": "f1090b49-9bbb-4c1e-85a8-6f590ae1f08a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "53718098-b04a-4585-831d-ed8c94f141b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e18eb60a-d73c-4b03-8279-775bab15dc22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ae84c2f-31eb-471b-a313-2d9024fff07e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ee8114-5074-4df7-a8d8-5a4d5293b929",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36434b33-2194-4b0a-aedb-e40a93e0b68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9325b553-c9f8-49bb-a190-878973519271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc620700-f6b2-4635-bace-25b81f16f4db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8367f160-95b4-4155-9a07-b0644364c198",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d757ca42-8224-451e-ae0e-96bcf335c6f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f76e4c32-751c-451d-85fc-1f288c2fda67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3256b30-f7d1-43e7-a5fc-99b7694b8014"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e18ec8a8-7a14-4b58-8ce6-1c48288246fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "956908b8-c011-44c4-bed9-31c453083b9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5de40879-886a-4e95-b44b-8864f9d02847",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35249072-64cc-4d5f-8587-362990f691ed"
            }
          }
        ]
      },
      {
        "id": "65b85d14-394b-482f-aa8d-7f80fbd6f4dc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f076bc8e-dd31-48a9-ba12-1c0ddb153388",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77c88a71-336d-4222-9227-0ca8de704af7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dbe22953-17d9-43ba-b414-ae1219e372fd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0767c2b-d693-45f0-bd5c-ebb914ba170e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "062ac762-45c9-4380-ab3b-3498ce1a0719",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 118.40079365079364,
      "responseMin": 25,
      "responseMax": 10751,
      "responseSd": 750.6985015025009,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721954370275,
      "completed": 1721954408213
    },
    "executions": [
      {
        "id": "87bbe348-f284-4c25-a5b1-763d5d713bf3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "907566d1-9923-459c-ad74-4902a9530fc4",
          "httpRequestId": "fd69bfb0-e1ad-4244-a765-a4c90515b83d"
        },
        "item": {
          "id": "87bbe348-f284-4c25-a5b1-763d5d713bf3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5313a453-94a0-4c3b-a544-d5c842d85d50",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 0
        }
      },
      {
        "id": "e480589c-afa7-49de-bcc5-ed5ead957db8",
        "cursor": {
          "ref": "fcc164b9-065e-41be-98c0-8669a65cc318",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8317646f-2d58-4cc9-95c6-916c58354fe6"
        },
        "item": {
          "id": "e480589c-afa7-49de-bcc5-ed5ead957db8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "84693e2e-04ed-47f5-99b5-2e88513093da",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "bc080833-7faa-4434-a151-9b5951020d99",
        "cursor": {
          "ref": "b92cea36-6447-40df-96a7-e697cce81045",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b267e2c8-e40a-4de0-88cf-ac96fd32d773"
        },
        "item": {
          "id": "bc080833-7faa-4434-a151-9b5951020d99",
          "name": "did_json"
        },
        "response": {
          "id": "632a1b12-8fea-41a2-aa5e-9066eb94b88f",
          "status": "OK",
          "code": 200,
          "responseTime": 269,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841f78e6-690e-4df7-b51b-9456ee31b526",
        "cursor": {
          "ref": "16ad4fed-1268-4863-bf64-3f02feeee6b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fcb03bc0-df79-4526-9892-dd0d26803821"
        },
        "item": {
          "id": "841f78e6-690e-4df7-b51b-9456ee31b526",
          "name": "did:invalid"
        },
        "response": {
          "id": "a413ba41-a6b5-40e3-90b7-676aa7a30f68",
          "status": "Not Found",
          "code": 404,
          "responseTime": 479,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841f78e6-690e-4df7-b51b-9456ee31b526",
        "cursor": {
          "ref": "16ad4fed-1268-4863-bf64-3f02feeee6b0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fcb03bc0-df79-4526-9892-dd0d26803821"
        },
        "item": {
          "id": "841f78e6-690e-4df7-b51b-9456ee31b526",
          "name": "did:invalid"
        },
        "response": {
          "id": "a413ba41-a6b5-40e3-90b7-676aa7a30f68",
          "status": "Not Found",
          "code": 404,
          "responseTime": 479,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7527310-c7f3-4152-a3fc-aeb5678e522d",
        "cursor": {
          "ref": "5fd030ca-8f49-4a5b-998a-af5397526b06",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4784cdbe-1e39-4ef9-9d33-a4752b24b037"
        },
        "item": {
          "id": "e7527310-c7f3-4152-a3fc-aeb5678e522d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6bc02563-ba7f-4d08-9d29-2e61eb124e44",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6176f90c-bd4d-4db6-81ed-e50b80241b45",
        "cursor": {
          "ref": "d4b1cd60-076d-4ec9-8b50-7a7e4427e65b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5a000062-823b-45fc-b721-cb1238a279ad"
        },
        "item": {
          "id": "6176f90c-bd4d-4db6-81ed-e50b80241b45",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2f35d3bc-4e95-46e6-bf8b-5580c3bb453c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 100,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a282bb1f-bcd7-4be6-9e0b-cd5b9ef9f20c",
        "cursor": {
          "ref": "f64356b9-ad95-4d68-b190-50ae2ed42d17",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a81420cd-a666-453e-b57c-0cbf57edfda5"
        },
        "item": {
          "id": "a282bb1f-bcd7-4be6-9e0b-cd5b9ef9f20c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "628a22ce-7824-486f-8621-cb1b803f6469",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6da540-4550-41be-b066-7f647a1afd12",
        "cursor": {
          "ref": "6b1d9dae-572a-4fd7-bf29-7d04bd637458",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bd45aea9-7751-410c-b96e-a9a60e52306c"
        },
        "item": {
          "id": "df6da540-4550-41be-b066-7f647a1afd12",
          "name": "identifiers"
        },
        "response": {
          "id": "071e8fcb-5355-4ea5-af1f-0e7921f4c3b6",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ec4b20-1c77-4617-894d-3eb1860fe800",
        "cursor": {
          "ref": "7d530c4c-19d6-49fb-a5e0-9f8d7021d8b0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a23b35a0-b961-4971-b9d4-7fe31b82bc3a"
        },
        "item": {
          "id": "72ec4b20-1c77-4617-894d-3eb1860fe800",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1a306ed2-73e9-43e5-90e6-6063437dbae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d62150-b5c3-4437-bd9c-a0fb82cf3a97",
        "cursor": {
          "ref": "2ee5aa21-c9f3-47ab-84c3-32f773805c0a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1715201b-4520-4342-9adb-cf8b57af2cdd"
        },
        "item": {
          "id": "e7d62150-b5c3-4437-bd9c-a0fb82cf3a97",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a43b298c-ddcb-4d4a-8c14-321b5ab93354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb1b894-317b-407d-ac37-2c7e1cf24afe",
        "cursor": {
          "ref": "5ef056b6-6848-4437-ba14-028d07bc6d5d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0bef518d-6c30-4fee-a7d5-4cc2336b2f85"
        },
        "item": {
          "id": "edb1b894-317b-407d-ac37-2c7e1cf24afe",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "579bb86c-ed1b-449a-be14-309c6d91a996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61d46cd-7860-479a-9315-27da5f3bc753",
        "cursor": {
          "ref": "bdf825e8-64ad-455c-be12-b9950a8769a1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "255170a6-8b94-47f4-91b0-f3d3ce33249f"
        },
        "item": {
          "id": "b61d46cd-7860-479a-9315-27da5f3bc753",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8c140f07-661f-49ac-a7c3-99fbbb75538f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730cdd8f-436c-460f-ad49-f9347ebe4181",
        "cursor": {
          "ref": "21be0179-4df6-4ce0-8adf-6adff131ea0c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0bf82d22-bab1-4fc1-8eb0-e7bc5aec3f27"
        },
        "item": {
          "id": "730cdd8f-436c-460f-ad49-f9347ebe4181",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1756aafd-cfde-47b2-884c-09a8f6fe4cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6e879b-e0bb-4aad-abda-e72b22fed485",
        "cursor": {
          "ref": "fe633f08-2684-444b-aaf7-e9ee21a88ec2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3632b1ef-0ecd-4ae7-9012-bb3dfa432ec2"
        },
        "item": {
          "id": "bd6e879b-e0bb-4aad-abda-e72b22fed485",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9ecfc206-cfcf-440c-90dc-721b938cdbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88a2d66-a7a2-416c-95f0-6d55fd82b728",
        "cursor": {
          "ref": "fdd3212c-dfea-4d46-a538-7a954d6a5aa2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "19ccb981-97f7-4d58-9241-2e79c8fc7c9b"
        },
        "item": {
          "id": "a88a2d66-a7a2-416c-95f0-6d55fd82b728",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5c8d86fb-9ffe-4b26-82ac-93ef0ecccc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6896ce64-a544-40be-a8da-57de1462b8fe",
        "cursor": {
          "ref": "bc001fe6-7dfc-4c4f-8b9e-02e5b7eee7fd",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "40cd114f-f1a9-4d3d-89c2-1f4e3b5906b1"
        },
        "item": {
          "id": "6896ce64-a544-40be-a8da-57de1462b8fe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fc54e9d6-c613-497c-8100-62eea623b91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a92c07-922e-46dc-a0f1-05bcbfccba36",
        "cursor": {
          "ref": "df071f9d-bd96-4c72-8443-a9fa4176f8fe",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "84167ece-cb55-46b0-806e-f401594283c0"
        },
        "item": {
          "id": "42a92c07-922e-46dc-a0f1-05bcbfccba36",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "66def198-57cb-4800-92da-e1e7e53a57e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca16fac5-df05-484c-afd1-3f36082a0d6c",
        "cursor": {
          "ref": "6c4223c1-d290-49ee-8b1a-7d52ed628d91",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "851b81c2-46ba-4264-ae15-a9595d2e06cc"
        },
        "item": {
          "id": "ca16fac5-df05-484c-afd1-3f36082a0d6c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cca22dfc-2bd3-425d-8345-b82146a7043c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bcf2cb-f232-4252-a8f9-1acb1881b1f1",
        "cursor": {
          "ref": "c51c36a2-c601-46ba-a8a6-34e20254b25a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5cd6c102-3c41-4a7c-aa7e-c9d49550f34f"
        },
        "item": {
          "id": "a1bcf2cb-f232-4252-a8f9-1acb1881b1f1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "85299f65-446c-4ff0-93f2-88ae63ecd675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d4aa05-3ac7-464c-9d1b-647611de8009",
        "cursor": {
          "ref": "c4693a50-26a8-4cca-bd24-ad090f207acc",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cc984579-5b3f-45e8-a8bd-3624f7d61831"
        },
        "item": {
          "id": "88d4aa05-3ac7-464c-9d1b-647611de8009",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3c2144bd-7a67-4889-94a7-2945d9f9aeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614a93de-1d26-432f-ab2f-7a405cda5c6f",
        "cursor": {
          "ref": "451e49fc-1cf0-419a-adbb-676efc8cee3f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "69847106-cc4b-4761-bb31-ea61d2d4f079"
        },
        "item": {
          "id": "614a93de-1d26-432f-ab2f-7a405cda5c6f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9e3f0dd3-34a8-4296-8bc8-87cba852dbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c818a7-ce84-4896-a87b-022e8ca9e1ae",
        "cursor": {
          "ref": "bcc50f34-ed2c-4368-84ec-0326ec8d9327",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c1788adc-1f09-4e82-a1c6-a41b14d8c64e"
        },
        "item": {
          "id": "80c818a7-ce84-4896-a87b-022e8ca9e1ae",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "834a4d5b-69a9-4325-bb42-a2a57028fe4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2959fbb-e241-46e9-a3b5-128f52be80f9",
        "cursor": {
          "ref": "23febbf0-cbb9-4601-a7e0-1304768e312b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "da7cff79-9ba6-44c9-b4fc-c4e3ee74a5a8"
        },
        "item": {
          "id": "e2959fbb-e241-46e9-a3b5-128f52be80f9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "430b1a7e-2257-4b80-beff-62458a6b5f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353afd51-a6b5-4e00-aeb5-d88d6f8c7a1b",
        "cursor": {
          "ref": "3e3be225-65b2-45f4-be6f-bd64c46b3af6",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0d813c5d-6d7d-4502-82fa-494dfe57ec69"
        },
        "item": {
          "id": "353afd51-a6b5-4e00-aeb5-d88d6f8c7a1b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "637e74e7-727e-45da-880b-edf678ce09c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64744968-480a-4420-8da1-73bfc18a2b1f",
        "cursor": {
          "ref": "b1776fa0-7aa1-473c-9595-1c1ef817bc5d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c45af980-3cb7-48c9-80c6-304b0ff025e5"
        },
        "item": {
          "id": "64744968-480a-4420-8da1-73bfc18a2b1f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7b080163-1e1d-448f-8e0a-2bd85e099c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35b4b0d-d9fe-41e2-8d76-2a767bcce775",
        "cursor": {
          "ref": "39d52385-5c07-4dab-9f42-449bfff6be2d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "885055d5-c961-40d8-bc7a-b9fdd0f84a27"
        },
        "item": {
          "id": "b35b4b0d-d9fe-41e2-8d76-2a767bcce775",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1a805573-eede-4470-bdff-1eaa549265b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb20b919-d0bb-49a0-a040-c9f56bd8239b",
        "cursor": {
          "ref": "bb2a4d05-39b4-4211-ab66-c2e4e3e24334",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c6fa9538-0f65-40a3-add4-9bb65cca2f3d"
        },
        "item": {
          "id": "fb20b919-d0bb-49a0-a040-c9f56bd8239b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4e40d1c7-db22-43a3-a9e3-514c74c7ce80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b92425-3d0c-48a9-bb93-9f337de5a38e",
        "cursor": {
          "ref": "51ba5ff4-a287-45fc-b146-e12a5844b812",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "17853ed2-42c0-4d5c-a64c-4049e149e850"
        },
        "item": {
          "id": "a4b92425-3d0c-48a9-bb93-9f337de5a38e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "03bbfcd6-fee2-4eb1-953a-5bc98dca5663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dd37ac-5ccc-4f2b-9c55-9d3879aa86d2",
        "cursor": {
          "ref": "e1d30b60-79d4-490b-bb70-1801104c8d76",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7dc92910-c18f-4181-a0aa-cc539fa9ad64"
        },
        "item": {
          "id": "88dd37ac-5ccc-4f2b-9c55-9d3879aa86d2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "35d69cc1-1572-4211-bd4f-594cbfa0d080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef80988c-9738-4368-a68d-2de886141146",
        "cursor": {
          "ref": "c0c4f9e6-b17e-457a-88d1-9827a740c3b5",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "97ba7188-b120-49b6-b376-1419fd429664"
        },
        "item": {
          "id": "ef80988c-9738-4368-a68d-2de886141146",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ee74c9aa-888a-41ea-b3b1-c3358f9fe434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a31eac-591e-4c79-80e1-58ca98e71c16",
        "cursor": {
          "ref": "75948d4b-8d13-45ce-8959-4a8f4fc2f6b3",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d890552f-d1e8-46e9-9759-69226063e8c0"
        },
        "item": {
          "id": "24a31eac-591e-4c79-80e1-58ca98e71c16",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "923c78d0-18ce-4aff-84c0-67683639382d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abe8811-ffd7-4a5f-8b2c-084771c7fedf",
        "cursor": {
          "ref": "15309e15-b351-4de0-a6c0-9331aa9668a4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0b19e97c-df64-4c59-9f5c-387f2f6b4817"
        },
        "item": {
          "id": "7abe8811-ffd7-4a5f-8b2c-084771c7fedf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e177a551-a911-4460-8c6d-7cc758fa220f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db29570f-c324-4d79-92ff-f22f798fd0f6",
        "cursor": {
          "ref": "2f6d9bb1-f5f2-43fc-98f2-c4f11d9b0627",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "822d6846-c713-4831-a71b-a14d7d804493"
        },
        "item": {
          "id": "db29570f-c324-4d79-92ff-f22f798fd0f6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ca769ab4-a692-4ee9-b40e-e00cd45446f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac861b0d-950e-4db8-b07b-f3cc98c4ef19",
        "cursor": {
          "ref": "68e8ad3d-4eef-4768-b4d0-4457515b5b2f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "924c6ca4-2a28-4fb3-8161-635f12e4f415"
        },
        "item": {
          "id": "ac861b0d-950e-4db8-b07b-f3cc98c4ef19",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aed58f85-13f2-4213-908c-6040bf12d25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74193adb-f7d6-4fde-969c-488c8ae94a39",
        "cursor": {
          "ref": "d834b12e-548e-4699-b43e-0fd0d0c75bb9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "92d4e760-7a09-4edf-9b9c-77236710398d"
        },
        "item": {
          "id": "74193adb-f7d6-4fde-969c-488c8ae94a39",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "41e40532-54d1-46cb-a725-4c36cd89bd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a49288e-269a-4d50-b2ed-c470bb0226fc",
        "cursor": {
          "ref": "75b17afc-ed04-42be-a60b-47a260471a42",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "27d2e73f-582b-4329-b780-1e53f9dae7d0"
        },
        "item": {
          "id": "5a49288e-269a-4d50-b2ed-c470bb0226fc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b0c00656-f8e6-408a-895d-a8c286746a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b5c13b-95dd-43d4-9bd5-b91a49545e4d",
        "cursor": {
          "ref": "663e68e7-4c88-488d-bf44-68cc308a84c0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "58524639-aa1d-46ba-a3df-9435a3bc2e8b"
        },
        "item": {
          "id": "51b5c13b-95dd-43d4-9bd5-b91a49545e4d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7b563426-467a-4420-83c2-db7b6dd7a0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f1dac4-4ae5-4dbc-8198-40dd6f73c118",
        "cursor": {
          "ref": "f59c9eba-410f-4be1-827c-dbd2579a338b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "446a77bb-4360-4db1-830c-b475217fd741"
        },
        "item": {
          "id": "a8f1dac4-4ae5-4dbc-8198-40dd6f73c118",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5afaa18c-2cc5-45b4-af59-d8f701dfc4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ce7ead-4774-4728-abac-6d24a905869f",
        "cursor": {
          "ref": "d567e03d-40ce-4dd4-81bf-341c90e05f2b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0d01dbdf-ebff-4ac6-b32d-6713096767a6"
        },
        "item": {
          "id": "03ce7ead-4774-4728-abac-6d24a905869f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "411249f0-6b20-41a9-b854-19820b3acf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdce755-1122-41c0-828b-7df421a06db0",
        "cursor": {
          "ref": "3d5f2f1a-de68-4619-a389-c4f96ae89ead",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "54b9bf60-f9e6-4355-83f5-23192c8a23ef"
        },
        "item": {
          "id": "8fdce755-1122-41c0-828b-7df421a06db0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c50e3b1a-b8d3-4da1-9a68-34b73c999ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758411c9-d152-4585-98e8-9d1a8d53d68b",
        "cursor": {
          "ref": "a7de15d9-5944-4c15-b883-54dbc666c024",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3466e355-80c5-449a-9e8d-b99b7a0a0e0a"
        },
        "item": {
          "id": "758411c9-d152-4585-98e8-9d1a8d53d68b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ab33199b-499d-4880-a899-634d8a9e28be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2ba225-a316-41f9-88d1-3b2120423fb7",
        "cursor": {
          "ref": "73111e1c-c49d-4a64-b6c6-196c537c34a8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "32a08004-8373-4fb3-8cae-0d11a6535b6c"
        },
        "item": {
          "id": "ac2ba225-a316-41f9-88d1-3b2120423fb7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "db65ae4f-cbba-4938-87e9-074a66bb1923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ec8c1e-1198-4247-b116-34b5b53b8ca7",
        "cursor": {
          "ref": "8fbc3471-78d4-4f78-94f0-8d9288817dff",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "272d5d0d-060e-42bc-a9d0-f9018ac814b6"
        },
        "item": {
          "id": "16ec8c1e-1198-4247-b116-34b5b53b8ca7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ad99cf29-b74a-4514-8ac6-2c2740bc205f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60940744-c29e-4665-aa4d-736875cd6256",
        "cursor": {
          "ref": "5648b6de-a32e-4a9a-8d76-e5a9e80db121",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5b6fb754-7b0b-4860-9425-3213d1c83f51"
        },
        "item": {
          "id": "60940744-c29e-4665-aa4d-736875cd6256",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "df2b5dd5-f1ad-4e7c-9dd9-fd4ed88db7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795a5763-c83c-4445-897f-a7e27a7e790d",
        "cursor": {
          "ref": "9022f87e-0882-462e-bf91-663c7a29647c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "91b0c76b-0cfd-407a-95f9-b3b27d663161"
        },
        "item": {
          "id": "795a5763-c83c-4445-897f-a7e27a7e790d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "334a55da-982d-428b-a246-b3f67deec27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3faae1-9f48-4a37-b2fd-e4557e26a2ab",
        "cursor": {
          "ref": "fddbc490-b6a0-4145-848a-2e4d0bc68ba6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bff2a292-0243-49a0-a285-09aa5a6d46a9"
        },
        "item": {
          "id": "2e3faae1-9f48-4a37-b2fd-e4557e26a2ab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4a8711ac-1551-4a04-8c72-a4d78ce69bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6247c25-5891-4fca-9227-1a83946bec8d",
        "cursor": {
          "ref": "fe8bdd57-e65e-4820-83b3-c5a1640dda26",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ce66e7b5-4c08-47c6-9f11-b7f4bc9900a6"
        },
        "item": {
          "id": "e6247c25-5891-4fca-9227-1a83946bec8d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8591415d-5c0d-450e-99e4-6f1c86563e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2004ee75-8091-4c95-8dfd-0ababfe38dfc",
        "cursor": {
          "ref": "b8d51171-6168-451e-83a4-e9d8430a36f2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d0db50ce-c252-4934-923c-498342a37832"
        },
        "item": {
          "id": "2004ee75-8091-4c95-8dfd-0ababfe38dfc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cc9a7c5c-6f21-46fd-b3fa-2776ce6d523e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5783c10a-f6f4-4192-9372-ce0490514cd5",
        "cursor": {
          "ref": "d28273c8-b6dd-4a24-babe-16bed666df5d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cbc7f3b1-8283-47b2-9f3a-9818df303634"
        },
        "item": {
          "id": "5783c10a-f6f4-4192-9372-ce0490514cd5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "411d607d-82a8-4dd1-8cc8-738ca40883a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8049077b-6f8f-4f1c-8d01-40a2dcf376fa",
        "cursor": {
          "ref": "e1fae32f-3a4e-405a-93e8-6c54bc0e5616",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "39fe1382-e1c2-4e47-aef9-48add234b54d"
        },
        "item": {
          "id": "8049077b-6f8f-4f1c-8d01-40a2dcf376fa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "28c07ed7-4f51-49b5-87be-114f79ecf0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d9b0fa-029c-4225-ab6a-285648f288cb",
        "cursor": {
          "ref": "a8f3f465-614a-4ed0-abd1-604532cc1e0c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "822e8a57-af5b-44e4-a9a2-2b32b3eac0ca"
        },
        "item": {
          "id": "37d9b0fa-029c-4225-ab6a-285648f288cb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "74277d04-216a-4e2a-bed7-58a85544f86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2a225d-32d0-49d0-9a7e-8ed2139f4964",
        "cursor": {
          "ref": "96e57f3f-6e95-456f-b060-e6b988c383bd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "597544f2-d4d7-41e8-a23b-d08a13daa47b"
        },
        "item": {
          "id": "af2a225d-32d0-49d0-9a7e-8ed2139f4964",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "65c12cee-f3dd-40a9-946a-9d34dd574d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a146700-5a1b-4187-8455-77a0ee5de5ad",
        "cursor": {
          "ref": "07fab211-6023-47bc-bc14-6027a2dd36c8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8faab625-78c2-4660-b8b7-fdfe1a10c7a3"
        },
        "item": {
          "id": "9a146700-5a1b-4187-8455-77a0ee5de5ad",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22324b4f-364c-475c-88ef-01dbe4529000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798532a0-abb2-4aff-b2f7-14df04962e6c",
        "cursor": {
          "ref": "eb52d3dc-80a4-4d88-a2d9-aa6c711de3fb",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0a1f38f6-d9b3-4aa0-aea7-e685ae864e09"
        },
        "item": {
          "id": "798532a0-abb2-4aff-b2f7-14df04962e6c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "75288df1-745f-4e1e-a1e5-88b1c49f1f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e860876-a3c3-4365-86bf-20bce6dbec3f",
        "cursor": {
          "ref": "143029db-db6c-4e48-baab-8e1b3353ebcf",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8ad67743-2390-4a6e-b6f9-883846b19e12"
        },
        "item": {
          "id": "9e860876-a3c3-4365-86bf-20bce6dbec3f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "39de346c-44d3-4f1a-be4c-297ac8aa8584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4934673-b95c-4a05-8a1f-e1686e06acce",
        "cursor": {
          "ref": "1f88c5a2-2334-442c-a173-71ff381da0dc",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3281f67e-cba1-497a-881d-bb37e460975b"
        },
        "item": {
          "id": "b4934673-b95c-4a05-8a1f-e1686e06acce",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0a71af9a-2897-4cdd-a105-bea71654826a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e04be72-2a3f-4852-90b5-085e07e51374",
        "cursor": {
          "ref": "91a5eba5-5e1e-4a6c-be51-bcbaba205777",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cf60e040-397b-4f05-808a-61ff8da04677"
        },
        "item": {
          "id": "3e04be72-2a3f-4852-90b5-085e07e51374",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "63012ba9-7249-48bf-b646-15ffb7d5fa12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9e377d-f5a2-4110-ae01-526ac30e66c9",
        "cursor": {
          "ref": "2c485918-bcbb-4b90-8d9c-1d4e5579f560",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "efe9e46c-f166-4890-904d-2c31dd006cdc"
        },
        "item": {
          "id": "0f9e377d-f5a2-4110-ae01-526ac30e66c9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ed1abeb7-5813-4def-8517-92ea2dfe45c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc038d6-1ab4-4da3-a992-2ee0dbce425d",
        "cursor": {
          "ref": "89442ec8-58f7-41db-a11a-2fd656418cb4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5534f21d-4004-4cd5-8b82-54b6f32c1e80"
        },
        "item": {
          "id": "5fc038d6-1ab4-4da3-a992-2ee0dbce425d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "153b11b9-5c62-4693-8633-8440c99a5746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ae9b54-8e6f-4c64-85d6-ad199d7cda4f",
        "cursor": {
          "ref": "30329d35-3751-4f30-8796-10a5f63be706",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "68acaaf7-70a0-4511-8424-bb7c5b71b805"
        },
        "item": {
          "id": "35ae9b54-8e6f-4c64-85d6-ad199d7cda4f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3ff8d2e2-2408-49b0-a812-2f53acdba5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9745e7-a5ab-4217-9c3b-545025ffdbde",
        "cursor": {
          "ref": "7dd6d29c-a4ff-45b5-acda-42f97e3dd0f0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "313227c7-ad8c-44da-ae5b-c041e40348c8"
        },
        "item": {
          "id": "6d9745e7-a5ab-4217-9c3b-545025ffdbde",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "760dd1ba-4a2e-484b-b990-a194fbf68c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362828ad-fdf9-4cd1-8491-4e3491f2fcab",
        "cursor": {
          "ref": "451c9f24-38fb-49f4-a38c-11f3ec11f602",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "909bc3bf-e043-4580-bed1-5a4bbd21992f"
        },
        "item": {
          "id": "362828ad-fdf9-4cd1-8491-4e3491f2fcab",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0ce2c90f-f2bc-4956-b39b-844050f1b165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0707420-9782-4772-912e-8ffa49b52e8a",
        "cursor": {
          "ref": "524161a3-53b0-4415-866a-4e4dd572eab3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ddf2972d-9b91-4a96-9b15-105529b675f9"
        },
        "item": {
          "id": "c0707420-9782-4772-912e-8ffa49b52e8a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "543bd858-e65f-47a4-9b3e-e1e2e277c7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb07df2-478b-4c46-b98f-1fd9aa528cc5",
        "cursor": {
          "ref": "a3464282-c592-46af-b4b7-4393dcddaf3f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b2d57670-6066-418d-9d5c-02415c36675d"
        },
        "item": {
          "id": "2cb07df2-478b-4c46-b98f-1fd9aa528cc5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9bd14e2a-867d-4b21-9654-0f83818ce0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adba1c6c-46f2-4178-8942-4923a3b64b76",
        "cursor": {
          "ref": "d57628a0-87ed-4cc2-b4ad-6dd215e686d1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1c55b886-fdc6-43cf-83ef-5e817692e612"
        },
        "item": {
          "id": "adba1c6c-46f2-4178-8942-4923a3b64b76",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aa64b886-4d50-4322-a7d0-9025e0a02a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be694865-34a4-4487-b150-26f97addb025",
        "cursor": {
          "ref": "3a66e010-fb76-449e-81fc-91b4b864ccfb",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "609066d7-94d4-4460-b1a1-4f89baa66dfb"
        },
        "item": {
          "id": "be694865-34a4-4487-b150-26f97addb025",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ca92c80c-ff22-46ae-b024-7703b589d277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1237e5ec-48d4-4eb1-a393-3daa625961b0",
        "cursor": {
          "ref": "059e4095-b1e4-4190-9d10-496b202c7556",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9793bc90-6490-4d53-b617-fc55dc05f007"
        },
        "item": {
          "id": "1237e5ec-48d4-4eb1-a393-3daa625961b0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b49161f7-a7ca-40f5-96b2-89b21d9c59f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f4ad62-d66d-4c75-b82f-5e4088201e6e",
        "cursor": {
          "ref": "f78fff59-53c8-4da6-a96f-f94c81cc7646",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "636bc70a-3182-45ed-ba28-504f6189c386"
        },
        "item": {
          "id": "c8f4ad62-d66d-4c75-b82f-5e4088201e6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "34a9cdfa-35a6-4cf2-b228-e1d8f1b72613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e104d2-a2f0-4e71-a1a4-6328d6413d52",
        "cursor": {
          "ref": "3a33d005-8ba3-4eb7-b4dc-ab4aadca48f5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4504234c-8da8-48d1-8996-0b20059c08dd"
        },
        "item": {
          "id": "d4e104d2-a2f0-4e71-a1a4-6328d6413d52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "80d9d2c8-7278-4a35-bb4b-3b9dd8305b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b329ae85-0ab6-45b5-96f7-0f0b7f1d200f",
        "cursor": {
          "ref": "2ef33853-3fcc-4410-975c-9b2a5c7ba376",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "afe32b9e-e1d7-4544-9a9b-efb6a1c8948a"
        },
        "item": {
          "id": "b329ae85-0ab6-45b5-96f7-0f0b7f1d200f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a4859c04-58e8-4da3-a691-f5c3a01deace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa531f9-b7e5-4d9f-a3d9-b38a38c20895",
        "cursor": {
          "ref": "3243d80e-dd05-4a0c-b498-4484c358823b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "884bfb2d-32bc-457a-9032-bedef4caa351"
        },
        "item": {
          "id": "bfa531f9-b7e5-4d9f-a3d9-b38a38c20895",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a85140cd-6373-4d3a-af73-3c49677db132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2e9b42-a32f-42e4-86d3-d5c96c74fb62",
        "cursor": {
          "ref": "fc9543b9-b8f8-41ed-a787-265d8f9ff2dd",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2109e46e-07e4-4eba-a8e0-8708f5c710ac"
        },
        "item": {
          "id": "8f2e9b42-a32f-42e4-86d3-d5c96c74fb62",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "659addcc-29c5-44b8-8df8-48ccf50bc408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32108b7a-6c7b-4aa8-b010-e5c020d10016",
        "cursor": {
          "ref": "c857d7b2-2eaa-4334-b551-2ffc0892c759",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4ebd9406-345b-4ef4-a828-8e9b220c0475"
        },
        "item": {
          "id": "32108b7a-6c7b-4aa8-b010-e5c020d10016",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "96777ddf-1420-475a-b9f6-0dd270bdbff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5838c9-52a7-43a5-ab44-d40d88468929",
        "cursor": {
          "ref": "a03ca887-3b45-4461-91ef-9a7543a9712b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0ac2f377-9c6e-4cba-bd24-dc4204b4f0b9"
        },
        "item": {
          "id": "0b5838c9-52a7-43a5-ab44-d40d88468929",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3a163d77-7a34-46b7-a2ce-f00685a9789f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fa6675-cb0f-418d-8d93-12eee53e0902",
        "cursor": {
          "ref": "b433830d-c952-4b68-a918-a66cfde27d87",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e797c830-291d-48d0-8fb6-3f08045221ab"
        },
        "item": {
          "id": "50fa6675-cb0f-418d-8d93-12eee53e0902",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "72caee0b-2063-43b5-9fb7-df26684264fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f2acdd-dcf5-4386-b012-cf4ea5a2c46a",
        "cursor": {
          "ref": "8370b7d1-739e-47b4-8ee3-4762a58956c2",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4889710a-676a-4d43-b3e7-35cf13eadb5d"
        },
        "item": {
          "id": "d8f2acdd-dcf5-4386-b012-cf4ea5a2c46a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "13088c5f-c740-4de5-8a31-046d43227feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e779c9e6-704d-43af-899d-412b966eb36b",
        "cursor": {
          "ref": "4df5970b-71c7-43f1-bda2-64926ff67496",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d5bb4cb6-d00e-4cad-a12e-e0af4d22bf8d"
        },
        "item": {
          "id": "e779c9e6-704d-43af-899d-412b966eb36b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dc448f6b-efcd-4f91-89fb-0e6e696b9dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2484e3ab-c24f-44c8-bf36-738a2d5da3e9",
        "cursor": {
          "ref": "9cffbce8-3936-4e76-b172-8fcc53d25d25",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "905ee1ea-cb4c-40f2-8c54-3fb813251531"
        },
        "item": {
          "id": "2484e3ab-c24f-44c8-bf36-738a2d5da3e9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3db89806-e81f-4c06-8e10-d6e825149bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a8d54f-dc47-4dae-ac1f-590aac5b13e7",
        "cursor": {
          "ref": "b60cd4d9-8996-41c7-bdb2-82f26df2d68f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a89eea18-58b7-4abf-bf3e-06d51c49bf2c"
        },
        "item": {
          "id": "a4a8d54f-dc47-4dae-ac1f-590aac5b13e7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7b31ffc2-75ca-4394-8cd0-f88df4591dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35181cf4-0d27-434e-bab0-d9ee8cbfc8fa",
        "cursor": {
          "ref": "d1cb814e-4ef4-4bc2-8ad6-194400a679a2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "152fa17c-9c42-4238-ba57-f57497ccea14"
        },
        "item": {
          "id": "35181cf4-0d27-434e-bab0-d9ee8cbfc8fa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d9daf983-837a-4170-b7c7-32f8d87e7b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41519956-ef54-4368-b4e6-c6b7ca5c2fb4",
        "cursor": {
          "ref": "a84ae090-3735-49cc-b0fc-69bb8935295e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "47e13f58-3a57-462a-8543-6c4df7de38a5"
        },
        "item": {
          "id": "41519956-ef54-4368-b4e6-c6b7ca5c2fb4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a07ab959-d642-4e6b-be7f-1688e34090ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90825c06-59fe-46c2-a6fc-95d424e02d62",
        "cursor": {
          "ref": "bcc842d5-cc2c-41eb-bea4-95dbe6f33b68",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "35325d0f-266a-42b0-9778-175e8d99880a"
        },
        "item": {
          "id": "90825c06-59fe-46c2-a6fc-95d424e02d62",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b430fb1a-f725-4695-85a1-8982c9f3111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37068d6b-ef58-4f96-a39a-46006eb452c3",
        "cursor": {
          "ref": "a9c57b85-8d6d-4f6b-840d-a29efb4116e6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3275b670-9d58-4302-927c-0e08a17376be"
        },
        "item": {
          "id": "37068d6b-ef58-4f96-a39a-46006eb452c3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bd875137-706b-4974-bebf-e568fffc9fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f603ff-4468-466b-bfe7-973e27570120",
        "cursor": {
          "ref": "eb331339-7a9d-4396-9242-37c784545372",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f7eed729-396d-4798-94cc-a6d2840ae267"
        },
        "item": {
          "id": "d5f603ff-4468-466b-bfe7-973e27570120",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9b70bf7d-d10f-4cb0-bf69-1075343ab6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8782c434-2f69-4868-ab44-8a6b286dbdf7",
        "cursor": {
          "ref": "67792fdb-7ac7-49f0-a6bc-561af4f3099e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dde33396-17f7-4f9a-a4cf-2e4ba04a317e"
        },
        "item": {
          "id": "8782c434-2f69-4868-ab44-8a6b286dbdf7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3c302c17-8d81-4cf4-bfef-d1fa503d7853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3622108-7864-40a0-8f5d-713391ce0e7b",
        "cursor": {
          "ref": "82efe328-f8c1-4ed0-818a-b18f66b30cb0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "26dbff3f-7197-454a-bc55-93c13b58f651"
        },
        "item": {
          "id": "d3622108-7864-40a0-8f5d-713391ce0e7b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "efdec8dc-a058-44bd-86aa-de68987fb837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce2dc08-8490-40d0-b01e-97570e3c43ec",
        "cursor": {
          "ref": "053e0207-dd6a-4ffc-9331-6d0bd6462e47",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d3809c14-7a0d-4a73-afd9-b8be2857e49b"
        },
        "item": {
          "id": "0ce2dc08-8490-40d0-b01e-97570e3c43ec",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "da7f2596-f8c6-47f3-889d-ba166214f7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa3e3b4-a5aa-4f71-9f35-d21f51bd99fc",
        "cursor": {
          "ref": "e5c51440-0439-42c3-a585-6b632b0fdd82",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "248cb71c-d6b4-42c0-b959-3d5c85846be4"
        },
        "item": {
          "id": "9fa3e3b4-a5aa-4f71-9f35-d21f51bd99fc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "32ab0046-cfc6-4cd4-8949-20b2ae977ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972a205b-a880-4b1f-b18f-2e0ddf4685bc",
        "cursor": {
          "ref": "2d1efbe7-f1d8-45ff-b421-883b1bcdaa8c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d5d8db8f-ce4b-4da9-8b70-2dcad719f4a6"
        },
        "item": {
          "id": "972a205b-a880-4b1f-b18f-2e0ddf4685bc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "95eb2820-69b7-4c6b-84b6-5a4e6603099c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e437afb-fc11-43d5-85cb-7feb39a49102",
        "cursor": {
          "ref": "717ec0e6-a153-48e9-a48a-5c117e7fe5f8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7cf7179f-8bc8-417c-b6cc-9212a39dda3d"
        },
        "item": {
          "id": "4e437afb-fc11-43d5-85cb-7feb39a49102",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "451426bf-1cff-4d27-8b33-e24e735699eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9fabb5-dad2-4bf0-bdbe-db19d634cc14",
        "cursor": {
          "ref": "45831534-8787-4583-a3f6-9db4fa0fc11c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6fd59215-d1f2-4d1d-b35b-efe5fe76dab1"
        },
        "item": {
          "id": "7b9fabb5-dad2-4bf0-bdbe-db19d634cc14",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3e12b909-c16d-4b2a-9fa8-730530c4100a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6419fa50-a0b9-4efd-aa83-1912e3d94ea3",
        "cursor": {
          "ref": "bca4ee31-4f98-44e6-81a8-a8bf5372b443",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ba8a71e3-6d77-4ef1-b2f1-2096cc1c8058"
        },
        "item": {
          "id": "6419fa50-a0b9-4efd-aa83-1912e3d94ea3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6b8121d9-043f-4b95-8735-808909a96424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285fcffb-a268-4068-bd87-419e7a643f07",
        "cursor": {
          "ref": "c0811af3-685f-4e90-809c-948aea52442d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d547a27b-fad6-43cb-afe5-09b839df2551"
        },
        "item": {
          "id": "285fcffb-a268-4068-bd87-419e7a643f07",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9cff159e-4ffe-42df-bb04-eeda6f3afd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41593d07-ccfa-4839-afa6-cd83756fac27",
        "cursor": {
          "ref": "bb15a35f-1000-4585-be77-291500f2c1d8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "61818493-7ce3-46d5-8c56-09b9755ebf51"
        },
        "item": {
          "id": "41593d07-ccfa-4839-afa6-cd83756fac27",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3af8002a-1271-4f2f-8a8e-ec5356e66e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abde88a3-bd16-4821-b344-d795a971e6f8",
        "cursor": {
          "ref": "862732ca-2354-4bd0-8c7b-5c7781002217",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2b560cc2-ce2f-4c0e-8229-95cb30357e75"
        },
        "item": {
          "id": "abde88a3-bd16-4821-b344-d795a971e6f8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "52bc3c35-2bab-4750-b190-92a463449a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee720f0e-50a4-4b75-87cf-a1bcd23bfc1a",
        "cursor": {
          "ref": "8b33784f-900d-49c2-905f-adeff4b98a80",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5b1f7142-c8d0-4206-9df2-c47739f113fb"
        },
        "item": {
          "id": "ee720f0e-50a4-4b75-87cf-a1bcd23bfc1a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3f5bdf19-e897-4ae8-b0b1-b1c4d91c3d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8bfbb5-7698-4bec-8a71-780f157a2557",
        "cursor": {
          "ref": "aeec8c2c-0623-4cf1-a82a-92d75d1439eb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7fd3c673-6a1f-4ba8-a145-aaa6314871ac"
        },
        "item": {
          "id": "5f8bfbb5-7698-4bec-8a71-780f157a2557",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8539e984-ec61-4ea2-a9ca-581a5893047a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9bde45-bbbc-4193-9b97-9ce615ecec51",
        "cursor": {
          "ref": "d83ea1fd-851e-49b3-b534-ce49f7f18416",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1019217b-24a5-4360-a19f-06640d56192e"
        },
        "item": {
          "id": "fa9bde45-bbbc-4193-9b97-9ce615ecec51",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "27ac89b4-415a-4d72-8d6f-e6b419e97c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ec5b18-114c-4069-9707-403eb187c38e",
        "cursor": {
          "ref": "24172f32-f138-4141-bcf2-730738ebd85d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e469404a-681e-4fd8-ad57-0c4b110d2b64"
        },
        "item": {
          "id": "d8ec5b18-114c-4069-9707-403eb187c38e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6306e411-d2b0-44c7-9f2c-9c2f429c4aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb19b746-838b-4e31-8877-9e0ec4fa5b53",
        "cursor": {
          "ref": "88594daa-5d76-4608-b42f-3ef5b2d5d417",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0382f5e0-b277-4b4e-b9c1-7cfbc8cd7220"
        },
        "item": {
          "id": "eb19b746-838b-4e31-8877-9e0ec4fa5b53",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "57d224c3-0ec2-48ad-91cd-0deee20ee814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f203908c-1253-4e27-8f79-d1de7fe4bf1a",
        "cursor": {
          "ref": "743643fc-3c20-4c63-8efc-a0813baaa4c4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1d78e714-c273-4290-8176-57c067cd45c1"
        },
        "item": {
          "id": "f203908c-1253-4e27-8f79-d1de7fe4bf1a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c66a7b67-a9f3-4cb8-89e8-8783a788fe39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1a8def-3ab5-43ad-9edb-051967284a93",
        "cursor": {
          "ref": "b19cca5e-f817-4e7e-bc00-79bdce28f9c6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ad15db08-8dda-4493-b986-5da0d5735a60"
        },
        "item": {
          "id": "ab1a8def-3ab5-43ad-9edb-051967284a93",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "56ac32b6-da24-4d31-98fb-6f462314ed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c086cd03-7e62-43eb-a852-62b7a6aafcd0",
        "cursor": {
          "ref": "03310e29-f273-4fd1-bb20-43eb862abcd0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6e0f9422-99f4-4d47-aba4-2cac12d6f4fe"
        },
        "item": {
          "id": "c086cd03-7e62-43eb-a852-62b7a6aafcd0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eb15d7b4-7c4b-4f94-906d-2f5bc1212fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "2875e530-a77b-4805-94e3-bb143960322e",
        "cursor": {
          "ref": "2ef5619e-9c3a-46dc-a8e5-9f0436b87d61",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b74be144-3fcb-413b-a8f0-b02c22977afa"
        },
        "item": {
          "id": "2875e530-a77b-4805-94e3-bb143960322e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6e348b3d-0d01-4704-afa9-f87559c92d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "30977561-beeb-4184-939f-19657df2cce0",
        "cursor": {
          "ref": "9b36fd5b-fb97-4b37-ac79-160cda5d3e1a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ebf05d7d-4ee9-4c06-8194-44db2126f313"
        },
        "item": {
          "id": "30977561-beeb-4184-939f-19657df2cce0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "44e555a3-0a9e-4750-9d92-4ff67ff8696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "93e0c0a1-7c9b-4fe4-8f2b-8ba02b822279",
        "cursor": {
          "ref": "81beedae-372f-4994-be83-9a7c69dc086e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4aeb697e-7bea-4af5-8083-29db48125f3c"
        },
        "item": {
          "id": "93e0c0a1-7c9b-4fe4-8f2b-8ba02b822279",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f8c3625e-c0fe-451b-ae4b-f4f13b805527",
          "status": "Created",
          "code": 201,
          "responseTime": 10751,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd3173e-071c-48db-bc10-11101c9183ce",
        "cursor": {
          "ref": "d8fee79f-5be8-434d-8dd6-a6767c311f9b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "12bf34fa-0a0b-45ad-ad8a-708af067f1b0"
        },
        "item": {
          "id": "1cd3173e-071c-48db-bc10-11101c9183ce",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "165557b8-fe9e-4c5e-9523-d11979931214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4fbbad2c-2125-499a-b961-6c859e4d2bdb",
        "cursor": {
          "ref": "0d041674-e4ce-4f52-b450-93620e90b5a1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e1857f93-cf9f-4060-bf1c-fb72edfb3ba2"
        },
        "item": {
          "id": "4fbbad2c-2125-499a-b961-6c859e4d2bdb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "41a53237-4394-40ca-accf-e98f2b5a2805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "608ce08a-051a-40d3-a716-442f49adf5e4",
        "cursor": {
          "ref": "9e85d4a5-2153-4a6b-ba83-26b14d7bbbb3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba6cf07e-7e84-45e4-ad45-7440ef33a304"
        },
        "item": {
          "id": "608ce08a-051a-40d3-a716-442f49adf5e4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e2ae918a-b737-4cd7-9144-72d4fc9161d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5052bd-e109-4254-9e1f-80aac86e004b",
        "cursor": {
          "ref": "e606c603-6f20-4616-991d-bba7cad016af",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b0c9a223-ee8e-412d-a1a1-4f15bba58d97"
        },
        "item": {
          "id": "cc5052bd-e109-4254-9e1f-80aac86e004b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "30a29505-78cd-4ea6-931c-b78a76eddfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b62ff5-27cb-4a21-9546-ffd5e29365fc",
        "cursor": {
          "ref": "75fd8724-7656-434b-8d08-23c5606c5b34",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "19cc3003-a7fe-4ca5-a044-c2c8df362100"
        },
        "item": {
          "id": "88b62ff5-27cb-4a21-9546-ffd5e29365fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8ad5c0bd-8994-43ef-9cfa-d900d293f2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f14dd79-294c-4c64-a91f-97d25430c97c",
        "cursor": {
          "ref": "aa8b8b05-13dd-4f35-950f-771cd148079b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2dc67d8b-8da3-4109-9c7c-d34490d8be98"
        },
        "item": {
          "id": "2f14dd79-294c-4c64-a91f-97d25430c97c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "297a06c2-ab22-4654-b68e-d8fd0892f2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291cac75-607e-433e-b0c7-c54a12f688c0",
        "cursor": {
          "ref": "44ca20e5-9b2a-4f07-9233-a3bf04a56b7c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c33f7c36-7273-4047-a754-469e44a064e5"
        },
        "item": {
          "id": "291cac75-607e-433e-b0c7-c54a12f688c0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ab8d03d8-9891-4b12-84bb-3d68f53fb3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a358a5-2cb8-4360-9c22-9c679db1dc76",
        "cursor": {
          "ref": "77774913-e16a-40fe-a10e-f1233f16d33b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "227bb70e-8f5b-4f49-9ef6-3e946e909257"
        },
        "item": {
          "id": "82a358a5-2cb8-4360-9c22-9c679db1dc76",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "29febcfc-dda6-4857-8d22-e3b419ccc70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14fd52b-e420-4a5e-8c3c-d4ea643f3a00",
        "cursor": {
          "ref": "3c5b1e88-e62e-4ae6-8338-a9d0916270e1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ca68af50-d988-4307-ae9e-1cec03824226"
        },
        "item": {
          "id": "d14fd52b-e420-4a5e-8c3c-d4ea643f3a00",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "271819ad-b70d-4957-8dfc-e2819d91265d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb2dc8c-d0e9-4f50-9c6a-77677a25dac4",
        "cursor": {
          "ref": "82ceee73-4f0d-4b18-a777-68272aef3f27",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0da5d3c5-ad06-41a5-93cc-08b065a24d0a"
        },
        "item": {
          "id": "acb2dc8c-d0e9-4f50-9c6a-77677a25dac4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "23ff18df-d292-472a-b263-1db9358968b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8224a1-430e-46fb-90e7-9392d89e15f4",
        "cursor": {
          "ref": "fe172934-feca-454b-bc3f-93b325a9dbbf",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "35012b83-567d-44e6-808d-8ec09dacbd8c"
        },
        "item": {
          "id": "ec8224a1-430e-46fb-90e7-9392d89e15f4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cd3741e2-63f9-4658-b09d-985c91a48179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa8dc1c-dc7d-4479-9067-9639ded81084",
        "cursor": {
          "ref": "82cd4a44-cee1-4455-b299-3aa7785e9b55",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0b8c8904-0e77-43a3-8304-2d20d7d35837"
        },
        "item": {
          "id": "8fa8dc1c-dc7d-4479-9067-9639ded81084",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "46072702-2fa9-4c1a-a400-5a7019c677f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb364271-d34b-4561-bd93-198931218796",
        "cursor": {
          "ref": "fc6bd271-4c4c-4a48-94ad-a0cc64ea09b2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a4128af6-3fc8-499d-8464-b35b16b06835"
        },
        "item": {
          "id": "eb364271-d34b-4561-bd93-198931218796",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "448a8fd5-1661-48ea-a788-4c48d298860b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36304eb-edfb-47b3-8a1e-62b90f38e39f",
        "cursor": {
          "ref": "1d4fdff6-afd2-49b5-9649-33260d3f3c2b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f3451fac-1098-4e62-85af-a92973be7a8f"
        },
        "item": {
          "id": "e36304eb-edfb-47b3-8a1e-62b90f38e39f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b56dec13-9999-4cbf-b839-32c6d7adcb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7fab8e-5039-483b-9082-2560e5489ecf",
        "cursor": {
          "ref": "2b8c4d21-145a-402b-9aa7-00970a088ab0",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "db8e9b59-fd06-4faa-ae9e-084543347237"
        },
        "item": {
          "id": "7e7fab8e-5039-483b-9082-2560e5489ecf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "77e2e04d-a686-4e22-bd8c-e68a1484bb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cbe9a0-b63b-487a-a202-77fce3644084",
        "cursor": {
          "ref": "24914599-5ffd-42a2-a7a3-964542d7b0c5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c6ff29ba-4054-44e0-8c65-4130dd315170"
        },
        "item": {
          "id": "81cbe9a0-b63b-487a-a202-77fce3644084",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ece61d5b-024b-4c20-af19-39f5bfd20394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef825d3d-9b1e-475c-b60e-ea0fe74ede5f",
        "cursor": {
          "ref": "506bc235-95e8-4f80-99a1-9bc0c66f0860",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3c12fabb-1d5a-4471-b107-c8418946d05f"
        },
        "item": {
          "id": "ef825d3d-9b1e-475c-b60e-ea0fe74ede5f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0e12a177-ab2d-4975-84eb-1cc7dc2e3118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7313f685-d9ca-4b4d-a229-290bd27fcb3f",
        "cursor": {
          "ref": "5fd0ddc6-8adc-427a-98aa-d1c064443cc0",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fe1a470b-3648-49af-b8ab-ed2e22314018"
        },
        "item": {
          "id": "7313f685-d9ca-4b4d-a229-290bd27fcb3f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cf373564-8ea5-4e77-897e-2b2e6f10edad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb8287d-ecf1-4c7c-a4da-eb0e35a07558",
        "cursor": {
          "ref": "92fa6c7e-514e-4041-8ea4-1a1708fbfcbd",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "68ea7226-353f-47e6-8246-f567beaf5631"
        },
        "item": {
          "id": "9eb8287d-ecf1-4c7c-a4da-eb0e35a07558",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "651890d1-1167-47a3-b2c8-c449230ef03a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "876608b0-c20b-4c29-aacc-9778435da482",
        "cursor": {
          "ref": "47223635-9fa6-4ba6-87fe-2f5df86a10ac",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "99cd7b10-0a34-413c-88f2-62057dadb885"
        },
        "item": {
          "id": "876608b0-c20b-4c29-aacc-9778435da482",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "47918d69-fae7-4302-bc3b-d1cfff05b864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7533ef-6a08-4feb-bbfb-3e270296c979",
        "cursor": {
          "ref": "4a7579f8-24a0-45ca-ad99-0d75d7e078db",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c03d8505-a571-45ac-ac80-b902a27c7808"
        },
        "item": {
          "id": "8e7533ef-6a08-4feb-bbfb-3e270296c979",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c7e45006-6351-4e51-8c4a-40725d642d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036390dc-e06e-4b28-8301-21dbc7c73289",
        "cursor": {
          "ref": "0c15ee31-bb03-4857-a10b-73eb90e24b02",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "248d67a6-2718-465d-ab1e-d6eb94671376"
        },
        "item": {
          "id": "036390dc-e06e-4b28-8301-21dbc7c73289",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "21c0b51b-882b-4310-9f4f-23ef9554f17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c0af97-c64d-47be-882a-502f7167b9e4",
        "cursor": {
          "ref": "1125eae4-2f60-4fd1-8559-74775cd97d49",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "77a685ff-a973-4127-b948-9f8c3dc18ed5"
        },
        "item": {
          "id": "c1c0af97-c64d-47be-882a-502f7167b9e4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "821c3060-8ef9-48dc-bd05-13c075054338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e123d9-9a38-443f-abb6-d7c0e3dfc38c",
        "cursor": {
          "ref": "635f43b6-45b7-42c5-bc41-1086cf967fe0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e4aae69c-3b97-4f9e-aacf-4ca77564284d"
        },
        "item": {
          "id": "d1e123d9-9a38-443f-abb6-d7c0e3dfc38c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "262a2eb7-8265-4544-8ce0-ea9e3986656f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c8ac8a-f3b9-4953-abdb-c62ce736392d",
        "cursor": {
          "ref": "148baa06-6635-4993-bc40-7637a4691c97",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d7a68d47-8662-4ac4-9b48-2066d0b0dba9"
        },
        "item": {
          "id": "56c8ac8a-f3b9-4953-abdb-c62ce736392d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3a12345c-a634-47d7-a568-c1af21098fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf62029-240d-46ca-a6ac-5c5742fc76b1",
        "cursor": {
          "ref": "35f8af99-55cb-4261-9097-1c68ef02c468",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4f62af86-2c79-4a7f-8a86-32ba222de9d1"
        },
        "item": {
          "id": "2bf62029-240d-46ca-a6ac-5c5742fc76b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f21fb9f4-c757-4aa2-8920-d77b6eda7df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17501ade-052b-481f-bc89-d3418d2e3fda",
        "cursor": {
          "ref": "596fb0c7-5e50-4c8a-887e-1587d7ad85a2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0752fb04-2f93-4fe6-8af0-cf9e75c12824"
        },
        "item": {
          "id": "17501ade-052b-481f-bc89-d3418d2e3fda",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "109836fa-51a0-4351-9291-616d29f78fcc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2bffaa3d-f25a-4735-a95a-ec9ec851d7f6",
        "cursor": {
          "ref": "8bcac9f3-701c-44a0-9e8f-a9b7b3f75a6d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "adcb1424-3aca-4ef2-beaa-5820ac29d69a"
        },
        "item": {
          "id": "2bffaa3d-f25a-4735-a95a-ec9ec851d7f6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fbbcb735-5473-4872-90d3-0d0c7d3b46d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19ad136-ecbd-4ac9-833a-ac6bb366ea85",
        "cursor": {
          "ref": "eb3f7879-130f-4830-9857-4e95f8f03a2a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9f4b0eaa-4c58-4a13-b79a-6d9294ec6be5"
        },
        "item": {
          "id": "d19ad136-ecbd-4ac9-833a-ac6bb366ea85",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "43946049-c1cc-46fb-8d0a-69ded1ab0c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dee7f88-af39-4db2-add8-be32cf2003c0",
        "cursor": {
          "ref": "7db26eed-fed6-474e-8af2-52b391e3a257",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b5c95d61-09e6-4059-871b-850ceed2f55b"
        },
        "item": {
          "id": "4dee7f88-af39-4db2-add8-be32cf2003c0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b7c3a87e-5d0b-4f79-84e7-8269ee3232c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef71af49-cc04-443c-8c79-42b0ae7865c5",
        "cursor": {
          "ref": "3612e8ac-139b-432b-aecb-ddff46a78c61",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b2a8586e-dbd1-492a-aadc-0beccfc43445"
        },
        "item": {
          "id": "ef71af49-cc04-443c-8c79-42b0ae7865c5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ebbdd886-8b37-4ace-8b96-54f88720f8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98de16b0-4a4c-460e-adfd-c2de5a35f58c",
        "cursor": {
          "ref": "810ac67e-defa-4969-91eb-2acc344e57e0",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4578dc4e-9fe7-4612-9d4d-845c31c9bd95"
        },
        "item": {
          "id": "98de16b0-4a4c-460e-adfd-c2de5a35f58c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7bb0398b-370d-4462-befc-4cd4280d3e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c264bb01-2c75-468a-8890-1b149b0cf137",
        "cursor": {
          "ref": "cf5a4409-a5a4-4681-9570-7009c67fa6b4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4a6e4519-79b3-4a0c-bcbe-b36b63f703c2"
        },
        "item": {
          "id": "c264bb01-2c75-468a-8890-1b149b0cf137",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3046db7f-e7a7-4cf1-8c24-3b008558dca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aea9f2c-9d85-471b-989d-96075f886152",
        "cursor": {
          "ref": "50df011a-946a-4187-a045-32e92a649752",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b3e09d20-62d4-453a-b3ce-c7f4b756e0df"
        },
        "item": {
          "id": "7aea9f2c-9d85-471b-989d-96075f886152",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0126bdee-253f-48e5-b623-7aa62e326dde",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "57c90454-5e74-47db-a4ea-db707d715550",
        "cursor": {
          "ref": "c72fce47-0423-4adf-baf4-9ed69c712e74",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5680ea11-d3cc-4464-9f6d-69396e19d789"
        },
        "item": {
          "id": "57c90454-5e74-47db-a4ea-db707d715550",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0e8b02d7-92f3-4991-8785-8d09c7ca7750",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b41a7470-46c9-41d1-8ab1-c3f1291a6fbf",
        "cursor": {
          "ref": "bc1fe337-6d1d-4171-8e3d-5a92736dcbf0",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cb07d338-ec43-4074-89af-c521eaf54d2b"
        },
        "item": {
          "id": "b41a7470-46c9-41d1-8ab1-c3f1291a6fbf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6b0a0946-6753-4b8e-b85a-4ed727929cb4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "b24363d1-41a7-4e63-9a90-57e13ca3a30c",
        "cursor": {
          "ref": "7d5dd8e4-8305-4767-a636-7bc18dd53c44",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "30059a4b-353a-4a76-9339-ee98e931e63f"
        },
        "item": {
          "id": "b24363d1-41a7-4e63-9a90-57e13ca3a30c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5b6b1298-52ad-4062-8d47-a429be7fc742",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "568778c4-d649-417f-883e-2326c32716b0",
        "cursor": {
          "ref": "3033c774-b793-4397-9770-06800cc600bc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b710a52-92fb-4346-a44b-c086e3a76ab8"
        },
        "item": {
          "id": "568778c4-d649-417f-883e-2326c32716b0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "23705a7d-8dde-4723-ab85-bf5ce9280eb4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "44a2504b-e72d-4b36-a2f5-ff4f62361adf",
        "cursor": {
          "ref": "612f7805-0821-4c97-94d6-e4048434c21f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3d77149e-6aa8-4e84-b5a3-fe44c523af18"
        },
        "item": {
          "id": "44a2504b-e72d-4b36-a2f5-ff4f62361adf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c1cdcdec-3cc5-4c11-9152-b33ad738c07f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "48db5f91-cbb2-450c-a163-a92f37cb8923",
        "cursor": {
          "ref": "1e5e44d2-73ce-40e3-a977-a2ab267345b2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4b4be738-4a86-4c8f-b9bf-bbbd3989c558"
        },
        "item": {
          "id": "48db5f91-cbb2-450c-a163-a92f37cb8923",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ed9e857d-5097-471e-8467-2080105615f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dea470-2d1b-496e-8f9a-c783d6ab9f8f",
        "cursor": {
          "ref": "1ff3efbf-1e23-499c-bcd0-32dbf7633ec6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2ff7e3d7-f553-4d66-8370-65e159f8a316"
        },
        "item": {
          "id": "27dea470-2d1b-496e-8f9a-c783d6ab9f8f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "618b8065-e3d4-4ad1-a0e0-c64904f8296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b645a9-2a98-44ca-8e71-400cd06bab36",
        "cursor": {
          "ref": "718767a7-e437-40b9-bc6c-1ebb46b19298",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "08cdfb6b-e3a1-44a9-a46a-afa8b8269a8c"
        },
        "item": {
          "id": "32b645a9-2a98-44ca-8e71-400cd06bab36",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ad218da5-0cda-408b-ad62-62d85f53b329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4b8bd1-0cd8-4b26-8e38-1d9f961015cc",
        "cursor": {
          "ref": "ad0c6dc3-57f9-4261-bac3-d7ec7199bd1d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9c57926b-a170-445e-9a88-974c4bc029b4"
        },
        "item": {
          "id": "6f4b8bd1-0cd8-4b26-8e38-1d9f961015cc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dc976c4b-b3ee-4f7a-9b4d-0d5abe6f0035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43b6e86-86e7-4674-a5d7-7be720be9405",
        "cursor": {
          "ref": "477577fa-6d0b-4fd2-950d-afe390de9b49",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4e7091f1-13d5-48c4-b7d2-b2f338784f8c"
        },
        "item": {
          "id": "a43b6e86-86e7-4674-a5d7-7be720be9405",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "69ead495-8e63-4ba0-9284-ee62297a480f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5985fa-e376-4035-89c5-2ea8e67cd669",
        "cursor": {
          "ref": "da2b4352-2526-4952-bd83-079818e7b527",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "be6efd3d-70dd-4adf-9f26-165b448528c5"
        },
        "item": {
          "id": "5b5985fa-e376-4035-89c5-2ea8e67cd669",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f54cc65c-1c04-429e-ba38-c073d7ae53dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74550b45-a2a5-435f-bd3c-e2909f9d7122",
        "cursor": {
          "ref": "88435cca-3236-4d14-bb86-e4f17c0f947e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "35109cbf-332a-498f-9427-d5f780f0ece2"
        },
        "item": {
          "id": "74550b45-a2a5-435f-bd3c-e2909f9d7122",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e08bc47d-e122-4ed6-b72f-518f580fed6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e28c094-1617-4633-81ad-a3f195e5f128",
        "cursor": {
          "ref": "dd2cfcac-6447-46d7-87ea-929d2fedb4b8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e3018a72-8850-45bc-bb20-20974b6cbcb0"
        },
        "item": {
          "id": "4e28c094-1617-4633-81ad-a3f195e5f128",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2f6276e9-e0ec-4f01-8924-f493c2b03176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4ca8cd-0b78-457f-9fd8-a1630caca0ce",
        "cursor": {
          "ref": "9d17ef1b-5f6f-4e30-9ca4-b9290384c8bc",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "56eec88e-3c2b-4b73-9d4e-d1fcffb35b77"
        },
        "item": {
          "id": "7a4ca8cd-0b78-457f-9fd8-a1630caca0ce",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a279e874-f20d-46c6-9be3-410fc1cd10a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71951ab-0a90-4c7a-b4bd-7c7ed4394bb2",
        "cursor": {
          "ref": "491e48e4-54ad-4a12-96e6-a69ba6b8997e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a3780bcf-a0b2-4312-8c96-5d031cb268f8"
        },
        "item": {
          "id": "c71951ab-0a90-4c7a-b4bd-7c7ed4394bb2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "53edbf30-6fe7-4389-ae66-4e4f100a7fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4fc0f0-9790-494d-bf32-add6b1cb14a1",
        "cursor": {
          "ref": "03a369bc-f40c-462f-9ad3-9662470ebade",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fe784e02-9b66-4205-ab48-37895d1d9d95"
        },
        "item": {
          "id": "3c4fc0f0-9790-494d-bf32-add6b1cb14a1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f10a6293-6244-4825-b37f-eac0a1850d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6991cb3c-55a3-41a7-abd6-f8d1e34bdc76",
        "cursor": {
          "ref": "dd85aaf8-073c-4795-871e-194f8c72c279",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "631d706b-f4b5-4424-9874-36af2c726016"
        },
        "item": {
          "id": "6991cb3c-55a3-41a7-abd6-f8d1e34bdc76",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ec4000c7-db80-406d-848a-42f04134a57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15513a67-0afe-47c8-809a-b6c79afcaa07",
        "cursor": {
          "ref": "6ecc19aa-9fef-4651-aa54-b75dd54a6ea6",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "82214d9f-895b-4456-9075-c37b5d61b370"
        },
        "item": {
          "id": "15513a67-0afe-47c8-809a-b6c79afcaa07",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8267b55f-1d33-4700-90aa-b144debad7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e4e067-cae0-4acf-9148-220f30694e2b",
        "cursor": {
          "ref": "7069d5bf-e2f1-40c8-b110-bcb1c2ea5255",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "92e3cc1c-cc75-482a-9a31-4f1ce057fad0"
        },
        "item": {
          "id": "76e4e067-cae0-4acf-9148-220f30694e2b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9f4b603f-76fe-4614-86a9-18e6e6eb89d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be466bde-5749-4535-a8c9-978de8254c5e",
        "cursor": {
          "ref": "29f1d272-dcbc-4a65-adc7-ce0574ba0523",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6ef61dd1-ea53-41c0-93c6-a2440b8d6226"
        },
        "item": {
          "id": "be466bde-5749-4535-a8c9-978de8254c5e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "680c794e-e192-455f-ba0a-8596dde8adf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e747a6e2-afb6-4c14-90f6-fe122b692b1c",
        "cursor": {
          "ref": "05a59caf-0c1b-4d1d-9698-f8dd5653e6fd",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "11a20ca9-de52-44c9-ac97-9fa9af14ff19"
        },
        "item": {
          "id": "e747a6e2-afb6-4c14-90f6-fe122b692b1c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5da3038f-ee45-43c4-ab15-415404b0d4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ed082a-0d76-4bcf-8346-1d1cdb75bf32",
        "cursor": {
          "ref": "9a937e7b-b862-47d6-b42a-52dc0a968783",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "17dc4559-887e-4c54-809d-2cfff9fe87f9"
        },
        "item": {
          "id": "d8ed082a-0d76-4bcf-8346-1d1cdb75bf32",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c8ae49f0-3878-45a0-b692-5c6f7d95cab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92be9596-9531-4d5c-a005-c983dc006206",
        "cursor": {
          "ref": "95837a82-59b4-485f-97b7-7875d1fa2720",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "87be6448-3610-4ef5-b48e-120cc8b7822f"
        },
        "item": {
          "id": "92be9596-9531-4d5c-a005-c983dc006206",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4edcfbfd-8067-4b14-9faa-3e317e85f740",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "6f19c27a-7e73-48fd-bba5-81775eb7708d",
        "cursor": {
          "ref": "9a75f72d-89c8-47b3-b82a-7131b3226315",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2558c72d-f807-46b5-a998-bdddc0a509a2"
        },
        "item": {
          "id": "6f19c27a-7e73-48fd-bba5-81775eb7708d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a3a68b9c-d3d6-46af-b0b6-669481584b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6b53e3-9029-4e7a-b417-e8ca6f3a4169",
        "cursor": {
          "ref": "68c4d3bd-9d75-42f7-83dd-53471d4b90f0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e5027ab6-8e78-48d9-80b8-04d60fa0f560"
        },
        "item": {
          "id": "ee6b53e3-9029-4e7a-b417-e8ca6f3a4169",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "06ba8cf8-b2cb-4f67-8285-231438bdf303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687ba836-7b43-434f-82f0-1a76ecd48723",
        "cursor": {
          "ref": "24c4e6a7-e37e-43fb-8558-40f359ae19ce",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7ccd73e9-ed45-45f5-9d06-90cb26d05f52"
        },
        "item": {
          "id": "687ba836-7b43-434f-82f0-1a76ecd48723",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7eac4a3e-4cb7-4de0-9478-cff32e185b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622c1c1b-fa85-417e-ae25-30c8d541540d",
        "cursor": {
          "ref": "77019dcc-a1f3-4377-a944-4ee12d8bd854",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bc29fee7-53f3-4b72-9f3f-e15dd9b6d956"
        },
        "item": {
          "id": "622c1c1b-fa85-417e-ae25-30c8d541540d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "44bb0579-3dc8-4b03-8d6b-933a1a35955c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3721023-4f4b-4d12-9139-33e6be9b3b3e",
        "cursor": {
          "ref": "638848ba-80ef-4f12-b572-64a9a9a4e630",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8f9c16d5-589f-4d31-b2a4-722af6ca5f59"
        },
        "item": {
          "id": "a3721023-4f4b-4d12-9139-33e6be9b3b3e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b70c6cff-2322-4a73-99a4-708e3802ec60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871e4319-fa70-4cee-bc32-c270c4112912",
        "cursor": {
          "ref": "dff882d4-1d1d-4c6c-856e-900b58433c38",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "35198661-5ea9-4565-9cd8-443529404092"
        },
        "item": {
          "id": "871e4319-fa70-4cee-bc32-c270c4112912",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "149d21ae-f817-45c5-b684-316ffb54a81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fef37f-1677-4ba6-967a-8c82be1c2c8d",
        "cursor": {
          "ref": "ac5e4e8c-13a6-42f2-b9ad-7af46f8fc61d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ec3688f8-8c5f-4b57-9a75-f156d8676915"
        },
        "item": {
          "id": "71fef37f-1677-4ba6-967a-8c82be1c2c8d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d9d9dc1d-a819-4be3-8034-5c8c09031e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141c6737-e946-48c7-9d16-ae9c99950f7f",
        "cursor": {
          "ref": "dc7612a3-d0d1-47f2-9eba-2d99258ae044",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "08eb0be9-7bad-462d-b032-69862a8a677a"
        },
        "item": {
          "id": "141c6737-e946-48c7-9d16-ae9c99950f7f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "98f16a5e-c295-452a-b489-bdf16c5e0aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7deeea6c-6188-43c4-9f78-acb1fff373fe",
        "cursor": {
          "ref": "96000b8c-c6f5-41c4-8862-194ff949b06a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "061020df-9241-4d5e-b7ae-0351873fe7e3"
        },
        "item": {
          "id": "7deeea6c-6188-43c4-9f78-acb1fff373fe",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e0fa04c7-a1cd-4e10-9084-562598b27aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc25fc83-f75a-4b91-9b52-a9a929df115e",
        "cursor": {
          "ref": "98992595-4bed-41d2-ad62-69ad68a112a1",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ad20c085-0c86-4ccb-9319-c9c885312aa9"
        },
        "item": {
          "id": "bc25fc83-f75a-4b91-9b52-a9a929df115e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "741371f2-54e6-4e3e-a488-e9df9736bb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1829360-c359-476d-ada5-d56068f0f8eb",
        "cursor": {
          "ref": "fc9040fb-73f8-4d16-9ad0-e07fdd96bbaf",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "003c648f-297b-417b-b888-aa5f8132640d"
        },
        "item": {
          "id": "d1829360-c359-476d-ada5-d56068f0f8eb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "39e52dca-8194-454c-9463-2de2f5950dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7315027-0cff-4e60-9de8-9b579b36a2e9",
        "cursor": {
          "ref": "ea8aa110-7a09-405d-a209-a55e2f5157af",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2ccea17a-f3ab-4dfb-bd85-84d958914481"
        },
        "item": {
          "id": "f7315027-0cff-4e60-9de8-9b579b36a2e9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b9ce9ba6-5d8c-49db-a4bb-bace233052a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d21a7c-bb37-4840-b926-e6de66b9d0ba",
        "cursor": {
          "ref": "e4e37172-03cd-4679-9de2-1d907f4e099a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a41755f4-6aa6-46f5-a1f4-a6f73fae6a12"
        },
        "item": {
          "id": "b3d21a7c-bb37-4840-b926-e6de66b9d0ba",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5dba2671-f943-4ca0-834a-d96b4baeb01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6cfbc8-3f7d-4a3f-b38c-5aeb8241139d",
        "cursor": {
          "ref": "98a1bfed-831e-4fad-be47-54530f548fc7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c6a162f1-7051-4e91-bfc2-f497c5eebf21"
        },
        "item": {
          "id": "7b6cfbc8-3f7d-4a3f-b38c-5aeb8241139d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2dff3ce0-e561-442c-a8bb-55c9670c5a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292dd023-bc23-4926-9f49-311566d307ff",
        "cursor": {
          "ref": "4dc1b1cf-e00b-4df4-94dc-2e49867481c2",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ddb99900-d19e-4803-b598-9a4c9587b2f5"
        },
        "item": {
          "id": "292dd023-bc23-4926-9f49-311566d307ff",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "35d648d1-36c3-49b9-82e5-739288cc41c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebba16b0-0cf5-4592-84b2-bf2f96a2b907",
        "cursor": {
          "ref": "3a54c7d6-ba20-49fc-b203-b11f52f86b9f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a5b8e98b-0362-4360-99d5-e9bf109df053"
        },
        "item": {
          "id": "ebba16b0-0cf5-4592-84b2-bf2f96a2b907",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ddc82c3f-264b-4928-8b23-668aaac60942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56883988-6d1f-4678-a356-bf9bf434ad12",
        "cursor": {
          "ref": "9f3227bb-1c0d-423d-aafc-3b63d18a8d4f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b3a5e01c-a5fb-49f0-ba07-af386890aa6a"
        },
        "item": {
          "id": "56883988-6d1f-4678-a356-bf9bf434ad12",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fc74e42d-ce43-40a2-ae17-fefec5fecf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ed1f32-48dd-4f03-930e-d31cc302b8e0",
        "cursor": {
          "ref": "289076dc-7951-4cff-afd7-bbaf0f0b1c16",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ef511082-4160-406b-af5e-f6458ac00d7d"
        },
        "item": {
          "id": "a2ed1f32-48dd-4f03-930e-d31cc302b8e0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "baae8973-ee72-4c93-87e6-60587882bb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647a9bf7-7d7e-42c3-acad-175b68a2f159",
        "cursor": {
          "ref": "ea6a7a33-3127-4867-ac6f-9709f7dd501e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c94b9cb7-9849-430f-a506-630cc8243986"
        },
        "item": {
          "id": "647a9bf7-7d7e-42c3-acad-175b68a2f159",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f5509d33-3c43-4654-81d7-f78dbcb2bf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb8f6ef-bbcf-4c9f-a856-bd3121a9428f",
        "cursor": {
          "ref": "fdfb865f-70c6-4919-81bb-30a280fb3831",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7dae4581-c804-4e72-adfe-3cea47562652"
        },
        "item": {
          "id": "cfb8f6ef-bbcf-4c9f-a856-bd3121a9428f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7d7aa082-aef5-49cc-900a-c4490e30b169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c98dbae-d73d-438e-a613-fa13fb097635",
        "cursor": {
          "ref": "3a57f9fc-7fd5-4607-aa28-584acc893a69",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "138e184e-4c7b-41f2-a61c-f3d29631b0eb"
        },
        "item": {
          "id": "9c98dbae-d73d-438e-a613-fa13fb097635",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9cfedef0-0643-4a33-9c46-495df0745827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b484de4a-eeb9-4636-9987-3521e3e265ab",
        "cursor": {
          "ref": "8968cc33-f507-4a47-a465-0c0817a3d2f5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7013062b-4671-49c7-bade-3789f7d5c7ef"
        },
        "item": {
          "id": "b484de4a-eeb9-4636-9987-3521e3e265ab",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d9ff51ff-440b-4a50-80a3-61e7dd5d8dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfffcb8-46d4-470f-a208-2b74c91f9589",
        "cursor": {
          "ref": "b4eb0972-d221-492c-8811-a4693470b52d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a52c7f7f-e244-4d15-adc5-cec92e8c1e95"
        },
        "item": {
          "id": "3dfffcb8-46d4-470f-a208-2b74c91f9589",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c44a38da-59e9-4949-90ed-8e953f070c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b06319-d805-4e14-8da1-bb047bae31e9",
        "cursor": {
          "ref": "7a3920f9-91dd-47d3-bf16-2a94a1928f95",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1e002c8d-a50a-4008-848e-16681d4dbd9f"
        },
        "item": {
          "id": "d5b06319-d805-4e14-8da1-bb047bae31e9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1e5c49ff-ea8b-4c19-9f56-16fa11a2c12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce931990-69d9-4adc-bc0e-bea271ffdc10",
        "cursor": {
          "ref": "349dbc1f-0c76-45e8-ba8c-3b315513855c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0e1b239a-c1fc-4148-a1cb-82307c6e882a"
        },
        "item": {
          "id": "ce931990-69d9-4adc-bc0e-bea271ffdc10",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "187f2442-6492-4c9b-a83b-94fac0222dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36df81e5-bea2-4493-82d4-525582c43745",
        "cursor": {
          "ref": "163eacd4-5dcc-436f-8fdb-7e1896da8894",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1b1eab5a-f158-4d4a-973a-1b9db0555a15"
        },
        "item": {
          "id": "36df81e5-bea2-4493-82d4-525582c43745",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e9af2911-aab7-40b6-bb91-f307f7220dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c2d9a2-d866-4cb0-8010-49e58953b17f",
        "cursor": {
          "ref": "132e5a89-e4df-46db-af49-157e0c2a249e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a6e1cd30-da3b-4c4f-9eaa-42f8ce0695a3"
        },
        "item": {
          "id": "27c2d9a2-d866-4cb0-8010-49e58953b17f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5d41cb74-e532-412c-8ac2-ccd9031b7231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d99c73-383d-44b5-86ff-342eb21cc8e4",
        "cursor": {
          "ref": "092cb292-9ee6-4fc3-879f-fd5b1677917c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "06f1e576-f931-4e46-b0ef-6170502b1797"
        },
        "item": {
          "id": "74d99c73-383d-44b5-86ff-342eb21cc8e4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2d6dcaa7-a76a-483c-9eef-c332ee2f37d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48ae2bd-4964-4059-9e13-d4b49ced2cd1",
        "cursor": {
          "ref": "1e7fadbb-e1f2-42d4-ba8d-0bfc65c68079",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f6655ff5-fef1-4cb6-a6d1-2922a9247566"
        },
        "item": {
          "id": "b48ae2bd-4964-4059-9e13-d4b49ced2cd1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "441c87bc-3880-471d-9667-10ab2b286301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794128ee-3999-476b-a933-961f58bedd21",
        "cursor": {
          "ref": "c2552ad9-6dd4-4075-a960-2bff6d415d70",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f23e4e6a-75fa-4c95-b13e-1273bf318e67"
        },
        "item": {
          "id": "794128ee-3999-476b-a933-961f58bedd21",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d334c9f3-4299-4806-8a72-afa11e4afe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29745d3f-840c-4d2b-abac-60a938ce00bf",
        "cursor": {
          "ref": "5fe02589-7c2d-49f3-873d-c63e77ae4177",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6ac15cc8-8286-41a6-b6b6-6c6f6124679b"
        },
        "item": {
          "id": "29745d3f-840c-4d2b-abac-60a938ce00bf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5d973fd3-5336-4138-ad92-4379c4625434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bfcf47-ef57-4fef-9887-1ff3b7678697",
        "cursor": {
          "ref": "165f6eb9-ab45-44cf-8be5-68949a8a7ccb",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e0900d81-2d5e-463a-a30d-799757bd38c4"
        },
        "item": {
          "id": "99bfcf47-ef57-4fef-9887-1ff3b7678697",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b5572455-9be7-4b02-bd38-47c36369e03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15b6418-66b9-47db-beac-0bef43273ffb",
        "cursor": {
          "ref": "c8772619-8c94-4f9a-a52b-281af47fb92b",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6a3854de-0d00-48bf-a23f-7fd7106cafa8"
        },
        "item": {
          "id": "b15b6418-66b9-47db-beac-0bef43273ffb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bbe44ca4-0739-4259-91a2-aa605be70d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3660c367-5945-47d8-81eb-478d72a1e839",
        "cursor": {
          "ref": "27e1f2c1-d3f8-43c8-8151-739a2e209899",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e6908b34-57e9-41fe-9beb-f2ec7814aaa4"
        },
        "item": {
          "id": "3660c367-5945-47d8-81eb-478d72a1e839",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "87e5a705-41dc-4b26-840f-65b5cdcb2fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e5131d-f629-4c0a-bd36-df0dadf27030",
        "cursor": {
          "ref": "39c46a14-61ad-4865-9b72-96d932fd883d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e5f3adeb-868f-491f-8f59-143e35947794"
        },
        "item": {
          "id": "04e5131d-f629-4c0a-bd36-df0dadf27030",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "969173a7-85ac-4de5-b603-02bddf648214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5476ca6-78b7-4c1b-9dbd-70a68d146809",
        "cursor": {
          "ref": "c3b5e180-f773-49fd-928f-ca99f5e4495b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e189acb4-f696-4160-84db-87841516ce14"
        },
        "item": {
          "id": "f5476ca6-78b7-4c1b-9dbd-70a68d146809",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b095c5dd-d6cb-4e79-8c04-6df8a3bef5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8458b931-4706-4164-81cc-0290c0faa1b0",
        "cursor": {
          "ref": "b27099dc-e9af-4f19-b546-6223c366c439",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "74dddc10-55c9-4f7e-9309-2f6d7ce1c835"
        },
        "item": {
          "id": "8458b931-4706-4164-81cc-0290c0faa1b0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9a4972cf-4087-4d3e-9485-c3bb4fad975a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de21d9bb-1963-4829-a243-39bfb49e9324",
        "cursor": {
          "ref": "8f4f129e-794e-466d-8d04-cf6d4632257b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f74fb515-363b-4a6a-9dc3-924c5e500d71"
        },
        "item": {
          "id": "de21d9bb-1963-4829-a243-39bfb49e9324",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e4050657-e086-4e4f-9f9d-c0572b2e4c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a842f602-53f4-43e8-a00f-c1cfaf8049fb",
        "cursor": {
          "ref": "5509a074-a79c-44d8-b501-9cbfb9b7b9a9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e59a3c6-0f12-4f3c-8d24-016d8a4096d7"
        },
        "item": {
          "id": "a842f602-53f4-43e8-a00f-c1cfaf8049fb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b1ca40af-1138-4c17-b130-0ce24226f676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3711b49d-eec6-4dee-a6e2-9018b3ec4b62",
        "cursor": {
          "ref": "6cb04f9b-5420-4fa9-949e-7917725f8129",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7a2e7ac4-ef77-4c03-a858-dd91ec00be73"
        },
        "item": {
          "id": "3711b49d-eec6-4dee-a6e2-9018b3ec4b62",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a73d6305-cf6c-4d14-9f23-e1b341dc8e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13706d1d-219c-4520-94a8-7208d6fc8122",
        "cursor": {
          "ref": "49d5bc82-1920-4bd6-b76e-32ad4f16a038",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c384f393-9eca-423e-b561-cd1f72a9c2c9"
        },
        "item": {
          "id": "13706d1d-219c-4520-94a8-7208d6fc8122",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1050d950-b9de-4abc-8098-0bd994dec580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc71f39a-294d-42de-864e-0fe5c724eeb2",
        "cursor": {
          "ref": "0704c7b7-f727-413b-8e21-38854bd01b79",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bf782cb7-27e5-4dbc-ac62-c571e8869ec4"
        },
        "item": {
          "id": "dc71f39a-294d-42de-864e-0fe5c724eeb2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1e181211-fde8-4213-b88a-20fcdc76d4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4550f5-47d8-44bd-9b5b-4422dfe043dd",
        "cursor": {
          "ref": "2a6d0812-0b12-4dbb-8435-4d6682519327",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "58e25ca5-d15e-492a-a993-16957e3f9832"
        },
        "item": {
          "id": "1b4550f5-47d8-44bd-9b5b-4422dfe043dd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8091f1ad-0cae-4df7-a819-4c2249cc21c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6adec2-8f2a-42d6-9b78-7d2479cb95dd",
        "cursor": {
          "ref": "aafd5030-3739-4290-9ee0-621bbb46b813",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2917d928-e7ea-475d-8633-fc26efe47869"
        },
        "item": {
          "id": "2b6adec2-8f2a-42d6-9b78-7d2479cb95dd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4253eaa3-94d7-4354-8c3e-6a73cce127d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ff02af-30a0-4d03-9bbe-f9a22b64fd84",
        "cursor": {
          "ref": "5ed2ce75-4630-4753-b9e5-06a67754b8d0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4d5f0155-5c7b-4874-8113-c20a86171ee1"
        },
        "item": {
          "id": "89ff02af-30a0-4d03-9bbe-f9a22b64fd84",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "388ba68e-0fd6-4771-91d2-e6e21b98abf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db0f4da-31ac-49cd-bb81-c07be0b4e53f",
        "cursor": {
          "ref": "6391236e-fd7c-4fd3-b74f-854ab23f4201",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5e69710a-9850-4a5d-8ebd-75792a0d3d33"
        },
        "item": {
          "id": "8db0f4da-31ac-49cd-bb81-c07be0b4e53f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b18d0f60-e7fe-41a0-850a-10021e6eb67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e943c947-5041-4f7c-bf47-999f5209ec96",
        "cursor": {
          "ref": "696efe02-2d6e-40e3-87d7-c8db1ba9984b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b22cbc60-df7c-46c9-a857-4378bece93f8"
        },
        "item": {
          "id": "e943c947-5041-4f7c-bf47-999f5209ec96",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1a6f44dd-a937-4bce-9a90-85f6514e5b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b62dfe-2169-4fd4-b864-e4d99172996d",
        "cursor": {
          "ref": "a20580f8-9f39-4ef3-b408-12886a9637fc",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b4abfb98-7c3a-436a-86c3-67970ca68bd2"
        },
        "item": {
          "id": "94b62dfe-2169-4fd4-b864-e4d99172996d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "99b0c740-52bb-4b77-aec9-cb962bcc72b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8e90e5-5cff-495a-b65f-8b89e3009262",
        "cursor": {
          "ref": "039d705a-41d2-4f99-81bf-52a4a181fd70",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e4e74a85-14a7-40f2-b489-7577d59ece1c"
        },
        "item": {
          "id": "fa8e90e5-5cff-495a-b65f-8b89e3009262",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e0a46a9d-c4de-4709-be9e-24157b99d925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bc4827-763e-449f-91b5-9163266abb10",
        "cursor": {
          "ref": "c265e345-9fc5-4930-9c60-1627f9ae032b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b3c19a8a-4f20-4d88-a442-1233d8794e8f"
        },
        "item": {
          "id": "d6bc4827-763e-449f-91b5-9163266abb10",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1a0e44c5-f1da-48dc-b295-1a77dc0b04b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b285384-dee1-46d1-9c23-2943c18195a6",
        "cursor": {
          "ref": "314b365f-1b87-432c-a203-e0d3c9c30e4c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "866862a8-f3cd-4463-a9d0-35f729608936"
        },
        "item": {
          "id": "5b285384-dee1-46d1-9c23-2943c18195a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fd4db15e-a0ef-49bb-8a11-aeaf84a23005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780e627b-a1b5-4077-a755-5d4cc50f627c",
        "cursor": {
          "ref": "bfee2010-9c4a-40f2-96ed-c4df7ef56a7a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "abc7bc5c-a7eb-478a-833c-335a22450c92"
        },
        "item": {
          "id": "780e627b-a1b5-4077-a755-5d4cc50f627c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "872b7574-9aef-4013-8b36-389e316a04c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dda9b34-8971-4c10-9841-25ef83823e16",
        "cursor": {
          "ref": "b719f783-e6a5-4a74-80fc-29ea4bef0af4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c2b94a05-5ae4-42c3-a753-1cc51812d858"
        },
        "item": {
          "id": "5dda9b34-8971-4c10-9841-25ef83823e16",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b40398ed-640a-4e95-ad23-1d48a902bd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f970b7-6c93-49d1-9a21-d4e163b50b6a",
        "cursor": {
          "ref": "5634d461-febc-44bd-94f6-df724b39d632",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "83362863-0c40-4b32-8be8-b04022378d09"
        },
        "item": {
          "id": "66f970b7-6c93-49d1-9a21-d4e163b50b6a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2cf4bf58-af2e-432e-b5c3-4e99ab6e1b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d53296-34ee-489b-9f8d-02aa20c0a4ed",
        "cursor": {
          "ref": "02117448-05ac-4561-8fdf-a28559835ee4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "782b1427-a747-4ac2-b465-2501d6c1d2ee"
        },
        "item": {
          "id": "80d53296-34ee-489b-9f8d-02aa20c0a4ed",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "503b37e0-e30a-41df-95b9-9c4cf5ae3421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5624bec0-96ad-4298-a7ab-326b4a958339",
        "cursor": {
          "ref": "63cf6e76-334d-489b-bcd9-5823e6bcc750",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e6573221-04f7-4ef6-8b95-9af4e4928c72"
        },
        "item": {
          "id": "5624bec0-96ad-4298-a7ab-326b4a958339",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "60e1d295-6652-48b7-b69e-27666923c15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e926c4c-9abe-40be-9257-3b299153fa32",
        "cursor": {
          "ref": "20d996ff-747b-44d6-b26d-33aa3fbccf9b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ffec06f4-a5b9-47cf-a177-29185875b758"
        },
        "item": {
          "id": "7e926c4c-9abe-40be-9257-3b299153fa32",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a50be8db-30c3-4119-8966-8c0405ff72f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d43658-0f14-4098-b0ea-fde7b9524857",
        "cursor": {
          "ref": "c0332eed-c900-4d7b-8d17-9a040a067fe5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "38583bc0-42f2-4a3d-94b0-82f417749a2a"
        },
        "item": {
          "id": "09d43658-0f14-4098-b0ea-fde7b9524857",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9923e6de-0f3a-430c-96c2-a5fecff69564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e012ee91-cb6f-42db-bf02-a243606435c1",
        "cursor": {
          "ref": "e3bf71c3-815b-4b09-be47-ff7144c82655",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "94aef749-322d-45b7-a030-2244118a7a21"
        },
        "item": {
          "id": "e012ee91-cb6f-42db-bf02-a243606435c1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "44b2bd87-91fd-49a3-adab-8b2712963fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198e1b8d-369b-4be3-a605-0e7d3c6bb833",
        "cursor": {
          "ref": "b4f34ea4-df80-480b-ba73-214ed059f4d2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8db41e55-2612-4c96-a6cb-75ee9441a195"
        },
        "item": {
          "id": "198e1b8d-369b-4be3-a605-0e7d3c6bb833",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5feb5dcd-8608-4946-be20-b8c819f720a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26056a21-a0f8-45dd-b6fa-26489093c31d",
        "cursor": {
          "ref": "ae73a668-c711-4e06-895a-d8696d774fd4",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a399e771-f7d2-42c0-b92e-48242677ca61"
        },
        "item": {
          "id": "26056a21-a0f8-45dd-b6fa-26489093c31d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "77193f7d-0862-42cf-bb33-4d36c9b7cb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589fee62-4737-4090-95eb-f209215f0cf8",
        "cursor": {
          "ref": "523a0337-976d-4a6a-a67f-cd9d4b29d185",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d655c522-3c4f-480e-be12-4e8e53d6251f"
        },
        "item": {
          "id": "589fee62-4737-4090-95eb-f209215f0cf8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1e4012d5-99b8-4a46-bcd7-b83a16a54767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36cd28c-5676-4a49-a5bb-6653eb9aba51",
        "cursor": {
          "ref": "b14d8e09-2f12-417d-a4c6-3f947634dba3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cbeb7f57-f264-45da-9e6c-bdb8dae134a7"
        },
        "item": {
          "id": "f36cd28c-5676-4a49-a5bb-6653eb9aba51",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9c5b9e8a-ff22-4049-a95a-f5225ab10938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4028197-d7f3-4b2a-9b17-278699ac4fb7",
        "cursor": {
          "ref": "525eb62e-2995-4b12-8673-463df93c85ce",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "236e7a0a-f3e8-44aa-823b-330513af5ca5"
        },
        "item": {
          "id": "f4028197-d7f3-4b2a-9b17-278699ac4fb7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a2ea9fa1-1e3a-45aa-a401-584116d43aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0127a85-ee9b-4ea5-931f-11c7b1af4895",
        "cursor": {
          "ref": "8fc5afc6-cba8-4696-8723-a0a1e9b56290",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a34ba819-8296-47f6-9d4e-b1854444a9aa"
        },
        "item": {
          "id": "c0127a85-ee9b-4ea5-931f-11c7b1af4895",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a55142ef-4052-402c-b76b-8ccac736b0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a07718-5406-45c6-832e-97b670c9c04f",
        "cursor": {
          "ref": "87dc9e39-44df-4da9-a01f-e0bce4e9e7b8",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a27f48eb-eeca-44bc-ab25-0eec6927ca4d"
        },
        "item": {
          "id": "55a07718-5406-45c6-832e-97b670c9c04f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "993c32c2-6c9a-4461-bee6-22f758dd8862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46b9f6e-8543-4cc5-bd09-6f39f580fa70",
        "cursor": {
          "ref": "2f741751-c3db-4a98-9ed7-642836129ffe",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c8041ca9-a2cd-46a6-8e77-fe7c88125613"
        },
        "item": {
          "id": "a46b9f6e-8543-4cc5-bd09-6f39f580fa70",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "208e886a-b74b-47c6-9c48-87f4a92343e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b58c6d-69b9-4087-8ea3-6fdb31c61914",
        "cursor": {
          "ref": "5a309c6c-b305-4da2-be12-9f62d18e17bc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5054ad4c-241f-4e5c-bb2f-c16770e458db"
        },
        "item": {
          "id": "40b58c6d-69b9-4087-8ea3-6fdb31c61914",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bb68134b-de71-4b34-8f42-b3b8f375583e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c48274-c7e9-4579-b9dd-e93a28848045",
        "cursor": {
          "ref": "c7179540-9cd3-4428-a85b-5ca6ec287ebb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7036d444-1243-439d-bb13-7f5682f3340a"
        },
        "item": {
          "id": "b9c48274-c7e9-4579-b9dd-e93a28848045",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f292ca99-787c-4594-87ba-0f9f21507ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ee8dcb-c0ea-479e-a822-b33c8ad6dccc",
        "cursor": {
          "ref": "22336ad1-4f2a-40bf-98ba-174111bb479c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3295299f-63ca-4214-a119-50aeb9495cc4"
        },
        "item": {
          "id": "33ee8dcb-c0ea-479e-a822-b33c8ad6dccc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fcf27ada-4d42-4dce-8844-b53c59e18b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9275af15-d9ae-4147-80be-841db895f6cc",
        "cursor": {
          "ref": "5f1c4c42-82f6-467a-b72c-e47e70c202bb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ea29ef3b-9130-4774-bdbf-ebc9cb8c8daf"
        },
        "item": {
          "id": "9275af15-d9ae-4147-80be-841db895f6cc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "17613e6e-b8aa-4c7e-b6d5-e2008fbabf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1beed1b-2fae-4814-8903-d07650510ffb",
        "cursor": {
          "ref": "308104f6-88bd-41d0-b428-51a27c1e313c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "90b37d66-3f26-4f60-b0d1-5b3ff30a20a0"
        },
        "item": {
          "id": "c1beed1b-2fae-4814-8903-d07650510ffb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "89c31754-a154-497a-952e-4e19a0d11a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2dea4f-3b74-423d-af73-f94cc5a6ef8b",
        "cursor": {
          "ref": "fe772a2e-8c6b-411e-a133-16f28859f861",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2c1cb42f-54e1-412e-a8e9-492764525428"
        },
        "item": {
          "id": "bd2dea4f-3b74-423d-af73-f94cc5a6ef8b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7fc3141c-787f-4ed2-a55e-e0b5b736faa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3195e8b2-5fca-4746-8205-88d9201a8347",
        "cursor": {
          "ref": "9055e451-ba37-4ae5-84cb-e856a4db1b3b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fe7692ec-5964-4bee-bd23-2b8dcb7391a7"
        },
        "item": {
          "id": "3195e8b2-5fca-4746-8205-88d9201a8347",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "95a8da6c-f24e-4dc8-98fa-900bf9a13276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae9c07b-e5e4-4ff1-a416-717c95423846",
        "cursor": {
          "ref": "8656afe2-e436-4327-a22e-156e3251ff3c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d64f4ac8-873d-4a03-ad02-395b00197bfe"
        },
        "item": {
          "id": "8ae9c07b-e5e4-4ff1-a416-717c95423846",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a859ad31-c278-4a3d-bfc1-27f5380abbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7690d425-8e7a-420a-8430-b00c63167622",
        "cursor": {
          "ref": "a14a2a60-d398-47eb-b0a2-059736944590",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bf0844ea-eb05-4b5c-befe-a81d08d5b25c"
        },
        "item": {
          "id": "7690d425-8e7a-420a-8430-b00c63167622",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c3431c10-81b5-4f53-b7c1-332f597c0728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455fc408-c33a-49a2-9255-1fa478020742",
        "cursor": {
          "ref": "e87c868b-dbad-4c04-a79e-3124324402aa",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b014c104-927b-4785-a064-1833ba506a05"
        },
        "item": {
          "id": "455fc408-c33a-49a2-9255-1fa478020742",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1f9a1d8c-699b-4573-93a7-a8c1f8aa6597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91972baf-4291-4dcf-b8d2-2dc2a0164c72",
        "cursor": {
          "ref": "9d901bdc-26aa-4596-a4eb-86da48dc0f92",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "74e13806-3d09-4f3d-becf-38910edc3016"
        },
        "item": {
          "id": "91972baf-4291-4dcf-b8d2-2dc2a0164c72",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fb267ca0-830a-4ef6-8bdf-b8676012e3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30fa84d-afba-46f6-9182-afbf0e67ee7e",
        "cursor": {
          "ref": "e38f4b98-0ce5-4ff2-91b4-97522e20fc9f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1e5698ad-1150-4ad7-84bc-522d39b02c1d"
        },
        "item": {
          "id": "c30fa84d-afba-46f6-9182-afbf0e67ee7e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0e911caf-ae8e-4418-96a0-4df3a381f7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b921ea-554f-46f6-83ec-afbf5dc59a1e",
        "cursor": {
          "ref": "20e5263d-7190-480f-94bf-274597547a64",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f131a477-bfff-4b45-9e94-e1bf3a0208e2"
        },
        "item": {
          "id": "55b921ea-554f-46f6-83ec-afbf5dc59a1e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1a211ae3-9af2-405f-91ed-b30b68a9d86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a068ceab-fa23-4648-9a7f-1f6f498c9e0d",
        "cursor": {
          "ref": "43bf847f-034f-4e47-a0d2-eca73f9052f3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "34cf5bb0-b601-4ddb-8405-c08986ffd8d6"
        },
        "item": {
          "id": "a068ceab-fa23-4648-9a7f-1f6f498c9e0d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "59e42bf5-0783-4b09-884b-5320fbbdab2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc6c9a8-9dc7-4841-b952-f304c3853022",
        "cursor": {
          "ref": "f96ba3bf-8388-4c7f-b07b-ba528b87032f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "796a5d54-4288-4619-8b5e-f1a87f1dd1f2"
        },
        "item": {
          "id": "0bc6c9a8-9dc7-4841-b952-f304c3853022",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a2377c81-e844-40d4-a11a-40ce63d773ff",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd23dd12-34a4-4d4f-ad5b-3df295e009a0",
        "cursor": {
          "ref": "d98c7ee6-e9dc-47ce-a93d-8dbe1e063ce1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "85689592-8268-4e46-882d-c0d82959e1ea"
        },
        "item": {
          "id": "dd23dd12-34a4-4d4f-ad5b-3df295e009a0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ffaa9cf4-2482-4c42-bb75-20f6f458ada5",
          "status": "OK",
          "code": 200,
          "responseTime": 4471,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "218c011d-e5b9-4ac8-8c87-4b3058802443",
        "cursor": {
          "ref": "545d6656-ff2e-430f-91ee-bcd5726b583c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2ed9c878-fd10-48ac-a4a5-f32ba6d8645e"
        },
        "item": {
          "id": "218c011d-e5b9-4ac8-8c87-4b3058802443",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0c64d312-5348-4e84-b4e3-05cffd0a80cc",
          "status": "OK",
          "code": 200,
          "responseTime": 2873,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb23efd8-11bc-4bf7-9637-b112bebf5893",
        "cursor": {
          "ref": "eabe3234-f1a3-4aa9-bc07-07c345b1b562",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf90c80c-a2b7-4872-89e0-5a3d1654e0ba"
        },
        "item": {
          "id": "eb23efd8-11bc-4bf7-9637-b112bebf5893",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c147b5ee-303f-4fe2-b790-7c674f9e8713",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb23efd8-11bc-4bf7-9637-b112bebf5893",
        "cursor": {
          "ref": "eabe3234-f1a3-4aa9-bc07-07c345b1b562",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf90c80c-a2b7-4872-89e0-5a3d1654e0ba"
        },
        "item": {
          "id": "eb23efd8-11bc-4bf7-9637-b112bebf5893",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c147b5ee-303f-4fe2-b790-7c674f9e8713",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b2f3bc-c9b4-45a8-a3fb-bc67e0262eaf",
        "cursor": {
          "ref": "544fd28e-32cc-4f84-b4d4-343fd7b67e42",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "96bd3b58-a7ff-41d7-ada1-e253484d7892"
        },
        "item": {
          "id": "c1b2f3bc-c9b4-45a8-a3fb-bc67e0262eaf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f1f414a0-e5cc-40b7-9523-7c9ac3fcebd3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae84c2f-31eb-471b-a313-2d9024fff07e",
        "cursor": {
          "ref": "523355c1-3bce-4624-b6e6-d7b4654ec482",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "69f94b6a-3b1d-495c-9b1c-f993ae29d5dc"
        },
        "item": {
          "id": "4ae84c2f-31eb-471b-a313-2d9024fff07e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0c752564-dc63-4a37-b437-d887330032d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}