{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4140a8e3-9bb4-4c50-8d21-60db29724fa3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "02aa5743-adad-498b-866d-0f7c20673d1f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93fcf834-5c5c-4fc9-b6bf-ae2d18c8f401",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d5ff64c0-7544-4852-80d1-1e1868129823"
                }
              }
            ]
          },
          {
            "id": "36656c3c-ea5b-4e14-9b67-32828c6bf683",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d88318a-104d-4da5-98b6-1ace9bbe113f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "664c428a-e70c-4a9a-8c75-80443478b6d3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3e98d48e-f387-4d80-afb7-5bb6fa354978",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b4016b44-d167-4df1-ae62-3c47ac3a1ec7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79699b21-2236-4d7e-b46c-856089b4ccca",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bde6ee5-241c-4354-8618-84353b0e2751",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "555487bd-8bd1-44dd-8049-96f476350cb1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a1c749e-421b-425a-94ec-f8ff19d71e5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "961aec36-579d-498e-9f85-43d3d4260d47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b195b88-645f-4f64-ae8b-dff1dbe86777",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "568b6fa7-f407-4e0d-887e-1c51a84f0893"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a36d576-73f7-492c-bf5e-d938e17b9cd6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bb3fd5ed-c5ce-4108-8b00-4aa254010980"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52ad46ec-3333-4d42-993e-bef2418e202c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4c7c068-91c8-4fed-ab25-e4927b45c217"
            }
          }
        ]
      },
      {
        "id": "f38834fc-07e2-4082-8c07-565559a35746",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "83470938-322a-4367-a00b-dd81bf0f5b55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f8611ff-ac09-4325-b914-06aec1acc04f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc5f7df1-5f59-436c-ae6c-c8cbd0eb5dd8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71353c3-085b-4715-a67c-8c187035c76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54ad4fe7-9810-486a-9c46-0b16c9793eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37859da-1d10-45ce-8853-5c5c02c5ae61",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d560e864-1c91-467d-bd31-5d666e771337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d79d566e-276f-47d1-924f-0fee561fc944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dfaf8a-3e66-464e-b8c1-89bcf7ab58ca",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62f1d71-697b-4264-92a6-48bf81b8cd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30ae0a6a-6a1b-4f2e-8dea-abd060aa8296"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8af8834-800a-4a70-be61-4c564c5e9d45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "999cbf0f-01fd-435f-bb29-340c83a1a59f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8693dfa-2950-4f54-8f1a-5a738365005a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec42812a-9318-4b1d-851a-8e69c874210d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805e422c-1a28-40df-950b-9d06502d9631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394e79e7-0b18-4068-a2c2-b5d364202e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c187bb9e-1a65-4e80-a680-2e0ad2e0dab2",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac0fcf0-6692-4f8c-a98b-b304774dd53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d902bc7-aff0-47b9-ac03-3886bb4f56e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ade8265-472a-4198-b166-e51c5bd76e04",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fa87b215-4350-4a3b-b253-eb208c0c0363"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f891542e-ff16-4ef8-84bf-d5107cb91dc9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa643624-8335-4a3a-9828-b730731a6d2e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab9ee843-bcb4-4c74-ab04-2c915a38dafe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a5f8e77d-b359-42d3-a7ba-4f2a13d52006"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6db8d873-c10a-47f6-92f6-be2b7b0cc181",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "3d089928-8c49-4499-84cf-d4c89f0b5644"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af53b352-189f-415d-9541-ce99349137f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9a1945b-76af-4bed-b818-19b5136762f4"
            }
          }
        ]
      },
      {
        "id": "849d5c18-c571-4464-b09e-083e7a49f91b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "deabf23e-7989-40bd-9900-b87088509e3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5f05e13-1ca0-42b6-b49a-907fd219068e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a33bdfec-f71a-4605-b607-824bba6189e5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da56cdc-aae1-4e25-9f03-90fc40b310e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecdab34-28f3-4f1a-ad35-317636bdbb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5044930-ad62-453c-9a7d-ae68091ad12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23a54d60-9011-4522-a493-6d0818a89128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff411cf0-3646-4d99-b27f-442e51098056",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1586b3-df83-431d-8d25-f71653005a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b424299d-0d23-411e-829c-c206b55d932d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13102b86-4cb1-4a86-97ea-56e7b0112655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "705893ae-291c-4d23-b9eb-aef7033ac324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6126214d-9436-40df-b1e6-f5f7f19dfc98",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa5c823-2d80-475f-99c6-48cfae5e8db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33405de9-07f5-4616-8d13-67afa196f68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ec8ca9-d1f9-452a-a01f-4e6ce5796f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67d4ab20-13d2-4cdb-a86f-57dc7b09779d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf08b5e-6d5a-4dac-b1dd-d723c4fb1e51",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ace726a-fca5-46d7-894d-6da9f134155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3bdb5f-4fc8-49ad-a0c9-00f442f2a2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8711f010-fe5a-4b67-a4bf-96bd664920ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2ce2a52-cf7a-4d27-9060-f87e87b3b605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfd44af-fad4-43fb-8b3f-f8ab478eac9e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca09a260-ec1e-4da2-9286-fbf5528ca816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fce6aae-d40b-4034-b058-b3738c8c9bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d122f3d-a723-4880-a6e7-7a17c3811f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab9b9ec4-e1d9-4e3f-8cf1-d0428b155430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afc503b-670f-44aa-8199-0f2ea655edd7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7d2f84-0b73-4c30-9e7d-b11e0d72f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ae83eb-7a66-49cc-a093-47c999dcd047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d903040-44c9-433c-9f99-22c47bc21672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "618825f4-f07e-4757-aba8-185917369aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164cd959-cd61-4570-90a5-9f4f60d38de2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbf2d7c-d06d-4605-9b4d-78d158ba2178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2782a94f-880d-48af-b921-d4d58889b830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa2bf42-b880-4630-aa32-d603a2728c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3d753bf-d682-4f64-882a-1bcc860851c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7903c228-1569-4da9-a849-f9092bd19e8f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fec3c4-851a-41ad-b386-617f2757befd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ad4ca1-dde2-4560-a007-5983c76a5885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572a32a0-ec85-4120-a9e9-533ff5d68001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ba0260a-48d8-41a8-92f5-307f63e0f01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab663376-d54a-4a96-b767-39c0722f5989",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b98175-6902-42db-812c-157ce4340509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32fe9d8-f5c4-4f86-a94e-bef34ddb3799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c210ff9e-cc96-4de2-a28c-f68f6dfe4b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb8594a0-b7b8-4261-be57-75e0e9f8b5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbf1a09-7a4c-42b9-97ac-aa8e422da7fe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bfad9c-4964-4be2-b260-978cd283e9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28016836-b1d4-48b0-be44-b110babaec62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f0f9bd-f6c1-4edd-ad28-1dca239bf5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "442d286f-97ab-434c-846b-84d62d774901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baebef03-3982-486a-b1c8-1251dad04d98",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139cf192-97ac-4770-9f2b-0b4ade3774cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3cf7a7-bb60-468c-9982-da614d6507d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5101965-b2a2-4a9f-a3f6-880771f35071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43aa925d-c382-407d-a6be-f31d6a05852b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677dbf6a-039b-43f1-9f74-3593e570e8fa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34c8bd8-5e89-443f-9f8c-e47f0daa2dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6cd49c-2eaa-4e83-a3da-ed63bf499c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e03e618-ee4b-45e0-8b13-8fbd429948cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77d321f6-2904-430c-aff7-d860b7e2357f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d86a05-cc3d-43a2-b1c7-d17a3bf263a9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6de1198-e3bc-41b1-9920-cdfd935c264f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecbac04-b08a-4164-8ba0-c4d13a8b8692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5f9d4b-bd52-45f3-9a91-e7d0e3f7e3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae4e03be-c107-409e-ad68-181f647053b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133b6217-77d3-46e3-bfe1-85a6007151ef",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7585aadd-30ed-4f2b-87d0-2bf5765093ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fc2389-9a32-4cc9-becd-6cd16b47d015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1865761f-da6e-4755-96c6-6f7b4266d179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d807feb-38b8-4e2d-ba70-7afcad6a49ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37c53d9-e71d-499b-bd5d-4cd2335ee3cd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe12349-1e7d-4dc6-ba2f-e97b9a081cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a41fbce-848c-4775-af32-caa6b2b2feae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4435ab-66cb-4d14-b988-c1aefd519f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed6f043b-cfa2-4407-80dd-3c6a7ef5b173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e33451c-38f3-4599-a6b1-3fce60fda2ab",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567dadff-b8c7-498a-affd-bd806e3efb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7bffa0-0e3f-48d6-ab5f-e4a4585a0f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf11935-a885-492b-88e6-4cccba13a475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1d450f4-520a-45c4-a491-ec8644ed29d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbf85fd-1196-4b61-b39f-4ecb1ba70b6b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bf1d5b-6fc2-426e-8ab8-ecc504e8c710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e074de4d-eebe-4d1f-bb6a-41bd6ed878a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956b50d5-a60c-4b8a-9175-44561e4cff41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0498494a-97a5-420a-987a-4b2edbdf06ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c6b49f-be06-4d08-aa1d-cf5fbf113e9b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35f3a8a-33f6-4a75-957a-05b82e72bdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fcd046-9c20-4cb0-87f1-70f405112a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107b1b5f-a0fd-4276-bfa6-326fa7c00526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3ba868-f927-47be-b90f-66641a136507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f2ac37-df47-470d-b790-2982b0532b70",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07adb3c0-26b0-4657-b486-ea62fae0fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a432594f-2ed8-46d9-9c25-51ec24967bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293cc03c-a973-4cb1-8295-85a7a459f636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c25209-eb37-4bbd-b945-02492f18cbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd4dcb2-19d6-4e10-afce-9af913b92da2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3a3752-1f1c-4e37-81cc-cbdf38168d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22ce179-3738-4401-a831-fb93230bed6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77952a9-ada1-4ce4-9137-a8c16364e1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cab7e8-8558-47d0-b907-bbac50d51fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4999cd85-f95d-421f-8716-b6ffd6e12eae",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183cbfec-76ec-4b1c-9203-c2c4f1a8aa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e714c00b-f16f-48a5-84d5-301f5e91935c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c93e8d-f18d-4a41-a93e-80471b3b427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "376ad053-dd2b-4f57-864c-acd2a5b54bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a799480-f345-487b-a52e-ba0159d6b0cd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6515a122-5db2-44a2-a3d2-8a5f238b1eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309b56ab-33dc-4f2b-a2c7-b726973a4cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6d6b1b-51fa-42d2-b00d-cf4920887765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7dcbac-976d-4070-b533-fda38b80ca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4953492d-93e4-4762-9d96-71990ec71cce",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6af4352-b6f7-42b5-8156-77712e187d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9d9aae-0b70-4194-ae3b-540e26f2ad8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b21e969-a3d7-444b-a35b-c7d0db925d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c37ba4d8-fb70-42c3-b9bc-92af9932a6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde408bd-a055-4062-97b0-ea692d1f0325",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a27d1-2860-4a88-8a41-2b5fec4ebb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d63535-b271-4630-bde9-bcfecf7c9e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b004092-c9a7-4bea-9fc1-85209f54cfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "da003869-e44f-4d1d-8c94-4ff109550670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec36f75-2e44-411b-8d3c-dafd75b19b6d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecd9e19-014c-4dfe-ab08-eb16807041d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a830fe46-b76d-4c3e-8128-9fbc3170798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655c1843-f38a-46f7-af3e-20a6c39f0aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0aceee-7af5-4454-8c54-3d00eb8424c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d94d83-7383-4864-abd5-af45335dcdd7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14365a48-50ab-4cb6-91ef-6a1cd2f1f502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8893b654-f6b3-4395-bb1f-a0a44e6e0340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46f80fb-75b9-4d41-97d0-a786611c29c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b3911a-6ec4-476d-bca1-ac55502d6d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ee8aa0-669a-4892-9043-3726274c95e0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c1d82d-d298-45ae-90fe-66dc40ee9912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2074ea17-6e3c-43bc-9b62-dab7a6c5eb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f358117-61cb-49f6-acd3-a01ac89c499f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "238c4cec-ebb3-438a-aede-fefbd7dd4ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eebb373-111a-47b6-9e8f-e5d627d59cb4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d4f1d5-94cc-4927-9053-fe945df57e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3828871-3f70-4d73-a09b-cb9418b5b68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced34895-417a-418d-a527-5c25614f35f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdf2d56-9b92-492f-9043-b41ff00f85ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012232f3-71e4-4b65-8aa1-42905c32e4e7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fe5ed6-e2dd-4758-8581-0ccc21873a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b155468d-0b9b-4765-8f73-e707d9b6bfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fed56f-eafd-47a2-aa48-cfd5c4ea20da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79083a9a-a2aa-41b3-99c3-a5b8f41c92b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84960a5-ee29-4d38-b2f8-19f64d7c4fe8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b119e8a3-10c9-4c1b-b24c-fa7db56f901f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35329c40-01d6-42af-87c7-634a429f35d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82c5325-ecf8-4083-b6b5-21e8984f4e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e25129-a236-4957-aaef-38f744037cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6ec783-6056-4cea-a296-5f7d842a6191",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ade6a2c-5ee0-4f7a-ba9e-839283f80fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff76c21c-c1d4-4358-a9b0-1d1c705dde97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a955dc9-ad84-41d1-a441-f91af150a500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37174455-24c9-4daf-8e3a-0f9a36c1a083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130a8018-26e1-489b-a963-83edc57b36f2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7b53bd-baf9-4c20-8978-3a44df026546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c322ed-c77a-4d89-9f91-d7bbba1665e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a37a483-6bc9-4f2c-93cd-40ecd24687b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd36a1e-5d05-4c43-a850-bb562e22ccc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b793eef0-6a8c-4fb6-a7d2-10e6dc3f0911",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fc7a93-98f5-41a6-9e24-5498c86b9f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56b066e-4bf3-41ed-8b62-9f5abac7c4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73597168-9dcd-46dc-9811-8b68d4ea9af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e62556c-89f6-42ea-848d-d1b4c114cb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc57f33-1926-46dc-bec9-8dfd092499dc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b4b307-25e5-4b9d-bb6c-c72a52ef513f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf10b38-9a58-44d5-a188-c2144e7d8624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9c138d-8deb-41b2-ab12-42564bbac83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4acd6a3-f336-4f7e-beb3-83d1d2776aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9dfa08-f381-414a-b8f1-341df8f2c63e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b55b487-3ca7-4f6b-9e1f-03b5cbf9ec5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7cd10f-c1ae-411d-95a3-551dff1e4912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73513ac-e101-4502-ae7c-ba38ce10b478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b3861b0d-7c1e-4a19-a14b-b0e81a9231f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e728f4e-a835-4faf-8f4c-bec7c63e2636",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf4c5f2-922c-489a-915d-4e29a10511f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0021ac25-505d-4dae-a628-cadf10df8816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f60a01-d9c6-421e-883d-7ac802d65115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8a5eeb-a366-45ca-b1f2-827766403ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f128a8d-d26d-4ec3-808f-d02158c32e29",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58de5803-8fba-467a-817c-f6484c8c1f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e350b215-e135-4352-8be3-131300ea5ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb98b7e-2a6a-481b-bd25-97f393c3d2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "254da8bd-05d3-414e-a54e-7bc4e5a4e5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1766c30d-f821-407f-9438-3913b9319c03",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf9848a-4b76-4251-857d-c26cfe4f3280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb18648-23af-49b5-942d-36b9855eafcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0a16f0-c1a8-478c-9ab2-d3c8401d0b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a181c7e9-b829-40e2-a07e-6e07da718811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba2dc2d-7904-49e1-86f8-3ec45854c52b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c772864a-c65c-45d7-b4ee-3128f074bc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4405b4d-d8e0-489e-9ee4-2fb5778c85ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d062e1df-8c73-47e5-97ec-ef3d3644e6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60662a9e-f13f-4f84-837c-d145c8a72c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0ed0c2-844a-46b8-b2cb-065be18a1d61",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628e57f5-6b68-4a93-b724-4ec55164b404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26daaee-ee3d-490a-966a-849b702c6bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a731079c-bc9c-4279-a883-cc19c44e4e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91263eef-d18c-49db-892a-9c17dc35eeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac091faf-715f-42c3-88df-995dbbc53f01",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28825224-4fc0-46ad-a6cb-2335db60c7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd39438-5651-4c01-831e-57cef0dc0487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d72168b-6439-40b4-bf05-a28fbc56305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0b52c5-bcd4-44cb-8897-e5bbdfd42392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7078807-abf7-489f-b5cc-2191180913fb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6aa053-a02c-496c-8b7c-cc4bc5fcd77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61bbc85-c5ac-4848-908a-0bf2bd0def40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64486b95-552c-4af6-b080-91969e930748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ac29c7fe-5ab1-408d-8c16-f7fb9afe2a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af2d545-0cb8-4729-a293-881e641b3ac1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829d808e-a380-4047-9ab1-d3bc234f8ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2364a41b-aeb4-49e2-ba66-6fd290545fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8814fd-a372-4bec-8b59-ed33a05958ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee162e8d-4d5a-4fb7-a65a-56875041c760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d22700-603f-4930-8cb1-cdf5f584b22b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5bf688-f47f-43c0-a36b-2c3b2a6564ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fea1041-b17b-4929-8ffd-e7ef6a9da9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b491a073-605c-4af3-bec1-76d300d9068d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "507ab5c3-9f98-4055-a6b6-04b95f0154c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d84d6a7-a798-467a-afbc-abe237d7779c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3558efc-d85f-478a-96f7-acf158afc036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4359d384-8c23-4a64-aeca-963def2217a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d9c440-c43f-4cd1-925f-f15b26b5dfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a53e26e2-9464-4531-baf3-770a83261f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c65b262-dcde-4508-8b8b-c19dc686f190",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362126f2-1bf2-429f-af5a-ee1cc1c08260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a6b936-04ae-41db-a9fe-7681f40c0970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ceafae-f301-410a-9885-939f3f40e4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "838a77dd-6314-49d5-8153-57b2fc0cd275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab10b85-4d44-4691-8c71-0a3fe2c1f3e0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7e0d81-b9ae-4278-8a10-ce8fa46f1c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce721b8-6c3f-43e3-8b59-1948e05d4f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7e6417-1add-4d31-a019-c6371661c6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c6712a-5fd1-427d-9198-0e6641172356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02b1285-0717-4df0-abf0-c82924a6568a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed83d07-e332-45f8-9b7a-670cf2797272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e297ea4b-d52e-4eee-b51b-15e5240d25e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbeda3ce-c844-4bee-aa85-6e68e59811c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6671900b-14bf-45f6-811b-5194ca535f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d75c68-6e07-4e28-bc4d-f514fc69bd84",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012a8150-30f4-47b9-adc7-de27eab81463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bf8941-c4e5-4cd9-979a-1c1734635b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0014503e-db3a-4b71-911e-21ad14c6a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6572a45-a436-4603-88ac-3f010c4855d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204ef46e-3754-4d16-ad1f-beed39bf2ae3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de03e80-1e0b-425a-baa3-650337aeca22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45b88cd-aeeb-40a9-9f51-d9b01c84957c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f65cb93-a1b0-4deb-94c7-6dfd6c4d614e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05adfbc0-7a40-46e3-b260-71ccb8a62193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87588f8-d845-4c29-8aa1-9f3556269d9c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86344ecd-4233-4f5b-ad4c-ff645c0e7eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80923651-0584-4cd0-a8e5-f556f9de61ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de36f51-ef15-4123-ad33-e18b0acb8056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a20ffc-7afa-4db1-9c56-789b97e79e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8af6c4-aeb6-47dc-8952-f471d0be58e6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea0f8e0-c78f-44ab-8f6b-469eeed4b797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41d196f-35f7-4fb4-85ea-5b776fab4ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350ae3a8-612f-4050-a5b1-c7cb7016dd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b097499c-01cf-4e86-b396-543aea917c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b97a9b-2db2-4224-bcac-d6eaa12a2eb6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab72e8fc-eaa7-4b37-8b7a-b170d6266669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788f666c-82cf-4836-9ea0-aa489a8c635a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86978381-61f0-42fa-b064-70af5866a1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7166cca2-de9e-4c2a-8923-b05955ff098a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd56b49-3b4d-4185-b24d-cc0c35a95ff2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743dadbb-22e3-4ca0-ba32-591da590fdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de50631-0cbd-4c74-bcac-0c20032875bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98bfcf2-1919-4454-8886-7e3e52f93725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1458465-be97-4c60-b5a4-8ec102e9f9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492a1c76-d296-491e-acfa-016bfe8f9544",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9bf10b-44c4-48fa-9a32-8536b6b69255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d041caf-6fe9-4b1d-8728-a2bf8b449279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d43d63-2722-4560-95a0-0ce830b3912b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3035aed4-397c-4937-8e32-38da00e43e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52507cf-d49b-4deb-b9d7-cd43251dd4ce",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8484558-5fb1-490f-a55d-2e92cd70815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd79087f-dc44-48f2-adc7-0d80b1496e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f2b33d-3218-44c5-8930-87ec5b4604fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f4875c89-4697-4654-8d58-003f1fafc3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194be5f4-b495-4664-b349-36731fbc9909",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8883e7cb-b784-4959-b164-4cc9e534d960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253fa29e-abc8-4f62-8dd0-0c8f7b3b6b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df610da-2825-45c4-881b-d3eec142ba8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac8262e-c9b4-437a-ad5f-92194c61f2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55565a7-e2cd-49bd-9fb5-dc1c75a5621b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1f75dd-4550-43ac-b506-72ff5fda923d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff31e73d-1d99-43bd-b1d1-24160b811d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959cacb0-0df5-4a11-8c44-b1672046e78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61eb0dd4-b00c-40fd-a78b-3fbd8a0119ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e3884e-cece-4cb8-960f-3d56fa2056cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5b474b-7e04-4e4b-9f47-fcf9e63d3644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d88e2a-c68b-4780-b8a2-1502f5158355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98d96fc-8c8c-4d7e-977a-b2801fdd39d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc45e831-568a-40eb-8159-50ab0c6dbe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b4c0c7-2e5e-4b7f-a1ba-440887b2d0b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e51a86a-08fa-4206-af05-4c77edf76c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89a6195-4b13-4202-86f8-3f9f9c750d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f175cd9-c21a-458a-a138-f27f0f1a0c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e018155-6508-49f8-a8de-6fef7f0ee49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5b0a32-de15-4972-8bab-adcae9103e2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eeeae2-57c8-4ff8-9239-1ffdce0d65cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ee259a-97de-4176-8d77-a4a2b5ec702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805bc0dc-4a7e-4f83-85b9-48bd28215a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca598d6c-09ae-484b-8bf6-8012d4681c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89b32e0-5d8c-474d-9aa6-353012a11029",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e7328d-9ff6-40ed-a79b-c9a426573a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612b9e9b-b265-4c4b-a609-4a0f22397b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09c3543-23e0-4e40-a1bb-7c9fbe7bc1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f77e673e-414e-43b4-b40b-da242728f136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17558cf3-db67-41e3-ac46-b836334890ed",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d894d9-6f5e-4573-8c2e-f89abf9f65be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e994e204-4493-497f-9295-973a355f5037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee6780e-569b-4053-94ef-31a1001f4835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6eee6c-ace0-42ad-b9a7-9a3f0685b11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7edcdf-290f-4898-95df-8ba826dc6dc8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d88526-a027-41d0-af43-ccd7305363e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487c9a1e-b80e-446e-901c-307f03fe815a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429c7c29-0f39-4c16-8d7b-b86381258006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2068f091-28bf-43c3-ad82-7762328fe526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743725bd-c3f3-4b16-9ef6-b9462f289050",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe352f2-6888-4d51-a098-a8bf68552ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97404f6b-7e29-4a30-ba63-a445d3444043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d2d0ca-6de2-459c-bdba-d637b5356ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe165c2-3b54-48d8-925a-ae96470f95c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f962486-4ce2-4827-b019-c783395f1324",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d49319f-c6c5-47c0-a17b-5b9fc4d83a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b48395-69dd-4a06-8b81-029bc825ff99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24987f4-9f5d-46d0-9e75-41f7e345e0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a82b8e-39a7-4ccc-93f5-413e738dad4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f92d348-2107-4f11-a9d4-a22de39b512a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8191dba5-6dbc-4cd8-a1e9-609dcc4afa40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a409a66c-aaec-41d9-a5c8-a0e2da2ffaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2934ccdf-79fb-4e26-9653-85775af99369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9249728d-a049-48a6-b252-48418ff4cfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58680f1f-9f8d-494b-8aff-647f9d4044fb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2c6afd-ea7f-408f-b89d-d7efe90a6bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d213571b-f196-4d69-83b4-11aab8694b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa7d58c-89d8-4f6b-b657-2734f37684a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec896380-58d8-4033-bc80-e57464982197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09544ab0-5514-41bd-bfc8-322faa4024f2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f7115b-2b07-4639-93c8-4be4d6ecc562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50708034-44ad-4ae1-af95-9889cc0260fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abff4470-f453-48e2-b1f0-8bede724c52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d55ae13f-a435-46b1-90d1-7265b082d80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102c14e8-3130-47f9-ae43-f8bfe1645697",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0362aba8-e8f0-4489-861f-703b34ea00ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686932e6-1c81-4572-b5c6-1af6bf1cb66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2979efbe-aaf5-46de-91bb-001645c63401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe83a6e-a269-4258-a6ac-8b423c585184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44904513-115c-439a-9919-825f417e76fe",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350c1dda-cd8c-43d3-80bc-2f5e54729aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e91cd6-6971-4ed9-9127-36ffd38268c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ca7b09-1893-40c7-86df-7df7d71a1848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90209168-0692-4022-a9b3-0f5657782549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af5106b-3d77-4bba-b8bd-6c00d12ef163",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245f99bf-5154-4714-b89c-a21c44b6ad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edd9d4e-c167-4a43-87a6-da3bcaad206c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3489719c-e279-4a33-97d2-fcb55e6c2697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37e5ad1-3deb-48d8-a607-380107dcf446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be012bbf-2aa5-4be4-849b-fe82bb32c1ad",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce1754f-174b-4a4d-890e-efed071f7ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6c3f63-f2a1-446b-9f07-b620b9e73ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4788c53-aa15-4a02-9a4a-db963f4e9d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31ec2b72-ef96-4df3-be51-45f6358e9c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15fbcff-a587-464f-bdcc-a063796c865f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f00adf3-18c9-4d8b-95ac-5600e99b108c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae64f6b-0062-4675-9818-7e1aeed02c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304528e5-ce3a-41c9-b5eb-eaf0cc552b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d5145d-d9b1-441c-b2f8-1c278b12bb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b6b8c1-fb30-4745-9515-43efd06990d0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b938cd3-ba29-4764-b19c-02898bfebcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4df7838-c1b2-4654-8d91-a64508a85522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea715b4-186c-4bb5-ba88-6c6af818ef05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cf61e5-04e3-4c78-b4d0-8fd59be2d0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b04b0b-e8a7-437b-8ea5-32b285068044",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3101e68e-0df9-4960-b98e-447d0c87aba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21689e3d-5012-484e-b0df-8b8b131bba98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebb0a03-c52e-47f8-9008-7eaee88216e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b73b1c9a-f6ff-4298-998a-d369a74a99ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e90d87-24a0-422b-a969-0c0d8dd66f7e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8296f23-0d75-4929-91df-be94419c10fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5d0f8d-6499-416c-82eb-2192e6ddad84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea2d323-7403-4c88-a187-579504937f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4f42a5-0c75-4f29-8e72-3eb03cff2c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a462eb-9b07-49eb-90a1-947b42669bd4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fa894b-139e-4d45-82ba-8ff3a90a9c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ba30a3-af6d-45a8-8c27-eaf1d3f642b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f323fa70-cbbb-417a-a7a7-47660daab30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "830c7c9f-5836-4edb-9180-403964c038d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c46ce7c-302f-48a7-b0f5-255a60e7c2d7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f44d49-dfc7-46f5-b32c-a77191ce169f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda48b9c-fda8-4b90-b689-6113dedbc4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c12e0f-22a8-40d9-9bb5-2941f487680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba2d08e-c5c4-4fdb-b496-af9fef0b1730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6e069d-e233-4cd5-85ea-0526222a67e2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bf5b13-cac7-442f-a03f-5efe6d8ad3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d07b53-2b2a-4169-afc8-0cdd32b80568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46201b13-3eb2-4f48-bec8-fc4c2bb4c0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd66a6f2-140b-4d14-ba5a-1dd508f27a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c2644b-728c-4863-9df0-aeb734076d85",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96b6e57-da1a-4001-9105-649a9f2f908f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a4eee5-4a0c-450a-9252-a02477ffe5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a18d79e-db6e-48e0-a236-da50c6bb4d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44beaee9-b318-4d51-bdf3-5513c1c35916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34835fc-0c84-48e6-9d18-e25e64e03747",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ef62a9-0cd5-4eb9-95b7-6d26a982d461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d38bbe1-f1e0-4712-a579-1bc46657276c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130e80d5-e039-4ee0-9dea-0d4f5b5c554a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19d9cac4-af6e-4d62-a5eb-f9e9b235b79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af49186d-4dd6-49a8-a58e-62280013bd15",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ef934c-7f20-4f73-b290-f059680c9839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac0675a-39c8-4932-8bc0-e667f5c6cf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a100a88a-7968-4e86-aacf-28700860ec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e1c199-d50c-49b1-89b3-7e2f53c7bf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e442b44e-dfb8-406e-bb33-203d21fee8b0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df81f33-ec7a-49a8-8a11-2582d0c7ebcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666da350-ccd1-495a-b9a7-8e1b66c55e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f199a8-95fb-4081-9c38-11584c56028b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ef8dca-9af3-4a6d-9dd4-89f478b32541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a31519a-f3d8-4516-b813-38aeb57a9081",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5dd81b-8e34-4d51-9b59-d6e3faec1e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf28ffa-a888-45a0-bd30-754916373141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cd8ae2-e561-4160-b067-6cf3406b93fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa3db40-0e1c-4899-88e6-2ce43aff8a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8453800a-d1bf-4ce1-80cf-8e54dbe89aa7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda84269-25ff-4ff7-937e-b51524ba33e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebbe7cc-61da-41cb-86d4-b3d73200a8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e10002-8818-4e6e-9b67-9879ede6080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a67a40-be4d-4eb7-8dd9-9eaddb889c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fba227-3cbb-4a15-82c9-294f420ce0b4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8fd29b-637e-4038-8841-1418e4bccaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1ea45a-7e13-4557-bfe9-72439e7e66a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d718d3-b4eb-4bb7-914c-1215de60b55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6553a6b-b2a9-4f5d-90a4-d5799d001d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b90537c-3cba-48af-9259-6edab4536cb2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7623c9c6-eeb5-4008-90a5-3799e5fe6e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992cb6a8-25a1-4d60-b971-6accd190178c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bdd5d2-b97e-4e50-9af5-a097b4873dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "273984cf-98a6-4270-8122-90b9cc3f6c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cd7804-33b6-46a6-8ae8-3dd1e2e27aa1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da639bf-ead1-4298-ad50-b27d9150924f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba2be53-2422-47e2-b479-b265d05771b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415b3711-3a0c-4d08-86be-a15fad1a7ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01081a10-abb7-4037-b349-59655d252756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0150749-eaae-4c66-8434-781f50d987fd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d02a9b-f163-46d0-8e8d-918e535fa3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b272616-bbce-484a-a4a1-fdb7a002d54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9ebed8-6d3d-4418-b0d9-424d7b88baed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b341c73-d06c-417f-b1af-ca66d4db02bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ad1f59-8fde-46e9-865c-394a0c8dc23f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c385ee3-70cc-4d85-adac-d9fc88bbab08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7fcb34-0ab7-4713-81e6-83c3fc3e5d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13530172-f976-4bcc-b919-e511162f2cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "19f1eb1f-bbd2-488c-a7b8-ada09f5bdba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0968299-d42f-4eef-8ad6-04f342ceb89c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e382ade8-af5c-43fa-a7cf-150db81ced7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "08a05d15-b796-43cc-a9e1-95f6e61ee959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafdb1db-e1e3-4867-a32d-f85bd6ae0d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd951aab-79c6-4b5a-b407-aea708d372d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8b37b66-a68b-4099-b939-114a7287f386",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e23c3da2-8611-4468-8816-567da01c4ce6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952506fc-e796-48ab-aad1-fba0c263c349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43f09bcc-2700-4579-a857-6b27a92997ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f338cd7e-8121-46b0-85ae-79db4bdb376b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "762e6d47-42c0-4d9f-b9e1-31db979e6aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15668291-c58d-45d1-8180-570b98d00b03",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e8287d-5da0-4c0b-8b4a-59ca77d3196a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43bdd88f-bacc-4869-b01d-ea5c7d76d5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b848fa1-57f4-4440-ab55-c7df7eb60c92",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e85e58d-16e7-480c-a110-838aca5542e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f8fe17d-c45c-453c-a654-ba682b9820a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2d3bc79-57a9-4bf3-aaed-17ae7cf52ec5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f75249ba-2320-498a-908e-6a8b8f08c51d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a03a9922-78e5-4148-af70-ee1455520361"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "475bcdc6-3ef8-4079-ab9a-8337304ab650",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "083d5a03-4947-483e-b625-0980ed4db413"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3dd790d5-77ce-4084-a695-7f8580ec0a2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "939b65ad-8ab9-4d44-8340-acd9d99a37e2"
                }
              }
            ]
          },
          {
            "id": "05c9d604-85a6-4d61-b8df-890f0bd51ac1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07ff9dbb-5a6e-4639-b667-71e5fb0603dd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8eaa64f-d893-4dfa-9013-7c27ff5f9b43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1809c24-76fe-4195-abe9-9b793198b380"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a91dbb25-5f3f-4e11-aa4c-7b9b376eb400",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43ca51c7-ab58-4ccd-b018-fd6a48e67709"
                    }
                  }
                ]
              },
              {
                "id": "0d344a37-d7dd-435b-bdb7-397dd9bab8d4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02a51d63-1ede-431b-8f5b-6c5fca543cd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f92853a5-33c1-4527-ad85-aecaf3a09d0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8645b80e-8107-419c-838d-6eea8b7e94ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb57e371-7e29-4f40-b875-b07747f79dd7"
                    }
                  }
                ]
              },
              {
                "id": "ff43996d-99b6-49c4-928d-5dfdeb53e4a2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d7c0946-6192-4a74-ba83-b21598709ca8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dd3e9ce-ac0c-4101-aa23-6d3ad2e2dfd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90df27c4-a804-48ef-ad57-8df53ac653cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4ec24ac-834b-4319-9341-8833b7cb4f7a"
                    }
                  }
                ]
              },
              {
                "id": "a381e0af-c54d-403a-8fe8-d5c30573985b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f06128f4-29bc-476f-9433-cc4c89dc2b51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4bb25fc-8d99-49fc-9036-e5a9c36e4b8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f2d7242-d31f-4770-987b-1ccc7f58b9af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "905e252a-d52e-4bb3-80b3-d312d0766713"
                    }
                  }
                ]
              },
              {
                "id": "09643629-0f67-4d93-a159-5e6f718a822d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37017559-ac4b-473a-8347-7a80b0fdc78a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f9c3f31-033b-41f3-9ea0-5d32e7900c52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fde5ca8e-c920-49b7-a509-3dda41cf81a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e1e6d9b0-ff2c-4fd3-9d78-8353d2c285b2"
                    }
                  }
                ]
              },
              {
                "id": "ea45f20b-0ed8-4443-ba39-0167b597e2b4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c08e278-1cf9-47e3-a8ff-0e2fb0c94713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdbe37a3-cc6a-4282-9f90-d61b80a1d78b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "811b04eb-7498-4bbb-8c27-880e0e3a3cce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09fb8323-8eec-4de8-9c55-4e36d78d9a6f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17b04aa5-bf1c-497a-b4ec-0cc7e9a1df1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18cd2483-89ea-430a-8157-b491c9f60036"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99e23cdb-3919-47e8-b2cb-01441ddd37d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a50a2504-6199-4584-9034-d587c0668359"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c88aa1dd-41e9-47e9-ab2a-65f341165ca4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ca0b85be-697c-4b50-b310-51096d68d67d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28398821-e3bf-4c0e-9fe3-698ff690ae02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8129dd4-5fd1-439c-a152-a15630b71b17"
            }
          }
        ]
      },
      {
        "id": "8a8c3f96-88dd-4311-bded-0df2ab191eda",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e4b4bafb-a6db-40f7-9ffe-ef4ce02cfda1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e7f31af-7f93-40e3-971e-616279093405",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7cd5a13-31f1-4429-af1b-5d90f8e6dddf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98086e24-f629-46d8-895a-ac34dfd4ca2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2a3ac8-8bba-4754-a54a-4c8f8b386918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec4efa8-eb4c-4aa8-a5d4-51506aefd1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "718f7026-88a5-4b3a-a840-3613b98fa23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5c06ff-c735-42ef-8322-bf9a40f233c0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15534707-8970-4663-b1dd-635b46dc67b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b08fe81-6790-48eb-9961-ff9eb5dd8a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bf8888-3b1d-4912-b825-1cbe353d1c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e6253d-b798-443b-ba2e-e89df4b4e7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa002c8a-eb11-4c83-91c2-a6e0f6bd29be",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f558c2-3439-4eb7-8da1-352514dd0c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fa2752-0e73-4868-899f-46a0df48ef6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0782e90-93a9-448f-bfea-035bc47bad84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d4970b-f9f0-44cb-a257-761504f35614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3cf688-4c17-4c35-bc45-6d2ce407e58a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3798d0c7-f4c5-4f7e-8551-9ec8c1416c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088bd02e-9c0a-4739-8fb5-a34b988e688c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7672d1b7-e37d-4ede-847c-9210d46a76ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7aed17c-497c-402c-9793-bddd40bae65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729c8a6b-03a9-4e53-88ae-379f6bda3053",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5793993e-3300-4cb8-aca1-6f4e6406ae13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd277e2b-9194-4c96-b2ad-f2a5720ba363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e9f09e-9074-485e-9090-df7382acc64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42039c04-5cff-40f8-9f6a-4c72a6dd1be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44e368a-c8e5-4d02-a61a-bbb100618aa3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fc9697-5457-469c-a4d8-7b35e468a318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca36838-5a9b-4bd5-8073-2e8d3c81b0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cc5b4a-c08c-441c-aaf7-6a621f7aa3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e420a4-a752-47ce-9af9-4ad98d540aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5985382-50fc-490f-8e20-a8b391e49592",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354bf578-e3b9-4df1-9e7b-5a6415a29691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2c5b9e-b588-4cf7-a8be-ac9752946514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa3f299-6930-48ae-b056-e7c2181f7a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bf4b86-e578-44d3-a254-fecc96e42e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9781fef7-9a6e-43c3-ac87-d001914d41ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffc3cb7-496e-45a1-a5f7-6194d4c1f7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b43a69-a73b-485b-8a68-d07872e2b02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce46406d-d701-4d90-88eb-546115082664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c172a8c4-db91-4193-adb6-0afc8c640e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e603770-84c5-44f1-8b56-b8bf83bcaff5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8297d3-7a40-430e-89e6-6a01664ca227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92751062-1ae9-4edc-8857-5e4fcbced662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f5a7bd-fe94-4600-8d00-aa2617566ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64c23cb0-ef5e-4528-ba4e-c94bd1229a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b9e4a9-c84f-4265-848d-d4f39928662b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4b3507-dad0-48ac-a343-a150d6f2ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1734a475-bf1b-489a-9814-3b6a89260cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0396839-8d68-4196-9cd1-7b9fa37b368a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "800d7994-2ca7-4962-8620-a02c5d0fa705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390e6cd7-0f60-4b13-b9c4-4ce02c3f8954",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a30981-03e8-40e4-b7bb-8539fbdf3440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed41d9c-2706-403c-869e-c980593d3bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c02995-99fb-4c88-bcaf-e258d3ada941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "42d7bba1-9088-401e-bed1-db7169bef503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5102816d-e1b3-40d5-ad6d-a49f3e3b59e9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f29358-afd9-447b-b8bc-335d10709eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40933886-9c42-49de-9db7-df90cccf88b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e79103-7e53-4015-ab85-775b6ceafadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae86326-6c7a-431e-9e19-ee247cf38499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95aa4816-54e9-4e0a-9369-1597b0e4f5c9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c24ec5-5eb9-43b5-b9b7-f2ce24b855bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33c829a-d171-4c8b-81cd-c93106177a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec6b798-8fcd-4796-8390-9e452989a041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b924e5c-7ecb-456e-9f91-c9078c3f0310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d491a1-7390-48db-a2c2-76f691ef7ecf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4c0d9c-da17-4459-9ffe-071b1264ae91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e477db36-3f5d-499c-b280-cdeeee2f4f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ee038e-64d8-4a41-aa75-d28386cbc8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a756a65e-0f92-423a-a9c6-863c99141b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a88122-f266-42c9-9b03-5370db9b97bb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8017d217-99a8-4c93-96c9-0639fb0d4bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e997b274-6a70-4307-8a5f-f345e545b229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffa0317-b4f9-4b70-9370-8415427d00c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdc9be6-7afd-4e4e-832f-a11039e79a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf656b33-0ed6-4882-bcb5-fea6b88ec7e7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3a56eb-18d4-4c37-8999-93c95a6fe2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f33379-5d72-4715-9245-58f413c6b147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afa9308-b876-4e9a-9a49-784fef57edc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf2e6ed-f9ca-4170-9579-8aabba103c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eb552c-9c3a-4b3b-a959-2e17a570a996",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1802670-c30f-428d-b125-8de62a19fef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7290c76-2ac6-4c3d-9b09-8d6755215ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725f9f38-ad5d-43d5-ad7b-6f25da4ba2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f13b6e4-d8c5-4556-80b1-ef6443fdd4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c155080b-5217-44a8-93c8-f64a074f348c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bcbf45-d854-413a-bb18-e310b5e02864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1403db-0c7f-487d-a3a7-24dcb1e51001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d702ee43-a6fa-4b3c-9640-c1754d9207a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5161e17b-578f-43e7-aa94-3ecd329300c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92575c98-f82f-46b1-a725-f91efca6c4be",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e907b4-4ab7-42a6-9e86-5fba1d0a456f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64e2217-8192-4c52-b023-925d23ee4457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d010a23-03aa-4d19-9add-c9ed488afd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cd5b0b-c12b-479a-8f0b-c7aa79462956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd8f8a4-6605-471e-bf98-29b4b4889bef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0976fe-bfde-4785-8496-65b0c86ccf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede9b01f-7e32-4a66-ad2c-e23b3f54e444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d3644e-6cea-4c09-8a4e-560839c2374e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59d99fa-7569-4a87-aeb0-01b68eafb268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d6cd07-895e-4329-8bf6-c9dc41a0d705",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc637579-76d2-4b88-ab6d-39d063afa848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a454d57b-fcc8-4f5a-a31a-36e8653e13bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa333ccd-32e4-433c-9775-dbedcab7d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2898bb5a-a6da-4f68-9a50-c3d0763f7b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6ba405-3c07-46e2-a049-312c8547c913",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd7897d-9bc7-458f-bd1e-71bc7cf3bdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe8880f-2992-48c8-9520-b7225e0ee0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9b2e10-b654-41a2-aa58-65fac23a6f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0974210a-730b-4f92-beb3-b5fb8885589f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be04862c-0650-4e96-931e-2a57af77ffa7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cfb0f8-d0eb-44eb-be3f-a178deffded4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f360f2fc-457a-4d9d-8578-95d4bc707cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7de9379-5dec-4a38-86a9-0c44ad0e8f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35eaf046-b415-41e1-bcf9-f0a6f106cb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9361cf18-009a-4cd0-98ad-5351a7cc5245",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898b55d8-c755-446c-9acf-14a0a3927b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52100ea-b6bf-4081-8ef0-fadb93c7fb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2ca4c2-d792-41fa-bfae-a98b0b22d5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1be6ab3-e962-40c0-90ec-a84c7edffd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfd14e5-5c84-4c5a-93df-9a16881747d6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9db34d-b446-4f2c-a8c3-7be50eafea8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc227e8c-7a40-4ff9-b538-9740cc40b6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1facce-8968-4723-aaa7-725e8b8cc505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "330dfcc4-7b4d-4a44-be11-9ab417bef9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79dd808-9b99-439f-b496-b7265deb1604",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21125b15-ff38-4b30-8f34-47370448fc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb1a287-5e4b-43a3-bcbb-d2d321b707da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd3319d-0e06-4657-b76b-265b1310a434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d65488-04dc-4098-9eb9-247ee21da0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6b472a-1fd7-4f54-8d28-5d6aa54edd29",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e50ce34-71c6-410f-abc7-f11e76222202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9c3fa4-1a28-42e8-a1ab-bbd66c96156f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c76f49f-63e5-4981-85e0-38e718e8bc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb742eb1-229d-4d66-83eb-608c7282aa90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e6fa45-8444-4a56-8d2a-320dd891d6f0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f9a15a-6f98-4270-b452-84c0f5d66b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429bcd46-54bc-4e82-95b1-762f72b48f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad2212c-27e8-4ad7-93bb-6859692dc898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "349a10f0-34c5-4b96-b384-a404a1d08b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7620b7-7d5d-47f2-8fea-3c86f69ea20d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74f8ac3-2b35-46b4-a4b5-7f1cd2631d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa507cb-1387-494b-9ee2-8474cae57bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad1cd7a-eafb-4160-9085-5e052ea663cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64488460-421a-4e2e-b939-6d3a7eb3a108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cee6a5d-ba11-4890-a367-591004f586e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05416fb-d170-4663-a5f6-a2566bc1e82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e41153-e80d-4987-8fe3-0322d602e173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6ccc3a-e484-48e4-afde-3ccd0dbece54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef25433-3f44-4b51-b6e7-cf4ec52c9afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12102bd5-2239-4e8b-a5bb-8e4f6dce77a6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dfed68-29d6-4ba9-b665-2d9febf3ec55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f21cc42-79c1-4f01-ad52-17f318cd4572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0c1046-1791-4f16-97e6-5fda66746f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0451dc-db39-4a2a-b322-4f238318e2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187a9c31-f2cb-4c45-adb8-19072ceaa800",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b140ced4-e269-4659-a503-b5e7bc4351cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523e9391-d982-49ad-8f9a-4f8b33b56e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba45ee2-794a-41bf-8349-9ea193e40d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2db818-f641-4ffc-b95f-c249c2a94ee6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a418c2ab-a884-4f4d-a332-f54282560200",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ff15cd1-5996-40fc-98ee-69140d0bf97a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd79366-51c7-4bc9-b595-08c8e093c18d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bcef677a-324e-4016-8472-ffab088089df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8784d288-2d97-4a45-937b-28caea9ad494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5058b063-0974-442a-99c6-8f91b294d301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1336512b-b1ea-44f1-a5c9-51f2f82bfb90",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476d4ceb-e4ec-4c62-94ca-e1b3671e7493",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2934e698-a820-479a-9bc3-e39a3336d6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e5ccde-02e2-4eb4-89b4-75716872945a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a575b92-0baf-4ca0-91ef-588400ee6a58"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ed7b4d8-c6f7-46f8-be60-7bac471f2c31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49f2ab76-8306-42b6-bd12-6eb76fc297c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "961eff62-afe9-4287-8e9f-346e70ff0237",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86458620-97cc-427f-a687-a80f51294c32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33107e25-69f4-460d-a66c-e3ba1afad785",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41259a49-fd67-455b-a3ac-1b53f4403d2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79fab81e-bf2f-4b9b-9378-b7df507d79f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c684b50d-c8b7-40f4-98a8-7f62702c09ce"
            }
          }
        ]
      },
      {
        "id": "cc13e307-21f6-400b-8720-89975fa7f78f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1b2453db-88bc-4190-a54b-67cb9f5098c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29aa17cc-4de6-47d9-9b7a-4ff49017a174",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8e9c89d-00f1-4b93-92a8-e0b6471f866c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd20f997-d204-409b-bba9-5ec46c9d2ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8201cf-68e1-4bd5-985e-84106dbf7810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050dcc67-a570-4820-8242-253c5f434f6f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9634df7-c748-455a-a774-c84cb5a9e6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53792274-6cb3-4258-b06f-a0209f0bf8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3b47a4-52eb-4ce7-a407-68af387289c0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa0026a-4ed5-415d-a34d-7be80e44e3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a30d610-abf0-4ca5-839a-66f65015d881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eeb275-68aa-4265-886d-1b495a452743",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c10997-2a3f-418b-bb21-9625e909bd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f63d21f-6332-4bc7-8748-c94b8ba45ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16320ac-aef4-4c5c-88b3-877b41eb7883",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7e86e5-40ce-4f5a-a484-759b38a7b074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344f7924-45b4-4446-8c59-540d3e721a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26d9dd2-c3db-462d-b620-1a58b8d6eb35",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f0d4b6-9130-47f5-9bec-7821e2d68236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d6a5b2-0702-43b1-b798-f4b0dfb57606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d832530-237a-4c69-b3ea-b2e2ac1ab79b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5958b8d-5c7a-4b0f-be9e-d3916dbd0c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5327561-4ea1-46e8-bd9c-5d2849405999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c0e397-aca4-4b93-9352-0984920fe6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc22cce2-a24c-4774-9fcc-fc27d6136bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5d6a1d-0a23-45df-9778-4937860209c7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3446dee2-37bb-4178-a56f-aaac01f49783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e05e7d7e-15f6-4f0a-86ca-7e06a1cc9a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3340ff-c958-49df-9096-b46357ba7ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0802bd0e-a744-414b-9c3d-c6baad3ee99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3993267-cf00-4b0d-9cff-b9b805270293",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2625a2b6-1161-4f8e-8e8a-ac184c216672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a1b8ee-c977-47fa-9e97-c39e4a24c428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11b4181-344c-42a9-82bf-a294af46a8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c004d7-09df-4bfd-a328-4b889f0c5477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac7a0a6-2daf-4497-a177-24c3adb02eff",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b6a4c6-8da1-4c54-84c2-a28f36001629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c4f9b2-70bc-4fcf-9afe-09b85f7ee872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7642a4-1e16-4efa-a6b1-a0e29f19fb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8eb94e4-54a0-472a-be34-6d2dbdb557cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d2406a-3f48-4177-9d10-79ab5193b189",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de4636c-09b0-47d7-a884-5fd9bdbad426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd6ccbe-21ad-4988-a48b-81068e8817c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf0e74c-ce32-41ae-b4fa-851dfb72284d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed434ef6-474a-4594-ac1b-2b1ee7f21fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b770a7-d730-4369-ae4a-865c6da505ed",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525789a0-894c-4982-953b-dd2dcc576f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07eabe13-d4d1-494a-af60-a0a8752e2660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dd01ae-352b-48aa-9530-c41855a1ffe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62f1e3e-7a28-4f78-bbdc-cb5cd9788355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1550123d-b582-4d30-8d3e-52f6c1431731",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb34e2ae-243a-42e2-b97c-1b86b9abfc7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96768a8e-9f5d-40a1-8db9-3c13d51dc58a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8becc48-de4f-4bf9-a6f1-cb4c31f1fc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7880d7ca-9436-4c57-98dd-5c7f9c1d0893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c10f0a9-9a19-4c5a-89ec-138b4b32cad0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46427d3f-f98b-4fcb-927b-8651d5309361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36acfdbd-41f3-4ca0-9058-17643bfa4ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6b1d15-2205-4cba-9eec-7c3e4b4e3c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f81e1d-9914-41a9-adad-b03a11230232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795d1376-99b6-465f-8660-e1263872846b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9414670e-a695-4b4f-ad1f-65c4c87fc8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb514e34-9de1-4aa1-b0b1-47d5938b559b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294d0527-d360-4bfb-9754-0668b7453fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009fd7eb-5a97-41f3-955e-36c3d8faec5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e046695-bcb9-41a8-8478-eab35e78d4c3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25dd508-6162-4b4d-9a1b-7e543e0df512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6e8bb6-1f3c-4e23-9648-b2ad0773526c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be302d2c-d343-4dff-a12a-94d5770c308a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa110a7-f2d8-4035-b4b0-26f0777ba601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3adaa9-8997-4f13-9f03-a170bd4771d9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a839f19a-4082-4e72-bfaa-fe3b3187c83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffddbd2d-cc26-4c60-b380-dbf5f07c33dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbbbb11-9e23-4d49-aa0b-111e101eb4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23960c0f-abf1-4445-9ce4-4ec20841ddc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbed2b19-297b-4b8c-a1fe-7bb567253eb8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7f6636-11d2-4e1c-a415-76f4066fac49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d317405-405a-4f56-9d10-0edf78bb91ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bc66bf-e477-44a2-a6c1-7aa219ce77da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0d0ddb-3ed1-4b9e-ae21-21d3811d1425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e647e88-eae2-4423-abb2-2384b646a9fc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43736b90-7b16-4875-a57f-38c34b65cf60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c69c65-ef0a-4ac4-8ac2-45dd2eca3b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d31537-baf7-4d23-97c8-578f34bf1b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b07269-2eb6-472a-b56d-3699f68215f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f060bdc-3a44-420c-812e-478246e7dae0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abfc003-4c21-49f5-a97e-d63b8b0d745d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b17c747-7c08-4f28-8bee-6cdf9aac19f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27aa122b-ed10-4e3f-8c45-f965561c5971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe60332-30e4-40f1-ac10-4c234ff2d348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca61f49-ed0d-45e9-9ff6-8c75e1b2aa46",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826d184d-dbc5-4829-9cb8-c207dd01cbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba0bb3e-ad3e-4d5c-a8c0-1c0ac9d583b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf0889b-ed8e-4cf3-8db7-374ea55271d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b82d6cc-e65a-4f92-8649-68a819a29717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571a43fe-8a36-4048-a160-28686cf679f2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3ebbe9-2e7b-4505-83e8-12a40eab8ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0a517a-18e7-43e6-b371-e544965b8565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ab196c-7f9c-4007-921c-e6dc62149cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f305573b-78d6-4681-a8f5-ffb9f1d0ebe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd1002e-ca9e-404e-970b-95743e40e777",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c665ac22-37c8-43ff-8922-75ab9bae2266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920e81cf-44ee-451a-99cb-4002e115cf42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5182f499-0f96-4666-9b6d-949658ed6680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6155c85-5a49-47fd-9b67-5d8e150b4397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d72673-c00f-4df9-8e07-b872fbc092e0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca10984d-738d-49ab-90af-76d550eacf66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ab79ee-6b6c-4d00-af0e-6206bbe28f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f2714f-da34-472f-9418-2ca343151a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be8cd2c-f7cb-4eaa-9d4d-410670465603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47901cfc-1a18-4620-b99f-7f4841c78384",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3ee4d3-5cb0-4103-b2da-8c6a52f66a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d12973b-fef0-4f11-84dd-e283c19896d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8ba1a9-1053-4472-b592-1fb8369d90a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cf5f25-96f0-42b1-a42f-69263a38351a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc8f9d8-494a-409e-b5e5-bda859c5350b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fec928d-e0e6-4b2c-ab81-d828d221c9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac4f6d3f-b0b1-42d2-86a3-e553e821daa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d06792a-44c0-4714-994b-7428c1ec0d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201bcfd6-841e-4e19-a82d-ba07f8944c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d0b68f-9fe6-49cc-b96c-4ece9a7e61b8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdab45ff-7857-42dd-afd5-9ef11277bc1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81a894ce-ee2f-4e0b-927c-7cf96bf13615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912d8763-d155-4c7b-9ca4-baea900b6ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f3a709-0518-4e9f-bd8d-1c1266d224e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfe12e6-e377-4a14-9ca8-8b6c13f4a9bd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61ddd71-4c68-4e7d-95dc-439b528a52a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735f6033-0a4f-403d-86bb-72b2b4998113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825c5aaf-24ab-4a68-8fd2-e6a6c8e1500f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a953ef6-7d5c-4ec7-a74f-35846a05b9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c8a7a8-5959-4d98-9a49-69ecbb076266",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276a7b43-1fae-4a65-bfac-45abe43bc3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95be9d64-124c-49ac-84e2-bd5efdd15d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f473a3-ca47-468a-9d1c-62834134adf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4aa0b87-d96e-42f3-97cb-037196413ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d15b6a-c84c-4aef-9dda-cd8664e486c3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f71972-394e-45d3-a2d3-17f6f29f5540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9381be-3707-48aa-a723-40ab72a57b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89359c50-d3ac-4c53-9c53-1dd8c7eb6df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fff2b7c-442f-441e-ae31-d831068ae96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd7a5f0-a4dc-49e3-a127-26fececadb5c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90961185-fb5e-4cba-91b6-447afee08a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d151d2-9c0b-4843-85ec-a31bae1e2d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b637cb9c-2e0e-4132-9f7e-5766220f9672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd476097-081b-4936-80a3-d24ce0ad6a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55b6c9a-5cf5-42e9-bf7b-5800466193d5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a4a974-8285-4a09-a116-1a38d4dfd925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16191084-1156-4e3e-935c-3e018c0d6edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc791afc-7374-401b-9251-05c64a7dae24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a7e770-32af-48ed-8745-b9a4dd9d244a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d669379f-01a8-46e9-b5a8-9d70da72ca68",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33b3134-89b8-431c-b09d-a3abc590a441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770fae9e-4bf6-493d-a0ef-0f7e14897531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109f0505-45b3-40b1-8884-5b48be5dbaee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba0ecac-73a4-48a4-a14b-cd3f4191adb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d012c5ea-386f-4d20-82b0-da9610a52740",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df67c380-eb29-4696-b68f-403c78d3c3f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83840789-0427-4d91-b368-ae1f98474917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5365193c-47a4-4efb-8951-c905a2f1455e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f420f613-c61b-4589-b2d0-38f2e695edb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e399fc79-9495-431c-ab52-3600a44f57b4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c050ed-3311-4c72-a458-fb8b474cb0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febae240-f118-48f1-a4b6-73cb45dc8f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750ebc44-47b4-48b1-9945-8f7216964d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5defff-583c-4fbf-bd39-0a306a6ebf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ecdb53-0e7b-43ad-9514-729cfd597b83",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bc1d5f-c9e8-4544-abf4-e15551a5f593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c4a339-bec5-4721-8f5f-f72549b81c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c632453a-287e-4b54-ad29-11ffae2203bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d17b7d5-642c-4be1-adfc-a871f7cfbbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57f8bcb-6376-4baa-a7d7-eb7fe4919902",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ef7f3c-3406-4f67-a0a9-358188572729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5b161d-b355-48ee-9e04-3956265f60f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462de4cf-6933-4366-8e3c-55c1fdeb8887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92260053-dd29-4c7c-aeda-e5f95613a6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e239b2-be97-4fb0-93b6-95f04d571bef",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8c3eab-6a45-4d48-becc-39bfef062700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00655644-a6c4-4806-a7f5-f6f5d7184425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464c713d-e9f8-4f04-8f72-153c15e9e869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427bec6a-11b2-4d94-a349-122508afe1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1266ce-cc14-4aaa-a59e-b1004257b5f6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bccfb1-b6fb-4196-9a4f-2f3ff78b5fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8640a93-8d5a-4ab9-aea1-7887fcb80fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c56ff6-b5cf-4b14-8ba2-587bb581c2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2feece34-5300-4436-b81f-22e18bf005d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114fbf34-db1c-43c9-a60c-6a480969f4db",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bd2d8c-f6fe-4fc6-8fcf-ca2ee306ef5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d03d5e-7a3e-4151-b4c3-dff6e3f8e25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e89128-4d23-40fb-941f-a60c1043d336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52764282-eb8a-4b9b-adb2-b75faae29e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58b3b51-7581-406a-ba92-dc79be4d4df0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe40d070-e9c1-4f0b-a522-0ef6ca75359c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38526cb6-e9d3-4eef-afed-d05eccaca3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429edaf3-451f-4039-8702-7c565e296ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36857e8a-348c-4005-90f5-17fb29cc9a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9381c2-c19b-4ce8-aca0-56f1e8945784",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d3517f-a4ae-4917-95a4-4efa3a69cfcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e36a9d4-8e82-47cf-a0d0-f48f9907c6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ffef6b-5eba-4ca7-bf38-715654f7afc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bd3daf-eeff-4ef2-91fc-a3b7d4ae8266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed1b84e-b506-4755-a02b-41843d34e98f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d62f6d-63ed-4084-9c23-9d334c15506a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7374475e-9bea-4ef3-b43e-31427e767d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de97cd4-4250-4629-8b59-124db9bbd130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8dd2a3-0066-47f5-b638-8f4121cb8e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d1165d-8b5f-4042-bf9a-7f0ec31b51c1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa7d3ea-43b1-4556-b435-c1cb97385350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcef06e-9e8f-46a9-9d34-94f19c2c42d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dccdea-2ebd-4b61-a6a9-d82fea93e907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04040d72-d54d-4cbe-b23c-8bb3b2b2feea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b3d963-6d91-44dd-bebe-45894c96be70",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fe8a90-9432-425d-bd1f-6d7df2368ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e22451f-0b92-43e2-af62-de64afb15f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231ee9ca-e880-4ac2-8244-10ad93e851f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13083fa6-5e59-447a-90c1-b223ca2d4c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bd4e02-d499-4508-9e3c-f1844500702c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848ff39b-a84c-4600-8a0c-45f06552d5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba61911-bd96-4bca-a05d-e3b1a6fcfc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ce79ee-6376-42b5-9ec4-8377966e9fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63f1ccb-8b26-4bbd-a3c1-40cecd35c4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48f4190-65fa-43d6-b27f-a855813bb8e7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f400550e-45ad-41d4-87c1-ac80fc710dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83bdf37-0a9d-434e-a681-4ca817a86289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc057bb3-3674-4ad1-9271-53af51119b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7abd77-7312-472e-bfca-7c94dbc32cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d432f9f0-95c6-45c3-9395-b86716843022",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d857b372-610a-4f11-9fb6-d913b9d00909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ab043c-694c-48f3-b3d8-07463102cd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b319c12a-d95d-449b-9498-e1076ed20abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0c5477-0fb1-4bff-9443-dd37ecc34c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce327a0-1d6a-4e2c-b197-226fa1cb5fc0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16550aec-2fd8-42d8-9753-1c01e9e3bad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0445fa8-c08c-4674-b092-e7db2efea849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5022e0ea-d32e-406d-a7f2-903d2b526fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb218a94-fbdc-45a8-8d50-484711d93381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e0389c-4f3b-4b4c-a216-7abe4be3306c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c455444d-32e5-4741-afb0-81e54f37e4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9f0a61-7d12-457f-9006-bc97676abe70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944c901e-4b4f-4d3e-a48c-9a92c4a2e03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5c6bff-3b1f-4e90-be8b-b551b0e5738d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a891dca-a31a-4b39-9ef4-7522e3a27e0b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33197489-0347-45b1-bac2-021a3b6e49d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de046aa-15a5-4481-8b59-bdc937ab17ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f130544-f5d6-481b-8c2b-9696e9242f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec96fc4-4e1b-4068-b64c-9ea36a16cbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb06fa0-8625-4d2f-8bff-0572c38dc14e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37836183-9cf9-4966-8cdd-2e18f08ce877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e7bf0d-e4d7-4109-947c-1bcfb7de5913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663e835c-9749-4b07-8830-3b288a30efbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b6740e-6db4-4f17-a588-d52f26949f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40bf24a-7402-49dc-bf84-f8658e0f2976",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb42a36-6651-4475-8acb-8493708b0e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6a3c0e-e5bb-478f-a309-8ab090be110a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24afbb07-67b4-440e-94f4-5bb80df6fd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353ccc50-87ed-4e01-955c-90b0e4870464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d54daa-c2be-4caa-943b-76194585c333",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba11f5ea-0bac-4069-b528-ab2ee038de39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d977c1-7756-4caf-a3d0-637c82ad71bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1b84dc-4f73-4713-91ec-c01bfd0dcdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fb3a14-2af0-4bce-8008-8db5204dabd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0ac4f9-5481-4aac-9211-febddadab686",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef8ef11-16b2-4206-b564-61fc00e73f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d84e08-a252-4d40-bf2f-43ff97e7368e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fb375c-9cf2-4309-b6c4-c3847b6af39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfd28dd-0f0e-435c-8977-7db4b344a0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794c5512-705e-43bc-9dc3-061868e9546a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd1db63-ae1e-4ac1-9e0b-f8774e38b7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629b47dc-2873-463f-af08-75d6c3fd448a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70986f63-c19f-4334-b412-993c997485de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911a9214-0b46-4593-ac0a-4161e636e70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb797a59-c3d2-4fc4-9035-31a80602e237",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1a95e9-5c1f-47a9-8b17-1d6f416520ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c86e19-0ba0-4a25-a5b5-926f0142474d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef53a481-c0e9-48bc-8fb1-b3591823183b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1fddee-5939-4c4b-a2c2-ad38f6a5c633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668af6fa-ea82-4d85-bb03-b175b8d5f383",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc778513-c55f-4833-9c26-048d89f0f26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7e6dc7-0087-425c-8769-adcb3b5c900e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f18ca6-9808-4607-a1e6-99a393ca1049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bcc37a-1b16-4e99-932d-b66f527c4745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d72e86f-0015-4587-a923-bddba003b109",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfdd015-7031-48e5-8b5a-ea7d585b50b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3ae5df-b7f5-4c67-a4c7-2e052a6fd3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70f95f7-8124-40fc-9247-ac5f71ab895a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4e341f-cf47-4110-821a-eb9d7bcac9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9cbb9e-86d5-44ee-875b-1ce85672f240",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3ba4c1-10a3-4291-98b6-bdc59856aef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9ea772-d7d3-46d0-8f97-df81660db1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d241c1-0935-43e2-97e6-d64f4cacf364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dcf373-0d72-411a-ac67-9d2ddefe84e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e7d18b-d97d-494f-ad67-2806731b6a97",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2b75f4-6037-41fb-a9e6-b696416be2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7235c2f1-3068-40ad-a680-bbed3078a5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91dceea-410e-4b76-bf42-5576a92256c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5772456-1119-4a39-b98e-4ebf492f656c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dc2f3c-7c86-492c-a432-7f8a5b1c6176",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62aac596-cdd8-40c3-8bba-f3a7591ccac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df4ec8e-4e26-4ddb-9fba-12731f596857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dcaa9b-51a5-4c71-aa74-af2f773ed69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98377996-924a-4782-b153-8c99255414c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c399448-1015-4d81-bb52-84cba8a5a174",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc2ccc0-de3c-4bfa-ae85-61775a39cee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69facbb-39ed-42c6-9a23-a7388d24048e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0dcafd-3b56-44b9-afdb-1e9ece5b3b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e94e27b-2ad6-4a59-b8ba-4fe1610423e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e5b8ca-b628-4ead-8a69-5dab8977bc34",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f54a4e-27ba-43b1-bf49-0f10f4708ace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f83440-4c56-40c8-8c7d-27d9129682d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d348b8-f82e-4ee3-b99a-9fc28362a615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60c1689-3f7a-4415-a586-4f78fba346a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae59b735-d14d-4dc1-88ac-456bea0869e0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f72038-ac43-4ad8-abe9-bc1d65a2c7ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20172046-2ac3-4ae6-b501-d9444c2b0474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c0a9d6-52d3-422d-8c26-b47789af972d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54291d79-5f54-44d7-84a9-a096e3c5c95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdd46d5-b130-4a65-a206-fdb886e17ef8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00f9b59-70e9-4571-bd7b-e0df6970c148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130da866-13b2-416c-8d80-043fd56fba78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1c0c19-e609-4dce-8bbe-b9a971a3006c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69e0ea1-fc97-4107-aa9c-52ce503dee61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e139973c-6ada-44f2-94ad-d1c24213859e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b132f8-c2eb-4fa2-904b-68ce5c3b3f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "790083e4-55f1-4197-8253-adcb58f5bd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e78a0e2-5fa5-4696-aafd-d8fae7c6af83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75531fa-d763-4ef0-baca-5ee4ae18ca43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc08a019-d050-4e99-9e5a-25d9a21e1c7e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922bc380-ce8b-4467-85f7-29ffa7e0930b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7c651f-f46b-4dc2-9cc1-acccd6031dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8c9ea8-d212-485a-97f4-200868f2965b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684148b3-5049-4eba-bd82-df8f3e7a82ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d96fa1-5d42-47fe-bd45-264c0bb4d1b6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86349b36-50b6-4c30-bae9-3f95ba33d5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a76315ae-f955-4846-8e84-627728a26f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9507dc-a527-43ba-8bc6-4a30e426bdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c101f226-aa5e-4958-b62d-864f0072cd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7702b8-e6b5-4f9f-ad34-68d3be83b424",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28199e57-2f2e-43e3-9bcf-7d5ee8560f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8721612d-2c50-44d8-85e5-33c3c4c46536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6336c6ed-4dec-4168-8241-a2c533bbe2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d780b23e-d936-47c1-acc6-134b0f6f8880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78e8886-73ba-4220-ad46-19390e03bd0e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e589f2b7-ac06-4ca3-a7f3-6b0c5147f507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc682d6-2669-477e-b159-e242f7bf985d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd880fa-4bbd-4ffa-acf2-d2aee9d1b193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cb435c-fa55-4a47-875f-29d429ffa2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f18bfbe-91d1-4b31-9f34-dae53d651f81",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8648f17-f93a-4397-a0f8-56cfeb0cca93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89fc529b-ac61-44e4-af55-bee2ac771715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d55f03-273a-4ebe-bd89-74c9b3f58aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ac9436-f900-4224-a71a-c2229f4c3750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5779cbe-f012-44fe-a32f-9e88373df668",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5949d05-48b4-4c91-a212-1cc44e5eeb0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21526727-9c03-4797-a8d3-de57d694e2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670f8219-90ba-478f-a6e0-f2a8a2bf74d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5ddc7e-ebc3-4984-b458-f3a7d59fd976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9ae79b-a62a-4deb-9eaa-53e0ca6f523c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd41ed5-7cb0-442b-872c-e4126dccaec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d904d6a7-6806-4571-ab19-493cb589e818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722e6e2d-7e7b-42a8-b867-78fb3c162ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afac78e-de26-4e43-b024-ad40734079df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f61661-64c6-4aba-8d79-e02db57439f3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccb78d6-16c7-4791-8f5c-1d819a956360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015fcc87-fd39-47b6-aefd-64c710fa004c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d646f8-4c61-44d2-bb84-2eb26baec1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fac34c-2b15-4b59-b47b-d36b1e1d3aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a665383-e15a-41fd-8437-f51b3b89a93c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c77dd90-1a8c-479c-a5bb-05feade830e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c70e2ae-1e3d-41eb-8daa-1df807bf297f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a95e07-deb3-485c-80cb-46425f7707f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8533f697-c15f-4a5a-9f62-0eae0fbca888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b84050-6861-43a7-9cf4-e1cf4c48625b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6984ae8b-ed1c-4f60-ac1f-6c1e33faebdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d00351-2f52-4fef-b928-1c09afd04fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077efcfd-412d-4d6d-aa9c-1a3fdd7c4054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d64cfd6-97dc-4dcb-ba20-5bd0011180ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9060ab94-8039-4ee8-99d9-a0eaef8f2ded",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df2f3ea-efe6-45a7-9824-4c1c97cdf3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecaa8cc7-3a22-4644-98fe-35d05058e8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d384a91a-d6f3-43e2-817a-0b6bc356ebf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3adb4bf-dc8b-471d-a612-d9e09f598990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ed0b23-1b7d-463f-8277-399240d94ba2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51de1391-b789-41b6-a35c-e33f1ed99734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30277dde-d90e-4ed8-917a-9f8958bf151f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b85108-8b3d-4fa7-883f-6752da141f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5471bfae-2a8d-4f7d-98cb-996b237b6f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b17ccf-53b9-4a4e-8101-a40791e47304",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd5b631-162b-405c-ab37-3a9a8316f283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667aea34-c39c-4788-89bc-366c78b8dba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f356423f-19d8-4982-8080-1de00434654a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d824176-d3bd-43c6-8ba9-9c27562b1f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d706d0b9-820a-4ed0-9da0-494e435edaf7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54883d32-77ed-42e6-9dbe-b29d0dd936f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aeb9f7c-c5d2-495b-9d9a-2fac175aa7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78430e62-68b6-4524-8d11-937c8679f809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a544c6ba-c272-4041-aff3-9596a34b5187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9324286-4088-42b6-afca-b08c65f4a09c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e649098-7711-4d1e-8360-4c3a2e7c4ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a780d6-06f4-4c70-b58d-7c9e69e51bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da20e8c-8522-46c6-928c-41e6a3c30709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd113743-33e1-4323-a628-cc3e3066434f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b8d47f-db97-42fe-a034-8b6c88d222ac",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae0a131-dcd2-4088-8a83-5004b21a12ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b997694d-7dde-4538-a48a-2d1193e1a873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b123b7c1-d2ed-49a2-8de3-6649471f2e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3cff24-a8e4-4909-bc62-7254dd7f1bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4040db1b-8b26-47e8-9d9e-f2fa02696ef3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f1e70b-4918-423e-8912-b096c0e45e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d987f77d-f83d-4019-8499-deea6cc4a95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262dec81-7e12-4047-9621-8620295536e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c422af-e68a-4ea3-84b4-ea93b0a3fb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e90802-5e86-4908-a5d9-29b8e0852dec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41aed146-9088-4aba-8767-931d6a23014f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3543a8a-92ed-47f5-b298-824e676bf798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2351b517-25fe-49b9-b644-d3749b031878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67bad84-f9b9-4ed2-93d7-56c3dc9f223a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b88a02-9845-4329-8843-55cc3b834fa6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c21886-3f06-4811-b775-1296f207f01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39587cd1-b05b-4f5a-8016-37a65b96fe44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c56b021-c20a-46f7-bb64-558458753f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b1b27e-a679-4b39-959d-c70dfe3b891b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3340df31-75b4-45eb-a453-c9ae078c1075",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e05da0-d6cb-4c13-9d1d-a18fdfe0ce69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9d18b4-4d5a-4da7-97e2-89422896b53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758a91ad-187e-46cf-a6a0-b7f1459912ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbfd3dc2-e435-4bd5-bc2a-bcb66c65c208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cb2d14-0a1f-4489-b633-bde30f0d4db1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc419d06-924b-4cbc-b08f-6fa88c700d75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00655eaf-705a-4d99-a681-cbcc0b6d61a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd18b02-cf5e-4096-b528-0597cad3507d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a17b4d-5c54-4fca-bf46-9efd98a08349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75624ffb-b4ff-4fc6-8182-d1ad678f5f15",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef92721c-7c69-471d-8e09-e38a3c3d88cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd0e0fc-61ce-4103-873e-6b0e3ccc9c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1aa19a-2d10-4cd2-b7cd-948a63a2f6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31cce63d-77c7-444a-87b8-1d18dc4affc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a029f45-44cb-4089-996c-666d974e53c2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc13992-1bce-4036-9c44-f2616c50cb5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f27d5f7-2479-4401-9ad6-7d8c23785c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1403f6ad-392b-4dbb-8677-b2ac4357edf3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31735b23-3f2d-4ae0-9004-3d985b207719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b0cc8a-70dc-492b-93f9-2b07a506fdb3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a36d6c4-3963-497c-b7a0-36b815e5930a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b412edd-c287-4560-80cf-37f86e86788a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a8a632-aa23-44e9-a0df-a996bc3f7e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb38365-0e21-4750-a048-41e8175f40ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6438ce7f-7423-4b67-9cd7-5137526ad888",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ebda38-e6fb-466d-9c16-d7be05e16f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca4bd41d-0806-4c75-8cda-f32a3850c87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf1b0af-6d97-4be4-9e12-d121daece57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6534c35-9389-44fa-9b52-f827eb953925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672e78b5-1305-40c0-adc5-fc3db4239751",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3271aea7-a948-4fb3-8b7b-f64d00292297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ce5d38c-c8db-46e9-bb72-6e42a974f689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa8e182-0451-4217-8062-4c013afd66a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84e28d2-63e7-4e44-905c-03379dfe1347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1541fdab-b2d3-4750-9cc7-402538e63b9e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fb9601-e54c-44b7-ac85-5654f0945fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e939392-4799-4725-b4d4-211e9864a120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d82f259-ea52-413c-ad85-3ea2880ff4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d4012e-0eca-4052-8a60-f795fef1e63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa268a1-b8b0-479f-b155-63540ee1d0bc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd65bd3-951f-4ff2-94da-dc4288397b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f11fe9d3-c1bb-4e90-a12f-f453366c8c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef596032-aa16-4fb1-8b97-8a6e2ff17da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9378bd-b597-402d-b86e-b8e4cc8ae5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e97a4d-9ec5-46be-9207-e059677dac3e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f0820c-6423-490c-a4d9-e45c2d8173de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767dd2b1-8ad8-415f-af77-78f05127fa28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3873d69b-e977-476e-b7e8-78217338c0f8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5fd416-88a9-4ace-bef5-dfddf66484e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e25415-2955-49b4-819f-2fbc668cab36",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b9ee88-a1ce-4f28-870b-67d53d157aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4cb3541-bd9b-4646-9225-f7c8606a355b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9c7971-3895-48bd-add2-c1cca6721cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322296e6-ce59-4de4-9b22-4d89b2c215f7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa56691b-f911-49a0-850f-8164283ef8ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e67d45fe-badc-46c9-a006-cc67929c77fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8afb065b-8dd8-4a86-a167-98e6be22f520",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c993951f-b5ab-4fd4-8731-4d45376bd737"
                    }
                  }
                ]
              },
              {
                "id": "53463be0-715c-4b4b-b519-c6c2a015ef8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d3aceba-085c-4b8d-82a2-8b20592daf49",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e87a29-d194-489d-afb8-d2d6a97a8ebf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c3ca89ce-c080-48a9-a597-3ebe61a60718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1b15fa-02d8-4555-8a0f-784f62e162be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19224e73-da4f-4ca7-ab26-9f7fd912c2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ebed2-77e1-4bb4-aeef-0721252465c5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f0d4df-849c-4e42-9463-b08ce58cc7b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5d0f72b3-4001-4f0b-a421-5b8516651c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dd9e48-3d61-4637-9f87-2234f41234f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a78be760-d1b8-4f92-91d5-f825b6f88de6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0db9e620-9744-4b89-9def-b2840ca84760",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27803bac-b87f-4850-bcdf-f9db39e3ed73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f620d863-92a4-457e-8c24-7aa946e4f1bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1c12910-b68e-481a-b80a-2125be603a2b"
                    }
                  }
                ]
              },
              {
                "id": "bf7393ac-20ee-4e63-af8c-3aa0398c37df",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "77d9a926-54ce-4701-bc51-8c6845ba1e26",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a03149-73e3-40a2-b339-50fd06dcab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "18c0b7ef-c88d-45f0-a3c3-95ae51fb2e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6fcf7c-f4c9-4a77-8bac-ae5e053a7582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8d7d73-b50d-4bac-9f43-5ddf4ac3915e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f327fd21-a062-4fdf-afa9-e021c1242b52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6adc9fce-6ae5-4694-b860-2edd731d6d2d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05165462-4a28-45a7-85c6-d3feb9b4c630",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47ed09fe-63e6-4b9a-89fe-d80ba5d45c6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ee4d2ec-1c78-4ee0-ab6b-0f7fe93fc996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae944efb-da53-46a5-ba16-4c3df899708c"
                    }
                  }
                ]
              },
              {
                "id": "7f09b563-6cd6-40d2-9638-c60541dd35fe",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4116e5ca-f6a1-434e-a615-37cac842d255",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9da1a677-dd2a-4da8-93de-52fe3e4088fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e33f7d10-1a02-4ff8-8a82-0573023d4a25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8751dd05-65d8-42ea-b428-274521f503bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee16b9e6-a823-4994-9065-dbeff97cc6c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6ec97b10-2705-4988-93ea-2aa52b3d3532"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f6ea929-84e8-4acb-8963-39b83affff4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba54a835-2cd5-42b7-b4b7-b808d26d1c53"
            }
          }
        ]
      },
      {
        "id": "2c1ba557-7086-4215-a94f-1b6e232a7a7a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "09ec6166-5d0b-4dd3-bd76-47e0f9b29dd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5780367e-ec79-4c98-92b8-f5895bd02d3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e57bc094-2765-4adf-8a05-a7ef55811b12",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ba18a7-bcfb-4ca8-b5fd-18d52be4b1d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0afa0bbe-d39f-4045-a2c0-fe9e5515b846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415fa167-f67e-4fd4-9e89-2d13d1d72df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ebbfab8-768b-44a0-a219-09868f409091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d69190-740e-443e-9fb4-a45245cabc15",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c16a19-0a8f-4f13-91ab-79db32503e64",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c8896ec0-2a09-4a1c-9484-2bef2e35e7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1661a432-25b0-4e14-95d5-fb62a0d980af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76e9eabd-ea4f-44fb-887b-4a5a03882690"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfdbb948-55c3-466b-abdd-de93eab2f1d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f08c62b-fbbe-4d73-a79f-144913d15bdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cde65cb-0970-4540-89e7-bdbc018b5332",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6971abf-2070-41a4-8f8d-af041ac3e478"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c7f0ac0-f8e3-45d9-9a19-ebe92caa88c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9ee86581-cc90-4bf1-8ba1-5197fd042ea9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a5daef6-2ddb-4b36-be5b-4557bd297aa5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb157889-0b10-42b6-b9f2-e490d38daff3"
            }
          }
        ]
      },
      {
        "id": "f24f32ae-14be-4bd4-b818-77780d8ee755",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "828ebbeb-5cca-441d-bbe2-12f09b9c8de1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c680bf8c-007a-4064-8277-4ce715eb5830",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3be58da6-e570-4c3f-bf02-3d21e5fcce34",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc2ec0f-4623-4b07-b65f-d955a4507745",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63a1ee66-b3da-4b36-b5a1-5f8257cf2fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee43fd7-f58d-42f2-a127-1fd25ba0e56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "417eebf9-a2a7-4e16-b28a-9dba71781f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9946ee-a063-443a-a21d-b1949028aee1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66261432-81fd-4fa4-b020-d0396fd5c6cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d3402f57-e54e-41b9-969c-fd4420441fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a48469-bc59-481b-a179-bc5680430d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60233cd5-6872-4ae3-b5ad-afa3bea0c0e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e78cd51e-5871-4324-b9d8-5ddf3c3820b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab7b3ab2-3340-47d8-8afe-dac07405ac92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "001d894b-bc77-4b09-aa97-bb2741818d0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79bc8a06-8fa5-446b-a5fe-97bc75ff66ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16cd5366-75ba-462d-af45-bcc6ba9c732f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c949ab85-e790-4c99-8dab-9184f1bfbc3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1992aa8c-a490-45f3-a958-6dff06e3ac27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e2b311b-eda7-4d1d-85e6-ace9219bf1ff"
            }
          }
        ]
      },
      {
        "id": "d0c48a31-27b1-466a-8c33-2bc1c0891cdf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "09079894-cde5-4635-8cb5-b8f87cff8d12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ee70f23-4be1-424f-a6d0-b63635e8ceb6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32f7d61b-c384-4f70-8f46-e9c1dce66440",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c35dbd1-a837-4b97-b0df-464431442626",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c12f85c7-a95d-4843-b141-8a9e893c1f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "258b3d31-99fd-41bb-b7f0-50059c06989c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2105c25-2a60-4601-8922-e13b4cfbc5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e923a4-3728-4867-93e8-043b1c4f3fe5",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bf8541-974e-4f6b-8558-f0295049cc51",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "93f198b6-ecca-4400-8004-d699107f13e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d53b501-5451-4928-b7bd-640fb1e0e8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9dd8157-7135-486f-958d-b19b36725f3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "027deff1-3a1d-44a6-b81c-e437285389c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a687154f-a5c8-47cf-8121-5f2b3fb65492"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a37730a-8ca6-4f11-90e9-402f5a638b61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f6fb58d-bd06-4bc4-b3e9-b66af4d25852"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cc6c744-3171-4ad2-9a83-73a5309d5c59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ab1f1f7-47ad-4633-b827-76d9dfa1ce67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0cf03f6-7369-461f-b56d-ad89eb8365a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e48ecb3-91cb-4bfd-b8a4-250f67db9b60"
            }
          }
        ]
      },
      {
        "id": "f83feaf7-a4f0-4728-8d93-890a62dbd86c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fcdeeb9-af03-4d6d-afd8-30719d2b8383",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "662c4e8d-e5f7-4e7d-8c67-8ce8a141516e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e0387ef6-f688-4965-a3a9-cf1c4aa85999",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74577d77-7e66-4a7b-9ddc-6b88cc014fbd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "919f2e40-115f-41f0-a93c-4d138a09d4c6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 1
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 804.7084179970968,
      "responseMin": 10,
      "responseMax": 10804,
      "responseSd": 1007.0483189607085,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681605506911,
      "completed": 1681605730866
    },
    "executions": [
      {
        "id": "02aa5743-adad-498b-866d-0f7c20673d1f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "33afbe0a-88ac-4008-a5eb-194ecf060618",
          "httpRequestId": "c7516a3c-0710-4f8a-8ec6-196c37f2ea9b"
        },
        "item": {
          "id": "02aa5743-adad-498b-866d-0f7c20673d1f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3ac73f5a-8322-4bc4-9099-9f2cbcf9aa31",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "36656c3c-ea5b-4e14-9b67-32828c6bf683",
        "cursor": {
          "ref": "076c88f8-a87e-454f-aacb-10517a2e3757",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8fc32045-fdd9-4b0e-a269-a48fa7373e3c"
        },
        "item": {
          "id": "36656c3c-ea5b-4e14-9b67-32828c6bf683",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5ae17761-3b82-4386-ab3f-6e36753c6f0c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "79699b21-2236-4d7e-b46c-856089b4ccca",
        "cursor": {
          "ref": "8c3f206c-de34-4cb3-93d9-4c8547ee4519",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8be6c91e-8ec7-45c3-9c20-f7290caf8472"
        },
        "item": {
          "id": "79699b21-2236-4d7e-b46c-856089b4ccca",
          "name": "did_json"
        },
        "response": {
          "id": "8025062d-5cb7-44ea-9071-71e2667467de",
          "status": "OK",
          "code": 200,
          "responseTime": 1094,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5f7df1-5f59-436c-ae6c-c8cbd0eb5dd8",
        "cursor": {
          "ref": "1e2e9fe2-d486-438a-a2d9-f8ea9657caec",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0fe95ce-37c2-4123-9370-3e28a77c846c"
        },
        "item": {
          "id": "cc5f7df1-5f59-436c-ae6c-c8cbd0eb5dd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "2bfa5a24-ac77-4a86-b4fb-55d6a1d8d2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1228,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5f7df1-5f59-436c-ae6c-c8cbd0eb5dd8",
        "cursor": {
          "ref": "1e2e9fe2-d486-438a-a2d9-f8ea9657caec",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0fe95ce-37c2-4123-9370-3e28a77c846c"
        },
        "item": {
          "id": "cc5f7df1-5f59-436c-ae6c-c8cbd0eb5dd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "2bfa5a24-ac77-4a86-b4fb-55d6a1d8d2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1228,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37859da-1d10-45ce-8853-5c5c02c5ae61",
        "cursor": {
          "ref": "e55d44ed-ccbf-49bf-9a0f-1309145d4360",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2f6873bd-128c-476f-bcc2-50ec50e85393"
        },
        "item": {
          "id": "e37859da-1d10-45ce-8853-5c5c02c5ae61",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "99434bb7-0fec-4622-9289-b68c64c5864a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1278,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dfaf8a-3e66-464e-b8c1-89bcf7ab58ca",
        "cursor": {
          "ref": "3fd23bdc-11d2-49c7-a6d0-8934c34a8a3f",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f21b56b0-6869-4123-9f1a-a13e9438b6c0"
        },
        "item": {
          "id": "b9dfaf8a-3e66-464e-b8c1-89bcf7ab58ca",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b0dd2537-1e90-4151-8bd4-75abfc453c15",
          "status": "Not Found",
          "code": 404,
          "responseTime": 653,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999cbf0f-01fd-435f-bb29-340c83a1a59f",
        "cursor": {
          "ref": "c7e0a2df-eb85-47b0-8256-334f9cdfb9d7",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a1702bb4-f93c-4c96-b53c-d9ea7c853e29"
        },
        "item": {
          "id": "999cbf0f-01fd-435f-bb29-340c83a1a59f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2c8f33c5-cd59-4b8d-8ad6-ab3ece082358",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c187bb9e-1a65-4e80-a680-2e0ad2e0dab2",
        "cursor": {
          "ref": "17c7d16d-20d6-4f8b-97b5-6d3aa71a6902",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1c205c3a-2077-43d5-a4d2-e4462ad61bd3"
        },
        "item": {
          "id": "c187bb9e-1a65-4e80-a680-2e0ad2e0dab2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "1b70fe2d-521f-4976-8567-1043a6fc7403",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 657,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c187bb9e-1a65-4e80-a680-2e0ad2e0dab2",
        "cursor": {
          "ref": "17c7d16d-20d6-4f8b-97b5-6d3aa71a6902",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1c205c3a-2077-43d5-a4d2-e4462ad61bd3"
        },
        "item": {
          "id": "c187bb9e-1a65-4e80-a680-2e0ad2e0dab2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "1b70fe2d-521f-4976-8567-1043a6fc7403",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 657,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa643624-8335-4a3a-9828-b730731a6d2e",
        "cursor": {
          "ref": "405770c1-67c6-4b24-86e4-7e692cece2a7",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e0e2e992-9147-4e13-b7f9-943b16ee4462"
        },
        "item": {
          "id": "fa643624-8335-4a3a-9828-b730731a6d2e",
          "name": "identifiers"
        },
        "response": {
          "id": "50ed77e5-93e1-4494-8d49-3df84f9dc336",
          "status": "OK",
          "code": 200,
          "responseTime": 1141,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33bdfec-f71a-4605-b607-824bba6189e5",
        "cursor": {
          "ref": "df8fe87e-c378-4b27-a764-ffa08cbb5fbf",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8cfe5504-e8b9-4d81-ab26-3a491b5576e9"
        },
        "item": {
          "id": "a33bdfec-f71a-4605-b607-824bba6189e5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bc951638-7ae8-4657-878c-cc01bf40d226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33bdfec-f71a-4605-b607-824bba6189e5",
        "cursor": {
          "ref": "df8fe87e-c378-4b27-a764-ffa08cbb5fbf",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8cfe5504-e8b9-4d81-ab26-3a491b5576e9"
        },
        "item": {
          "id": "a33bdfec-f71a-4605-b607-824bba6189e5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bc951638-7ae8-4657-878c-cc01bf40d226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff411cf0-3646-4d99-b27f-442e51098056",
        "cursor": {
          "ref": "747c4b48-006b-45d6-8b36-567c758e5261",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "19fd6132-9c4c-4ef0-a92d-a2acd810b39c"
        },
        "item": {
          "id": "ff411cf0-3646-4d99-b27f-442e51098056",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "972b0f22-451a-4c4f-9f77-aca712acaef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6126214d-9436-40df-b1e6-f5f7f19dfc98",
        "cursor": {
          "ref": "13d750d7-4c44-4ef6-8695-e67ca1e2088f",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d1274a0e-293c-4624-912e-f079dc8ade81"
        },
        "item": {
          "id": "6126214d-9436-40df-b1e6-f5f7f19dfc98",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "351072a7-e305-4c52-a6b6-dceddbb37525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf08b5e-6d5a-4dac-b1dd-d723c4fb1e51",
        "cursor": {
          "ref": "f44679bd-b062-45c4-b9f7-8921087afcab",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0e1de598-93e1-47d7-ac50-e88bcf41c8d2"
        },
        "item": {
          "id": "8bf08b5e-6d5a-4dac-b1dd-d723c4fb1e51",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "34f30f01-a0d3-47c0-9613-4ff5f24bc544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfd44af-fad4-43fb-8b3f-f8ab478eac9e",
        "cursor": {
          "ref": "fa70323a-e77c-45ae-b20d-12b6c3577d83",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7b14c552-b021-4535-bf34-474ab599c1e4"
        },
        "item": {
          "id": "acfd44af-fad4-43fb-8b3f-f8ab478eac9e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1ab6fb5b-f46e-4e95-b1ea-b876c745bd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afc503b-670f-44aa-8199-0f2ea655edd7",
        "cursor": {
          "ref": "265bd6cf-13b2-476e-b024-21dd3944b4ef",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8a47309b-3be0-41e8-bed0-cadd838a552e"
        },
        "item": {
          "id": "4afc503b-670f-44aa-8199-0f2ea655edd7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "846e5ed1-a175-48c3-bfa8-d336aecdd375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164cd959-cd61-4570-90a5-9f4f60d38de2",
        "cursor": {
          "ref": "c476207f-f1cc-444d-9e71-8bda58c48089",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "116de013-9601-4109-96cf-597253eff6f4"
        },
        "item": {
          "id": "164cd959-cd61-4570-90a5-9f4f60d38de2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6a739f1c-f183-4fe0-ba6a-7dcd29b04d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7903c228-1569-4da9-a849-f9092bd19e8f",
        "cursor": {
          "ref": "9f1be265-e681-4cfb-931b-1d68d733db1d",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c2b35116-a228-4ef6-b1c6-c92100be0d3b"
        },
        "item": {
          "id": "7903c228-1569-4da9-a849-f9092bd19e8f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "576445e5-1bca-40e8-8802-6c61fdce0da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab663376-d54a-4a96-b767-39c0722f5989",
        "cursor": {
          "ref": "d82b6edb-262f-4f46-ae61-99709dc020ff",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "76636a29-2e60-4eb9-b10f-c86411899f4e"
        },
        "item": {
          "id": "ab663376-d54a-4a96-b767-39c0722f5989",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "478a1b0f-9c01-4408-8b58-84bdb348b1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbf1a09-7a4c-42b9-97ac-aa8e422da7fe",
        "cursor": {
          "ref": "f6c76120-e21b-4cd1-b0db-5d46b9c4e645",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "56bb6d92-f1ab-4ca6-b8de-f4ee034ae16b"
        },
        "item": {
          "id": "3dbf1a09-7a4c-42b9-97ac-aa8e422da7fe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "424c66d8-d6e4-46f0-9559-ded0ffd34723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baebef03-3982-486a-b1c8-1251dad04d98",
        "cursor": {
          "ref": "788e7c40-7cb5-4ab1-8ba8-4eb8d954e818",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "35142452-ce5e-4595-8adb-b3f35b4f99ad"
        },
        "item": {
          "id": "baebef03-3982-486a-b1c8-1251dad04d98",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6a705210-ed0d-4053-8915-a05a5cb0906d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677dbf6a-039b-43f1-9f74-3593e570e8fa",
        "cursor": {
          "ref": "1a1403fe-81dd-451b-b9f3-f38919d2ac60",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "03f186d8-5ae1-4202-869d-a24576f2201d"
        },
        "item": {
          "id": "677dbf6a-039b-43f1-9f74-3593e570e8fa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ec2a1987-4463-477f-82ce-a9b1d2a7a4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d86a05-cc3d-43a2-b1c7-d17a3bf263a9",
        "cursor": {
          "ref": "22dc93eb-f6b7-4630-af8b-781dcfd130ba",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f7da5279-2417-482b-8b29-1e7688615921"
        },
        "item": {
          "id": "82d86a05-cc3d-43a2-b1c7-d17a3bf263a9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0e8acdcd-dfa3-4308-9bcf-ba2c3798d431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133b6217-77d3-46e3-bfe1-85a6007151ef",
        "cursor": {
          "ref": "4ec65503-fb3b-443d-bc8e-15bdb0a6ca77",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "30a78cfd-2635-4a52-8902-0632f2fe13cb"
        },
        "item": {
          "id": "133b6217-77d3-46e3-bfe1-85a6007151ef",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c00012a2-a034-4fa8-9fcf-31d8c42e36cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37c53d9-e71d-499b-bd5d-4cd2335ee3cd",
        "cursor": {
          "ref": "ff39d8b9-d21b-46a5-afa2-875255832f1e",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "683090e2-a4c2-4dbe-8411-d61f212b2dd3"
        },
        "item": {
          "id": "b37c53d9-e71d-499b-bd5d-4cd2335ee3cd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d09f3f04-b725-460f-80eb-64084515913a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e33451c-38f3-4599-a6b1-3fce60fda2ab",
        "cursor": {
          "ref": "858d9626-ab9d-44e8-b268-aba5d84345cd",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "798a8a2a-705e-45f5-a464-8e9b9f6f68a0"
        },
        "item": {
          "id": "2e33451c-38f3-4599-a6b1-3fce60fda2ab",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "96b9bc2d-a406-4014-8f89-cb86898fdc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbf85fd-1196-4b61-b39f-4ecb1ba70b6b",
        "cursor": {
          "ref": "59ee0723-e9ca-4b43-8a84-0053a6e74638",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d935444b-7c5c-4b7e-a0c5-bbcacbfeea44"
        },
        "item": {
          "id": "dcbf85fd-1196-4b61-b39f-4ecb1ba70b6b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b2b79df9-306b-4d15-83b0-5accc35f384f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c6b49f-be06-4d08-aa1d-cf5fbf113e9b",
        "cursor": {
          "ref": "242f9f9d-ac42-4898-98da-fe27c5d189fe",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8e5c94ed-f2f8-4cde-9a52-247215a3ee21"
        },
        "item": {
          "id": "40c6b49f-be06-4d08-aa1d-cf5fbf113e9b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4729c37a-bcee-4bad-9156-9c093ef98c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f2ac37-df47-470d-b790-2982b0532b70",
        "cursor": {
          "ref": "2b894230-aba0-495b-ad54-9189c4b99a88",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "887e20c9-9c1c-46b3-a6bc-713563cbd055"
        },
        "item": {
          "id": "52f2ac37-df47-470d-b790-2982b0532b70",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "66ad5ba8-c9b7-44f7-befa-786ccfcaa25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd4dcb2-19d6-4e10-afce-9af913b92da2",
        "cursor": {
          "ref": "ece52647-ad45-42f7-b56a-d5445ac606cd",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ab0de1ef-e555-47f4-aa1e-f7cf28877148"
        },
        "item": {
          "id": "2cd4dcb2-19d6-4e10-afce-9af913b92da2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "acc604f2-a029-425f-a12c-8e11aa6a770a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4999cd85-f95d-421f-8716-b6ffd6e12eae",
        "cursor": {
          "ref": "69e0108b-f558-470b-af30-c3e6141fcc7b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c21a22f8-2cf1-4349-af95-13b77cb43a07"
        },
        "item": {
          "id": "4999cd85-f95d-421f-8716-b6ffd6e12eae",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1ade0924-1cb0-4866-b0fb-c9e0ff865ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a799480-f345-487b-a52e-ba0159d6b0cd",
        "cursor": {
          "ref": "967a249d-8d91-4e5e-96d6-8cc8380bb801",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3ccc6809-d1a3-4ac1-8565-07efff3651db"
        },
        "item": {
          "id": "3a799480-f345-487b-a52e-ba0159d6b0cd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "88ce623e-a480-4466-9fd5-ef61c712cfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4953492d-93e4-4762-9d96-71990ec71cce",
        "cursor": {
          "ref": "20719ead-a7cd-471b-b075-c9469569ca52",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "75994c70-cde4-4f4b-a173-8b4f18887a72"
        },
        "item": {
          "id": "4953492d-93e4-4762-9d96-71990ec71cce",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "750c04b1-6ed6-41ea-ad5b-73008d7f083a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde408bd-a055-4062-97b0-ea692d1f0325",
        "cursor": {
          "ref": "505f5dab-13b4-43d9-afba-0fa6042d3acc",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a477e37b-89b9-4c04-a108-3aadc1444634"
        },
        "item": {
          "id": "fde408bd-a055-4062-97b0-ea692d1f0325",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dcb37f30-ee5b-46e8-b0ee-0122546ea4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec36f75-2e44-411b-8d3c-dafd75b19b6d",
        "cursor": {
          "ref": "fe185c1b-bcfd-4316-8b02-fb1b7d6818b7",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5ac4ef79-f209-42e9-aedd-97936d9068d8"
        },
        "item": {
          "id": "3ec36f75-2e44-411b-8d3c-dafd75b19b6d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "633795c1-356b-4648-9253-4d9301e99362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d94d83-7383-4864-abd5-af45335dcdd7",
        "cursor": {
          "ref": "c437cedc-e230-4920-acef-75cc05675457",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "862e23f7-5e30-4608-8dde-d235ac1df329"
        },
        "item": {
          "id": "75d94d83-7383-4864-abd5-af45335dcdd7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "71972063-a629-4cc9-a264-84be88214959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ee8aa0-669a-4892-9043-3726274c95e0",
        "cursor": {
          "ref": "aa68644d-9803-4417-95b1-4905a6a4f9e3",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f91fe6b8-50ed-4237-bf8d-a9a9e5d67903"
        },
        "item": {
          "id": "82ee8aa0-669a-4892-9043-3726274c95e0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f4f155d0-b57e-48c2-9df6-8d2bca5a102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eebb373-111a-47b6-9e8f-e5d627d59cb4",
        "cursor": {
          "ref": "0f0e84f6-e24e-4170-a3f1-914f7edbabed",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fbaab3e8-da7b-46bb-9b5c-a0e6dea2c220"
        },
        "item": {
          "id": "7eebb373-111a-47b6-9e8f-e5d627d59cb4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "42fd9843-6056-4bc3-865c-2e97277ef77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012232f3-71e4-4b65-8aa1-42905c32e4e7",
        "cursor": {
          "ref": "180f237d-16c6-4254-bb82-4f55e08c2e3e",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "feef876f-174e-4a97-8e51-b9df33bac5ee"
        },
        "item": {
          "id": "012232f3-71e4-4b65-8aa1-42905c32e4e7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aec7cf49-e117-46af-8bbe-249d32718b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1177,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84960a5-ee29-4d38-b2f8-19f64d7c4fe8",
        "cursor": {
          "ref": "eac709e2-7d33-49f4-991f-72e3520a3fdb",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "db888dd4-10f3-48ec-afcc-d8a004e9a6ed"
        },
        "item": {
          "id": "e84960a5-ee29-4d38-b2f8-19f64d7c4fe8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d0eed812-726e-46b6-8c9b-6ecaa1cbb04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1196,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6ec783-6056-4cea-a296-5f7d842a6191",
        "cursor": {
          "ref": "0f3b2689-53e7-4ede-8c71-0dfc8e1bd792",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "754a9583-9e1d-4132-b8fe-2ffd0b58af65"
        },
        "item": {
          "id": "1a6ec783-6056-4cea-a296-5f7d842a6191",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e18bae23-a79e-4f5b-8158-d2915694d8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130a8018-26e1-489b-a963-83edc57b36f2",
        "cursor": {
          "ref": "081ecaeb-eea4-4d87-975a-ddc295fa6d6d",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b5891f16-51bd-43c4-9d4b-cfa6929c00e0"
        },
        "item": {
          "id": "130a8018-26e1-489b-a963-83edc57b36f2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1fcfccf5-5736-49e6-bb67-037da805a6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b793eef0-6a8c-4fb6-a7d2-10e6dc3f0911",
        "cursor": {
          "ref": "6e408dc8-e82d-45ad-a70d-fac2e29ea09c",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "67865a59-e11c-4a59-8202-113d8412a207"
        },
        "item": {
          "id": "b793eef0-6a8c-4fb6-a7d2-10e6dc3f0911",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1d67f7d8-db91-4974-881a-4af3755bfca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc57f33-1926-46dc-bec9-8dfd092499dc",
        "cursor": {
          "ref": "3f860131-6abd-472d-82a4-b27c2e0b3f4e",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5cd629e2-ccad-4bd0-b972-8f8ebbd2a16e"
        },
        "item": {
          "id": "fcc57f33-1926-46dc-bec9-8dfd092499dc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7aaa21ca-9406-480e-ae25-9baccfd78a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9dfa08-f381-414a-b8f1-341df8f2c63e",
        "cursor": {
          "ref": "351fe214-30f1-47c8-b6ac-08849e47e2d8",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ec1f6b53-4bf9-4407-abfe-35b7d79c66e2"
        },
        "item": {
          "id": "ec9dfa08-f381-414a-b8f1-341df8f2c63e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8d885701-6d7d-426e-8463-a3600a5242fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e728f4e-a835-4faf-8f4c-bec7c63e2636",
        "cursor": {
          "ref": "150fe5ef-25cd-48b3-9624-98cdcd140dfc",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "572ac8c6-b325-44ba-b7a3-2cbf0270d37d"
        },
        "item": {
          "id": "7e728f4e-a835-4faf-8f4c-bec7c63e2636",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fc49a73b-7643-4a62-bbe6-a71e621a26a5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 830,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f128a8d-d26d-4ec3-808f-d02158c32e29",
        "cursor": {
          "ref": "b5576ef2-f115-4cf7-a6e5-97c4ffdb7389",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dc4470ff-4627-453b-9a0c-b6fb78cb3751"
        },
        "item": {
          "id": "0f128a8d-d26d-4ec3-808f-d02158c32e29",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "12c64874-8778-4dfd-8ec1-b5a781dbc7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1766c30d-f821-407f-9438-3913b9319c03",
        "cursor": {
          "ref": "49cb8930-50cc-4ca7-8240-bee3209d43c6",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f8be028c-be2b-4587-ac8e-c5d6028be1dd"
        },
        "item": {
          "id": "1766c30d-f821-407f-9438-3913b9319c03",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4ba6da65-c4a0-4f71-a5bc-73f7e43be83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba2dc2d-7904-49e1-86f8-3ec45854c52b",
        "cursor": {
          "ref": "49ddc4fa-2c4f-4b06-a0f9-ba2d3a3aa197",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d6521b52-5009-4a78-909d-581bb96f74f0"
        },
        "item": {
          "id": "cba2dc2d-7904-49e1-86f8-3ec45854c52b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7c741a13-6a25-407f-8884-6c078daa12fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0ed0c2-844a-46b8-b2cb-065be18a1d61",
        "cursor": {
          "ref": "5399a07a-ccd5-44c3-9abf-94a51dcb831b",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3363a91e-a7e3-45c8-a80e-11a1dc23ac88"
        },
        "item": {
          "id": "fa0ed0c2-844a-46b8-b2cb-065be18a1d61",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db905b14-a0ee-47f0-ac34-4e9a7ff2b18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac091faf-715f-42c3-88df-995dbbc53f01",
        "cursor": {
          "ref": "00afdae4-efc2-41d8-898e-73e920ee1fc3",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "237beb3e-b6e0-44be-a3f8-af05b63c9fef"
        },
        "item": {
          "id": "ac091faf-715f-42c3-88df-995dbbc53f01",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "054b7cb7-1cee-4773-a20b-16baa5dc500d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7078807-abf7-489f-b5cc-2191180913fb",
        "cursor": {
          "ref": "3d23a7de-0012-4b77-97dd-fd841bdd549d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c2942b39-f753-4e7f-9f3a-fd0118fe8dfa"
        },
        "item": {
          "id": "a7078807-abf7-489f-b5cc-2191180913fb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7f3c2679-a23c-4732-9a26-cb654f89f2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af2d545-0cb8-4729-a293-881e641b3ac1",
        "cursor": {
          "ref": "1123a62e-1541-4113-bcbe-8e969930decf",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eba4288b-2343-44f3-9ced-2a9b47abdbe1"
        },
        "item": {
          "id": "4af2d545-0cb8-4729-a293-881e641b3ac1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f3525fcd-017f-4a09-a98d-f37a068b589b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1283,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d22700-603f-4930-8cb1-cdf5f584b22b",
        "cursor": {
          "ref": "48833088-ce82-4a15-b4cf-f355006e4fc7",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8509ffef-7f5d-47ef-b529-f28a31e1f0ae"
        },
        "item": {
          "id": "a7d22700-603f-4930-8cb1-cdf5f584b22b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3934ab6a-3a9f-431b-894b-6c9195e0e108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1077,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d84d6a7-a798-467a-afbc-abe237d7779c",
        "cursor": {
          "ref": "115f6177-83fe-4967-8481-b6283e50dc5d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8c82d593-2555-40f7-aec7-e4f7d035c2df"
        },
        "item": {
          "id": "1d84d6a7-a798-467a-afbc-abe237d7779c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "747e5370-f679-487f-b145-8f16bbe742cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c65b262-dcde-4508-8b8b-c19dc686f190",
        "cursor": {
          "ref": "5c7acfd6-c0c3-494c-a18d-3b4f36ae0a45",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9856a9fc-73a6-4e50-9717-4d02fd8daeac"
        },
        "item": {
          "id": "8c65b262-dcde-4508-8b8b-c19dc686f190",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fa9deec2-c7d8-4407-a31c-02d66651e9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab10b85-4d44-4691-8c71-0a3fe2c1f3e0",
        "cursor": {
          "ref": "0b893292-9286-4d71-bb2e-2041adf8b38c",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "178f0ef3-7e3f-4763-8f27-0b6fc16ebf1d"
        },
        "item": {
          "id": "8ab10b85-4d44-4691-8c71-0a3fe2c1f3e0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "258bacac-8936-4c9d-803c-71d909ab6007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02b1285-0717-4df0-abf0-c82924a6568a",
        "cursor": {
          "ref": "4c845ffb-f017-443a-8f70-9c4cfef853b6",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0450159e-74b6-4676-b0dc-9ca4fdcdd6c9"
        },
        "item": {
          "id": "e02b1285-0717-4df0-abf0-c82924a6568a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c6f54fdd-fa8c-4ba1-a9c8-0151f9185e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d75c68-6e07-4e28-bc4d-f514fc69bd84",
        "cursor": {
          "ref": "c31a1d54-4031-4fba-b09e-c772d73a5c9f",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "88191412-097d-4ea8-ba26-04da5667ad6b"
        },
        "item": {
          "id": "57d75c68-6e07-4e28-bc4d-f514fc69bd84",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9b79a26a-785c-4298-865b-19b1df6eeba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204ef46e-3754-4d16-ad1f-beed39bf2ae3",
        "cursor": {
          "ref": "60e7700e-bb85-4620-a4d1-ca67b7fcd658",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "59df85f3-b6fa-4e7b-835a-034f462ba487"
        },
        "item": {
          "id": "204ef46e-3754-4d16-ad1f-beed39bf2ae3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "63764140-67d8-430a-bc0e-e2f570ac900b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87588f8-d845-4c29-8aa1-9f3556269d9c",
        "cursor": {
          "ref": "ed685e82-8a5a-4705-acce-7374515ce00f",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5b89b9f2-db93-40fa-8219-3636cb46f39f"
        },
        "item": {
          "id": "b87588f8-d845-4c29-8aa1-9f3556269d9c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "014304be-2c9e-4dd4-bad3-396ba128bb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8af6c4-aeb6-47dc-8952-f471d0be58e6",
        "cursor": {
          "ref": "dda46527-f9cf-4c6a-a8b7-178c4577fd67",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "65421d69-14e0-48fd-ad9f-30c74846d09e"
        },
        "item": {
          "id": "aa8af6c4-aeb6-47dc-8952-f471d0be58e6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9265060f-abd2-4cd4-9f21-a2917f632011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b97a9b-2db2-4224-bcac-d6eaa12a2eb6",
        "cursor": {
          "ref": "963d3859-ee7f-4244-b273-5456b48d20ab",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7808398f-fdc3-4b5f-84d5-32c010d2d1fc"
        },
        "item": {
          "id": "72b97a9b-2db2-4224-bcac-d6eaa12a2eb6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "aa39ed1a-0883-4469-89c9-f99f2885fa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd56b49-3b4d-4185-b24d-cc0c35a95ff2",
        "cursor": {
          "ref": "b98ffb5b-edc6-4cc1-80f5-64f56db3ba87",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c51ca7d7-d0ed-4948-a6f6-cd444d05be95"
        },
        "item": {
          "id": "3dd56b49-3b4d-4185-b24d-cc0c35a95ff2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a6549e88-9a5b-4d39-acfa-b75ac7d820f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492a1c76-d296-491e-acfa-016bfe8f9544",
        "cursor": {
          "ref": "be33c6ff-8723-47be-a178-c22a818b70c4",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9a195fc2-daf4-4b3b-84e7-8b11dd11a9e8"
        },
        "item": {
          "id": "492a1c76-d296-491e-acfa-016bfe8f9544",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "915b4984-c6ff-488d-a824-c31a79d0853a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52507cf-d49b-4deb-b9d7-cd43251dd4ce",
        "cursor": {
          "ref": "f9685902-6693-46ad-8cc7-4250100e9f0f",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e02bac52-3b26-4e54-8dbd-fdea0469b4ba"
        },
        "item": {
          "id": "b52507cf-d49b-4deb-b9d7-cd43251dd4ce",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "473d4930-f4b8-4598-9f00-02c3f3511217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194be5f4-b495-4664-b349-36731fbc9909",
        "cursor": {
          "ref": "3d374426-a7bb-45f6-962b-00b751632fba",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "edba02f5-5b31-427b-a9e7-f265f90b30ed"
        },
        "item": {
          "id": "194be5f4-b495-4664-b349-36731fbc9909",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7655e44c-e3fe-4ee9-a769-57b3bbaf6304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55565a7-e2cd-49bd-9fb5-dc1c75a5621b",
        "cursor": {
          "ref": "4a0822fd-ba36-46e9-beed-260faf83758e",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e88580a6-54b8-4f54-b468-6f436530bc12"
        },
        "item": {
          "id": "a55565a7-e2cd-49bd-9fb5-dc1c75a5621b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d4602dbd-8624-4b4a-b7da-9aa5d3bea775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e3884e-cece-4cb8-960f-3d56fa2056cd",
        "cursor": {
          "ref": "03c5a7e2-0b99-4ea0-9391-4d83d77f4a8c",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d51dd7d2-4cbe-4819-8fb2-9253b406178b"
        },
        "item": {
          "id": "c0e3884e-cece-4cb8-960f-3d56fa2056cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "53d65214-41f8-4745-8b0e-4291bb354ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b4c0c7-2e5e-4b7f-a1ba-440887b2d0b2",
        "cursor": {
          "ref": "b7f23d85-4636-4092-a314-d7b2b713657e",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7ed726cb-5782-4853-947d-69aad21875a9"
        },
        "item": {
          "id": "b4b4c0c7-2e5e-4b7f-a1ba-440887b2d0b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b24a9f7d-5087-4653-8851-5dae7ed02a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5b0a32-de15-4972-8bab-adcae9103e2a",
        "cursor": {
          "ref": "f1844612-3fee-4557-8d37-98b57d92e810",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9118a4c2-40fb-460d-87af-d5f26ac655d6"
        },
        "item": {
          "id": "fd5b0a32-de15-4972-8bab-adcae9103e2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1a9087fa-2413-4379-9b41-f8a4a2968f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89b32e0-5d8c-474d-9aa6-353012a11029",
        "cursor": {
          "ref": "0322493f-1c4c-41c7-a6a3-7cd291dbe89b",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2e7de49f-af95-45b4-b746-0f6eb5d04f73"
        },
        "item": {
          "id": "f89b32e0-5d8c-474d-9aa6-353012a11029",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7c382f70-b922-4715-bb46-d8ab750a84dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17558cf3-db67-41e3-ac46-b836334890ed",
        "cursor": {
          "ref": "a5d12b3e-91e7-4d94-9913-e1b3bd09377c",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "981bac34-e5b8-49df-b8f1-53f1eafe2ede"
        },
        "item": {
          "id": "17558cf3-db67-41e3-ac46-b836334890ed",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "46f12535-bb15-478f-b8a5-0e2565bec7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7edcdf-290f-4898-95df-8ba826dc6dc8",
        "cursor": {
          "ref": "c2be0f1c-fb91-4da1-9a29-34e240557e83",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "245f24fb-2231-4659-a4dd-391f5d0a5c62"
        },
        "item": {
          "id": "5c7edcdf-290f-4898-95df-8ba826dc6dc8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "32131d80-e995-45fc-aa55-0b2530fcd6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1978,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743725bd-c3f3-4b16-9ef6-b9462f289050",
        "cursor": {
          "ref": "fd0fa36a-1677-440c-baea-41f60f6f991b",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bff0f554-04a5-4ffc-91a6-1e6eed28bf5d"
        },
        "item": {
          "id": "743725bd-c3f3-4b16-9ef6-b9462f289050",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9def82de-bc7e-4a4f-a5f6-61b101633dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2257,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f962486-4ce2-4827-b019-c783395f1324",
        "cursor": {
          "ref": "ee4b35e2-4ceb-4c2a-8059-130e9ff1e4b7",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "640ef2fa-5c9a-47ab-b6c8-14a5de55a698"
        },
        "item": {
          "id": "7f962486-4ce2-4827-b019-c783395f1324",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4bbe7634-e628-4181-be89-720bd00c77d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2727,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f92d348-2107-4f11-a9d4-a22de39b512a",
        "cursor": {
          "ref": "ba41461c-6353-4140-ae1c-870342490a44",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a17bfb73-e85b-42a3-9d7d-5599e6798dd5"
        },
        "item": {
          "id": "4f92d348-2107-4f11-a9d4-a22de39b512a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a01aee41-e6ac-465b-a04f-ffd38d127a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1338,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58680f1f-9f8d-494b-8aff-647f9d4044fb",
        "cursor": {
          "ref": "6461930c-f925-4314-ac9d-f41a0f224e38",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3b6e1251-6127-4680-9817-5fdc623ddbaf"
        },
        "item": {
          "id": "58680f1f-9f8d-494b-8aff-647f9d4044fb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3d46afdf-d54c-4faa-9ff8-4f8371f4f2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09544ab0-5514-41bd-bfc8-322faa4024f2",
        "cursor": {
          "ref": "23c1c0ce-9432-4e40-8ace-ae9d9b6af216",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fcd77b05-f0fc-4a6a-a927-4212d8541330"
        },
        "item": {
          "id": "09544ab0-5514-41bd-bfc8-322faa4024f2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f307cad8-66a5-4e2a-9e16-ad068eeae264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102c14e8-3130-47f9-ae43-f8bfe1645697",
        "cursor": {
          "ref": "cbafb9e9-30cb-4b6f-b1ed-af61adda5ae3",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6c4e3da3-9d8f-480f-b689-0ca9ab70a560"
        },
        "item": {
          "id": "102c14e8-3130-47f9-ae43-f8bfe1645697",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f7a4d78b-5bd4-40d2-8b22-eaebe89e6a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44904513-115c-439a-9919-825f417e76fe",
        "cursor": {
          "ref": "01bd2af2-c5bc-45db-bdad-2f68dc0b8582",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "89212266-7a91-4fc8-9294-4c3da1d96d9e"
        },
        "item": {
          "id": "44904513-115c-439a-9919-825f417e76fe",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6f6c223a-492c-45a8-81e0-524d7a6be500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af5106b-3d77-4bba-b8bd-6c00d12ef163",
        "cursor": {
          "ref": "f4de2e1a-4dae-453a-a37c-c5ccd8600686",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b69bc878-1b5f-4758-9b51-30633e5f376a"
        },
        "item": {
          "id": "0af5106b-3d77-4bba-b8bd-6c00d12ef163",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8f034efe-bae8-4f8f-a913-bceb35d08410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be012bbf-2aa5-4be4-849b-fe82bb32c1ad",
        "cursor": {
          "ref": "fec91bfc-1027-4109-bcb6-d2bbe296c5ca",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cca2b3a3-24d3-4314-a216-bbe253e4e477"
        },
        "item": {
          "id": "be012bbf-2aa5-4be4-849b-fe82bb32c1ad",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ce3989d5-2c07-49ee-bfbf-17327b6b2eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15fbcff-a587-464f-bdcc-a063796c865f",
        "cursor": {
          "ref": "cb9d9898-7f96-4b96-a62c-9c225b39329b",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a281416c-a5b9-4b04-a25e-86e8dba86ba8"
        },
        "item": {
          "id": "d15fbcff-a587-464f-bdcc-a063796c865f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6bb0c103-939b-4d1d-9af9-eadd295694a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b6b8c1-fb30-4745-9515-43efd06990d0",
        "cursor": {
          "ref": "f615e736-4845-47cd-91de-b95f8d86691f",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "483db351-fe51-4a7e-ad01-2129c360ca7b"
        },
        "item": {
          "id": "a9b6b8c1-fb30-4745-9515-43efd06990d0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fd426451-101f-4d1b-b600-0396f947859f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b04b0b-e8a7-437b-8ea5-32b285068044",
        "cursor": {
          "ref": "7ec29bfc-7495-4bfe-b49c-0b053936537e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d367edf8-d0e8-4eb4-b4af-ef164753dfca"
        },
        "item": {
          "id": "79b04b0b-e8a7-437b-8ea5-32b285068044",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ce70a1ed-1408-4e47-b992-7fc56e5fc396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e90d87-24a0-422b-a969-0c0d8dd66f7e",
        "cursor": {
          "ref": "623d58d9-0011-404c-9c20-9c243892ed9a",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6cadacfe-65dd-4ce3-b786-83f68884b642"
        },
        "item": {
          "id": "95e90d87-24a0-422b-a969-0c0d8dd66f7e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6a7675a9-2810-49bf-acfc-2ada63340471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a462eb-9b07-49eb-90a1-947b42669bd4",
        "cursor": {
          "ref": "0a8f7a40-e8e9-4f5b-b5fa-89e1a46afe2a",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9570cade-446c-463b-8296-40714dc04e55"
        },
        "item": {
          "id": "19a462eb-9b07-49eb-90a1-947b42669bd4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "186a5566-b701-47bc-a2b7-09b1345ec67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c46ce7c-302f-48a7-b0f5-255a60e7c2d7",
        "cursor": {
          "ref": "11cb9294-dcd9-474c-bbbb-a03db0176bb5",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "80d8e65f-4284-4212-b54e-6181099684c8"
        },
        "item": {
          "id": "4c46ce7c-302f-48a7-b0f5-255a60e7c2d7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "82b20dc3-4b52-425b-965f-c8bbb6b1644d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6e069d-e233-4cd5-85ea-0526222a67e2",
        "cursor": {
          "ref": "eb20889c-7c3f-496f-bd36-c3a586f28a87",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "31d23f94-e777-4302-800d-eaf1fb63f3c7"
        },
        "item": {
          "id": "af6e069d-e233-4cd5-85ea-0526222a67e2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cf9b3d1e-637d-48ac-b126-97e43f926384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c2644b-728c-4863-9df0-aeb734076d85",
        "cursor": {
          "ref": "afa8ae88-42ec-45fc-9ea7-0be3a5071423",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "43aee16b-729c-46fd-89ca-103e1489e81a"
        },
        "item": {
          "id": "78c2644b-728c-4863-9df0-aeb734076d85",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ed1ff5e2-63f8-4648-9fd1-f46d55195737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34835fc-0c84-48e6-9d18-e25e64e03747",
        "cursor": {
          "ref": "617ccf1e-4906-4a26-a58c-3fe3ab4bd520",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d027acaa-683d-4e2c-8780-da1c33dfdb09"
        },
        "item": {
          "id": "e34835fc-0c84-48e6-9d18-e25e64e03747",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "23bf2bfc-7ba0-4b70-b96d-9b00d1a9cd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af49186d-4dd6-49a8-a58e-62280013bd15",
        "cursor": {
          "ref": "36c3d558-a2aa-4561-9013-cbc715281b62",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "856009ad-17e4-4c54-9ba2-ff622063eced"
        },
        "item": {
          "id": "af49186d-4dd6-49a8-a58e-62280013bd15",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "95efc936-d957-4c56-9c29-548920950b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e442b44e-dfb8-406e-bb33-203d21fee8b0",
        "cursor": {
          "ref": "db139e33-1902-4d21-9599-68e447c894c8",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "52fe2330-dc94-401d-a94c-bbc1b258a579"
        },
        "item": {
          "id": "e442b44e-dfb8-406e-bb33-203d21fee8b0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3e60c4ca-de4b-4956-bd49-e3c62b509da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a31519a-f3d8-4516-b813-38aeb57a9081",
        "cursor": {
          "ref": "de32935c-329e-4514-876b-f897e46ba197",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2018598d-88a5-4243-bbb4-1a8d7fa44932"
        },
        "item": {
          "id": "1a31519a-f3d8-4516-b813-38aeb57a9081",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1e9b983c-c358-43d9-8a23-a5acd997c389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8453800a-d1bf-4ce1-80cf-8e54dbe89aa7",
        "cursor": {
          "ref": "e344a8ae-7336-4ac7-8d21-bd216fc25475",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "125fc8bc-1616-4f76-a0cb-23b785613e92"
        },
        "item": {
          "id": "8453800a-d1bf-4ce1-80cf-8e54dbe89aa7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ea495457-4f28-4ccb-a18b-4041999580e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fba227-3cbb-4a15-82c9-294f420ce0b4",
        "cursor": {
          "ref": "dc04d179-a2cf-4b45-85a0-0eb59d8e74bf",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1fe47445-2d02-4783-9d32-fa0d5ff99937"
        },
        "item": {
          "id": "b5fba227-3cbb-4a15-82c9-294f420ce0b4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b1c380f9-ff76-4246-b20b-81a1848cb87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b90537c-3cba-48af-9259-6edab4536cb2",
        "cursor": {
          "ref": "9e7f03c4-bea8-4c14-bccb-7acb24e95d0a",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "37deec53-4645-4616-a380-2e425cb4bb66"
        },
        "item": {
          "id": "1b90537c-3cba-48af-9259-6edab4536cb2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "86aefe27-adf3-48ba-8ce5-3ba93813d096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cd7804-33b6-46a6-8ae8-3dd1e2e27aa1",
        "cursor": {
          "ref": "7a123a13-e2b1-4279-89aa-d58fa935a000",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8b5b00f6-43ff-46f4-a972-b6f008e7d10b"
        },
        "item": {
          "id": "93cd7804-33b6-46a6-8ae8-3dd1e2e27aa1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b0cff24c-807f-4a56-ba60-8766a0f6cf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0150749-eaae-4c66-8434-781f50d987fd",
        "cursor": {
          "ref": "46b11ff7-cb85-4523-9e09-fdb9daa23bea",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0d158ff6-d9c3-4bde-a7fc-e491debe46ab"
        },
        "item": {
          "id": "c0150749-eaae-4c66-8434-781f50d987fd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "96740722-1f9c-482e-ac47-c2f9fadd856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ad1f59-8fde-46e9-865c-394a0c8dc23f",
        "cursor": {
          "ref": "97e4a56c-043f-4489-93ab-e20bb6efe833",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8a99427e-c049-43e0-a2cb-03d8265f7f05"
        },
        "item": {
          "id": "90ad1f59-8fde-46e9-865c-394a0c8dc23f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "37c2027e-fb34-4de3-b4c6-229176422f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0968299-d42f-4eef-8ad6-04f342ceb89c",
        "cursor": {
          "ref": "49e30918-5ffd-4ea2-97a1-5d830073a8ab",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6a455abe-725d-427a-82dd-b0bebe51bffe"
        },
        "item": {
          "id": "f0968299-d42f-4eef-8ad6-04f342ceb89c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "223e4317-fec4-4873-9963-b46ee5edef5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23c3da2-8611-4468-8816-567da01c4ce6",
        "cursor": {
          "ref": "d2370bf8-dbfd-4232-b860-bac0225a8f9a",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fad6ee9e-f934-499d-b036-780ef29fca33"
        },
        "item": {
          "id": "e23c3da2-8611-4468-8816-567da01c4ce6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dd320e01-43e9-4c32-bea9-adadc36cc28a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15668291-c58d-45d1-8180-570b98d00b03",
        "cursor": {
          "ref": "be327a00-6d7a-441e-99d7-2f7771db7413",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b1847010-a482-4e93-94ac-d70624869012"
        },
        "item": {
          "id": "15668291-c58d-45d1-8180-570b98d00b03",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "582fd6ce-b097-4b1d-9503-278550d17865",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 645,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ff9dbb-5a6e-4639-b667-71e5fb0603dd",
        "cursor": {
          "ref": "133532a2-a112-4ebf-972e-05d5709e24bc",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ad015476-64b7-4c76-9e73-827a59eebf95"
        },
        "item": {
          "id": "07ff9dbb-5a6e-4639-b667-71e5fb0603dd",
          "name": "credentials_issue"
        },
        "response": {},
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "0d344a37-d7dd-435b-bdb7-397dd9bab8d4",
        "cursor": {
          "ref": "f5580483-7db2-4973-adf3-c8179001c672",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "115f46b4-5b83-4fcf-b4ac-57cb2f1aa297"
        },
        "item": {
          "id": "0d344a37-d7dd-435b-bdb7-397dd9bab8d4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "684d914e-4050-493e-9ab5-4c0b15729566",
          "status": "Created",
          "code": 201,
          "responseTime": 10804,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff43996d-99b6-49c4-928d-5dfdeb53e4a2",
        "cursor": {
          "ref": "29d6be66-f41a-4ecd-b05a-ed732fdf83e0",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2d41cf95-2012-4dfe-b63a-78ae990686bf"
        },
        "item": {
          "id": "ff43996d-99b6-49c4-928d-5dfdeb53e4a2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d95d54dd-6aff-4e27-ae83-7dd24611535b",
          "status": "Created",
          "code": 201,
          "responseTime": 7153,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a381e0af-c54d-403a-8fe8-d5c30573985b",
        "cursor": {
          "ref": "00bb2516-dc71-4b80-8a43-aa905f8adfbc",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "001d5115-ce30-4eb6-92d3-abc17b5c88fa"
        },
        "item": {
          "id": "a381e0af-c54d-403a-8fe8-d5c30573985b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "73683626-f0b4-4e27-a688-04616ce61a8d",
          "status": "Created",
          "code": 201,
          "responseTime": 5892,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "09643629-0f67-4d93-a159-5e6f718a822d",
        "cursor": {
          "ref": "6490985c-e4b8-448b-b17a-23f1a90e6c62",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9c7e3523-15fd-469f-bf1d-89949758e2a3"
        },
        "item": {
          "id": "09643629-0f67-4d93-a159-5e6f718a822d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2beccb58-4974-41fa-9d65-49a3c5c204e4",
          "status": "Created",
          "code": 201,
          "responseTime": 6258,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea45f20b-0ed8-4443-ba39-0167b597e2b4",
        "cursor": {
          "ref": "6a5c362a-0abe-4364-9b4f-928953aeb8cb",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2971f480-ce46-40e0-b0f9-9d5f04ee44ac"
        },
        "item": {
          "id": "ea45f20b-0ed8-4443-ba39-0167b597e2b4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ddd6b14f-379c-4d27-a516-897896d91f20",
          "status": "Created",
          "code": 201,
          "responseTime": 7029,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cd5a13-31f1-4429-af1b-5d90f8e6dddf",
        "cursor": {
          "ref": "bf9fd772-2041-43c6-bdd2-c3eeb7d6cf73",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c33fc54f-7818-492f-a372-05f69725d567"
        },
        "item": {
          "id": "b7cd5a13-31f1-4429-af1b-5d90f8e6dddf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4b7f26a1-a2a6-4062-9d63-20273da86afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cd5a13-31f1-4429-af1b-5d90f8e6dddf",
        "cursor": {
          "ref": "bf9fd772-2041-43c6-bdd2-c3eeb7d6cf73",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c33fc54f-7818-492f-a372-05f69725d567"
        },
        "item": {
          "id": "b7cd5a13-31f1-4429-af1b-5d90f8e6dddf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4b7f26a1-a2a6-4062-9d63-20273da86afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5c06ff-c735-42ef-8322-bf9a40f233c0",
        "cursor": {
          "ref": "4be6e4f5-bbef-4fdc-ad52-3097a390633e",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b7b8d464-7b47-449a-9e74-5eb496bb765e"
        },
        "item": {
          "id": "8e5c06ff-c735-42ef-8322-bf9a40f233c0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e418240b-6329-4c86-b3bb-9837559206b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1105,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa002c8a-eb11-4c83-91c2-a6e0f6bd29be",
        "cursor": {
          "ref": "dbaeb040-9f55-4156-a4d8-ca628a6a528f",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e6f5d7bc-52ad-440a-b667-eb7cba6d864d"
        },
        "item": {
          "id": "fa002c8a-eb11-4c83-91c2-a6e0f6bd29be",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8cc5d191-9862-4e02-9614-59aad99f9aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1073,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3cf688-4c17-4c35-bc45-6d2ce407e58a",
        "cursor": {
          "ref": "abed1cc4-3297-4ed9-9871-275e54a8a436",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e7e1a8e8-3a3d-46fc-bc4c-6f1172c2e6b9"
        },
        "item": {
          "id": "ab3cf688-4c17-4c35-bc45-6d2ce407e58a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a4ceac36-0a62-42b1-8c12-9f99e5103798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729c8a6b-03a9-4e53-88ae-379f6bda3053",
        "cursor": {
          "ref": "b8130a5e-2c77-4751-aa08-5c396e1222c2",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ed2da962-d12a-4a72-a827-eab7909851d8"
        },
        "item": {
          "id": "729c8a6b-03a9-4e53-88ae-379f6bda3053",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eade02b4-39ed-48ad-84a4-c48767e4b7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44e368a-c8e5-4d02-a61a-bbb100618aa3",
        "cursor": {
          "ref": "d1bb2af9-bfed-4681-baf2-fbabb4c9f603",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b95357f1-d0e9-4ea8-8486-d00ab32e2e91"
        },
        "item": {
          "id": "e44e368a-c8e5-4d02-a61a-bbb100618aa3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eb1ef6b5-935e-4c07-89c4-0bb36206c465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5985382-50fc-490f-8e20-a8b391e49592",
        "cursor": {
          "ref": "7bf8b2ae-9476-409c-be9c-089d4546461f",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ddf06768-0de6-4239-96e8-59ca9b97594c"
        },
        "item": {
          "id": "e5985382-50fc-490f-8e20-a8b391e49592",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "96fdedc5-3c4b-44a6-b862-5e6debfa889b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9781fef7-9a6e-43c3-ac87-d001914d41ca",
        "cursor": {
          "ref": "3aac3d37-898b-4bde-a3a8-c4e7e5fa4d56",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cd97c7b8-1305-4659-a15c-ebd3b7b25f3a"
        },
        "item": {
          "id": "9781fef7-9a6e-43c3-ac87-d001914d41ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1ba7927b-6e12-4d4b-ae91-18add2782ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e603770-84c5-44f1-8b56-b8bf83bcaff5",
        "cursor": {
          "ref": "381b4fe0-78ec-4fae-905b-a113760137cf",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0e81096b-3e71-409d-91fa-c355eade3d89"
        },
        "item": {
          "id": "4e603770-84c5-44f1-8b56-b8bf83bcaff5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3fc7e54c-4e52-4724-a2bf-8bc3b2558ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b9e4a9-c84f-4265-848d-d4f39928662b",
        "cursor": {
          "ref": "577eee89-309c-4d50-b0c0-77fc654936ce",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "70104c33-88b0-4baf-8462-f878e825092f"
        },
        "item": {
          "id": "15b9e4a9-c84f-4265-848d-d4f39928662b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d0e382d-00c1-415f-a3ba-e6045027c642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390e6cd7-0f60-4b13-b9c4-4ce02c3f8954",
        "cursor": {
          "ref": "36fbd051-3b5e-4323-a9f1-528d8ad9c2f9",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "005f0161-bbdc-47ca-b434-95cbe6a6a1d5"
        },
        "item": {
          "id": "390e6cd7-0f60-4b13-b9c4-4ce02c3f8954",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "52d877bd-49e1-4baf-ac83-c1139841e963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5102816d-e1b3-40d5-ad6d-a49f3e3b59e9",
        "cursor": {
          "ref": "bd0b4670-7d3e-4e0e-bf09-2aa227721687",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "231ead54-e4cd-4098-90aa-5c5758864f26"
        },
        "item": {
          "id": "5102816d-e1b3-40d5-ad6d-a49f3e3b59e9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1c2ba85e-294f-4eb9-a4b0-13e4172a360e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95aa4816-54e9-4e0a-9369-1597b0e4f5c9",
        "cursor": {
          "ref": "ba93046e-821b-4447-bd73-94beccfd2ea6",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "59acd678-c172-452d-b59e-eeca0d5a6ae5"
        },
        "item": {
          "id": "95aa4816-54e9-4e0a-9369-1597b0e4f5c9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8e774ed4-1d94-4cb2-84fc-e834a09591f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d491a1-7390-48db-a2c2-76f691ef7ecf",
        "cursor": {
          "ref": "c6d1a79f-6aa0-48e0-b74d-ad077f6d9ab9",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1e79c668-a49b-4fa9-a150-caf50eaa1198"
        },
        "item": {
          "id": "e2d491a1-7390-48db-a2c2-76f691ef7ecf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3e3e9147-8bd3-4be9-81d2-5b778687685a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a88122-f266-42c9-9b03-5370db9b97bb",
        "cursor": {
          "ref": "99ccf9a9-99a5-4cf9-916e-47d93649aca1",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b2f2b7e3-b8e5-43c4-971c-3e173fc30663"
        },
        "item": {
          "id": "05a88122-f266-42c9-9b03-5370db9b97bb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a25c7258-cbe0-4b4e-a2ff-2b7bd8ee5add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf656b33-0ed6-4882-bcb5-fea6b88ec7e7",
        "cursor": {
          "ref": "c4e8d840-155c-4215-ad2b-d3ac283438be",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "af4fe8db-b142-49d0-b79b-80fbe44f9e10"
        },
        "item": {
          "id": "cf656b33-0ed6-4882-bcb5-fea6b88ec7e7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9d92d475-3793-49a1-9ab6-43a6c178b46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eb552c-9c3a-4b3b-a959-2e17a570a996",
        "cursor": {
          "ref": "3f90f345-715f-4ea1-bdb4-71deaf23364b",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9ad6c8a0-ab9f-488b-a4df-6cd392b95380"
        },
        "item": {
          "id": "65eb552c-9c3a-4b3b-a959-2e17a570a996",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a13c3dba-f230-435a-8f8b-80da131defe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c155080b-5217-44a8-93c8-f64a074f348c",
        "cursor": {
          "ref": "e167118c-0348-4a9e-941d-3d1b2f4ac333",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "daa7e0df-9e0e-4638-828c-8a7355827a3a"
        },
        "item": {
          "id": "c155080b-5217-44a8-93c8-f64a074f348c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7d155ac4-e2dc-4823-9669-6590b61635c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92575c98-f82f-46b1-a725-f91efca6c4be",
        "cursor": {
          "ref": "bb7dd2db-6780-4d2d-8ca5-7c236d27581f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a5ff9e23-088b-4bd4-921e-843171cb3e13"
        },
        "item": {
          "id": "92575c98-f82f-46b1-a725-f91efca6c4be",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "39347d59-314f-40c9-98b3-01569d755d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd8f8a4-6605-471e-bf98-29b4b4889bef",
        "cursor": {
          "ref": "99779e8d-ea3f-48d8-bcbc-4c29476578f5",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "86fc6cb4-f946-47e1-80a7-b2eb1864b2ec"
        },
        "item": {
          "id": "8dd8f8a4-6605-471e-bf98-29b4b4889bef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0ccc2575-266e-435c-8bc4-a744fb20a3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d6cd07-895e-4329-8bf6-c9dc41a0d705",
        "cursor": {
          "ref": "aec0f927-54dc-4948-b289-aeaf715d596c",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9a08288f-da1c-4a44-b15d-570ef7c2ab29"
        },
        "item": {
          "id": "72d6cd07-895e-4329-8bf6-c9dc41a0d705",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0b5578b4-7655-4b8b-aa8d-bf251e6e7534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6ba405-3c07-46e2-a049-312c8547c913",
        "cursor": {
          "ref": "2a002af5-7197-4d0b-957d-96d661b13468",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bde1628a-cfce-4f33-8907-873eb8086221"
        },
        "item": {
          "id": "4f6ba405-3c07-46e2-a049-312c8547c913",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "416a7f93-4578-47cb-885c-296365db86b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be04862c-0650-4e96-931e-2a57af77ffa7",
        "cursor": {
          "ref": "de3df7d5-1fa8-48d4-ac08-7420d372ab30",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "facb85d4-b769-48a6-a5a0-ace3674d1d98"
        },
        "item": {
          "id": "be04862c-0650-4e96-931e-2a57af77ffa7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23d2f128-e6f6-4eda-8595-bc7b9e06f919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9361cf18-009a-4cd0-98ad-5351a7cc5245",
        "cursor": {
          "ref": "8a4cca64-f0ea-4a35-b51f-59e039db679a",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fcba6490-be91-4794-b9c5-ad5c8c8381da"
        },
        "item": {
          "id": "9361cf18-009a-4cd0-98ad-5351a7cc5245",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ef51b419-e206-478c-acb3-95f3ca7355d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfd14e5-5c84-4c5a-93df-9a16881747d6",
        "cursor": {
          "ref": "29804009-6812-4014-9206-981b8801ecba",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2975aa3f-ef15-497f-bd57-b13464dd0cd0"
        },
        "item": {
          "id": "fdfd14e5-5c84-4c5a-93df-9a16881747d6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cd4907ea-7622-4079-95bf-f864fff07ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79dd808-9b99-439f-b496-b7265deb1604",
        "cursor": {
          "ref": "9f986a68-28c9-40c9-bf4a-2891f4bda218",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5ba25cb3-7b4a-4d30-b84e-6916d4628dfe"
        },
        "item": {
          "id": "a79dd808-9b99-439f-b496-b7265deb1604",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d6be4313-d7dc-4e04-892a-d13abaca09ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6b472a-1fd7-4f54-8d28-5d6aa54edd29",
        "cursor": {
          "ref": "0e3b3aa1-eb6f-4869-801c-3f552fbf56df",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d2222795-d389-46bb-9fe2-42282e573928"
        },
        "item": {
          "id": "ae6b472a-1fd7-4f54-8d28-5d6aa54edd29",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fd4f62de-5bb9-4b00-9117-d6322d574875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e6fa45-8444-4a56-8d2a-320dd891d6f0",
        "cursor": {
          "ref": "1be68ada-f82b-4eb5-8304-47672eea7e18",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3ab71354-13cd-4cb9-9abc-923f9d4f6b77"
        },
        "item": {
          "id": "e6e6fa45-8444-4a56-8d2a-320dd891d6f0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "14918d45-5c6f-4a93-8d8c-d23670ea4c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7620b7-7d5d-47f2-8fea-3c86f69ea20d",
        "cursor": {
          "ref": "4bd7447d-e79f-4952-a19e-d6c2dc178255",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "072ae281-f5bb-493b-86bc-4e7e87adeadc"
        },
        "item": {
          "id": "0c7620b7-7d5d-47f2-8fea-3c86f69ea20d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ff8bc88a-e186-4501-85f7-5d965d40d372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cee6a5d-ba11-4890-a367-591004f586e0",
        "cursor": {
          "ref": "09301a68-cd7c-48b8-a46c-178283685e43",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4cce5bd8-7cea-4825-8a08-b8b5db9e7b9d"
        },
        "item": {
          "id": "7cee6a5d-ba11-4890-a367-591004f586e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cc9081b6-dccf-4b93-a2b4-493e43d95cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12102bd5-2239-4e8b-a5bb-8e4f6dce77a6",
        "cursor": {
          "ref": "0b399208-aaf5-42ef-90bb-8181a5d9c4b8",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b429e1d4-d5e2-4dc2-ba7c-5616695edf53"
        },
        "item": {
          "id": "12102bd5-2239-4e8b-a5bb-8e4f6dce77a6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8e0322c9-e307-405f-9195-6518a9e6aeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187a9c31-f2cb-4c45-adb8-19072ceaa800",
        "cursor": {
          "ref": "2dc4937c-6ac9-4f9a-a586-f8806e18e524",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dae08b6d-b7a6-49c6-a048-6468ec2c500d"
        },
        "item": {
          "id": "187a9c31-f2cb-4c45-adb8-19072ceaa800",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "27256dda-85b2-4ca9-8dc4-bdecdca6023a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff15cd1-5996-40fc-98ee-69140d0bf97a",
        "cursor": {
          "ref": "c8cde770-a236-4de5-8bab-62f81263c19a",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3382cc28-e7b6-42a5-b4b7-0df1e8e2f5f8"
        },
        "item": {
          "id": "5ff15cd1-5996-40fc-98ee-69140d0bf97a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "43ce1c44-0d5c-4005-bfd7-e0a12da7d71b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1336512b-b1ea-44f1-a5c9-51f2f82bfb90",
        "cursor": {
          "ref": "5d7c18fe-38c6-4ea1-aacb-3c567747ac8d",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "659fede1-f9c7-455e-938a-7fcd1a1ccb0d"
        },
        "item": {
          "id": "1336512b-b1ea-44f1-a5c9-51f2f82bfb90",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7e263d9e-5665-4666-93c3-2d70638f3220",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1033,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e9c89d-00f1-4b93-92a8-e0b6471f866c",
        "cursor": {
          "ref": "d11381f6-af96-4779-b815-115a42ae4854",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "973c1cce-1997-40d8-a4fd-fdbb48d77155"
        },
        "item": {
          "id": "f8e9c89d-00f1-4b93-92a8-e0b6471f866c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b9829a4f-6bf9-4487-aae7-fbdac1392799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e9c89d-00f1-4b93-92a8-e0b6471f866c",
        "cursor": {
          "ref": "d11381f6-af96-4779-b815-115a42ae4854",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "973c1cce-1997-40d8-a4fd-fdbb48d77155"
        },
        "item": {
          "id": "f8e9c89d-00f1-4b93-92a8-e0b6471f866c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b9829a4f-6bf9-4487-aae7-fbdac1392799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050dcc67-a570-4820-8242-253c5f434f6f",
        "cursor": {
          "ref": "39a287c3-5a7f-468f-bd93-e765c7cc1136",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b67be0d5-3e13-41d4-9bcc-f78c68a1b0f2"
        },
        "item": {
          "id": "050dcc67-a570-4820-8242-253c5f434f6f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e4457c40-6c1e-4f5e-bfd2-a15e8d24ee62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3b47a4-52eb-4ce7-a407-68af387289c0",
        "cursor": {
          "ref": "609a21ca-0540-456d-b9ab-3b2664d1ff67",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "135b1a22-7149-486a-a808-62fa2d6d4e28"
        },
        "item": {
          "id": "cc3b47a4-52eb-4ce7-a407-68af387289c0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1b409f28-da80-46cf-961c-f274700ebebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eeb275-68aa-4265-886d-1b495a452743",
        "cursor": {
          "ref": "cac4650d-5cd1-4b39-82fd-28798600a012",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fb2bc967-fd06-49cd-a782-92d6e21a5740"
        },
        "item": {
          "id": "b1eeb275-68aa-4265-886d-1b495a452743",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "28e59049-2a5c-49c9-a1cc-e89135f286c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16320ac-aef4-4c5c-88b3-877b41eb7883",
        "cursor": {
          "ref": "8e697b1e-3ff1-42b7-84b5-a976d04cc941",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "abe6d0eb-852e-4745-8d6f-3841da6a23f9"
        },
        "item": {
          "id": "c16320ac-aef4-4c5c-88b3-877b41eb7883",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4822039c-c36b-4550-ace0-03db0970b62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26d9dd2-c3db-462d-b620-1a58b8d6eb35",
        "cursor": {
          "ref": "d3ef5e73-05c1-4e84-b5a3-a3db9744017c",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2c001744-c831-44cf-8fc9-c5eabf457cad"
        },
        "item": {
          "id": "e26d9dd2-c3db-462d-b620-1a58b8d6eb35",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b216e96e-4d1b-4641-89d3-833a1162a9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 979,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d832530-237a-4c69-b3ea-b2e2ac1ab79b",
        "cursor": {
          "ref": "eaf594f2-ede9-4e62-bc47-9f5f9b1f5ed3",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c84fd2fa-75be-4fa2-9536-d41b580670d0"
        },
        "item": {
          "id": "4d832530-237a-4c69-b3ea-b2e2ac1ab79b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6e8b6f3a-a949-47cb-94f5-dd3b74085eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5d6a1d-0a23-45df-9778-4937860209c7",
        "cursor": {
          "ref": "69eeaa57-ec76-4077-b493-bff6b84ff55e",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "363254ff-88f4-44cd-8ced-2c18da93d31d"
        },
        "item": {
          "id": "5b5d6a1d-0a23-45df-9778-4937860209c7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4c627c94-3544-4a6c-9d3c-04cce41341a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3993267-cf00-4b0d-9cff-b9b805270293",
        "cursor": {
          "ref": "410153ca-7587-4937-bda9-8998accdbf67",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8536228a-8374-41be-a317-1d766c815398"
        },
        "item": {
          "id": "d3993267-cf00-4b0d-9cff-b9b805270293",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bf1635bd-4d99-4278-b830-3a34f640e018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac7a0a6-2daf-4497-a177-24c3adb02eff",
        "cursor": {
          "ref": "a76dbaea-c9d2-4eaa-a514-77200ed74bbb",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f718a162-ebcb-42d1-91ba-dead36d87f74"
        },
        "item": {
          "id": "fac7a0a6-2daf-4497-a177-24c3adb02eff",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7d754ea2-7e62-4ee2-b7bb-48c996452952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d2406a-3f48-4177-9d10-79ab5193b189",
        "cursor": {
          "ref": "6e97c680-3bcf-40e5-8e6b-684b59e92829",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3a0fa0c1-a330-4af0-a874-6b3e609ec5ba"
        },
        "item": {
          "id": "e7d2406a-3f48-4177-9d10-79ab5193b189",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a8d2b49f-851f-474f-9d4d-fa00370df695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b770a7-d730-4369-ae4a-865c6da505ed",
        "cursor": {
          "ref": "b2a96812-f8fa-43a1-b0f2-8f1e9e3652fe",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1dafff9b-7c73-4552-9014-326dd4c28681"
        },
        "item": {
          "id": "b1b770a7-d730-4369-ae4a-865c6da505ed",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "21e46397-29b0-48e3-8d1b-6bfc99276cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1550123d-b582-4d30-8d3e-52f6c1431731",
        "cursor": {
          "ref": "ee67e15a-8e4e-4910-a230-67e47ea9d36b",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8c661449-502d-46bc-8a6d-a3151b0a949f"
        },
        "item": {
          "id": "1550123d-b582-4d30-8d3e-52f6c1431731",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3d8e0987-c1d8-474a-8e51-8ebe1dbf0087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c10f0a9-9a19-4c5a-89ec-138b4b32cad0",
        "cursor": {
          "ref": "61223d23-5222-434b-98b2-11eae57c0e27",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7de79bc9-97ef-44d0-b67d-63aef0741f68"
        },
        "item": {
          "id": "1c10f0a9-9a19-4c5a-89ec-138b4b32cad0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eab4557b-2228-4376-979d-fb8825f2d0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795d1376-99b6-465f-8660-e1263872846b",
        "cursor": {
          "ref": "f36a79c6-ae8a-4694-ba40-1d8c0e28b7cd",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1f9063f1-7c77-4cb1-b501-1f638b4f0e98"
        },
        "item": {
          "id": "795d1376-99b6-465f-8660-e1263872846b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cd3f9f40-7e1d-4f98-8c56-72a09e468f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 894,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e046695-bcb9-41a8-8478-eab35e78d4c3",
        "cursor": {
          "ref": "c9bb0529-2b5b-4824-9932-3d6a9c144b64",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ef9bad36-a4ad-4219-bae0-a23235fbf138"
        },
        "item": {
          "id": "5e046695-bcb9-41a8-8478-eab35e78d4c3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "976bf8ec-bf4a-4a12-ba07-9393efab7ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3adaa9-8997-4f13-9f03-a170bd4771d9",
        "cursor": {
          "ref": "8987819a-c7d0-4f7e-a1b8-b31c5aee7b30",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bd5f5eab-7f2e-45fd-a322-3df2baf054e1"
        },
        "item": {
          "id": "7b3adaa9-8997-4f13-9f03-a170bd4771d9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "75eac40e-d6cc-4b25-8390-b12e9bdd2f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbed2b19-297b-4b8c-a1fe-7bb567253eb8",
        "cursor": {
          "ref": "658734a0-8894-48a1-9bef-0cfe209f1b08",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b7374a07-e1ca-42aa-94aa-cf4a67452cc0"
        },
        "item": {
          "id": "fbed2b19-297b-4b8c-a1fe-7bb567253eb8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e41e82bb-f4b7-4776-a7f2-d3d7e867fb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e647e88-eae2-4423-abb2-2384b646a9fc",
        "cursor": {
          "ref": "2a84e1ef-ca7e-4f77-8786-97ed83516c99",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2e2efdc2-1b30-47b8-a579-607d0c03210f"
        },
        "item": {
          "id": "5e647e88-eae2-4423-abb2-2384b646a9fc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1fbd525b-bd06-4183-8e9a-0ac3fd3bc860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f060bdc-3a44-420c-812e-478246e7dae0",
        "cursor": {
          "ref": "bf0cf949-d5be-4704-bc32-85f796c21ebb",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dd2b7083-ed16-444f-b69d-c088d6379bf9"
        },
        "item": {
          "id": "7f060bdc-3a44-420c-812e-478246e7dae0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f4acb4e2-d0ed-4768-82c7-28f9cd183690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca61f49-ed0d-45e9-9ff6-8c75e1b2aa46",
        "cursor": {
          "ref": "069731f1-a1b6-4bb3-acbf-55c992187e5e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5b534faf-8670-4200-b431-238e698e509a"
        },
        "item": {
          "id": "0ca61f49-ed0d-45e9-9ff6-8c75e1b2aa46",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dc0de5b4-0074-4b02-b9ad-98819f8b742c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571a43fe-8a36-4048-a160-28686cf679f2",
        "cursor": {
          "ref": "79d64b0c-2086-4b5e-98b1-3293124f341a",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "88926bf9-13b9-4a85-9596-90d04b5f2b66"
        },
        "item": {
          "id": "571a43fe-8a36-4048-a160-28686cf679f2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4d967d6a-329f-40ff-821e-e4b50809f8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd1002e-ca9e-404e-970b-95743e40e777",
        "cursor": {
          "ref": "d45a0e8e-547a-4659-aab4-3574b8053f0a",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8f4405cd-87ed-48f1-8f1d-d5e06f61823d"
        },
        "item": {
          "id": "9dd1002e-ca9e-404e-970b-95743e40e777",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7157843c-53cd-48ef-92f0-01180b79179c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d72673-c00f-4df9-8e07-b872fbc092e0",
        "cursor": {
          "ref": "06a01f0e-b5a9-4a3a-95f3-5ab9ff38b8da",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "67095bc3-5910-4d1d-94ff-86b5e4191456"
        },
        "item": {
          "id": "f8d72673-c00f-4df9-8e07-b872fbc092e0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "32b169b9-b58f-4b93-a7ce-b7ba89505715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47901cfc-1a18-4620-b99f-7f4841c78384",
        "cursor": {
          "ref": "f28cf4cc-a0bc-410d-8c41-03c1b1dcb45d",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a75cf4f7-5842-41fb-9551-16906be32ad9"
        },
        "item": {
          "id": "47901cfc-1a18-4620-b99f-7f4841c78384",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "11479d63-65f5-4f0e-afd4-4d7c9f1b0040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc8f9d8-494a-409e-b5e5-bda859c5350b",
        "cursor": {
          "ref": "5c36e955-e1ac-4352-8866-7c6483fc8d7d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "397d1377-244c-46c2-8490-37977423ea33"
        },
        "item": {
          "id": "8dc8f9d8-494a-409e-b5e5-bda859c5350b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "acb7bd48-5284-4e33-9000-48b3624096fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 924,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d0b68f-9fe6-49cc-b96c-4ece9a7e61b8",
        "cursor": {
          "ref": "2f0a0f41-97c7-4be5-bc1a-68bd5848348f",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "320d1ab4-a8f7-4d83-bb6f-91f98623c007"
        },
        "item": {
          "id": "a2d0b68f-9fe6-49cc-b96c-4ece9a7e61b8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4af15588-2342-4686-acbc-10578744e118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfe12e6-e377-4a14-9ca8-8b6c13f4a9bd",
        "cursor": {
          "ref": "90a5d254-0d52-4a11-9d16-c043495f0aeb",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "35d6f49b-4a9f-41ac-b411-2271e49e97cc"
        },
        "item": {
          "id": "ccfe12e6-e377-4a14-9ca8-8b6c13f4a9bd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f2f59fcf-f722-46dd-a930-7a589e467fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c8a7a8-5959-4d98-9a49-69ecbb076266",
        "cursor": {
          "ref": "d3a6c83c-6d4d-4967-87bd-0d5bb6bba4e2",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "367f283b-5a18-4a74-bf9d-01532f51b0a6"
        },
        "item": {
          "id": "60c8a7a8-5959-4d98-9a49-69ecbb076266",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a0efe0d0-88f1-4bdc-9d27-28a9fa93cb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d15b6a-c84c-4aef-9dda-cd8664e486c3",
        "cursor": {
          "ref": "db6980ef-c41e-4531-b7db-c55afe732b40",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "67620a83-144a-4bbf-92f2-4e278e8769f3"
        },
        "item": {
          "id": "02d15b6a-c84c-4aef-9dda-cd8664e486c3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7db2443f-c6c7-4ec1-8817-caf93f0da98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd7a5f0-a4dc-49e3-a127-26fececadb5c",
        "cursor": {
          "ref": "44885859-7c62-4b59-ad40-6e0724c6e913",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b9fd91b3-ae26-433b-a9b8-1e4f8344507e"
        },
        "item": {
          "id": "5cd7a5f0-a4dc-49e3-a127-26fececadb5c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8c96f29b-b03f-487c-9999-fb9f135f427f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55b6c9a-5cf5-42e9-bf7b-5800466193d5",
        "cursor": {
          "ref": "ada4b61a-4234-48fe-b96f-3e33b69bbcf8",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2d604158-c17e-4c96-8415-332f1433d7b7"
        },
        "item": {
          "id": "c55b6c9a-5cf5-42e9-bf7b-5800466193d5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cb6c2ab9-b4c1-49f0-9572-5ad90eb906ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d669379f-01a8-46e9-b5a8-9d70da72ca68",
        "cursor": {
          "ref": "7555f762-6146-4407-bca5-7fdeb80d8963",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f9aca870-1208-463b-97f4-ff0b7340166a"
        },
        "item": {
          "id": "d669379f-01a8-46e9-b5a8-9d70da72ca68",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d0fa23a4-9f2b-4800-961a-62fb2db18cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d012c5ea-386f-4d20-82b0-da9610a52740",
        "cursor": {
          "ref": "663e9b0f-4233-497b-878d-8c7d76739d6a",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a371603d-849d-4e2d-b5a0-6bea8956bcde"
        },
        "item": {
          "id": "d012c5ea-386f-4d20-82b0-da9610a52740",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "963af2ad-4264-40e3-b7e5-cb25ac9d8390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e399fc79-9495-431c-ab52-3600a44f57b4",
        "cursor": {
          "ref": "6fc9037f-9bf3-486a-8fe5-e03041a3b74c",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "be0d179b-4df8-46e3-a8f8-080de6787569"
        },
        "item": {
          "id": "e399fc79-9495-431c-ab52-3600a44f57b4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6a9688ca-1e94-4858-a740-1bb18daa375e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ecdb53-0e7b-43ad-9514-729cfd597b83",
        "cursor": {
          "ref": "e28700be-0890-4b09-8826-a60d4bbbe8b2",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b0b70d2e-96ae-4568-ae3b-c361423d505e"
        },
        "item": {
          "id": "06ecdb53-0e7b-43ad-9514-729cfd597b83",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "56385132-cd12-45e6-9350-e3c7b94c198a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57f8bcb-6376-4baa-a7d7-eb7fe4919902",
        "cursor": {
          "ref": "3e3f628f-e469-4db7-889c-8be1af9720d2",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "887b293b-5788-491e-b293-24f4d2efa71b"
        },
        "item": {
          "id": "f57f8bcb-6376-4baa-a7d7-eb7fe4919902",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7753ffcc-7adb-4258-945e-59b4ef895e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e239b2-be97-4fb0-93b6-95f04d571bef",
        "cursor": {
          "ref": "e27e9f91-3264-47e2-8ddd-ac21a7b945b8",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "96f3639f-31ac-4d02-8704-e480a4b36a3f"
        },
        "item": {
          "id": "52e239b2-be97-4fb0-93b6-95f04d571bef",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c64e58a1-ad3c-42f0-b523-d524ade808fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1266ce-cc14-4aaa-a59e-b1004257b5f6",
        "cursor": {
          "ref": "9b280044-4fe3-41c7-9e9f-85dd05be505d",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a7274537-dc77-4d11-aa71-0d2dea2ada55"
        },
        "item": {
          "id": "3d1266ce-cc14-4aaa-a59e-b1004257b5f6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "321abdc5-4a49-40e1-80be-1af5ded2a465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114fbf34-db1c-43c9-a60c-6a480969f4db",
        "cursor": {
          "ref": "39499598-fde9-407a-b745-b16d1bccc123",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "877b212c-c96b-4f6e-8d35-4d8fcdcd5b6a"
        },
        "item": {
          "id": "114fbf34-db1c-43c9-a60c-6a480969f4db",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "40af8faf-4515-45ee-baea-d3b351c3ec0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58b3b51-7581-406a-ba92-dc79be4d4df0",
        "cursor": {
          "ref": "419a837a-9969-467a-be49-9ed8126cdedd",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cfaeb79f-d83f-4a66-bc47-427c70d68356"
        },
        "item": {
          "id": "f58b3b51-7581-406a-ba92-dc79be4d4df0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c9e8c898-ca43-4ae7-be6d-6b8249ac31a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9381c2-c19b-4ce8-aca0-56f1e8945784",
        "cursor": {
          "ref": "a72ffef2-4fe3-4ae5-812e-bbbb9dd42ba5",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6e28bb5b-50b1-475f-a134-b93d675283c8"
        },
        "item": {
          "id": "3a9381c2-c19b-4ce8-aca0-56f1e8945784",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "63fc0a44-8f97-4541-ae11-9dae6ecfbe17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed1b84e-b506-4755-a02b-41843d34e98f",
        "cursor": {
          "ref": "43b1a758-8c33-4ba6-a2cc-9e1a8de6b257",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "88f77376-5f7d-4cf5-a2f9-57d710e115cb"
        },
        "item": {
          "id": "8ed1b84e-b506-4755-a02b-41843d34e98f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "87e5dc10-e492-4bfb-9e26-6be90cfac06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d1165d-8b5f-4042-bf9a-7f0ec31b51c1",
        "cursor": {
          "ref": "e4adb72d-fcc6-4b07-a510-6dcf2c589370",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c2373a3e-8fef-4ddb-99ea-76cbbe71e438"
        },
        "item": {
          "id": "86d1165d-8b5f-4042-bf9a-7f0ec31b51c1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9f2482c3-5583-42e6-bb02-2a84451b4e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b3d963-6d91-44dd-bebe-45894c96be70",
        "cursor": {
          "ref": "5329e468-fdb9-445e-9b1e-dee0081efbd6",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ab71ff55-7aff-462e-b10c-6eacc68b86a2"
        },
        "item": {
          "id": "b7b3d963-6d91-44dd-bebe-45894c96be70",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "08562f63-326b-4ddc-be4f-66bd9333587b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bd4e02-d499-4508-9e3c-f1844500702c",
        "cursor": {
          "ref": "13e97296-e805-4093-9fa8-bca4a5921d7e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "00dcfa33-935f-4ee3-a112-1b519a574531"
        },
        "item": {
          "id": "a1bd4e02-d499-4508-9e3c-f1844500702c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4a879c08-afa7-42a0-972f-6316ed40976b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48f4190-65fa-43d6-b27f-a855813bb8e7",
        "cursor": {
          "ref": "38b33d35-4c72-4e4e-8b66-a961ad083453",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "46659d13-f108-43da-b132-4ecaca56ed7f"
        },
        "item": {
          "id": "b48f4190-65fa-43d6-b27f-a855813bb8e7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "389a1ade-1697-4a0d-94bf-bf85123348e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d432f9f0-95c6-45c3-9395-b86716843022",
        "cursor": {
          "ref": "9a2666bc-1825-41f0-9273-4c18d4d31ef9",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "69128b11-ae55-4cde-8517-ceef6093705a"
        },
        "item": {
          "id": "d432f9f0-95c6-45c3-9395-b86716843022",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1b8bc036-1b42-48b4-9750-c178eb7b9fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce327a0-1d6a-4e2c-b197-226fa1cb5fc0",
        "cursor": {
          "ref": "d214eab1-e651-433c-9e3b-d54d5ef50bbc",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e502781f-edee-4668-acc8-5b335942ecc0"
        },
        "item": {
          "id": "0ce327a0-1d6a-4e2c-b197-226fa1cb5fc0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c91b3b61-da7d-4e52-ba3a-02b42435fab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e0389c-4f3b-4b4c-a216-7abe4be3306c",
        "cursor": {
          "ref": "7fa231be-7e7e-41e6-8d97-22f935498f0b",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a4337271-61c3-4fbd-abc5-00e47c1c97f9"
        },
        "item": {
          "id": "92e0389c-4f3b-4b4c-a216-7abe4be3306c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b693dd60-c283-42ee-9216-70b60b912a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a891dca-a31a-4b39-9ef4-7522e3a27e0b",
        "cursor": {
          "ref": "018670ba-94d4-4e95-81f3-63809eafc2c1",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8135ee48-8ca1-4a48-b648-9df63c5c4ce9"
        },
        "item": {
          "id": "7a891dca-a31a-4b39-9ef4-7522e3a27e0b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "60f78060-7410-49d1-b522-48e92b11995a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb06fa0-8625-4d2f-8bff-0572c38dc14e",
        "cursor": {
          "ref": "6a3270f1-e2bf-4299-b81e-3c44ff6a5276",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "507b5247-ccd7-4a76-a790-33f6d4e14ded"
        },
        "item": {
          "id": "1eb06fa0-8625-4d2f-8bff-0572c38dc14e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "01b56eeb-b571-4786-b5ca-ce014a20f2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40bf24a-7402-49dc-bf84-f8658e0f2976",
        "cursor": {
          "ref": "0bbef05f-b78f-4ced-9365-c5a54dadae2b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4d0f78f8-82d8-465d-8b15-23516f66af18"
        },
        "item": {
          "id": "e40bf24a-7402-49dc-bf84-f8658e0f2976",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cdc18ade-772c-4026-b574-689dcea817e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d54daa-c2be-4caa-943b-76194585c333",
        "cursor": {
          "ref": "c3758a01-011e-4678-b0fd-f48f22bd74fb",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4ed743de-2e7e-4ecd-ae3b-df7a0467f96b"
        },
        "item": {
          "id": "59d54daa-c2be-4caa-943b-76194585c333",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6bdfadd8-328b-4e4b-bf7c-deb52b57b3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0ac4f9-5481-4aac-9211-febddadab686",
        "cursor": {
          "ref": "351ba3a7-80cf-4424-9e0a-e88d0f6a9b8f",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c34719ea-c43d-4750-abb7-f2f20dbb56eb"
        },
        "item": {
          "id": "db0ac4f9-5481-4aac-9211-febddadab686",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a78ca767-2d0a-4b9e-80a5-f7288694ce2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794c5512-705e-43bc-9dc3-061868e9546a",
        "cursor": {
          "ref": "0c6ac366-f773-4559-a62f-40e1fe656132",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c53d6039-b8c8-4a61-a109-00caf836c4bd"
        },
        "item": {
          "id": "794c5512-705e-43bc-9dc3-061868e9546a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3d70fa7c-6586-4b46-b831-134a0c07a126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb797a59-c3d2-4fc4-9035-31a80602e237",
        "cursor": {
          "ref": "6b2557f3-4c7a-428f-85ac-098cc16db587",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "27b76af0-754a-4adc-b177-a07718f5049e"
        },
        "item": {
          "id": "eb797a59-c3d2-4fc4-9035-31a80602e237",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f39a3b6a-cd63-499a-b284-5fe5bbda77d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668af6fa-ea82-4d85-bb03-b175b8d5f383",
        "cursor": {
          "ref": "0ee08402-9de7-45b4-9eb7-aafb4cb70085",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "139ab538-bfd7-49ca-aa7e-b25cf8fabbcc"
        },
        "item": {
          "id": "668af6fa-ea82-4d85-bb03-b175b8d5f383",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6ba37d34-87af-48b1-a431-111c5a6a58b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d72e86f-0015-4587-a923-bddba003b109",
        "cursor": {
          "ref": "7815fd3c-1b59-479b-bf43-23291e0ac014",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cab38bf0-079a-44ff-a957-8d510661626a"
        },
        "item": {
          "id": "3d72e86f-0015-4587-a923-bddba003b109",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2dcd539b-9627-4947-af5a-acddf255bfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9cbb9e-86d5-44ee-875b-1ce85672f240",
        "cursor": {
          "ref": "f8f2ab83-0226-46c0-97e0-0f649dc80609",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "be2e1f92-7059-47c3-a794-80987fce9a5e"
        },
        "item": {
          "id": "ff9cbb9e-86d5-44ee-875b-1ce85672f240",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "dc1c0420-3c5f-4f78-bb70-14c044e20fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e7d18b-d97d-494f-ad67-2806731b6a97",
        "cursor": {
          "ref": "cfdafd49-d184-446b-85ef-43ca60b50930",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "733e5931-39bd-4cf7-bdae-3a2ecd047ff7"
        },
        "item": {
          "id": "d1e7d18b-d97d-494f-ad67-2806731b6a97",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e5de0f99-ff5b-44a2-96f7-491d7a90dc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dc2f3c-7c86-492c-a432-7f8a5b1c6176",
        "cursor": {
          "ref": "3c0e2fff-e5f8-4b9e-b6c5-574e85e086d9",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a6f3432e-757c-492e-8346-d3c29e1124f5"
        },
        "item": {
          "id": "f2dc2f3c-7c86-492c-a432-7f8a5b1c6176",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "21b1929a-2524-4c3a-b546-fa1369a685d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c399448-1015-4d81-bb52-84cba8a5a174",
        "cursor": {
          "ref": "bf73b777-a77e-45f3-879c-a6e4be36babd",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "108078fe-45d4-46d5-af0a-e3d9b710cc65"
        },
        "item": {
          "id": "2c399448-1015-4d81-bb52-84cba8a5a174",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "145ed616-48dc-4448-85fb-507af4d95688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e5b8ca-b628-4ead-8a69-5dab8977bc34",
        "cursor": {
          "ref": "99e38646-acaa-4b21-b5eb-b7eb10f6d336",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f0d124f-bd63-4297-86bf-fb8040250650"
        },
        "item": {
          "id": "34e5b8ca-b628-4ead-8a69-5dab8977bc34",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b88988c3-112f-484d-844b-a02fbca61715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae59b735-d14d-4dc1-88ac-456bea0869e0",
        "cursor": {
          "ref": "962b9dfb-51fc-4155-adea-3494535d485f",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6d585bd5-acd5-44ba-b041-23c504e277a2"
        },
        "item": {
          "id": "ae59b735-d14d-4dc1-88ac-456bea0869e0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1b4532bc-0489-45b4-aa27-3d9c4224ab68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdd46d5-b130-4a65-a206-fdb886e17ef8",
        "cursor": {
          "ref": "e89f2cc0-c5d9-4a87-8a20-1456f007dc86",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d95d4831-4444-443b-b89c-4a75998a6b7c"
        },
        "item": {
          "id": "9cdd46d5-b130-4a65-a206-fdb886e17ef8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7806d415-8916-4bdd-bff8-8f0e07c3afd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e139973c-6ada-44f2-94ad-d1c24213859e",
        "cursor": {
          "ref": "ecd28686-4018-4c69-ba44-d77ef363d12d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8e240f19-fccc-4928-825b-268cc28dd53b"
        },
        "item": {
          "id": "e139973c-6ada-44f2-94ad-d1c24213859e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8087c6d3-3e12-437f-8891-63dd6e978e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc08a019-d050-4e99-9e5a-25d9a21e1c7e",
        "cursor": {
          "ref": "afe1e1fd-a4e7-4f06-b603-5eb75cb6ffa8",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5a68c739-be8d-43a1-a39c-d5c908a82219"
        },
        "item": {
          "id": "bc08a019-d050-4e99-9e5a-25d9a21e1c7e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "32e0fe08-5491-4ce0-af12-0c0f9546f864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d96fa1-5d42-47fe-bd45-264c0bb4d1b6",
        "cursor": {
          "ref": "6b05716a-c5cf-4c80-b283-13468aca7600",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2d20bb8f-596e-4fe4-a1c9-5639bd1bc9e8"
        },
        "item": {
          "id": "f6d96fa1-5d42-47fe-bd45-264c0bb4d1b6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4f27572d-c381-4ea9-8587-5f47aeaf186b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7702b8-e6b5-4f9f-ad34-68d3be83b424",
        "cursor": {
          "ref": "ae61b912-774a-49c6-a215-c4bd1120c74b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f7e3861f-509e-4148-8ec2-fab64231865c"
        },
        "item": {
          "id": "2f7702b8-e6b5-4f9f-ad34-68d3be83b424",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5ee831e4-d164-4fb0-a9a7-b5aa97ed2996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78e8886-73ba-4220-ad46-19390e03bd0e",
        "cursor": {
          "ref": "5cd1f911-2c7c-4a4f-b103-b50afb2ae749",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c16e9378-bc8a-463b-881f-dd2861f316ff"
        },
        "item": {
          "id": "f78e8886-73ba-4220-ad46-19390e03bd0e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ea83f5be-f20f-4bea-9bfe-46bdd5e8a007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f18bfbe-91d1-4b31-9f34-dae53d651f81",
        "cursor": {
          "ref": "1d651792-5997-4995-8a59-6d3bc51b5583",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "daee6285-2365-4df2-bf73-2df10a296b79"
        },
        "item": {
          "id": "2f18bfbe-91d1-4b31-9f34-dae53d651f81",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9fac19c7-ac8e-45a9-855f-a8d1fd048016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5779cbe-f012-44fe-a32f-9e88373df668",
        "cursor": {
          "ref": "d9e0581c-4949-4461-b802-67320d80a3b9",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "92db1e4c-70cb-481c-acb0-65f34e4af481"
        },
        "item": {
          "id": "b5779cbe-f012-44fe-a32f-9e88373df668",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1556e9be-05ca-4237-b728-497d46420c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9ae79b-a62a-4deb-9eaa-53e0ca6f523c",
        "cursor": {
          "ref": "71d4f1ab-d5a1-4b25-9381-7bf6099c3590",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c5821173-16c6-4bd6-b7c7-59ae889be36c"
        },
        "item": {
          "id": "7c9ae79b-a62a-4deb-9eaa-53e0ca6f523c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "129b6bc2-f19f-4d52-8bf8-1a4408ab639a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f61661-64c6-4aba-8d79-e02db57439f3",
        "cursor": {
          "ref": "8992ec9f-670d-4c46-a077-1adfa3f1085f",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8dadaaa2-e7f1-4f60-9dbe-8ce76187aada"
        },
        "item": {
          "id": "65f61661-64c6-4aba-8d79-e02db57439f3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cdfc9665-d995-49f2-911f-830c91ccca5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a665383-e15a-41fd-8437-f51b3b89a93c",
        "cursor": {
          "ref": "89faf3bf-7b53-478d-8eef-b0437873714d",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "341389e6-5567-4da5-a495-d9a6620d2ed4"
        },
        "item": {
          "id": "6a665383-e15a-41fd-8437-f51b3b89a93c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "821bf87e-c190-45e7-bd23-8a7f884a2d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b84050-6861-43a7-9cf4-e1cf4c48625b",
        "cursor": {
          "ref": "ade66de4-d763-4f51-aec6-791be89adb45",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "634c64d8-aba6-4df6-b9ab-c75239b80832"
        },
        "item": {
          "id": "06b84050-6861-43a7-9cf4-e1cf4c48625b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "19668749-d0b2-47cf-b5c9-3e948519c31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9060ab94-8039-4ee8-99d9-a0eaef8f2ded",
        "cursor": {
          "ref": "598856e5-9d8e-4c14-99ea-1a2952abb496",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "def2441b-e11e-434f-90e8-85364804b41b"
        },
        "item": {
          "id": "9060ab94-8039-4ee8-99d9-a0eaef8f2ded",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e8450c04-c1da-4aa5-abb5-d88d74541254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ed0b23-1b7d-463f-8277-399240d94ba2",
        "cursor": {
          "ref": "14cbe4f5-ba31-46a1-ab6d-01ff28f39cc4",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "645355c0-73ad-4f0d-afef-a42e11559947"
        },
        "item": {
          "id": "88ed0b23-1b7d-463f-8277-399240d94ba2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22af5bba-3e67-49fe-872b-78ad11781445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b17ccf-53b9-4a4e-8101-a40791e47304",
        "cursor": {
          "ref": "f52eab87-5060-4348-a522-7edbe6c6a7b2",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b97b8f8f-3c89-4e46-819a-0ebe127f85e2"
        },
        "item": {
          "id": "81b17ccf-53b9-4a4e-8101-a40791e47304",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "25c7238b-514a-4682-8690-8ecbd6a195ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d706d0b9-820a-4ed0-9da0-494e435edaf7",
        "cursor": {
          "ref": "a1a63ea4-f19c-49e8-840e-2b5f8d692aa6",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ce0776e6-4857-49f2-8eb3-1bdcd691f478"
        },
        "item": {
          "id": "d706d0b9-820a-4ed0-9da0-494e435edaf7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5621785c-bb2c-4403-8c9f-82dcead52e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9324286-4088-42b6-afca-b08c65f4a09c",
        "cursor": {
          "ref": "50fc12a0-de4f-456a-b0ef-5abc5c847b8f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ae29b1fb-1eeb-4b2f-9569-03c37c707d42"
        },
        "item": {
          "id": "b9324286-4088-42b6-afca-b08c65f4a09c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "349f5c0f-905f-43b3-b531-05283b619536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b8d47f-db97-42fe-a034-8b6c88d222ac",
        "cursor": {
          "ref": "2f9be01b-1222-4848-b40c-fbb01e8806ac",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bb7820fc-72ae-41ae-a796-35236b921970"
        },
        "item": {
          "id": "e3b8d47f-db97-42fe-a034-8b6c88d222ac",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9f82818a-5d93-405e-943d-d57600c14f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4040db1b-8b26-47e8-9d9e-f2fa02696ef3",
        "cursor": {
          "ref": "63a11f84-fc7e-476b-9cc5-bfb98e722724",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0a3888f6-f3a1-4979-83c3-a74cddf7bf5b"
        },
        "item": {
          "id": "4040db1b-8b26-47e8-9d9e-f2fa02696ef3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fdc925ef-96b0-4579-83af-f4a379f6e298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e90802-5e86-4908-a5d9-29b8e0852dec",
        "cursor": {
          "ref": "a6f992d8-ddf7-4a96-a244-91a2f6fddcd2",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3b00bc78-010f-4b43-ae6f-b5db8917b972"
        },
        "item": {
          "id": "91e90802-5e86-4908-a5d9-29b8e0852dec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "33bfed0b-fe8d-4efa-a95a-727a2392cb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b88a02-9845-4329-8843-55cc3b834fa6",
        "cursor": {
          "ref": "c3c96b54-0f45-4385-99e0-1d0e6d171091",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8026a801-0eb6-46d2-877e-3166391adfa7"
        },
        "item": {
          "id": "72b88a02-9845-4329-8843-55cc3b834fa6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7600ed30-e58f-44a6-bda9-b7a48e886e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3340df31-75b4-45eb-a453-c9ae078c1075",
        "cursor": {
          "ref": "e64e35dc-e1cd-4905-a629-30ee6a9f748b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bffde47e-7523-45f6-8c17-745fce58ae53"
        },
        "item": {
          "id": "3340df31-75b4-45eb-a453-c9ae078c1075",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7e25153d-46d3-47c9-a13b-d43ac07adb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cb2d14-0a1f-4489-b633-bde30f0d4db1",
        "cursor": {
          "ref": "c6c90a43-b9d1-425f-9ad7-f6dfc309a3d3",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "49405481-184a-4b0d-9431-c82e40b744fb"
        },
        "item": {
          "id": "70cb2d14-0a1f-4489-b633-bde30f0d4db1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1b700d35-00a9-420f-ad93-bb3a17bbabcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75624ffb-b4ff-4fc6-8182-d1ad678f5f15",
        "cursor": {
          "ref": "ded5f290-c2ee-4f8f-a0c7-9ebb48d10164",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6a11aeec-999f-475e-bd3f-2e9bca8a2629"
        },
        "item": {
          "id": "75624ffb-b4ff-4fc6-8182-d1ad678f5f15",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0fba4080-60f2-48d6-baf4-87814400648c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a029f45-44cb-4089-996c-666d974e53c2",
        "cursor": {
          "ref": "83d88e6a-7bd0-46cd-8299-5ab47172f595",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7cd8045d-eb4c-4895-96aa-af157b122654"
        },
        "item": {
          "id": "8a029f45-44cb-4089-996c-666d974e53c2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0181dfdc-58ee-4271-8926-2a97d58b2f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b0cc8a-70dc-492b-93f9-2b07a506fdb3",
        "cursor": {
          "ref": "b419b61f-c0e5-4cd9-b209-13d97ccbfac8",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cb204df3-6441-4760-98ef-3f26b9731a6c"
        },
        "item": {
          "id": "a6b0cc8a-70dc-492b-93f9-2b07a506fdb3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fd6facdd-ec13-4117-86bd-4d9854274e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6438ce7f-7423-4b67-9cd7-5137526ad888",
        "cursor": {
          "ref": "644c5227-6ea0-4ce0-85e7-9c0ac2ef0de5",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "67f8a480-88bc-47a4-94f9-f9f6fe220320"
        },
        "item": {
          "id": "6438ce7f-7423-4b67-9cd7-5137526ad888",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "899502f9-cd52-49c8-9480-445f3932751f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672e78b5-1305-40c0-adc5-fc3db4239751",
        "cursor": {
          "ref": "1837ec05-00c0-40ed-bb43-85c846c4c8b5",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cb96eeef-10fb-459e-b3e1-32c414f01022"
        },
        "item": {
          "id": "672e78b5-1305-40c0-adc5-fc3db4239751",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a5c4fe5c-478e-464e-b599-e8dd2717136f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1541fdab-b2d3-4750-9cc7-402538e63b9e",
        "cursor": {
          "ref": "c0309ff4-85e5-471c-bc8c-b538a26225ac",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2fdbe0ef-6b35-456c-9a73-2c9ea4b6951e"
        },
        "item": {
          "id": "1541fdab-b2d3-4750-9cc7-402538e63b9e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d865ce07-4e19-49ec-bd99-ceaa3df7998c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa268a1-b8b0-479f-b155-63540ee1d0bc",
        "cursor": {
          "ref": "786f3804-e19c-48c1-8b01-f3b3fbc158cb",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b701be27-a5bf-4dc7-98ed-109338cb72ff"
        },
        "item": {
          "id": "efa268a1-b8b0-479f-b155-63540ee1d0bc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dd6fbe2d-12b0-4ee1-9833-81b232aea9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e97a4d-9ec5-46be-9207-e059677dac3e",
        "cursor": {
          "ref": "bb618b04-e6ef-4485-9f8a-216bf5c5f91c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f2672f49-31c5-4943-93d5-c924a6767c5a"
        },
        "item": {
          "id": "29e97a4d-9ec5-46be-9207-e059677dac3e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ed543d7d-522e-4450-aabd-6d82c8198e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e25415-2955-49b4-819f-2fbc668cab36",
        "cursor": {
          "ref": "e0d0bf96-6ef9-409e-8990-848b832ea38e",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "59fb61b4-7775-4ecf-ae12-59158c4deea0"
        },
        "item": {
          "id": "a2e25415-2955-49b4-819f-2fbc668cab36",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "02e5df42-7d7d-4c98-9972-33cf4c5d3eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3aceba-085c-4b8d-82a2-8b20592daf49",
        "cursor": {
          "ref": "342617e4-11c0-4997-96c8-cf2d85ffbb3b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c8844cd5-85af-4bc8-9af3-2821c8c69153"
        },
        "item": {
          "id": "6d3aceba-085c-4b8d-82a2-8b20592daf49",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eec0a5f6-559e-4bbe-a3ec-d02c300b009c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ebed2-77e1-4bb4-aeef-0721252465c5",
        "cursor": {
          "ref": "7c01730c-dfa2-4d09-bc5d-ee32522754a9",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "56e8195b-f66e-4b32-9284-fc9b9c0c08b3"
        },
        "item": {
          "id": "b33ebed2-77e1-4bb4-aeef-0721252465c5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "3b76e24c-406e-4e22-a72a-f2f233dca274",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 442,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d9a926-54ce-4701-bc51-8c6845ba1e26",
        "cursor": {
          "ref": "4246e9ff-c544-4cda-9a70-bb827b039d2c",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "96fe76a6-9002-4a31-8ddc-cc9b0889299e"
        },
        "item": {
          "id": "77d9a926-54ce-4701-bc51-8c6845ba1e26",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a60c08db-a548-4876-8d32-f2d27ba1eb4c",
          "status": "OK",
          "code": 200,
          "responseTime": 546,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adc9fce-6ae5-4694-b860-2edd731d6d2d",
        "cursor": {
          "ref": "4edd7965-b477-40da-b002-cba1ce739f54",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f5da8344-cb69-4c5f-865d-eebd789c0639"
        },
        "item": {
          "id": "6adc9fce-6ae5-4694-b860-2edd731d6d2d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2ec2cf2f-fb28-4c70-aa97-051a5e1832f2",
          "status": "OK",
          "code": 200,
          "responseTime": 1898,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f09b563-6cd6-40d2-9638-c60541dd35fe",
        "cursor": {
          "ref": "a9102565-675f-4373-84d0-d3555374e02a",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e4a9cefb-1b8a-4896-9310-279a62a11e28"
        },
        "item": {
          "id": "7f09b563-6cd6-40d2-9638-c60541dd35fe",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b8c0faef-169f-4741-8e75-7c08dc11d648",
          "status": "OK",
          "code": 200,
          "responseTime": 1760,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57bc094-2765-4adf-8a05-a7ef55811b12",
        "cursor": {
          "ref": "c8602fdc-47a3-4b70-b700-4d56e161e881",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "172a1327-b749-4e8e-a396-9b1a24c97ff1"
        },
        "item": {
          "id": "e57bc094-2765-4adf-8a05-a7ef55811b12",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a46ed38a-3c9c-499d-99df-6437187bcbc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57bc094-2765-4adf-8a05-a7ef55811b12",
        "cursor": {
          "ref": "c8602fdc-47a3-4b70-b700-4d56e161e881",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "172a1327-b749-4e8e-a396-9b1a24c97ff1"
        },
        "item": {
          "id": "e57bc094-2765-4adf-8a05-a7ef55811b12",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a46ed38a-3c9c-499d-99df-6437187bcbc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57bc094-2765-4adf-8a05-a7ef55811b12",
        "cursor": {
          "ref": "c8602fdc-47a3-4b70-b700-4d56e161e881",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "172a1327-b749-4e8e-a396-9b1a24c97ff1"
        },
        "item": {
          "id": "e57bc094-2765-4adf-8a05-a7ef55811b12",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a46ed38a-3c9c-499d-99df-6437187bcbc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d69190-740e-443e-9fb4-a45245cabc15",
        "cursor": {
          "ref": "b784581f-e3e2-477f-9545-e0214163c679",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cd8b1f1a-b9ba-4842-8fc4-80ae4798dfb7"
        },
        "item": {
          "id": "c0d69190-740e-443e-9fb4-a45245cabc15",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ed46ab39-b6c9-43ee-87a8-ad209651f87a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 885,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be58da6-e570-4c3f-bf02-3d21e5fcce34",
        "cursor": {
          "ref": "07f10392-5e79-4b5a-b1c5-5e1739e817a9",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "12a286b4-d83b-4fdb-b60c-0980ccbbb74f"
        },
        "item": {
          "id": "3be58da6-e570-4c3f-bf02-3d21e5fcce34",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "76e7af7a-dba8-4a62-ab9b-fd6e97c50278",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be58da6-e570-4c3f-bf02-3d21e5fcce34",
        "cursor": {
          "ref": "07f10392-5e79-4b5a-b1c5-5e1739e817a9",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "12a286b4-d83b-4fdb-b60c-0980ccbbb74f"
        },
        "item": {
          "id": "3be58da6-e570-4c3f-bf02-3d21e5fcce34",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "76e7af7a-dba8-4a62-ab9b-fd6e97c50278",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9946ee-a063-443a-a21d-b1949028aee1",
        "cursor": {
          "ref": "68b2b154-c297-46b1-8026-deca0b104ceb",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b0983634-0c3e-4828-b118-c00007d85a3e"
        },
        "item": {
          "id": "2a9946ee-a063-443a-a21d-b1949028aee1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "bdbc96ab-8020-482c-8834-977d0191d944",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 657,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f7d61b-c384-4f70-8f46-e9c1dce66440",
        "cursor": {
          "ref": "56bb2563-5ff0-4ada-bf3f-f7db39f722da",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f71d3a65-3049-484c-baa6-5ffd5bd791eb"
        },
        "item": {
          "id": "32f7d61b-c384-4f70-8f46-e9c1dce66440",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4ccc41dc-22e3-47b5-9d40-7b3e72aeb36e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f7d61b-c384-4f70-8f46-e9c1dce66440",
        "cursor": {
          "ref": "56bb2563-5ff0-4ada-bf3f-f7db39f722da",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f71d3a65-3049-484c-baa6-5ffd5bd791eb"
        },
        "item": {
          "id": "32f7d61b-c384-4f70-8f46-e9c1dce66440",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4ccc41dc-22e3-47b5-9d40-7b3e72aeb36e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e923a4-3728-4867-93e8-043b1c4f3fe5",
        "cursor": {
          "ref": "edc73a56-f3a0-4e70-b8f1-59a3f38899e3",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ecec84f2-88bb-41d1-998a-b65984b53495"
        },
        "item": {
          "id": "40e923a4-3728-4867-93e8-043b1c4f3fe5",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d6dc6c0d-a331-4503-87e6-f78e18b0ab39",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 675,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}