{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2178ebc6-17af-4d1e-b19b-93aea8f29c2c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "09621863-f742-4380-b2e0-91715405f3c8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73dc4662-fa36-49de-b888-af27c46aadba",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3282c0ad-5175-4fdc-ac7f-0d7571ae21e8"
                }
              }
            ]
          },
          {
            "id": "c7d7a361-799f-4b13-91ae-9e599633960a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48c091d5-e880-45e8-8e09-3bf005662112",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78f49a59-8e03-4286-ba0d-3133f76222c4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dd5a02d2-fce5-42e5-aa49-d2decc9dea29",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4258e936-071c-4da2-b6c4-eaff7188ddd3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6d66501-decf-42c5-9c03-f43718f1d7b4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59d3d8fd-d436-4b1c-b298-65ce39027200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea9951cf-1557-4f86-93c0-2419266f45d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4faa8531-334b-4399-b24a-9bef71486fb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85672eb8-6eba-4fbc-8c5a-4a6b0ca6571d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86b93494-16b7-4c9e-9e96-231291dd312a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ba63afb-7421-4362-a1b7-0f24e68aa6d4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c7ad96e-3119-4ed5-ba4b-ab19bcb6559b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2eae2a39-fa2e-4c92-bd23-0520183ec884"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c29f78e-0fa2-4b9e-b13e-10b73e8aa1ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "254302ad-1402-4ef2-8fa9-c73f01a5bc81"
            }
          }
        ]
      },
      {
        "id": "220383fc-1b9b-494c-8475-6f5a492f1202",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e0702ba2-cf0e-4f63-b432-55f0b39c4a03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bce810e-018d-4e16-9a47-15fad4e3f0bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76277e5e-78f5-47ea-abd9-21d1e7f3bc1f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d351d6c-5fe1-4b19-829f-b97490438355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a71f2de4-367d-409e-89a5-713d5b8b7dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffbc3ba-051a-4311-b621-07abc5ac8cb2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef489d4c-7a77-47d1-b312-6f29b77018ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "702866d4-a8d9-4f54-8471-e54557b49537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d64bed-4c54-4ce6-99b1-41642d7619b9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff102ef-2b06-4a3d-970d-4334476fef35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a61fca64-a4e4-44fc-be63-e8f1bfdb876f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c4f47ab-d81a-4008-ac73-48c49d1dfa6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5277cacb-702b-43a1-801a-32ae4fb09814",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb86ed4-241d-4170-ae73-055ef527f0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f32083e6-6096-4d05-8ed1-b93f96063e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3467d102-b657-419d-aabb-b8b644974cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bceb5202-f6f9-4515-8508-b53754ce2a3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "175afbdb-79f7-4f45-9b34-a937f5bb593b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b88de9d6-0dd1-4124-91b0-80ac43b5860c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c292d8ff-4b48-41ee-a20a-da2c7c692395",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7c8a0d87-801e-4500-b473-7a786f756055"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c54fd153-268e-4b71-a78d-9c45eff97cc5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fb1a7405-8640-45d2-9970-948a740fcc60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38efa791-dea9-47c9-8151-f5c86b264d6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33019738-c790-4728-b68e-d0d83d16d307"
            }
          }
        ]
      },
      {
        "id": "26919dc0-0598-43e5-aef6-7819f215dc96",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9733a469-5c4c-4ab9-b1fe-0454901f90e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71629ef4-a3b3-49da-8794-c3627552a947",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d5818bd9-8d24-462e-a292-b0e2d68eb465",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ea5c72-f1c2-4eb8-9f51-082b4d2916cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac89f1b-697a-404f-a9e1-65115e5b36af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675e0450-d683-45bf-a02d-54332fee0985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72afd690-118a-4d98-97b1-68af7c6ee602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb34ce9-cf30-41a3-af0b-09f40c2da317",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b41879-e3f2-4f88-9302-817bf214483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6088b288-88d3-409f-8d0c-c7f6836b429a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2146e081-aeed-41bd-9110-ef99f1140b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c62c9f03-3632-4afd-8f8e-882e85e987d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a52a29-42a8-4568-b559-3e748de95ac9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90199d47-6494-49c3-a76a-3a4ce6c888ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25690989-f1a0-4b73-a267-ced7d941cbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf562340-8b30-4b16-ae61-d86859c30137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22f6b09b-6a74-4d31-981d-a8eeafd227a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e082f89-7dd5-4074-9581-2187006abccf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abb6185-cdf9-47c4-b20e-bac2a2302c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dd2643-eba0-4527-94b2-7ce3d58150a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827ca0a9-c739-4ca6-8007-2d6c0665f641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "693ad145-4756-492a-a9de-c27ef86f723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7361f2f6-3497-40c2-947c-c615fee44f50",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429c667e-e709-418f-a95e-c3dc68a0b025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b9f538-9ff0-470f-b3e3-0f247f8b3c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486d8647-bb73-412c-be45-679821a2419e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7f5e347-022c-4ff9-88a6-fda4b3af3d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29059809-ee9c-44ce-9cd3-115a48d9216a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5101ef6d-df5c-42c4-91fd-6d23bc00bfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c6e36c-2a67-4697-832f-ef8415244d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fcd3b1-703f-4d6d-a900-531d1fe54554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d75174c8-9e1f-4183-a13f-7a44c73719a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e95b28-325a-480a-a5de-80712d40ff2b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9580e0-c71e-434e-a4e3-fb8405150afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b78442-3f98-4490-8c2d-55add7718f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cff898e-4857-485a-abbf-19bb20e3117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "728e137f-58ba-46e1-8127-60b8bb815e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c7a2db-e9a1-4339-bf25-ca50a4a33ac9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d850c000-2b69-4120-ba79-8ef7d767d7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4c550b-0300-430c-aed9-a7158a35b7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed0ce09-7831-41c4-aa1f-ab45dd947689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4942e96f-7638-4516-bfe4-44553f2ba887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d75e0a-5152-42f6-9284-da4b8132e169",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062318b4-99ef-420b-b56f-2b23f4ce8e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f885723-1bc9-498d-a291-e4938bd68322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af9bff4-823d-4e39-b214-498d9dad5e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65c507a3-6112-4b13-afa3-17e5b440b3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0315f8b-4ef0-4440-8bf0-fb81da29ccd7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6411fdd7-8126-4617-8b5e-172d841f56d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c07ea0e-f28c-41d3-a9ca-1afce5e968f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d42d61c-ee01-42cc-ae63-caf37855d7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bd832bb-c8e4-45db-8185-887cc806e51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95744cb-c950-4ce0-b7ba-92de6e70cb64",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feadf048-34cb-4d59-b1c6-5611df6801c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77c1b04-c09a-415a-b289-d971950e9ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f7622c-ba7e-4a18-a07a-8d19d0d84033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31283870-fe4f-4569-9f22-0fb7eafbb6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b928e5-b861-4ace-9d6a-a3746a6c389f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e66c51-4716-437b-a37b-138e6c449e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1683ff0d-fa60-42e1-8ba1-2bba0e17abac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b8ada6-e2e0-4f0a-b54c-cf799295d575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54cef1d6-c19c-4839-b3f6-881fbf818705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7df863-3a23-4b24-98b3-d8052cc63da9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090c6160-c2a7-4d73-85fa-04e81e45b945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c5cc38-22a2-4f58-8960-549dff1dbf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96efc43f-b49f-4b8d-ad66-0b0eb5ba272e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "082ec599-f396-44f5-83fc-71d9436abf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75b6481-1ddf-4ef4-9f2a-7fc511d118cd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a435b335-b611-4be4-b477-4003bd0a9930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b384ba9-fe4a-4e95-8a22-4e38e8dc4a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccc6a8c-4e45-42f1-9438-3f7233aa8e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae1221ba-8f38-4808-b49f-26e3202f2cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c3289d-74bf-47bd-a7df-5613d97c4224",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30aabd4-b2d3-4403-9e79-f08d98382266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e936eeb-c2be-493e-8c7e-02cdbbf5bba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c040c147-9440-42e1-a7a3-6b48de8559b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c398b0ca-e5b3-4ef3-8502-6e9303bd7ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b440ab-8e0e-42f3-a052-d0646fce2166",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e03121-1463-4712-adaf-28ff9728b28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1553a0b3-72a0-4a18-a595-fe1a60faa2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd1da66-f61a-466b-9820-a4d450d3c775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dfec30a-bc0d-4ebc-a8b2-dd6bab08cfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1423b77-be88-46e4-9a84-838646c2bd77",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da32adec-fb46-489a-8041-9d412dd5945a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9629e67-8167-4b5a-b085-146f838de0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f18912-ce6b-40df-b650-1b20d367b41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7233687-548f-4bd1-8e53-847d14f7a288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a560f732-b873-40cf-9fa1-c9ec0346f990",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8a8076-be34-4571-945b-755c225ef526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129f2251-646c-41bb-b5e7-c6bf29c38aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef4576f-caaa-4dfd-a292-b2f0fc48ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d10643e-dc24-46e4-b4c8-73808fbcdcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a733a094-7c62-40c5-b881-ed426edab285",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ae088f-5a7c-442f-8976-221240344fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024bcd36-ad79-4964-b375-a9a077c70d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb7ee3a-65bf-4080-b707-c1ce76299709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3815ff7-3e95-4eb5-9490-ac91ebea9de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7226f05a-51ed-4faa-b575-33eabe922775",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831913cb-d290-4596-af76-6aced61ce2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214c4730-c9fa-4416-828c-bef2d5357a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcba5dad-2320-4e57-82a6-e2d023ae285f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8173b03-e380-4e0e-931a-b95cb2af54f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e3b432-bfae-4a60-96cd-7a0df9454ff0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8752d28-2b01-44d3-8438-12a179c9ae4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5cbb15-4ed9-472f-81b8-5c2225aabda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873c7935-30fa-4a31-98cb-5df2ad3a3da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4219e132-4c50-4cf4-80cf-716498908b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60422ee-bd83-4ce2-ade3-3c096241c275",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f210a572-009b-4f47-b850-f6a22f4007ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5424aa7-b721-44eb-984b-0e68b3011998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a877249d-c9e8-4e88-92c4-799b7f33aa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "354d2184-323c-4a60-b15c-5cfe2233ee16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84625cc6-1a42-44d1-84df-f8b60e32eed6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe10994-a4cc-49f8-83a6-ac663ce9b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eddbc50-f713-4aa8-abe0-711470c798a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768ebcfc-7d10-42d2-8fe0-8fb97d02d153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d2db25-0200-45e8-b034-ab5f33b08d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cc86b1-d51a-4d7a-823b-a6701547a013",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca7ec39-a66f-4c17-97ab-401f53ff811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469f0aad-f7bf-439c-8b21-6cecb4ab5c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1babe13f-7cec-4a4e-a98c-69cffea8e0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d00a86e3-7000-440d-b553-75ac8231dda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698a29bb-ccfd-4183-80fd-3fb9d30acd78",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b999b733-5c3a-41a0-94f4-b82451ff6f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881f617b-6826-42a1-9057-143c0d410418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febfd385-e80f-49ef-ab79-f0e4ab5d2f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c999d4-db7b-4b12-af8f-cb16aad8f982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace93828-c3c7-4bd8-90f6-5ca74a1a56df",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c57dbcb-4219-4a05-8657-168f5fafe7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbef9e37-9a84-41b3-865f-edc68a056019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2936c8-20fa-48ff-88a9-dc1171d57fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0507cc-4696-49ff-98c6-dca15de6e997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9411b8da-7030-49c3-a510-1ab3d4313501",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44124485-1289-4651-a891-bb1429d5958f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe07f704-ac6b-468d-964d-bb7744065857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b483030-5bcd-4e29-843e-c30a5f070abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23cec006-7e38-4f35-8433-9bbb7d1670d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4d1f00-25a1-4070-91a6-b9d4cb1849dc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c75c487-9ecb-4d60-9142-0b31912b2db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e08f57-e3d6-4cd9-9b9c-390697c6cac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812bf673-963f-4f13-8943-e862da665ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3078b89a-8cd8-427a-8f27-d52fbacdc6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a253a181-f8c8-4581-859e-cf48929048d8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9e13e8-72a8-4d9e-9917-b2f91ef956aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efdbb0c-0ee2-4b5b-a446-1c9b624b3bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d72da46-7c6f-4532-a06d-0413b1db3cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa338592-ac32-4761-82a6-efa0333d0c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa62e6ba-5634-4f80-89ac-616e8c07851f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e8ebdb-14ae-4c14-b88d-341867ffacec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16a1ae8-a1d8-49f6-a85e-017f97c688c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42015010-2988-4ac1-9917-196efd6a79eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b90a1b4a-bae8-403a-a95b-56eefedac655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1757ebe9-3973-4523-8e47-da77a5312677",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80005358-9cd1-4768-9b82-14a50b737234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a0815f-a0bb-40e9-ba68-8ce37b27eba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d67e552-4497-4d55-8bc6-cd5f52261e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e60a736-1458-469a-b230-cc408178d3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3563fede-f0f7-444d-b2af-fbf1271cfcb1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509082fb-3acc-4c7a-ab76-5ded1945dcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eba1404-834c-4f38-9d78-7cee1087f676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3ebc05-b23f-46c8-b5a8-e59410ac7b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68d0c69a-49f7-4b6d-962b-eb841d77dd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40e7855-b653-425d-941a-0b77f05f6872",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d136244-e33f-4cf9-b5a7-5e5469d5566d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524394bf-e4b8-40a2-822f-0ab203a7b786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12e1b6d-4a4b-4fd8-b7bc-43367275f5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f08317c-d80f-4cd4-a1b3-db6033cf64d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e805ce5e-d72d-4530-94b8-f7cc48fed342",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527a15be-7698-4e77-bde4-e75700ce8c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3378ad-2ffa-4e13-ba65-14a6103bdab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e95e4d2-79ce-48ee-92fa-46b1e022f240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64a96bfa-0bb6-483c-b04a-c658b3146baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f54dde1-bfa1-4f99-bfd6-9c4c21b7b39c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b259ea03-1008-4dfa-bca5-8cfb677e4920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac917cb4-d74e-4031-aae9-5ddde894aa73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaa0ac4-64df-412f-a406-3b0b3ca58524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "27ddf308-379d-4905-9d1b-6df4eeb76e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81359503-407d-4791-8d35-37e748b65f36",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7786049-be1f-40ee-9908-73b5da071679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0d01574-a508-4f7a-b9cf-e752b8865c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8625c5e-9156-4aec-a055-7a2e14d168f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07e11da0-2ce0-41de-8f67-923f0a8b34c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf7e188-b05d-4d10-83c2-ae94709d1212",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b550ec94-80f5-42b1-9a3b-a696b86e08fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba42209d-c8bc-4aa5-bdcf-2ff778c60eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2914d012-322f-4c34-9172-3ce4dfa67994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08b73209-6eb4-4e83-88be-891d52c3c81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61374fd8-87df-472c-9fec-9c27760f4c3d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eb78de-3579-4f80-bcb6-fdc17ef752e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4104b172-d029-4d0b-b3f5-beb6188d416c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9039be1e-3ae5-4554-a720-b55e1682910c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2f973a-cdd2-4607-8c36-2792b4900d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5ec1a9-710e-49a6-85b9-30e69fb8409c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63509930-d5c5-4519-84b9-93a13a4ce4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38e1794-a909-41d5-a9a7-9edcf675ae44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b3e7c8-97a5-41b8-9017-0042afd5ac9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3be7058d-663e-4388-ae31-15f92ee6dd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5514d8f9-70c0-4e51-aa08-c40217e21d30",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbb1002-90ca-4161-a93a-decd87f4c699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6054cb6b-2748-4932-bd12-574f42c72ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad23f96-960e-46fc-8e95-53bb0d11fd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0933aa0-0779-40e4-aec8-ea71d2e60d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db329be4-7e5b-4571-852b-ddad1c935042",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b392aa84-e7ae-4b91-b13d-7d5da08d177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbb4eba-ab4e-4ecb-9670-b484eaac5fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f9bf12-d161-4695-b7b7-39e61beb75e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae97c85f-6f37-48bf-bcd4-fe229f9595f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e5739d-cdb0-4774-a7fc-cba804cfa2c3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382b6f56-6b5e-4ccf-b2f2-c4d7076b458b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16467a54-35e6-4591-9cc3-eebdf02ebf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd65ac3c-3302-4abf-b510-3e244c10380b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d5854dc9-6ac2-4ff9-8bba-a2c179d73d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4061de0-9756-4e8a-96fa-d1c8ecf07004",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c115d666-b796-429a-8b2a-f98d334ec607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699da8e2-a990-4965-8388-4b509d01b528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc15a08-586e-47d8-915e-ecf0ba182555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "819b661c-ea1e-4724-b7ce-8b1deb6e1df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3545ef9-ac43-4542-960b-744ed37cb854",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f99a44c-17f0-45dd-a25c-b238402c13a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d8dc9f-724b-4bbb-b89e-6ec6424118cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e77bc7f-ce11-447f-a9ec-0ade07f343ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "40fee8b4-b557-462f-bacf-346b15cea129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2ed368-b12f-4a13-8f5d-b83596085413",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eca19c-a779-4ed7-97aa-83abeb9cd7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f088b4-f13d-4460-aea4-61be97082a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a28c9f-5afb-4f01-a7de-4a0351434e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "969255dd-d180-4e99-a4d9-9a0874afdb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7138334-463f-48ee-875c-3e2bd94c8644",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06371c25-0935-4c13-ba8d-889a8ea8d2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8b28e4-4a9c-439a-b165-56632c839b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93a6858-eae6-45b9-86dc-b3524a9e3060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a7bfff-cbae-4132-8124-b70f4c806c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c3c222-3337-434f-86be-9acc687c01a0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350f753b-8a41-4736-a878-cec2c5194b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c0b14f-6d5c-4ebd-aefc-8bdad4c226e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde9504c-5ca8-4867-8316-7a2d68a5b155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40d5750b-477a-49b8-be32-9440603fde4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca9f25b-e418-47be-b4d1-d22eb38b7e38",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba26acbc-b544-4381-bf64-1d4767a0e762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8819bc70-6b86-4a74-a855-2331d82f8374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481bb137-aa25-448f-ba1e-e9257857d412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3525dd00-9d60-40d4-aab2-6a2898a97498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f28734-2a66-4e27-b530-2f50af9de1e1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff78faf-8660-44d6-8cb3-cf4d77d4dbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5be117-8282-4cd6-a530-2717b993c416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d4cc04-d9b3-4b94-a90d-324876ca60ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "394f9da3-8ee1-46cf-89ba-975776c28d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b71aeb-113f-42f6-a1e0-c0365915a2db",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb354398-9759-40ab-8c0a-c1517b243d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3169f8dc-051c-4f02-8e40-3ed0a1d8dd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab5387b-3436-4c2a-af9a-1965ef62ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8169a2e2-c372-4bab-a956-36ddc8c02349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c927194-a00c-4a2b-8930-9307e2273b05",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3a3593-40ab-45bf-bba1-9de0a3ab6030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1ee325-330f-4ca9-b21e-46f483fec432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450dbef2-14aa-4add-8c67-870bc0052ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc45e3e3-8bfc-42eb-a881-60003ac86a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb6218c-de34-4e04-8979-f1d4c3597ed8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266f7ff1-9409-4c9a-8f78-c29e6225d812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedc44b2-a2fb-4388-aa93-fb6c9d0f3f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7517cf5f-bc97-4aed-9ea1-e1320386febd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "235888e5-5ef8-4a5a-95eb-07a8f4f060f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3899ec4e-9af4-4a16-9882-c4cf897903f4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de2fb65-dee0-4576-931f-ef6f3fd0a4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c04a127-8366-40b5-afab-08595a57144a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f28a3df-942e-4523-a1ad-7a0dd82527c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f45474a6-35c8-46c6-bb0a-529c7b036075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fd5c39-5326-4b7b-b46a-c77cbf2ebe12",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee92289a-5c1e-42a7-a6e8-3b65485b00f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55105f2e-59b5-4719-adb0-877430f1f49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de04ed05-6e94-43c0-ac52-7e6ab236d5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bc8c2f-be71-421a-a0eb-7872d5b98b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10d07e0-63b6-45fe-8713-6329684f2b96",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef84f4a-6e9b-4f7e-99ce-3d1539f0f9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490c62ba-565a-498e-ab4f-763e0db91344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fbd90d-f09e-428b-8ccc-397a1f25e67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5f2cd4-c9aa-4d5f-83a3-ea9c595b0d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e6c7e3-135f-45ed-9935-4997d0352425",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907a1c8f-a6b4-480d-b691-602ab1f958bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a169304d-8b89-48db-b276-761a798a9607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f36a453-26cc-4503-8514-da199d0216e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "43207e2d-f3f6-4157-bf1c-89406581f88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4cb80a-f063-427b-98a8-851d6a475e6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cf9922-3433-4276-a75f-5df8f8765fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3c68d3-d704-4a69-a01d-21c9fbfb331d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21159c8-bd73-41ef-83fc-942eaeb0504c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "984d3716-c474-4d13-ac00-591d5d439631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8d91f6-1be2-4bfe-bf04-ce8e685fd49d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61206ba-e626-46fa-8b06-be9ead7e2984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac164814-64e3-4d23-bae9-d451d4bb75fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5730352c-d2d7-4ab5-a504-79a1d228aae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bae02f0-b8ea-4f9e-b38c-6d69a626fa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137d6b04-abb5-4fe6-9997-da0b8a8860eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cc24a2-d13a-44be-9cc2-b04d2ce9ae82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b15c24-cbfd-4078-af3d-07759745a7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0eb5c88-3b0a-423d-9a01-760e93f026a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f35bd165-c3c2-44d3-83b7-047052eaf82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd99f25-834d-4b75-bc34-454b0b3cd7aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54184daf-b5b6-407d-83e6-8a5b7699932e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ff7d4c-42b8-4a45-990c-ec35e0fde5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f72bc89-7469-4f20-9eb2-8865e72ba51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbcad78-5d16-4002-a0d9-6db85e976c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c286b3c1-5ee0-4613-a56d-6059206d608c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63338f8f-6683-401e-bb4b-6cb40c892696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a7afa1-54da-4e3d-81c1-9eb59cb97489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60ef251-20f0-4c99-88fd-be427b8ee26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6209044-03ac-4d50-8d09-32459820b819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3555787-b4ac-43d6-a65c-4cbae002a17f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98f07a6-482c-43fa-b2e2-f9a9aa9e3135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afef05d-833d-4fc5-922d-06fb4196b914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f964226-5293-49a3-9ef5-0abaeecb8105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d15d0e1-cb17-430f-af22-3addc887bc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee4a8c1-4158-4aba-92a4-3de5eb4a2469",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965f2660-98ed-4135-8d62-15bac0d30482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605360cb-d552-4f0a-bf1d-de00735a87d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb335c6c-f3ba-4040-b9e2-5c028d4a7c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea58055-8858-4950-89fe-cb1322836b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499fb485-b787-48cd-aff1-112a5d1fd900",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72633810-d93d-4d21-b023-4021d8ecec64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc48d6b-648f-41ab-a18b-44dca06e42d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee96078-17d9-4d94-bb48-6fe66e46dc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81edd673-a783-41ac-adef-f9c3192c9033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01567b9-e530-4a6a-8a9b-1f8a5b99c094",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b64879b-6e90-418d-904a-0ccc69b38afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782fceec-bd2d-4a3a-9749-81136d74436d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e00ac7f-c597-4cea-9240-c226dbca8c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6204f9fd-61b1-4150-8016-c681e6a82a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b2832c-42e7-47e7-a3ff-c70b1c77f855",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e74970e-435a-4bf1-a970-5d244458ae60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47addbe-82be-4c2c-8611-81b71898cfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588f473d-3c3e-4a81-94f8-23ef6c3c6b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d0cbb2-8c12-451e-a44c-ca7c9186d7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4069bb-d81d-4e68-ad7b-dffb4f34cf23",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156dd390-5993-4af7-9088-74ae98397648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be735306-daf5-4b29-b2ca-c0ed444912a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebca2c3-ccef-4e95-bf3f-179dacee3d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f594f78f-23b4-41a7-9823-35102382fab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8adf3fd-8ee3-4bee-8f30-6bc4edc95d04",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209c5b1f-f0ef-44ed-9eab-1289a501083b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebaff3e-745e-467e-8416-e7f9ee0571b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb44fa12-822a-4345-b8eb-a7845f98e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "936ece88-770c-4dd8-99f7-f84c74e49a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9429ab79-fa25-4a04-a79e-7a2714076544",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0088c23a-b03b-41f7-b040-54506e0be9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ceea3f-9168-44b0-8b50-37797cf93fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8e1d05-7dc3-4bcf-a451-f12bb92c7883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1e8198-4713-48bd-845c-e66341a19046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a10e5f-e44b-4e22-a738-c47ff153e584",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7fa1b8-ffef-457a-a3d8-75d93e3b6a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bde26d1-1b6e-4b96-bdbf-6682a44bba6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f402fd-72af-4099-aabf-8fd10db30f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abdbcbcb-83a0-4226-ace4-cedae244ca7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3c52a0-23a7-4e88-a418-1d415c704cab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9307ece4-c4ee-4698-85f9-7c030c8b2eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad36087-e078-428f-a9ba-fda2a491f123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3943efd-0863-47db-81ea-0c7a5c845eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be3a71ed-3b72-462f-826e-8d834cecd0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b83ad5-ed18-4af6-9b70-5e40cc8922ad",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925f834f-4963-4f53-97ac-1415b4c9ba0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5f3b87-fe0b-4da7-8f20-9bcf43aecc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac776eab-1105-4361-96c4-b45164592356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b2d593-d149-46bd-9887-2c760aac555f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a344f57a-2dd3-4933-bbf0-04ce69152160",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ca648f-31b7-4bf3-a748-1e6a21860112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f91f53f-9e67-4ff0-8bb0-185ff2991ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65595de-a620-4169-80a9-be8a9a171e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bf9873-19a5-4918-85c0-dca4d431a2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37ab922-7821-43a2-b7c7-925225f9a3d6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579de552-62bb-45f5-b0d8-58b2d0b37fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98a7824-519f-454b-929d-9e4cb3e71c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d06547b-38f2-45bc-ad26-9bbef5e8c655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf79366-5c98-4705-af36-a1b6a37ffd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b99b3e-f30f-4237-97ae-1e896343a181",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ac6e78-9bf2-4872-ad5b-8542169c6763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0e6eea-5d28-44f6-93a4-e023113a4aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb92d585-477f-4376-beee-d0737ec587ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "739f5585-cd14-4365-bd33-1bacd238959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c3b377-2610-4945-afb7-af027edb94f9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400c1ae8-7934-4060-be96-e30ca2655ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4675c27b-10b9-4ebc-8e10-a4e9939ae6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59760a2-8dc5-4516-832e-ca117de206e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2b208b-5cf5-4db9-baa6-5a3d6c45eed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a615ab65-86f1-4ca5-9544-c931a335354f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57385d52-0b03-4a7b-bd13-a3cf8b54c800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ed00a7-2615-4559-b64b-bf690f2e5bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd14eb9-2513-4c9f-94f4-440ed49282af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "071f91e7-cacb-4e43-b765-8923697cbe12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a91096-709f-4341-ba02-d61d10fb4605",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4ad542-6aa5-4a72-a3a3-1e45d9064918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97384915-d527-487b-8f56-5c59e18a2788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd1f75a-b0c8-4e6d-9532-869a103dc29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ba828b-0983-45c9-85de-3f19885c800d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d214a63e-59fe-471d-a3f0-dd4330ecb045",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09c3c1d-ca88-45f8-8e12-76b1fa1c8db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921fe72a-e151-467c-862f-e575a6daf447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e1e31a-9738-4c3e-8ff3-5eaaaeb35a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d635a72-c29e-45a6-8b6d-c8bc999b3b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b085a94a-6500-4912-baad-62db03d3207e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3604f0-6843-400a-8f2e-6ebb96c98978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7fae403-6fa4-4638-a37f-2d82e1595165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e7a2a6-9b7e-43c2-8fb1-c3c6ef44013d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d164616-8b8a-4b41-83ed-3bfe87e66423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0940879-65ba-4d30-9995-a15c97327b7b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a287edc-8c47-42a3-92ed-c17928125bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b45230c-beb2-4d13-baa2-d14a80c43309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2b109d-eedf-4d5a-8a6b-e0317ece0478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7b8c04-feaf-45e5-9529-cb8de733ccce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec251e67-391f-4da5-b8b8-361182d5fed4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c65f28-e7c8-41b2-a767-fa19ffcab6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93f8c51-032a-46e1-92fa-215fa4d706d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f7ab99-1067-4bbd-97ea-9735d2ca5609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5940a1-a322-489d-916b-99890adf8359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0107e9-409a-42ad-8cc3-1bb38aa2585a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86eb59e3-651b-463f-b7ab-04a319f92c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07efb9f3-b301-4482-b7e4-671a887e6133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da48898-b814-43c7-a03d-938ff79575a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e3e2f4-96fe-49ff-b508-a9340f0bcd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e9ac74-63d4-4af0-9639-2e2d309b561f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc1ccbe-27cc-42cf-996a-43ee97fb8c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeadfc88-a66f-4fb8-84c7-44efe95eb215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf18fca3-c2b1-4864-9d34-ac22e9a35042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4fafea-96fd-4073-b7f5-b6949f6c044d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dd9f22-9097-4ef2-88ae-eef88a84baef",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06083f4-64b6-4e53-a57a-897ee8f66cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0809363c-8c77-4305-9967-53f01ab47a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaf8571-a66f-4c7e-9d34-378d550ea283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "879acb72-64f2-49d4-9a1e-1bd419f86d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1b2513-5c3b-4eb2-89f6-8460d1d16d21",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6e9839-b194-487f-8633-0babe7dc6292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8770e2df-32c7-4ac0-aede-a9bb90577d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5337beaa-da0c-4f32-8b20-ff8656f88bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b599e70a-039f-4932-bd4a-5bb5c89bed8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afffe6dc-76ac-4439-907e-09abaf7153eb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3260cf-c0ec-4897-b4fe-df870c7f09d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbde4d93-92f3-4836-83ca-4eb6dd36185f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0463bb-dc3e-4698-b49e-67157defa5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce677cb-8402-408a-be6d-203c7200d52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20afeb15-bfd5-4fe2-af9d-d9c11f28d19a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a1bb10-c9f8-417e-b0ac-a0155cf6c9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2449b06-8c6d-4fe6-8863-9947aa70fe9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1460c634-29a7-411c-85d0-140d2c94ccd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "111d0032-3ec5-4749-9bbd-bfca992fc3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f6f641-c792-4cbd-961e-9a0ad2650e57",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ad1797-8ed4-4f22-9d6e-4c7ec3370a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b064d8-50ef-45b7-bdbc-bed3c8412ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0471267-a62c-4c0c-9416-efe77983c7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "84a40f5e-438f-4aa8-a0a9-b5e271fcfb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750e4efe-74b8-4359-a445-d7f4e3ff1eba",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b829f4-5696-4503-aee8-64f7235c30dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816c7e7f-1d1f-4ba8-96c2-1a5c385fa647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8d00dd-4451-435c-a61c-8ca0b7f8ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b02b6e1-8f6a-439a-9c72-8b134be3cd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f702c3f-1a29-4f00-b597-0082fafcc991",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d496bca8-65e0-4550-b5d3-c757ffc6d233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d7b478-d712-4422-a669-7b4707fe7558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2972f89-2f16-4817-808b-d4e4681cd92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9354675-f724-4b62-ad8c-853c6c9392e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494f2600-139a-499b-8b45-8a3d9f6cdd9e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39ad2ec-0dee-4a1a-bd56-b1914b294d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ff8f04f-e38a-4461-904d-9d8b745afe2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507a1742-bf05-445a-aac4-39d61c23b884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "07604fee-7fb6-4e2b-a6e4-1fe7d491e006"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a217980-a1d4-454e-a8fc-d60f694d26a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a465e6b7-9586-4a00-9205-da9650a7a428",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc65bd5-f19c-42ba-bd48-0644604c3167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a81bbdb-8803-40f9-bd93-1fe7cfd209e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab9db21-4fed-4409-889f-b2bf3d99b444",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6806a937-7581-47cc-90a1-d3b7f9545661"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d94a66f-c0bd-4cc6-8688-cc9f8980bf73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2259a03b-6393-49d5-a01c-69132fa3d0c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2d0ecf9-29e4-42dc-a29f-1244703e7325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30372340-9d4f-4ae1-8371-4e65398a6b58"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8c6beb7-88c5-48db-8f48-a4bf306b8338",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4156505-711f-461d-96c7-2da996f10691"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c265c69-3b21-4218-9782-b1e41f327b4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d0953f3-9b5f-495a-9cc3-3bfb06852c82"
                }
              }
            ]
          },
          {
            "id": "fa74d3dc-7ab8-4715-af86-3b4c941521d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e240c6ab-9f2c-48af-b593-3c0738e2445c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "71b66dc1-4039-4f8e-8caf-40449dad64b0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e943d8da-7053-45f7-8db4-f8a92749aeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6c45b577-951f-4b23-85aa-349d59159908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9b1e76-a2e1-4ba8-9f16-906347daaa12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f889cc63-852b-4f63-8582-66ea7a6acf10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd6db1c1-e45b-47cf-9fb8-a923c8e75a72",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "455e3fd1-6335-46ab-be7d-003f4a9e1b80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e0ecb61-2b6f-4655-9e75-10235dc3c086"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a579a129-7b1f-4238-8b80-da13e457de1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da9ff379-d019-4b0d-8aaa-c25ea497dbb3"
                    }
                  }
                ]
              },
              {
                "id": "7a578a42-59ec-4463-ab14-63779962d0f0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a508777-f70e-41b2-b68f-320b025a1540",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f69f5772-e91d-4c4c-bc8d-0a3f48d78002"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81b1b7d8-7df5-4989-81d9-44bf2cef9561",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80b44941-e868-4582-ac09-be4aff775608"
                    }
                  }
                ]
              },
              {
                "id": "086582ad-54b3-4807-b909-9dacedc241d1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56cd497b-981b-4d8c-9c80-152b13a8b0a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84a573bf-5758-491b-8712-2c4077c80ce5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ad3bdea-4059-45f7-8bd6-ea02cc9f3e3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a54878ed-f9a1-48e8-b4d1-60ed9ac7fe91"
                    }
                  }
                ]
              },
              {
                "id": "b3e027cf-4bb6-4af6-8ff5-abe82d70bd64",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8dea7aa-a6b1-48c9-a74a-606167c21138",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14b0db3c-384d-4937-a3b4-ef46a868e530"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d24da51-111c-4670-810b-a58c8ba8380a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "94015e7f-ef67-463a-906e-081e25e64b3b"
                    }
                  }
                ]
              },
              {
                "id": "dfb6e76a-6037-453b-8b6e-39f9a21f18a8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "feacd501-f22b-4e0d-8ee6-1aa5881e3caf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39ab8cad-5bb7-4014-8e9e-146d461f039c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8859834b-3ac4-4d7e-9b24-31913bf8bdfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fb093c8f-96dc-4fa2-89c7-8772dcce1abf"
                    }
                  }
                ]
              },
              {
                "id": "83f92013-b469-4324-9087-46191e9241a3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0040d095-8c72-4aae-91cc-9be579b0a803",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b63505c-c6c2-454f-9906-db129527f032"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "584c20c0-f110-4437-9929-ece1e8037d73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4fbb0cc-580b-458b-8a60-05895bedd058"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77347fd9-ce7f-4f07-a4de-26c2c9cd6f30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f56ea076-8852-499b-a332-b47022185ece"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a2f3da74-e5e3-4a7d-834f-644f98c355cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c8f0e15-10a9-4d88-b555-ff4028fa724a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b11c015-dab1-40cf-b926-6f25ce51f033",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5c03a2c0-79c7-46b0-8fe8-7e6daec9a33d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4107c03c-7e60-4d48-a60c-1edc093e9f90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f04689e-e815-4138-8592-0b554eae96c9"
            }
          }
        ]
      },
      {
        "id": "11da9ba9-2d06-4f20-bf12-21ac9178536a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c73e3e90-63fa-4a39-ae98-7ebd0e54d6f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f6cdfd7-3339-46a0-a9e4-973068ca8dbc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81f3a3d4-f70e-471f-a3bc-8391edcf0600",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a0d179-0276-464b-b45f-b98b9843a37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7960ca6c-a0fe-4026-9a28-941e11fc54e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086d8ee9-3135-4870-98dc-917281e7775c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59bf745-f34f-456b-b8fe-372f1dd88fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62e954c-55e0-4e2b-bfce-24cf52404ee0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c370e24d-8600-43c2-8611-a915b993c6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5a4b90-2f8a-4d91-9bc4-5ad6e3d47e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbe8208-f948-45e9-9a71-c3e985c182a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05267170-6362-42e2-8e35-1f24c12d8573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d989618-0f36-46a3-befb-6c085038ba3e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abff8175-da4c-452a-9c35-b1e2f9cfb801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c49bddf-d134-403d-8634-333566bc71d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5cd583-0ed6-45e8-9147-f6032ddaeba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecf8e32-a9d3-4a25-a6f3-f6a235364d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7c3cf7-81fc-4a2c-bb79-cdff09debffe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785ae5b9-8649-47f5-bb31-971f9eea81eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57df809-b1ac-4690-a579-7b14c87bf06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a592680b-6400-4040-9300-d52e0bd2d13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b944ea2-cda3-4a0e-b05c-db7625ffd394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d334b6d-cc1d-4283-a07e-7a8a95eebf03",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c662d14-f808-4f0a-bed3-bde51c65cc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bcee6b-61e1-4558-b323-8a564fbb7e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715a00c7-79a5-420f-b0cb-e83fd44e4821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "026fea4d-1f9c-4345-9a35-ae850bb3315d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40881da1-83bc-4636-98c0-6a8bb5e6456f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f861bbd-0957-48e0-8a07-db6ed27ef454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44fb7d48-8bb6-4d26-8262-f477f2c5e92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b25b7b-4c44-467a-9564-617dda709b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65e2d5a7-8b6d-4397-bd27-8e78308758d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf399c46-fd5b-46f6-a3c6-72f7f7ac081b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54930326-1deb-4947-910e-a82347b9b205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b941fa-5b41-4857-a2b6-b0576163efed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c64c63d-f60b-4aea-b002-60491f9065f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "695831ff-07fa-43fd-92c3-e2846913872c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f793b1-aa49-4892-8abe-8227f486c6ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cce2cb-22fe-4975-b867-7183b30d5342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df15e911-0b0f-4c19-832d-f3ba6fe32617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b227bad5-3d51-498a-951a-152fd2da3380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64638e47-ba64-4077-b263-3610ceb8e16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d838e3e9-cddd-40ec-afab-718dbce86362",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72c56da-1a43-462e-92f1-dfb39960d98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b8fa0a-dc91-48b0-9c31-4969029918c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bf5d93-1a76-4b7e-8d41-1e75c8951375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "507ecb7b-2407-4d45-9533-be2187099a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c8a724-b8cd-47ea-918c-fa6b168c6d3c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7020c92-cfe3-4e7f-ab5f-ad1c518a0b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa6d123-4d7a-4b5a-a641-bd3aa6e788a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4273ae51-ef02-431a-a53a-7cdbf8f31b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69407623-e9a6-4b3d-bf53-b8f3da2baf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8541a86-8f75-4b19-a788-57903f8863cb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aebe4d8-13e8-4ee6-8485-8be98e9f3230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642ae372-ed8c-4822-8cdd-9a6c9396071d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d7593e-a1a8-425b-897b-7ce0dd7a0105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b9556720-8e4d-4c9e-a40d-03d6205c3893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4e5c2a-d4be-4e13-a175-f0adeeaea6c5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea646f1f-e303-48e1-89d8-4734a80882cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868f5df3-9ec5-4262-9e17-0ae9012b2efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce981c51-63e9-47f3-ad57-93156b3ae04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f359ce42-f14b-4558-a506-299a87ef9225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75467ff0-2862-4ee9-ae86-23185ee4fcc6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f374365f-029a-4754-86cd-4d613a368f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12d304f-2be7-448a-bf7c-a71ab6ad5af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ea923b-e360-4749-bdee-2f76af68b425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "880c413e-a0f3-4e16-b5ce-d697969cb262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4926e73e-d480-4593-97c7-ed99e51bff6c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376e68c1-f266-4b37-8e0e-f8173dc3c164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26a7da5-9932-42a2-83ad-da3d9a5fc173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9868d046-3642-49f3-ab79-958d8e2539b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3080df-05bc-4225-a8bf-d0cb036763b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea67c08-f242-48b6-82d4-f6aa43674475",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daa165c-d493-4fbf-b3f8-8b0af9e3a390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d66833-9a33-427a-a9c1-bb280eb6e0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372fe9c0-d109-45b7-913c-e60c8b33439c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f088bb-ab2a-4d31-b26b-d047b6065a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc678cb-099f-4a3e-91d0-10f128a51bdc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbf00f0-a717-4d71-8603-b0916b335eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f93088e-5f37-4887-bd89-19969f477603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e49eb7-f0ef-4048-a312-2d4a88f56c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3a8b48-e77e-42f6-a2ea-eab12e70d3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600063f5-5f3b-4165-87a6-723c29048a7c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3986ab5-fe75-4473-adc2-ba74debe0ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a98e2e-2bc8-4282-a325-687512b21124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feeeae5-3c8a-4328-b704-8cd0e8e3fd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "039c04ef-5db0-48c1-b656-fa4cfd0b78d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de9d573-e154-4e43-a2fb-92f342157c3c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66429c0e-9211-4fec-9daf-720e09354d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50b016d-2335-4ddd-9a71-b400d0d07b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48826e8-3683-4961-866c-17eee4d85c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71abbfc4-8143-4f97-b029-8c2ce81845ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4831827b-83f4-4d6f-a843-24fea71d491d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f4e8c1-3185-4790-b855-67f6107c303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dcd2ea-7b70-4ce2-9886-1590e276a064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b72b61-1fdd-4628-872c-e6eaf6e73c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fd6c7a-4de6-4207-b98e-6fd7426fbb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3eeca7a-62a1-4879-8d84-7b3411d93efa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c6be55-a101-4494-b3eb-17054a528873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7912de-fc70-45b6-b01f-3cda599a37a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d68214-0bf1-4a8e-bc92-d61d3d4c0bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6de89750-9ca9-4570-823b-53196accc1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00001711-ab2a-4eb5-b20d-7449c5a407e4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9d79b5-08fc-4ee2-b41c-acb7416371fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bd6d3e-c5f5-496d-97cc-a7e17aca283a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966aa1b1-200b-4c1d-8dde-221e71d08335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c247ebf-ac4e-4e6a-b7c9-282d428afd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50e0f93-cfc2-4ab4-a353-0321d8b47217",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdf1185-6f72-48a7-8b0a-c7253594234c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac16ec4-e678-44ba-a591-8223a42b6e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edc98f1-bb69-47f3-9f5f-abff36b97606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc87b9f-744e-4b3f-9e5f-e6bc46b817e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fe4084-2929-4f77-aca9-970674f13795",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb00f7f-a76e-4a1f-88c3-b0be09c67f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948a2119-0aaa-42ad-8f08-8202981a515c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5e1ea0-07ea-4a7b-b2c1-70197931413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f63f76-30fb-4f9e-93a9-738a2d267d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3585cf-2637-4128-9379-b24b0bd69d52",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c661c382-3dfa-446f-ae77-0b4535479b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699b4606-4d1c-422f-9daf-8c6ae993fa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69cf2db-c9e1-4497-8a68-dcd86556951e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7808f37f-55b2-484b-ba59-83a8ce169e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32506894-cb1f-497d-aa0a-782ff12f0ee4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4da7cc-34f9-436f-9cbf-95d2631f7ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58f4868-1031-4639-8688-d76327d4cc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392a53c8-0557-44e4-b796-4a821f9755e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3defdb33-ecb3-4f2c-b90a-5eef8f5212c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659db533-a4ed-4e56-b665-1ffb43491a96",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890e94e0-e865-4bdd-801f-59163b9ccce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9d7948-5485-46e5-bfb6-8737cf2de177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b163f-07e6-4a44-a773-f4d2e4fdcd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c19801f-ae67-489f-87f4-d69b3244fa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdf09fa-e68b-44cf-8969-95d318004144",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe624570-cb28-4085-ba9e-b395d2781a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a9caf1-ef79-44b0-a33a-d2b33d2ddfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4799f54-83fb-46aa-8bbc-eda3d8b9e347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff81595-f49f-4ed8-937a-c35917c9a3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a226c82b-a7b7-439d-9251-0b9460af01de",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f4756f-a9c7-4ed0-a8e2-d77a6fc395c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf654e2-0fbb-4e22-86a3-8c436e3874ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4709f24-750e-4149-a5c5-eb1c4dc1e6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf2bd04-24df-471d-94f9-749a58e42d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a5c449-fb69-433c-a7fe-e3dac5730333",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441b7da9-5569-4273-af4a-03ad7acb242e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83302b5a-707a-4129-9b1f-1f9f4b8ed392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2e2033-d166-4cb4-8e47-3e86a8a2f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9538393-1628-4d2c-aec7-bc747e3f0c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c6c174-f2e5-4f33-9514-6beea2caef3f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1a7d6b-e604-42f8-8d57-d2b32718b437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbf8599-d19a-42dd-b133-6fd8b269d1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daca2e9-37e3-4018-8b6f-51b2b50ce3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c79c91a-6d8d-44e9-8997-81b5ea62fd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c2cad2-c49f-497f-8af3-cbb9d6f2e610",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baa5e49-d5d1-44f2-a034-2ef4374eae19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a682f10e-7608-4550-9c1a-2150a85e2bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cda5e0-7e72-45fe-b572-7786f704b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f5875b-d491-4e09-852a-532f71f986bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d12628-6c34-4a5d-9831-fea374961c26",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c5e27c-dfb0-464a-a654-e58d98906385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0936279a-964f-4954-858a-22f4ee72ea58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8d9c80-23e8-49a1-a690-b08b5594282a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf11a00-36f9-4462-b939-e5979b7cfc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767e7748-0ce3-4191-b8cf-75be31bf8031",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead40b8f-19ed-4fd5-a9eb-c71fa6336b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a302b6b3-90bf-46f8-b61a-4cfc94cb49fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b108e24b-daf6-430e-95c6-26801663476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa7e445-5188-4d23-9ae5-bd67afeb4bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0936df-8d27-4030-af58-81e7db629cba",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7910601c-1017-4de5-9716-c3ca6defbff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a62d18-60e5-4b51-8c12-a4df6d2385e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e152bc66-537d-4b36-9a54-65ad8ea61164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "196dd91b-4569-461b-a4cd-ade3aed81611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4132ad-5f40-4537-9325-48b10677b0d8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c079a68-8ba1-4f1e-9935-8742c011c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d596945a-cf45-4bdb-91f7-0c14cd887eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540255d6-5ecd-49d3-8494-8c0c18e44b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46d1e76-d302-4746-bbcd-7de440795511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa42a6e-ec06-4b48-a5d6-b231ddc03278",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee252fa4-54a2-4cee-bb85-583a13394777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0553cc8-a520-4e8a-9f0e-fa3f223308bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5ae8de-a1e9-4be4-bf3a-ec7fb53322be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67d87a0-65f0-4a8a-8b16-08bad28f6b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074b14c2-44ab-4935-9a1f-c36804b9dc07",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c59f700-920e-4a73-bd7d-c96f27c2dfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cae7c5-c509-426c-bbca-b7fb7923ed8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3e1729-d44a-4d4d-806b-96cbc36dc291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4a9162-1fc2-4109-a9f4-648f292de01b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d6d477d-6402-4836-9f91-d4d0eff830f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25e02fb2-50f0-4b8d-883f-a909bedc6ddc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690ba902-b9e5-4ab5-88d0-656b3683a40b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b57e6b-fe04-4bbb-887e-969ae7363bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffeb09f-0b4c-453f-b89e-0f186dc21a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "391a2dc2-9b1d-4060-b70b-f609ec63bbe2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "276b4786-1127-4463-a9ec-8fe8bf8f7fe8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac863dcf-a9ee-42ab-97e3-cb01666ca7d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a16e8696-d6d6-423d-ba87-274c2f686dc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bf64892-c3f1-4ba3-994a-057c0b43df54"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f929f11-9c12-41b8-8fb8-ebefa8753e7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f6ec8aed-0a62-4e58-95bf-9951c2ad3b05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "416040ed-0420-48f9-bddd-4be2890fff11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b024403e-d90d-411e-aae1-dd27c23f3567"
            }
          }
        ]
      },
      {
        "id": "b4b41255-8e43-4174-ab09-e1b87c52c8b8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cc1a9451-85e0-4b71-94b9-9da991d07f6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b37930b9-3266-4a96-9c3b-d763b448843e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e6f9e0d-0824-4d85-bac5-8e9661dddea4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffff9bc-da2f-45c1-929c-8f917ce87184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025af470-1d95-46a2-a434-3061a9042ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15586702-b526-40d0-8e3c-6821e7b67b5f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2570c5ee-6016-4d03-9832-3a00926a00a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e17519-1398-4827-89a6-da643346f700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f57ed0-ac4b-4469-ac08-3cf059fcbc57",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7d26ec-3164-430c-9da0-bf430550ebe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cf757d-b18d-4273-bec3-16016690e9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7b4f0b-f5f2-45a2-8b7b-4e468380690b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bdde3e-3bdd-4a3a-ab59-61026000c9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a6ad20-e790-4a07-a7be-55ed281e60d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddb7353-2d9e-4f7a-9c72-6c77cd5532f2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82476dbd-28cf-46d0-bb69-1dd847227d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b7c5a6-33ca-475c-a0c6-f4e984b21dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83b9cdd-cc38-4760-9fbd-6a6346c370d9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c4f464-6fb9-4099-9186-fa59d57511da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1203f588-c951-442f-bbb1-571261c940e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91211824-6fbd-43b9-b013-25d66d6ffefc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df76de2-ead8-4196-9f66-abc89f58040b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac014f40-5267-4dbb-8370-aef89ed0010a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a800cbcf-79d8-4795-8083-95eb66a30de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812e1955-e767-4e2f-b0d7-4e1c84782cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81b4237-7996-4fe0-82f7-899956a47c7f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1daeb4-1b34-439c-b46a-155e194c75f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50fd68e7-d861-4abf-ae98-dd92b7d78438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f990246-fa8f-414e-a82a-fc9cfad7fb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab99eeb-384f-4bc6-abfb-0005bd752410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61b3420-6640-41b0-92ef-31311891b2e8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7022ad-fcbe-44ca-bc1a-b3341fa64af4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25514fc1-c589-4ad2-81cd-145eecd451f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618bfaee-1299-4665-8c67-9845adf0cf40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf09b87-b1ca-40c4-ba8b-6fe34d42fc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11989ea4-ddba-4b26-8bdb-6ec0bd99ed95",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283df9b5-0645-4fff-b4bd-0c5f7aceec34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "483c5f2d-8122-4aa9-83f4-a8f2ded2d81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187a059e-812b-48bf-a1bc-46286d01bf66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5768ece9-38a7-4d50-ab5c-de61e3eeb2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717451fe-bf13-4cab-b398-ec6193fb0f9a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9356c7e-1bfc-4ebe-a0f3-4f81a8b080a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6fcb22-3772-4cbc-bc75-c7a87d96a22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f668b1f-1f78-4083-8f5f-359106069749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44974ef7-1a4b-48f2-874f-e11f5d314fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a1805f-9a24-4b15-b58d-d4203b1cfde0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeabc0f1-6e6d-4bcf-971d-00a3560618a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9178268-0749-4fa7-8d40-d01c8f4dc488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33e8245-4bc9-40cd-b08f-f7799f6f0e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf225d66-d537-41e5-885d-663e263b482b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976e575c-ee4a-45fa-b258-4f5850eb583a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef465148-0a77-4ef9-9ef6-3b34cb40b2ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e760920-a2d0-44e5-b58a-33f31fde8770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adda1f26-5f4e-4a47-b303-28ce8e64fe4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d100fe-4176-415d-bf42-9bf315be120d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61751a16-bd1c-4d67-934d-683d82e0f663",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffef4341-a443-4dca-b37f-471f54b060fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebca9249-7f31-4fbb-ab88-b1946ed2220e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b960351-63a5-4d62-aa83-cd151e2c180d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ba23da-194a-479f-8654-31a92ec635f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d5b062-b4f1-40f7-a1f7-799bf455e69f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cfe9c8-4caf-4290-acbf-85fed336a501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98005fe6-3054-45d4-8228-be3de746d314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4e9ddc-0591-448b-ac82-44509b9f43b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a205d695-bd1b-4abc-84a0-f685d65591d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c030c622-37ce-47f9-becd-2e032200371b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5e6a28-d329-405a-9aad-2ccb4dd8993a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400c92b3-1220-4e06-a566-b01f59662102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e01ad80-e5a2-41d6-baf3-0eb4f9d8cc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b81885d-debf-478a-b7c7-eb8c2310c1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1515eb-8dc1-40e4-bb31-30cb4819805e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b465f4-a15e-4ae4-b306-fca5a5e52295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc89c9fa-4e20-493b-b634-f8f815dfa998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f8f6d8-1010-4545-9f4e-f8e12e81b4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804a8969-c7cd-42a2-b148-696bbc81fb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ebe6b0-f1d4-4b8c-b4cb-b1ad83a4c075",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5b765c-846e-4c73-9968-d8a21bf23fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd3e1fb-4a10-4bfd-8917-949f2d24bcb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81801cb-d482-401c-9d85-1ea69c36abf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d777d54-e788-4387-b325-ba781981648f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0aedea-4c9d-43ce-a912-6fe55fe88976",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c66cdeb-c0eb-4718-8fdf-ac2efb31e056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb5439b-3c07-4179-9d91-1e10d77fdc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34794d6-95d3-4498-99ad-5936eba85668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec10baf-14e2-40bf-a99f-229268a8aedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4808ab-59cf-4c0c-8b74-fc6b478669e5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b2d4ad-f28c-4232-a89a-b8519ca9df93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde05f84-3141-448d-9ed4-c46ca188b5ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91369b91-89cb-4148-ba5b-68bef13a3211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ceee239-146d-4090-853e-5b22315d3172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7592c7fb-15e5-491c-867f-0d445aa9dc3c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a1358d-f837-4047-a24d-ef6caa590b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e8f1bf-0863-48ce-89fd-11473504634b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35227843-aa11-4965-b4c4-d2b2bbd06e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba167ff-2c8d-4d45-aa4e-6912bbdba48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7be1c6d-e426-403f-b60d-7ac6a7f1af51",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d39625f-4bc5-4831-b642-0dfce8374ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb66365-6c63-4ad8-838d-85fea8acb79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9315f541-3ba4-432c-9676-8c973fe9d15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70659b56-6d6f-4a69-b450-ecd5f0bcc273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cf3757-0d04-4acb-92d1-dc1f30e66143",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f523fb-36c5-4eee-a1d9-61b462778769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d56c13-afff-4892-95ba-d68e7db384b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21b8c13-6eab-4f96-b4cc-fd152cd4a2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8490a7-a254-43e9-9d65-de630a52aa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e074e2b-51b6-4f3d-b052-4e842ada3554",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75ec34e-2498-4f4a-9561-01f77f764c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391d7d25-cf8a-437a-90bf-7983df87cbd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd5caeb-e489-4cb5-a554-9402fc29d188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0450a79-aee1-482f-8eab-ad1e18ae501e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48736b4c-283f-49fb-8c5f-570c9c07455e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bb72ff-6f32-4e14-b9a5-8579ed008451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "576c463e-2978-48ae-b81d-9d73812888c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de46d719-52ee-4020-8549-dbdd3ca32609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27761857-4c7e-4b9e-b163-d7b558a70151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8f18f3-833d-44dc-91e8-4be749fdde36",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b499db-1907-414d-ab60-e3fafa9c40fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e05fe5-c17b-485d-91c3-93487801833d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e9039d-9e9b-4f3e-9630-01c9d2f85d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1744485-b232-4073-8f8f-4c279e18593e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ba571e-6d2b-408a-b01f-8a058b841b4a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb389fb-5f25-4473-9d22-ff456e400f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab5cbb4-57b6-420c-84e0-b6e0a26db498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a4177a-3bbe-4e0f-b733-813718339f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab50f706-7696-4353-8beb-a7fa21c28a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b7e03e-298b-464c-9912-9303cb96c599",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8abae7-782a-4012-9137-23095eb36237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1624d4f6-0a82-4e5d-8a76-5220085eb05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d97744a-8d1e-4d15-985e-7d42fd19cda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fbfc0d-c273-4a15-bc2a-583a3c42a32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e87c1d-96c5-4e44-a91c-aaa187d41556",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a61cc0-f80f-4d82-9f06-b309c4aeee3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aacb2ca5-0460-4e44-9775-a347840d2fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb4870d-330e-4729-81f4-49173b406066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e46ead4-8d09-42b7-8bb7-47f6a1101ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329d552a-b73c-4211-bc46-847ea60efa92",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca4fae-a435-4a25-a90c-a1470996eed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b57c265f-f83c-44c9-8512-d5785af5a6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284ab89c-bf6e-4671-afa4-ab7a12aa68bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d738322b-444d-474f-8f96-05415d7b1fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4048474e-b02b-4a04-a1e8-a8f141ee3b4d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5e911a-429b-43ab-b139-560f5ab2c029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913bde5a-6c2e-4655-8b1e-904d92b1b278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567f572a-c05e-4342-97b2-81636238284b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa51bbf-babd-4952-9d8c-2111aa637b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e87c1cb-140f-46b4-b00c-ce3c499be415",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d01c0d4-c099-4eae-b73d-1e44ee48b6d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a417456-e685-40b1-9394-b7969969e8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dd1ac0-8696-41c4-8bb4-812ad9e0e8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955009ad-d872-49e2-91b0-43a859ff37da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95af2139-ef95-49be-9542-605d7d7b374b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d60cb8-6d70-4975-b3c9-e4e76a701923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24958057-da28-4b89-8e30-03d56c019ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5058db-9888-4c22-911e-2b21996907af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c2383a-97c6-444e-a3e3-4a7706609aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21afe95-bd7b-4407-b163-87121a30a2dc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91993b51-be12-4c68-8ca9-0498bb0b75de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23cc3804-dbde-4e7b-bae4-75cda137d582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2062ee6-b79d-458d-862e-7f6ebf8583b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bfb7be-ce6f-4c76-b636-b60eb3560a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b7e069-6583-4023-aafc-af8a94623d97",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1959078-3b71-4899-9764-8cab0722bfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48281228-e698-4af1-9ede-422710a70397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6150ac0-27bf-44da-babc-67afb3ef5ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d478c844-a5c7-4453-8b13-6b3e8af53b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f3c402-b4dc-4a84-a321-7cc074b10c63",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1863b3-c549-449a-991c-b1aaa6958dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60fb233-6573-4727-bc7b-b82be7ea6149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4a7af7-236c-4aaa-a25e-6906b9aea8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2e59b5-afbf-4517-b0ae-98b0fa9e6bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648d79b0-b68e-43be-88c8-611b71ccb17c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71e416b-7f28-4fe1-be02-a72ce2f2046a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07be70f-624a-47e0-99b2-3faa2523a97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c1ee74-490d-443b-9370-2bf43a1e540a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6020692c-a916-4a91-a8ca-317b9c5640ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3514594-d2c7-4c7e-b2f9-64bcf0bb5cff",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cf5f25-0b9d-4f22-94cb-19cceb9d85f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a20b98-6faf-4b25-bc28-fa4798c5f506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b033d7fc-86c8-4b35-b227-2e6d2ffbf539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80b1cc2-cf93-4bee-88be-adc0a5ea367c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bda660-9966-455b-8c4e-d22410b9a25a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4494d363-3b60-4165-aa1c-f56c75789f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3942a4-6579-4396-bb44-0b0afebf4bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797eca28-86bc-487d-94e3-3573c1ea4623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a7b2e5-7421-47a9-a55e-f9abeea9253d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f422580c-1e18-48c2-bf8c-605997b5fe31",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee9cda3-2244-4b3d-9f97-a42bf3a2ef65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed7874f-e3b8-4be7-bdb9-9327734ee3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a89122-4c42-489e-b2db-e490ddac5a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84adf4de-2e4a-40f9-baf5-68a618510260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a4872b-75a7-4b44-9747-8ae9643d66f2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbdc548-381b-4b68-bdb3-ec664aa1959e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c14b5d2-68c4-494c-992b-566e86d491e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c04c42-8d6f-437c-be04-2aeae4fbd9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed09f08e-554c-40c9-8f36-bfd136b2557a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3996167d-536e-4036-bdfd-64854c1b35a8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a872bb-e66e-41d2-9d31-89231d7407e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0947bb77-9bec-4bd7-bb14-8e1e300615d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834164a4-03ec-44de-87c9-eccf09a1ad86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845ca0b0-e785-4aae-98d7-16cb001b5f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46a5577-305f-47e4-826b-521acade30c1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186cfa9b-256d-4023-84c0-91d505e359a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa367437-2568-47f5-b0bf-433e88cbe831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a5f865-c539-46dd-b071-ab89e8589fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216caf2a-807c-4c30-8890-69ee3a30b878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e060dc-42b9-439b-b3b1-dda4aefdfc6d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f096b943-f850-4cb3-9a91-ef42261cd6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b08a49-d809-4b3a-b55b-1ee8456d621e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd445e8e-f2ab-41f9-b021-aa95503b120f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bee64e3-6c2b-4fbe-893a-4f51b0eda3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ec32c3-3112-4717-a63c-4f51b218d926",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979fa773-471c-4e08-aee5-684bf440ee25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9433f7-0983-44a3-bba8-7e538b38a70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cecf77-2209-4475-94ce-53e16da6bc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11330b0-415b-408e-a13c-1f89931861c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae96b19b-d739-46c5-87c9-a8c1b3c87b02",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65494d60-ccf6-406e-8e27-78bdea8351d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d48d95d-9cf0-4f83-b92a-7f628c790400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16a08a7-e92c-4892-a907-744f2587e99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fe0dd7-d025-4552-8b4d-4bfdd65664b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f743eec7-2617-4fe4-980a-89c5211e05a6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4dfc61-c945-484c-84db-fa0bb6a4fb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65b726c-1dfd-48f6-957a-f7c9d000d506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9e4d54-beba-4c77-93d2-88ed20633aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2495a0-0052-43b2-ab68-eb9673ecf65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9316822a-0900-4471-8d89-7c3c08ce56e8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af85bbd-97cc-4668-9148-86c29ecc5c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d8affb-bf2e-4200-8d16-8db4d2603b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55ee7ca-2f22-40ae-b25c-b2636f15f744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbfa737-5df4-4eb3-a681-8999f7af4c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ec1461-d107-40b9-a88b-cea6b717b289",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29cb5ef-e9bb-4d61-92fe-664faa03bde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c44c16-2ba8-476e-a50c-6d62cd38269e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b745b13-e4ec-41eb-bacc-15e9bd07c082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd618a56-c632-41ec-ae1d-36d26fc62e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b82cb24-8e21-49d2-a057-5cb6946c2045",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4eb4ea-9ca8-4c59-9ba4-12242e671c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7757e6c3-773d-4638-a0c6-de221ef726ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b600e67-00ce-4703-9146-0b21a4613a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba909b34-fb04-43d0-a02a-be5c491616df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f0071b-0cb7-4f94-9859-99cd64b3b4da",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5821cb96-e7f8-4d54-ab76-de5dab353a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f2dd8f-b233-4d65-bba0-6da3f1e87a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf865192-25fc-494d-819f-fbe4a3031566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "decee2e6-57d0-4eed-a940-91711775d7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcd19a6-fbb4-4922-9ef8-0f36ad66e351",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a987c3-0617-4a36-afac-67f7a16dd558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602e98e7-21be-4672-b70c-dbb26b03e68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0c892c-b5a7-4742-956e-4dc053b05612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f2b486-1950-40c4-8196-5dc45119625e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737921b8-e8d6-48b4-bdb6-282c373a8421",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da66acf-3db3-4b20-a5f1-f50d837e38e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a00bee-207a-4640-981a-184abc32873b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30598f82-0d4c-423d-a427-e97ce14117f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4bd4d4-6c76-493f-95f9-c10bf40548aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c6c00f-c703-40e5-a313-26de6931d3af",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464d805c-5f7f-413f-a43b-8bcfa0790ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86f751e-ae45-4804-94e3-d986b847ffc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a2f9a2-5d30-4b6a-810a-9b4df20ee684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda78289-3e18-478c-b734-2c7adba98fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e96a642-4168-43cf-8a2d-6599eb1b38bb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6b3143-b9f1-47ae-9f23-b07444fcbecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950cff83-177a-43cf-ab64-91d4d00d793a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63493f6e-efad-45de-8c21-673dcf1f19c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91da7f9-4c76-4ed0-a036-687773910a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d77007b-1bc8-421d-8e5d-648bede8d903",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487737e0-dcdc-46b7-aa0a-0b52d4f06789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884e5dc3-89a8-4d1a-9b3d-cba86bdb129c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c8ef37-554b-45f1-87af-d1b66ebff260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca34e333-2c9e-4b15-9575-f4afce6c086b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4967c92-d6b9-4355-8d3b-4afe86977965",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dce7393-b183-4200-8150-51cd4357dadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785389ba-2436-40db-9caa-76bb8406295b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fa2f47-06df-4927-b505-383da5d36e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7eaf5c-cdf6-49a0-845f-c2f2e28650ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3285947-067c-440f-a49a-b4a4c8b260b1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67357119-ab4b-4d04-8f67-4919858bc5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e5d6e6-20ed-4544-b59b-da2d773cc10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a09eb66-025d-4711-9385-02c46ab31ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5357959b-30bb-45c1-92f2-a209f9af8905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ab4db1-5dd7-40f1-9477-4465686f5f96",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b10f6c-78e6-4677-8412-b5cd01d9f811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0775c4-553a-4ea0-b6cb-72a7e17848f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4295dd-abe7-484c-a670-e35da8a0e2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572a0f69-5717-465b-86f4-0de6f283e1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9421efa5-e9ee-47f3-b846-ca4268ef057c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765980e8-6682-4922-a09e-036940c297da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57be3c4d-3857-44f8-abf3-cf0ecd8d1b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58af51a-0a86-4932-b4c4-68a4dbd368d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa9d9a3-82ad-433e-997e-b0a8bf5e40b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005b2d9a-461b-4d45-98f7-ecfebd16fe9a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7048a791-4842-4408-8725-264344b3884d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5533eae5-4f65-4b82-a208-980d7246f432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018e19e7-bb43-4ea6-a147-d49261d1720f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef9b3b6-6cc7-4af1-8555-d977be6bab28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d364784-367d-4f48-80c7-30a0b002c73b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21b8ff1-4a11-4edf-9db2-f80118461838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d1877b-0406-4ecf-8666-70f492e3f266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b2d785-6f59-4d51-801a-0a186468e5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2853fa90-8a7c-4e24-8714-90b22c39f69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6aa1ba8-39bf-44d6-9664-90d60b565cbc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa37f80-0e73-434a-8853-0bac4a749c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13541f6c-6734-48b9-bb28-237ea85580cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3adddef-1ad5-4e61-a6a8-715b45dc3598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb3a60c-f9f4-4fe5-8aec-1df809be255f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b662db-38ed-4fc2-8500-fa4e56bdc1ca",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91b9c6b-c99d-436b-916a-acda9d4af2a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e15355c-0320-4fd3-b236-4af582e1791c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f664bb05-0eb2-4667-b586-92f12260dcc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b9cc41-5cb4-4c7e-a548-b75f43e502b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c7b3e5-d977-4324-86a2-31336e74ce2b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ee7d62-027c-4f3a-9ef6-ffad87f5b980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1dafd9c-9e1d-441c-94dc-722fa5aefc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884a3914-0b80-407c-bd1a-d144bc922837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068ad02d-aa57-4774-9bf3-e49049c0b630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766c592b-70fd-43ff-b305-9420a1c41a79",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4df16d-dd33-48be-b381-4979b45cbca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3817f673-24d2-40ea-9b6f-7101aa1894c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da630e37-a5cb-4cc6-9fb2-5fc3b9e54e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d920ee07-e2dd-48a6-a6c4-d8715bee829a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960b55b1-597f-4edf-ac1e-03c9cb9e494c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fe46f5-d635-4c9d-8b78-8b92389daeb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53bf8e09-6a78-4653-8a87-33d39d2b1a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6187f4c5-9c8e-4a7d-8d13-4d9059f0b42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3b3d0e-1e20-490a-a2fe-7ef712f0b7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2f4b00-97da-441d-8ac9-e943f1d9b2a2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b0f135-a33b-47f6-8ace-e67c48a0a379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "010a79ae-0715-4d06-9104-85e552965542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54979bb5-adbe-4583-af24-e5d8d0922c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4a2a40-44be-4ef6-9849-049e9dc413c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08909e51-e1cf-4609-b515-c791c5341867",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696f9404-c548-4940-9410-1f368d39ca3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e3150f-abea-4fb2-9702-868a807692f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4995a1-69e4-422e-8576-2042507bdffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca7cc21-5175-4dc8-b600-b889aaa80f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a038b94c-7d9a-4a0e-a7f2-f8fc339684bc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757adb74-e3c5-49a6-8812-f9a556b7c10b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "884c9774-7c9d-4001-954a-414a104d91dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2299ff-691a-48bf-9aeb-86d82c5add43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b743a6e-3f4d-4898-a92e-ef264fafcb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb8ffc0-ce28-4348-949d-e87b1f958bdf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddc9d9d-ed30-4d64-a43a-a6d2ac2a586b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507121c7-e3ff-4965-8159-e727ff6a4f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ebbb4c-e163-4d44-8f91-e55b4a49f461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bbef55-d92e-4429-9674-8117add793fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcce8ba-56b9-4700-8f19-fbd23c8998da",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbd1f23-880f-4539-bc53-c8957c426378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698bfe44-5720-4f3d-a2ab-7356a34c2415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc96159-d884-4d36-98a7-bcdff6508eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b200b47a-af38-4727-bed3-f59d7929fe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279de5f0-299a-4e3c-b2bb-b8900eca6ae8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4724ba32-1ca6-44ac-b6e2-bb57f0585731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5437bcca-f4ea-4308-9149-684ea5b1a382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beacef56-5d39-474f-b7a0-aa3a1205cc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdf5972-0c43-44b6-93a8-b8d48282ba6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27406cb4-5e82-4b15-b21c-4691924a3d1e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf0b7ab-59e8-4132-887c-b5d2666a385a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc45c2b-7547-4021-85cd-bc732c46c5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82d221e-ce43-4f7c-9fb9-df87a1029c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36492d4-1187-4401-b520-5bfe15928162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284b923f-09c3-440b-a444-7e4def0b041e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a7a6a7-4bda-434c-bc24-29d4b31ccc70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "577677d1-62b0-49ad-8a5d-c80f0d563439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2d3322-7f5b-4073-95e5-780a592d623a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa19468d-915f-412d-9b0a-829ab77922df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8123fb7d-47b0-4315-846d-6ebd0e43a7a1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adaf95f-fb0b-44f6-9e96-f50b28a18858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5676c79f-f7b8-4075-a5ab-567f7d753d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c71a804-df01-4492-9c99-fc7fd3e90109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bdf5ed-15b3-43e6-ae32-e7aa8f0acf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a8560f-1455-4e53-af3c-f74ceb196ada",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c1b819-c444-48e9-850c-7c04a1d7f819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f9c3ed-3fba-4cd5-80fc-1a7d96bb3e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f33978-483a-45e9-9cd3-6439beab43bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28104eb-dd18-49eb-ae09-658e0a2cf707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d42399-8888-46b4-a044-52bd56a6a5f9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779091eb-202d-469e-8327-2d314fff1cfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791e3af4-f4cf-4624-81b3-c30509b4fe7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac593d28-2a7b-4e7a-b1a4-0bda3f683e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acf21b0-b566-45f8-8599-c3382b3ec6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0153f93d-11d7-4d5e-8f10-d2a9d562ed66",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8f4d4c-65c5-46f6-a2e8-42e4d61368b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548b33ab-f892-463d-9d9c-085972ebbbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0ad5fa-e7f9-47ba-9a64-584d98ca8743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1837f6ba-1c5d-4e6d-8fc8-92634cbee677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0b3a89-8d63-45eb-8ca1-b4d31f9d9292",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611a5722-e8a7-44bc-ac6c-9a8ee5b714b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d0e1b99-0063-455f-be88-b58382bd3a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4fefb6-bee3-41fc-812a-d992586c5a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a55eb32-7893-4802-89d1-b4abd7cce1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2106424-13b7-4032-9b4c-700cc6363ce1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be036273-25bc-465b-b327-319cf974c72c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b264d57-5b50-4a1c-8cee-3b9c2e63531c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0cd4a8-d4fb-402a-b3df-5a2411723a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8328c72-35b2-4d88-9d43-00f7cf5d3287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aa9aa2-9b32-4ab3-9496-fdfe4a9ea8e5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6340d991-96c1-4ec6-b609-f3ec31a26ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df69e26-12d0-4a57-877d-626b88e4b47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1446ec9e-f764-4ec5-8d55-1f4b58a62f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7048be1b-a060-4006-baae-de7fb7897964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf1930c-12d0-49a8-97cc-6218757ebac0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3759fee0-9630-46a2-9c41-de5750ef0163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cd617eb-b543-4b14-8096-9b2efe6617d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e605df-1ef7-4a4f-95ed-d0e6a5e42dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f8c945-1e0d-4564-8ada-ddcbabe447fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e47ddb-fa90-49b4-9123-7d09419482b9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e4c271-52e7-41ed-9050-fca9f4940ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a73f6f6-d202-4995-8b6c-ae1fa435354a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f5db21-55c6-4d07-b416-683017f5ded5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81bb197-48bf-4a95-aef0-2c539daae954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76664dbd-c28d-4eb6-b193-c0aed75d7a8f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11041f81-24d0-4b70-b263-a60bbd942a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77cefa07-0955-47ed-98d5-90bc8758b00a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a13463f-482a-4a08-9d0e-403770fb95c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebed6e2f-db31-4e66-8fc0-032b61eff989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c997a8b1-d6b6-4e9e-af97-7fbe1431aa89",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7e0b50-1a84-4916-bb74-1570230d38a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe32296-6dc8-418c-b6af-a484f400eaf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3479bdd-b572-4162-93b4-041248e6ca8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12b6bef-3263-4cb3-9942-bbe66470bdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3065d10f-58f5-4027-900e-ed4b1f6ac40b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa6b384-dba1-4bc7-83e9-053939823269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88930a3f-38e9-4b0a-9928-fe526f1a87b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08b3769-edfb-4249-92c7-05094f8910aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524f6bbc-c717-47bd-95a3-81a35f13e852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e8dfd9-3220-41c3-b4de-f04cc5013135",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b635ad35-1942-4a79-bfdb-af8ffd6f8bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56cd66ab-40fd-460c-ace0-b792c33ef8e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c143a5cf-c1b2-4bae-b7a0-576ac228f016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865c5f28-a3d0-49cf-aa56-5effa6be02fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c085bd3-016e-4ef7-b6cf-664e06653c7c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0770d57-14fe-4219-82d0-12bbeecbb511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52833673-681d-4309-b351-bb8ceafd6664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddaf7cb-4c60-4201-9dad-e2ecfa812909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1322f825-7e09-4850-8a85-8175bd9ffdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba7de7e-c715-490a-be35-2b06754aa6c3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c3d509-6b23-4b80-9ea5-bc56d4fb259f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc94321-5820-4f74-bc96-3617cb779328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdab58d-319d-4883-add8-c36da7d82cc5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88687c99-9f4f-427a-9e79-d3151a3d7ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7130d01b-ecc7-4881-b2f4-3cdc3e4ca550",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2ae328-3d50-453d-b0a5-f3928ac41d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d28f8417-58bb-4392-9edd-c86043c0356a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86684464-ba8c-4649-8022-a2ea786e9954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac4a19c-e9e0-403c-b62b-015fb33a3194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1053c1ba-fdb5-40d6-8a2a-1a86557ea4ad",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9e9b52-f142-4d5e-bb92-6d3e0373c827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea9e1a0-0bc4-4f59-9408-f8c07cdd676e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9000ce8-029c-486e-8d8b-5d876ecb10e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ba64cc-7f0b-45d9-a430-34c24f078fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b883d76-5b03-4213-b752-85f0bfedde89",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808ad261-30ed-497d-a241-0e050af7d84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d979d0-237f-48f7-974c-17c8cc36392a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6a38a0-3545-42f3-8079-69967fbc5de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c69edd-307a-421a-8106-e6949b358c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c727e53-b72a-4b5c-9083-babd9c45a37a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429351c7-9f22-4816-8c16-c79ea2529fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41bd7086-1093-43d9-91a2-47ce251b4e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a997b80-c58f-4725-b02c-dec0a36cbfb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093d7951-7ba5-455b-a390-1805a42ab86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02974c6a-357a-4290-9454-f0a37f712af4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2421501-b314-4f68-ab73-20e92b40a926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e8cc8d3-1932-42f4-9853-44c96bee65e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc147ab8-8f0c-406a-a5e9-03f07c360475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e393a88d-9a88-450a-a120-102715b69314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ea7725-2263-46e0-8ed5-fbc4b2a3c7e2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2b6e61-a238-479e-8846-ad8c97fad454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3390b306-9958-4296-8fe1-5d6ae34feeee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd29a5d3-1d54-4b83-8c5b-8c1ff073510a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eee7ff6-6d30-4f03-9385-2e24d56e8b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746ec361-adaf-445d-ad33-61ce9373b8df",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68af290-2da6-49bd-b499-3b159ab8c6a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de58169a-8108-48ab-aaf1-56e9e742d821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70060b19-fa63-46ea-99d5-0f7c59f42a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd41764-bed3-40fa-bd2e-6473504b6d9b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b48f981c-d09c-4008-bb91-1e40fe5ff10b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7319d942-d287-48c2-8739-be62e56f52db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66bb30c5-5a13-4032-b71a-ad6ebdd663bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f4eb699-0127-42e4-b83a-5a73b34899f2"
                    }
                  }
                ]
              },
              {
                "id": "70b95c0c-92b3-4809-b826-fe8386d69f1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "020aa709-2b80-41e5-99d4-1cbf34f9af19",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae17dd6-0303-499f-8ed7-68f2e5cee33d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fbfc6226-af71-469b-ae85-1c2e643f5caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab33a1fc-af14-4534-9357-3eddc3839f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f45160bc-0d0f-496f-afa8-a9dd83c5ab76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d66f6656-4aeb-4912-8995-d7bbea126566",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35c072eb-953b-465d-aac2-a5cf3aa0e1e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41e6bea3-b866-453c-9dba-7b3829449a2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0340f8bb-0259-44e8-a1f4-2e6f426a2637"
                    }
                  }
                ]
              },
              {
                "id": "6b7e7e3e-48d6-4306-82e2-b350021af639",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "31f89210-1bf0-4cc4-961f-40f91eb79a30",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d214f76f-fa8a-417d-92a8-dab58b824930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b9744476-ad1b-4773-a8b3-83484ccef3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c34e9d0-354b-4cee-ae27-441148335869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9006ae7-64fd-49f5-871c-a6568de7a0e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1eb7d60e-255c-4834-818f-2a4443de8c32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc29cc7d-53ba-4732-92b6-12aa54fbb67e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2086fafc-6865-45f8-b544-0505d9d1c80a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8e00cdd4-5c2a-471d-992d-436858ce4fd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ec6a688-e211-4386-8827-226bcf9ccef9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed2ca2c6-47d2-4e28-a305-9e7190ac37a1"
                    }
                  }
                ]
              },
              {
                "id": "bbb44903-9f9d-44e6-9c0a-3d49967af2f1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01b1c941-6ae2-4231-a09c-60b441ab82da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd979c34-638c-4969-9e93-f14a582a8d1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fcb6d63-8d31-486d-9b32-30daf10bf3e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e076603-1bd4-493e-823a-52ca12b01e29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e4eb64e-f2d4-46b3-9d99-ee5e016b2a51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6e7aa3bf-bbd8-4ea6-bfcf-0acf8ce195e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b290879-8880-4256-b8f3-ea848085b03a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7733b2db-8bb2-4995-b9bb-357adaf3607a"
            }
          }
        ]
      },
      {
        "id": "0e8f9fda-675d-40f3-8d09-206369ccd5bf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "77d5cadf-fbaa-4d03-b11a-bf5202fc4acf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09c824fd-cc87-4b9a-bcae-9582ac5b86c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12ab560d-4ca4-4271-9491-bb50192f71b5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8aabfa-6ba8-4d94-9b3a-af72998638c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a18cd689-edf5-454e-8560-b9acac0c2313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922d2d34-dfb9-47ba-a147-090e6780e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0eb98aa-8021-4b46-bbbc-77bbf4f9de6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa0ad40e-c662-476c-8b50-4945b11b2627",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2cc462d-a0ac-4902-bbde-7660ac668217"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59d619ca-a7cf-40f2-96ea-84386d657f1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f08a117-139b-47bb-b51a-d94eae2e84d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82b8ced9-4335-422d-ba00-07d2b5fed992",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "56603cf5-d4b8-41d7-ba6f-e1bce6a911df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c405ea5-2b1e-450c-8c7f-dc393fcacae6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9377994-8f79-4236-9fc5-3f85f73443f1"
            }
          }
        ]
      },
      {
        "id": "e8bb1988-e307-408f-b323-8eafada9e7f6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7734df01-64a7-4138-a1ca-0e10a52ee450",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6084422b-5b29-4087-a69a-af90e64fb61a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "743bc232-1ba9-41d7-b76f-e500e531f435",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca415127-5a03-4773-9195-76f76daad908",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6824c234-1c55-4fc1-bb06-9afb440fabe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a617d9-e1ce-4526-bd58-952cac3a74c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85e48d8d-cd13-47cd-8425-bb20dc356a26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9321f6d-bcd2-4399-927d-f9b4d20764d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edc6c97a-012d-499a-8cf9-8ecbed81adbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbf2916d-c1f9-436b-9d2e-e2c1ca8e7c04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "692bee5c-7631-4573-9b89-62ebedaeb474"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0ab88bc-7606-4087-a7ed-7493b295ddba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b610a852-58c8-45e2-93e3-21dd4dd422ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "451b3d85-70f6-487e-933f-733f1d5b88e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe0e47c1-5021-4154-ae37-4af994f60f74"
            }
          }
        ]
      },
      {
        "id": "d71b1874-c3ca-4a33-b851-9e20a2a6c68e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "44d46ddf-0904-4b82-90a9-9862c8878516",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09cbaba1-6136-4b08-8a5b-bec62fb96ff0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "954e411a-e0d4-43d8-9a76-8f7657b1ff9f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f737f36b-5a26-4aa1-b2e1-b9b443dbfe79",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a13e3826-f693-42c9-b7e0-e806a8d09fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49687eb6-6bff-4e16-8e74-cf16542eddfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "448ad088-4de0-4e0d-851f-8115552be305"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c963a7c-b286-4b86-a64b-00892204f818",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "090cdfd0-8da2-45e0-8d30-f6cf4ee2768e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bba5825-bb9f-4f58-b10c-d6dc90e4087e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ab83ec1-b584-41a4-8f17-5231b94c9fdf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0789a839-2a66-4a1e-9e26-f235e26c9eb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c1362b5c-1288-48ad-9160-549c26900865"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c8c75e3-e9d4-4e1c-b223-139d188bfd63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b7824d7-d170-4d1c-8068-8b96f156c273"
            }
          }
        ]
      },
      {
        "id": "c8c9ce0c-7783-435a-ad88-58d17a4a5510",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5ab5059-8f9b-403f-96e2-0eaf2a14ff83",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4960914-538c-48aa-9f69-afd374c01403",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1066eeb7-4f67-4f73-a907-69700601d15d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bad72fc-912a-4f9e-8c3a-7992c15a1f9d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c396c809-e14f-4f67-ae75-423fffc3e82f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 143.35317460317466,
      "responseMin": 33,
      "responseMax": 9327,
      "responseSd": 666.9413944871003,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720139905632,
      "completed": 1720139949883
    },
    "executions": [
      {
        "id": "09621863-f742-4380-b2e0-91715405f3c8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "59016724-2760-48e8-bc29-15d0bbbe67c9",
          "httpRequestId": "b29fdb31-7185-4072-940f-ff47c8e97b7f"
        },
        "item": {
          "id": "09621863-f742-4380-b2e0-91715405f3c8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0a1cf33a-e667-4fb8-a2fe-91ea4b5f1299",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 0
        }
      },
      {
        "id": "c7d7a361-799f-4b13-91ae-9e599633960a",
        "cursor": {
          "ref": "8e571194-f71d-4973-99d0-bf63161f390c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ef70d757-f3d7-46f8-966f-c0fc133e627d"
        },
        "item": {
          "id": "c7d7a361-799f-4b13-91ae-9e599633960a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8d942d91-0e74-4e1e-9bf6-e0e19bae7f83",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 0
        }
      },
      {
        "id": "c6d66501-decf-42c5-9c03-f43718f1d7b4",
        "cursor": {
          "ref": "51c6b9b0-4f08-4519-a314-8b21af111871",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4baa3320-dc2c-4b1c-b268-f25a62a143b6"
        },
        "item": {
          "id": "c6d66501-decf-42c5-9c03-f43718f1d7b4",
          "name": "did_json"
        },
        "response": {
          "id": "e9b64e0b-c891-4b36-8a6f-ae7f2df8ac7f",
          "status": "OK",
          "code": 200,
          "responseTime": 351,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76277e5e-78f5-47ea-abd9-21d1e7f3bc1f",
        "cursor": {
          "ref": "9f3f52ca-7198-4bd7-b805-47df55b201cd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f1f57db4-3c7b-4d30-a7fe-225fdeda8bd6"
        },
        "item": {
          "id": "76277e5e-78f5-47ea-abd9-21d1e7f3bc1f",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e5e12f1-0682-4da1-8d0e-28404716f9bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 348,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76277e5e-78f5-47ea-abd9-21d1e7f3bc1f",
        "cursor": {
          "ref": "9f3f52ca-7198-4bd7-b805-47df55b201cd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f1f57db4-3c7b-4d30-a7fe-225fdeda8bd6"
        },
        "item": {
          "id": "76277e5e-78f5-47ea-abd9-21d1e7f3bc1f",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e5e12f1-0682-4da1-8d0e-28404716f9bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 348,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffbc3ba-051a-4311-b621-07abc5ac8cb2",
        "cursor": {
          "ref": "046fefa9-85c9-48d0-888f-8ad64c2727a6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "27cd4747-2e23-4cb2-a8b7-0765fe630f8b"
        },
        "item": {
          "id": "cffbc3ba-051a-4311-b621-07abc5ac8cb2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "71b173f7-c19a-4ba7-80e0-e6b35e343449",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d64bed-4c54-4ce6-99b1-41642d7619b9",
        "cursor": {
          "ref": "8f4bb368-d879-4894-b95a-8767f632a347",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "85351f23-6f4e-4b59-9c48-64f60138e8e3"
        },
        "item": {
          "id": "38d64bed-4c54-4ce6-99b1-41642d7619b9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "146a9d89-e1f5-4938-8a95-2fda6d9df26f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5277cacb-702b-43a1-801a-32ae4fb09814",
        "cursor": {
          "ref": "f4fd2f64-b1f0-4f4d-91af-96727698c67e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4ebdbe99-1684-47c3-bd7e-0f2ae452a36a"
        },
        "item": {
          "id": "5277cacb-702b-43a1-801a-32ae4fb09814",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "06184a61-19a9-4b18-941c-6e6034323c3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88de9d6-0dd1-4124-91b0-80ac43b5860c",
        "cursor": {
          "ref": "218571e7-71a9-42eb-ac24-46a9c294605c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "59456888-b57b-413d-bab7-b8614c16996b"
        },
        "item": {
          "id": "b88de9d6-0dd1-4124-91b0-80ac43b5860c",
          "name": "identifiers"
        },
        "response": {
          "id": "379b2eb2-5cc6-4d61-b4ef-597a9cc0f85a",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5818bd9-8d24-462e-a292-b0e2d68eb465",
        "cursor": {
          "ref": "34c97f3f-925a-484c-a3cf-7c7c5feb5b6c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "66f3d1a2-e3f2-4548-a3b2-80ce5189c608"
        },
        "item": {
          "id": "d5818bd9-8d24-462e-a292-b0e2d68eb465",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3cd2d79c-e150-45bd-92a3-706ec02230f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb34ce9-cf30-41a3-af0b-09f40c2da317",
        "cursor": {
          "ref": "d7c30841-56e6-4870-b33e-7f9b175568ef",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "08554ea7-07f7-48b8-a4aa-2e0316a43c23"
        },
        "item": {
          "id": "efb34ce9-cf30-41a3-af0b-09f40c2da317",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6fd83c89-feb7-4c81-ae33-2b13c7ab1e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a52a29-42a8-4568-b559-3e748de95ac9",
        "cursor": {
          "ref": "f7990f62-34a5-4a20-8b9c-d0b90761f82f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0e69860b-973f-4300-b07a-3eb54a5ee921"
        },
        "item": {
          "id": "52a52a29-42a8-4568-b559-3e748de95ac9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8ce4d0ad-c3ee-4b94-a8ea-ace263e01845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e082f89-7dd5-4074-9581-2187006abccf",
        "cursor": {
          "ref": "5df81b91-908a-4392-bde4-6def08586f61",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ac26cdcf-6f39-4d75-a5bd-09fabfd38485"
        },
        "item": {
          "id": "0e082f89-7dd5-4074-9581-2187006abccf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1a9f2a64-75f5-4674-87d9-68981a1e700c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7361f2f6-3497-40c2-947c-c615fee44f50",
        "cursor": {
          "ref": "9ee5384b-0ba7-45e1-97e7-5e0142af4c6e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "93e620bf-c133-4195-a08f-f8b8d95b61d3"
        },
        "item": {
          "id": "7361f2f6-3497-40c2-947c-c615fee44f50",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f475a453-0d4a-42c4-a79b-e2ddd4ba6206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29059809-ee9c-44ce-9cd3-115a48d9216a",
        "cursor": {
          "ref": "feddec4b-fae8-4500-85c5-dcd96cd0af14",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dcc120de-9b4d-41c8-99ba-d0328d32a180"
        },
        "item": {
          "id": "29059809-ee9c-44ce-9cd3-115a48d9216a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d0bfebfc-fb78-4203-8695-bc1ffd6864be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e95b28-325a-480a-a5de-80712d40ff2b",
        "cursor": {
          "ref": "f6547e58-6f93-4098-b1cf-70fb8ecb62e9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aecbb5fc-e2ca-4259-9d75-f6160fe9b0d6"
        },
        "item": {
          "id": "b8e95b28-325a-480a-a5de-80712d40ff2b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0d5e3fc9-4291-48e6-858d-62bd3bd84386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c7a2db-e9a1-4339-bf25-ca50a4a33ac9",
        "cursor": {
          "ref": "99423f4d-21dd-4a64-8d28-1374ce601543",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7be46eb0-e6e7-4c88-b94d-7d71e8c8c3ce"
        },
        "item": {
          "id": "09c7a2db-e9a1-4339-bf25-ca50a4a33ac9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1c4ec0cf-d27b-4a79-ae49-cad575fdf69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d75e0a-5152-42f6-9284-da4b8132e169",
        "cursor": {
          "ref": "8fa79bae-ff17-490e-b910-cafb351f82c8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9fba07b7-855d-4b95-bfff-e5d23173ab4b"
        },
        "item": {
          "id": "35d75e0a-5152-42f6-9284-da4b8132e169",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "efc17805-79b3-428d-bac9-c5d5a94c62ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0315f8b-4ef0-4440-8bf0-fb81da29ccd7",
        "cursor": {
          "ref": "cd166ed2-430c-4d7a-9c08-9f6aa3898cef",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2476ebd7-5482-4a87-8c6c-7a8bece78bbe"
        },
        "item": {
          "id": "e0315f8b-4ef0-4440-8bf0-fb81da29ccd7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "939db9f6-5117-4bc5-9054-688039fa9768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95744cb-c950-4ce0-b7ba-92de6e70cb64",
        "cursor": {
          "ref": "5a601ad9-69a2-4867-ac7c-d8f9960f8498",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8c74ed13-20a4-4d66-a789-42055fbdb743"
        },
        "item": {
          "id": "a95744cb-c950-4ce0-b7ba-92de6e70cb64",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ff986bdc-effb-4987-b61a-c049516c790e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b928e5-b861-4ace-9d6a-a3746a6c389f",
        "cursor": {
          "ref": "2a754136-be3d-4a69-8705-7f3bfd78537e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8709ce49-6b32-4218-b4f4-0804e4152929"
        },
        "item": {
          "id": "82b928e5-b861-4ace-9d6a-a3746a6c389f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4876b951-3b72-437e-be15-1ce9ce42b43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7df863-3a23-4b24-98b3-d8052cc63da9",
        "cursor": {
          "ref": "b79d8186-b620-43c5-a356-dbad38100a7b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "db9869f6-8d49-47c4-ac95-031a7095d0cd"
        },
        "item": {
          "id": "9b7df863-3a23-4b24-98b3-d8052cc63da9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d028935a-53a3-497e-8510-d99975978e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75b6481-1ddf-4ef4-9f2a-7fc511d118cd",
        "cursor": {
          "ref": "05d0b62b-aecb-45fb-bf9c-cf532037b6bd",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3f892c3d-66b5-41b0-97bb-2db47ff3f51c"
        },
        "item": {
          "id": "c75b6481-1ddf-4ef4-9f2a-7fc511d118cd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0fb0108c-141b-4238-912f-fce2bccc2c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c3289d-74bf-47bd-a7df-5613d97c4224",
        "cursor": {
          "ref": "6266653a-ca86-4417-a304-4ad7458f3d79",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ad806a39-3ca6-4a8d-b1d2-ed90bd6ead06"
        },
        "item": {
          "id": "b8c3289d-74bf-47bd-a7df-5613d97c4224",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "afe29eb1-b188-468b-9be0-b9debef77680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b440ab-8e0e-42f3-a052-d0646fce2166",
        "cursor": {
          "ref": "46561d26-454f-4e65-85d3-a3d4cd87e3cf",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9de396d3-a203-481f-90d2-24d47402b1a7"
        },
        "item": {
          "id": "92b440ab-8e0e-42f3-a052-d0646fce2166",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a038f7eb-d93b-4b4d-a84d-918e755ace24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1423b77-be88-46e4-9a84-838646c2bd77",
        "cursor": {
          "ref": "86289fe2-aa81-4bf9-897c-698b7cba5b70",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "75b8671d-6792-48bc-888b-6eac7a00ded9"
        },
        "item": {
          "id": "a1423b77-be88-46e4-9a84-838646c2bd77",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "86a58314-fd15-4af1-906a-63d885cecdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a560f732-b873-40cf-9fa1-c9ec0346f990",
        "cursor": {
          "ref": "af62f91d-e6ee-4153-bc35-dc6361157c09",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "33972791-7319-4f92-a1a4-dba87f43a4ea"
        },
        "item": {
          "id": "a560f732-b873-40cf-9fa1-c9ec0346f990",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9eb5069e-ee77-45a7-a047-279c9671a7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a733a094-7c62-40c5-b881-ed426edab285",
        "cursor": {
          "ref": "eba7f596-0cd0-4da7-9c32-803e8491015c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "73057078-4c2f-4bda-ba9b-91e48c99dafb"
        },
        "item": {
          "id": "a733a094-7c62-40c5-b881-ed426edab285",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "07113cdc-c350-4b32-84cc-4c8e19369f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7226f05a-51ed-4faa-b575-33eabe922775",
        "cursor": {
          "ref": "3a7680e6-999a-47c0-8035-c078b99b8a5b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0418d3a7-9bc7-483e-98f0-99b580262747"
        },
        "item": {
          "id": "7226f05a-51ed-4faa-b575-33eabe922775",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2d40e9c5-e754-4d45-9112-b7dd7a367b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e3b432-bfae-4a60-96cd-7a0df9454ff0",
        "cursor": {
          "ref": "e7dc8f8b-2421-4a05-ab1b-5633bebf16b8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8c4ff4e9-bee2-4005-9b65-0311236462ec"
        },
        "item": {
          "id": "c0e3b432-bfae-4a60-96cd-7a0df9454ff0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5d5fc19b-9b3e-4cef-b883-59a0ae2697d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60422ee-bd83-4ce2-ade3-3c096241c275",
        "cursor": {
          "ref": "4ea60df7-7256-4dd1-bd07-e9d0e415fb4e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "da30e662-4f9c-4fa1-8384-b838fca44a66"
        },
        "item": {
          "id": "d60422ee-bd83-4ce2-ade3-3c096241c275",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e88ab071-bdad-4f46-b8c1-634cf090c86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84625cc6-1a42-44d1-84df-f8b60e32eed6",
        "cursor": {
          "ref": "24ff43df-4b89-4ada-a8cf-513e4d5da468",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e7539651-618e-490c-88bb-bf21df524fe3"
        },
        "item": {
          "id": "84625cc6-1a42-44d1-84df-f8b60e32eed6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "407462d2-4cfd-4bb7-a155-a680f9ea2871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cc86b1-d51a-4d7a-823b-a6701547a013",
        "cursor": {
          "ref": "79c8b318-92ce-4320-8025-c5ffe2f92721",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3990f60a-9044-4a4a-b2a7-f3ba412fe062"
        },
        "item": {
          "id": "13cc86b1-d51a-4d7a-823b-a6701547a013",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0be5036e-df37-4469-9846-cbdcdd89bea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698a29bb-ccfd-4183-80fd-3fb9d30acd78",
        "cursor": {
          "ref": "d40f819b-676d-4cd8-b612-d8f5d23c70e5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "559a96e9-11cf-4ee1-b1ce-c6be2cc2af0b"
        },
        "item": {
          "id": "698a29bb-ccfd-4183-80fd-3fb9d30acd78",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fff05c5d-e1df-4709-bdfc-b065e1c60d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace93828-c3c7-4bd8-90f6-5ca74a1a56df",
        "cursor": {
          "ref": "e9f3301b-ed87-4a81-9bb6-14232c96afe2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "512622dd-21ce-4f3a-9f7a-abf096143000"
        },
        "item": {
          "id": "ace93828-c3c7-4bd8-90f6-5ca74a1a56df",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5d5b5357-5eeb-4a53-b4b4-680722ee99b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9411b8da-7030-49c3-a510-1ab3d4313501",
        "cursor": {
          "ref": "e93e7e53-d54f-4ede-8558-c8ad81817dbd",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b3699ed8-9cfa-492a-b1d4-e76d4e7d9af4"
        },
        "item": {
          "id": "9411b8da-7030-49c3-a510-1ab3d4313501",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "534a5809-612c-41b1-b221-bc19706fd84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4d1f00-25a1-4070-91a6-b9d4cb1849dc",
        "cursor": {
          "ref": "9bd5cc4b-ffdc-4d47-b674-972d3452b668",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bfe73fe8-34de-400c-bb7e-8b03f17dac32"
        },
        "item": {
          "id": "cd4d1f00-25a1-4070-91a6-b9d4cb1849dc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1fa4447d-ddf0-4f10-a919-14036b5a2dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a253a181-f8c8-4581-859e-cf48929048d8",
        "cursor": {
          "ref": "ef666825-1bc0-4d73-a40d-4bf9f17419d3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6c98976e-a716-4b70-b8b7-34ad52dca6f7"
        },
        "item": {
          "id": "a253a181-f8c8-4581-859e-cf48929048d8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "20521b98-c3ae-4f7b-a3bc-04c90f3465a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa62e6ba-5634-4f80-89ac-616e8c07851f",
        "cursor": {
          "ref": "add28fc6-f4bd-4d48-a5cc-63b5bb66e82b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ebcca86f-499f-4077-a172-51d039b68c48"
        },
        "item": {
          "id": "fa62e6ba-5634-4f80-89ac-616e8c07851f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6aaac9c3-bbbf-470a-9151-547115abdffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1757ebe9-3973-4523-8e47-da77a5312677",
        "cursor": {
          "ref": "62fa112d-e320-4bbc-8273-5bf917c91899",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "38bc99f0-d43c-479d-8ae9-a30bc037daee"
        },
        "item": {
          "id": "1757ebe9-3973-4523-8e47-da77a5312677",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "aa21d748-5ea5-451a-9104-9611f488700e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3563fede-f0f7-444d-b2af-fbf1271cfcb1",
        "cursor": {
          "ref": "e6aeb1bc-996f-4206-9901-54f5093a1f75",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1272aebc-e294-4f8c-9250-9179f2e69e19"
        },
        "item": {
          "id": "3563fede-f0f7-444d-b2af-fbf1271cfcb1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7bb67bb2-74de-498c-8755-d0b107416986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40e7855-b653-425d-941a-0b77f05f6872",
        "cursor": {
          "ref": "db9dcb95-ed3c-4143-bff3-6029bc760d89",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d53ae15f-fecb-487b-82af-7d7cd3cd8f63"
        },
        "item": {
          "id": "b40e7855-b653-425d-941a-0b77f05f6872",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "23dda365-0a9c-4be7-a40a-f65b9935ad27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e805ce5e-d72d-4530-94b8-f7cc48fed342",
        "cursor": {
          "ref": "f1fda354-9c75-4914-a360-eea135711bb3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8bf76d6c-3df7-4869-9642-4627ef812192"
        },
        "item": {
          "id": "e805ce5e-d72d-4530-94b8-f7cc48fed342",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "176fb2ac-f37f-4006-a1f3-15cce3e8ca83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f54dde1-bfa1-4f99-bfd6-9c4c21b7b39c",
        "cursor": {
          "ref": "06e682fd-6a46-4c9c-82bd-78ceb6079dd8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a91725ab-bcc9-4d47-a4bb-90f9459afd36"
        },
        "item": {
          "id": "1f54dde1-bfa1-4f99-bfd6-9c4c21b7b39c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "afffdcd0-8d50-4b99-9082-0da9ea6fa85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81359503-407d-4791-8d35-37e748b65f36",
        "cursor": {
          "ref": "dbd38c1f-abc4-4f13-b354-4e5757cccf8f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c364bf63-fb54-42b3-84dd-cc6f5b63663d"
        },
        "item": {
          "id": "81359503-407d-4791-8d35-37e748b65f36",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "314611bd-5361-4abe-9431-98968219d58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf7e188-b05d-4d10-83c2-ae94709d1212",
        "cursor": {
          "ref": "6c9a767e-bfdb-49f8-8f09-380a4e6f2422",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9df91182-fc23-40d4-be36-71d1b3da2555"
        },
        "item": {
          "id": "aaf7e188-b05d-4d10-83c2-ae94709d1212",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5b9ac5ea-f797-4f96-bcb2-b6402a339af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61374fd8-87df-472c-9fec-9c27760f4c3d",
        "cursor": {
          "ref": "d5fe07f8-e478-4f24-8cc3-197d19113b27",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6102b339-a88a-4d5a-9257-12ebf340f7e9"
        },
        "item": {
          "id": "61374fd8-87df-472c-9fec-9c27760f4c3d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4edd957f-4195-4de0-b34d-1fe8114e3fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5ec1a9-710e-49a6-85b9-30e69fb8409c",
        "cursor": {
          "ref": "704e1118-6fb0-4d04-878c-0019ae857e2d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4081d4e8-1433-47b4-95b8-acc2b43ba0c7"
        },
        "item": {
          "id": "7a5ec1a9-710e-49a6-85b9-30e69fb8409c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b91a33a0-303d-442e-b222-8a9a6cbabc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5514d8f9-70c0-4e51-aa08-c40217e21d30",
        "cursor": {
          "ref": "4a71e76b-47e6-4043-99cb-c8a0c761b31e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "22c7999e-c1db-425f-9130-ead96521d1b5"
        },
        "item": {
          "id": "5514d8f9-70c0-4e51-aa08-c40217e21d30",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "808f3442-c3f9-4349-9028-f0959fccf04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db329be4-7e5b-4571-852b-ddad1c935042",
        "cursor": {
          "ref": "319601a2-82b2-4a77-9820-43d0d55d9428",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "63424ea7-ef4e-4460-82c3-cd97c5fe02e6"
        },
        "item": {
          "id": "db329be4-7e5b-4571-852b-ddad1c935042",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a853c96b-459c-4d19-9fce-e53fefcc7478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e5739d-cdb0-4774-a7fc-cba804cfa2c3",
        "cursor": {
          "ref": "9fa8901f-0f96-4b0b-b4af-2256d4e150c6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dca14d05-1435-43d2-b5d6-787fb28274a8"
        },
        "item": {
          "id": "90e5739d-cdb0-4774-a7fc-cba804cfa2c3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "65871a66-faae-4799-b31f-fed8d568b086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4061de0-9756-4e8a-96fa-d1c8ecf07004",
        "cursor": {
          "ref": "b097cad3-8a2a-40f7-b4a6-e97397f2b3b6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "55da8e93-933d-468d-a862-a53843a26853"
        },
        "item": {
          "id": "c4061de0-9756-4e8a-96fa-d1c8ecf07004",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "520f6bfc-7787-416a-855f-0becbcd5918a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3545ef9-ac43-4542-960b-744ed37cb854",
        "cursor": {
          "ref": "5cd67834-8db2-4b5b-a2be-8059b1215e70",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "09623be6-9070-4247-b33b-2d96171f63f0"
        },
        "item": {
          "id": "d3545ef9-ac43-4542-960b-744ed37cb854",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "281987e4-0320-4bf8-a12d-9154bed725da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2ed368-b12f-4a13-8f5d-b83596085413",
        "cursor": {
          "ref": "71dbf040-b947-4023-af5d-b53430b724a5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "162fa76b-719a-4a8a-b741-7236c135d3bd"
        },
        "item": {
          "id": "be2ed368-b12f-4a13-8f5d-b83596085413",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "30d27a86-c67c-49f8-a09f-43791b238ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7138334-463f-48ee-875c-3e2bd94c8644",
        "cursor": {
          "ref": "66155aae-27b6-4c48-9068-b5b311379394",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c5193cca-72a0-4aef-bab8-cc16a85958b0"
        },
        "item": {
          "id": "b7138334-463f-48ee-875c-3e2bd94c8644",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "55c5ca23-2e45-444f-a3ae-d57b1dc31a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c3c222-3337-434f-86be-9acc687c01a0",
        "cursor": {
          "ref": "33a0fc74-449d-4e42-a9dc-2a3cc097c913",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f1cbbbbb-de42-457b-8bdb-fdced391c6c1"
        },
        "item": {
          "id": "d2c3c222-3337-434f-86be-9acc687c01a0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "091f4d93-5a18-43a1-827c-4ba971fbaf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca9f25b-e418-47be-b4d1-d22eb38b7e38",
        "cursor": {
          "ref": "a2d7a707-28f3-4ec0-9e7c-5c441887d819",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a0b5a1b4-909e-413a-847c-96cabf181bb6"
        },
        "item": {
          "id": "5ca9f25b-e418-47be-b4d1-d22eb38b7e38",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b5db716f-15be-45de-911a-3fbfca525c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f28734-2a66-4e27-b530-2f50af9de1e1",
        "cursor": {
          "ref": "f06af24d-3396-4d8f-891c-c4fe4db5a402",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "63f731b8-1665-425a-9b84-71088c739322"
        },
        "item": {
          "id": "e6f28734-2a66-4e27-b530-2f50af9de1e1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "88b6c387-5bb0-48cc-93fd-a68ee3cd10ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b71aeb-113f-42f6-a1e0-c0365915a2db",
        "cursor": {
          "ref": "c09a29d3-07a4-4446-bfe3-ee293d56f185",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c8162e5f-9031-4809-9413-b60386663b9b"
        },
        "item": {
          "id": "15b71aeb-113f-42f6-a1e0-c0365915a2db",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6726e154-965a-4950-982a-92a60634eb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c927194-a00c-4a2b-8930-9307e2273b05",
        "cursor": {
          "ref": "f5c8a5fd-f820-4379-829d-a7a5d50ac940",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "27d2279b-77e4-4950-bfdf-00f20dffb437"
        },
        "item": {
          "id": "9c927194-a00c-4a2b-8930-9307e2273b05",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "09a04804-701d-449a-ad92-739f76af74e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb6218c-de34-4e04-8979-f1d4c3597ed8",
        "cursor": {
          "ref": "4bf59b20-c8cf-411e-b7fb-cd7efa1e4037",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7a89445b-bff0-4712-a426-7337be9321f1"
        },
        "item": {
          "id": "beb6218c-de34-4e04-8979-f1d4c3597ed8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "32e243fa-6a76-4969-8d88-34c52d7f4273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3899ec4e-9af4-4a16-9882-c4cf897903f4",
        "cursor": {
          "ref": "15f026a4-2892-4972-8c69-97f10cb5ef0d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9ea17125-6a1f-4066-b767-68d8ebe9810f"
        },
        "item": {
          "id": "3899ec4e-9af4-4a16-9882-c4cf897903f4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "663538b0-9cdb-4dbe-806f-9565642cf942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fd5c39-5326-4b7b-b46a-c77cbf2ebe12",
        "cursor": {
          "ref": "338ecb1e-5b57-434b-92e6-7f7327c856fe",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "32fe000e-c614-4a5c-bb61-e100603abb87"
        },
        "item": {
          "id": "38fd5c39-5326-4b7b-b46a-c77cbf2ebe12",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8cf2fdad-d448-4a6e-b9af-758b51e305c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10d07e0-63b6-45fe-8713-6329684f2b96",
        "cursor": {
          "ref": "5dcce033-2f38-4082-9550-9abeedb82c79",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3adcb05e-42db-4141-b377-7a8634dcc561"
        },
        "item": {
          "id": "c10d07e0-63b6-45fe-8713-6329684f2b96",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "878d88cd-dcd1-443a-8276-5ace398e4eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e6c7e3-135f-45ed-9935-4997d0352425",
        "cursor": {
          "ref": "847776b0-bc49-4a75-bc9c-a9c179042321",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1c3b95ce-bfa6-411a-bcd8-ad1af7823b44"
        },
        "item": {
          "id": "64e6c7e3-135f-45ed-9935-4997d0352425",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "76a7d909-fae6-49a9-a3c0-b27a72974a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4cb80a-f063-427b-98a8-851d6a475e6c",
        "cursor": {
          "ref": "834c8ecc-8855-436c-82e5-0e9f061e7576",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0fde6fa7-75f6-4d59-b7f5-a0c8bdaeeb31"
        },
        "item": {
          "id": "4a4cb80a-f063-427b-98a8-851d6a475e6c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5446b1c2-2047-4679-aa4a-114cd8fb3628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8d91f6-1be2-4bfe-bf04-ce8e685fd49d",
        "cursor": {
          "ref": "fa8a6628-3d67-48a7-a053-5c14e2088d20",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a39f046a-8211-4fe1-b556-d95f8a8341ca"
        },
        "item": {
          "id": "de8d91f6-1be2-4bfe-bf04-ce8e685fd49d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b961fef9-e9f3-4b64-95e5-994307835c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137d6b04-abb5-4fe6-9997-da0b8a8860eb",
        "cursor": {
          "ref": "e74be697-9502-43c6-90d7-c9c294b9c72e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "23fc00bc-7f37-4683-82d0-a672f3697634"
        },
        "item": {
          "id": "137d6b04-abb5-4fe6-9997-da0b8a8860eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6b68c3a6-e06b-4ca3-99aa-72cf3a32e45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd99f25-834d-4b75-bc34-454b0b3cd7aa",
        "cursor": {
          "ref": "edaa4a09-01fc-4bc3-84e7-e6b0c0027b5b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "32258629-d716-4d24-8d81-5031f7685559"
        },
        "item": {
          "id": "1dd99f25-834d-4b75-bc34-454b0b3cd7aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b7e578c3-eee2-4bb8-94ff-8aa74026a027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c286b3c1-5ee0-4613-a56d-6059206d608c",
        "cursor": {
          "ref": "2fbeb95f-b251-4dc4-be57-2e97d6f75709",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2d4dbaaf-921d-4b12-b24c-38033b17da85"
        },
        "item": {
          "id": "c286b3c1-5ee0-4613-a56d-6059206d608c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8e0dc246-f3b9-4a72-ad16-cfa457e96baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3555787-b4ac-43d6-a65c-4cbae002a17f",
        "cursor": {
          "ref": "944b59a1-247c-4816-af03-b7dbfbdc06af",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8bbcea97-a5b8-4b33-b5e5-4b05391d0b4e"
        },
        "item": {
          "id": "c3555787-b4ac-43d6-a65c-4cbae002a17f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "24f83aec-c2d5-4888-a79c-9f6b75a359c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee4a8c1-4158-4aba-92a4-3de5eb4a2469",
        "cursor": {
          "ref": "9eae7c2b-6822-40c8-be65-f909a54e8c44",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8fa79142-4318-4516-82d1-fbd6258b5d35"
        },
        "item": {
          "id": "eee4a8c1-4158-4aba-92a4-3de5eb4a2469",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "067dea66-e531-462c-8640-aac7e98b3611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499fb485-b787-48cd-aff1-112a5d1fd900",
        "cursor": {
          "ref": "e3ae5e87-aa06-4045-bac2-81432fc69102",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ae0040ac-ee2f-4c91-acdf-03953893510b"
        },
        "item": {
          "id": "499fb485-b787-48cd-aff1-112a5d1fd900",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0105b471-3305-488a-850f-653425fbba6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01567b9-e530-4a6a-8a9b-1f8a5b99c094",
        "cursor": {
          "ref": "d026ce1e-2a08-4597-bd1b-76d04c90deee",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "657efe12-8a49-4440-aa16-f062ead0b789"
        },
        "item": {
          "id": "a01567b9-e530-4a6a-8a9b-1f8a5b99c094",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "33ec395b-2650-4d24-baff-fa3822fe9404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b2832c-42e7-47e7-a3ff-c70b1c77f855",
        "cursor": {
          "ref": "2ba26767-df13-4fd0-9766-f9cad7b86e25",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "db855a61-36ff-4999-af6b-bcce30e8eff9"
        },
        "item": {
          "id": "d9b2832c-42e7-47e7-a3ff-c70b1c77f855",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4b397a75-aa3e-4b3c-8151-ec1256b49805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4069bb-d81d-4e68-ad7b-dffb4f34cf23",
        "cursor": {
          "ref": "6e4d1bd4-b362-428c-89a0-b53777d28cdc",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f0960eb9-db55-4f9b-af0d-2443e4f507af"
        },
        "item": {
          "id": "8f4069bb-d81d-4e68-ad7b-dffb4f34cf23",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "50ded8a1-f742-4450-a03d-9b4426ad445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8adf3fd-8ee3-4bee-8f30-6bc4edc95d04",
        "cursor": {
          "ref": "c94b18c4-9e62-4611-b4a4-d9bb853d9525",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "65c797bc-e9e3-41e9-9d64-bc95e0094b71"
        },
        "item": {
          "id": "e8adf3fd-8ee3-4bee-8f30-6bc4edc95d04",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "aabdd8e2-e640-44b1-be04-c9ffce4f42ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9429ab79-fa25-4a04-a79e-7a2714076544",
        "cursor": {
          "ref": "2f948979-11fb-49cd-a42b-046a85ee22c4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f4fb0250-2be4-4b92-87f2-e9070a8fcf14"
        },
        "item": {
          "id": "9429ab79-fa25-4a04-a79e-7a2714076544",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "16e64a7e-83b1-4a33-a777-2a21b9228a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a10e5f-e44b-4e22-a738-c47ff153e584",
        "cursor": {
          "ref": "31b1f7cb-8180-4c12-9f38-8dd894430500",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "64d71f66-7a54-4ad4-b90e-92fbfd57f8ab"
        },
        "item": {
          "id": "b4a10e5f-e44b-4e22-a738-c47ff153e584",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8bb6dfaa-035e-4432-abbf-fefc254646b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3c52a0-23a7-4e88-a418-1d415c704cab",
        "cursor": {
          "ref": "234d06a6-e50b-4609-a7cd-a4adfb3b32d1",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fe9fe460-a533-4f5f-86e4-9aac7f6dc4f2"
        },
        "item": {
          "id": "4b3c52a0-23a7-4e88-a418-1d415c704cab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "343cc1ff-bc60-4796-b009-665e200f1bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b83ad5-ed18-4af6-9b70-5e40cc8922ad",
        "cursor": {
          "ref": "50ff8c75-c8a8-40c4-86d9-287911e1e7ed",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ce0a9c17-07b1-4eeb-a6f8-4b6a6b36ae0d"
        },
        "item": {
          "id": "85b83ad5-ed18-4af6-9b70-5e40cc8922ad",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "21e64e46-e82f-418f-934d-0bfda9f80309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a344f57a-2dd3-4933-bbf0-04ce69152160",
        "cursor": {
          "ref": "86d1735b-b2c0-4efc-9cac-1eaa3fb8dd77",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ef3564e8-6ee4-4960-b695-d093f5667230"
        },
        "item": {
          "id": "a344f57a-2dd3-4933-bbf0-04ce69152160",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "20c4b546-0a38-49af-8b08-010274b7f601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37ab922-7821-43a2-b7c7-925225f9a3d6",
        "cursor": {
          "ref": "061547aa-efd2-4d13-a85b-05f1192a6c63",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c103f312-32e2-4d4c-ae5e-1113af54194c"
        },
        "item": {
          "id": "d37ab922-7821-43a2-b7c7-925225f9a3d6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1ffed306-fd8e-4ffe-928e-a1732fb41a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b99b3e-f30f-4237-97ae-1e896343a181",
        "cursor": {
          "ref": "deb80c8c-2f3e-4308-ac6e-6f5a098a403c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a73cc947-06c6-40e4-bb54-3cbc95b79c8e"
        },
        "item": {
          "id": "51b99b3e-f30f-4237-97ae-1e896343a181",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "be5dbddd-7f17-49c1-881e-f9dd9e61faab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c3b377-2610-4945-afb7-af027edb94f9",
        "cursor": {
          "ref": "654123c0-9d53-4f5e-9227-b329aa0d38e1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bdb31672-383d-49ab-92bd-b098beb192a9"
        },
        "item": {
          "id": "87c3b377-2610-4945-afb7-af027edb94f9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "51cf9392-2a32-45de-926e-5b8d0360e718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a615ab65-86f1-4ca5-9544-c931a335354f",
        "cursor": {
          "ref": "6913a90f-ff4e-4ea4-9a9a-d563125a52b2",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "41c8e7dd-3a17-4d93-ba97-e411020a51c9"
        },
        "item": {
          "id": "a615ab65-86f1-4ca5-9544-c931a335354f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3bdc3907-96bc-453d-82f1-904550663be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a91096-709f-4341-ba02-d61d10fb4605",
        "cursor": {
          "ref": "8a5f191a-6b4e-4165-902e-f5ffa29aec0c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "39350f2b-5ac5-4d0c-bcc0-ad680b5c2760"
        },
        "item": {
          "id": "23a91096-709f-4341-ba02-d61d10fb4605",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0608359c-c91f-4a92-b4a4-cb180817eb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d214a63e-59fe-471d-a3f0-dd4330ecb045",
        "cursor": {
          "ref": "7b4375a9-e68d-469a-8f8f-ef00cc7096d4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e3a52216-3d0a-4d38-b4b6-852f60716f0e"
        },
        "item": {
          "id": "d214a63e-59fe-471d-a3f0-dd4330ecb045",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "08bccacd-21ee-492b-8255-b92f6f594896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b085a94a-6500-4912-baad-62db03d3207e",
        "cursor": {
          "ref": "4910c6e2-2e6b-439a-8852-4bd5624db05c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "77d01c05-7404-4272-889f-8d559ec88a4a"
        },
        "item": {
          "id": "b085a94a-6500-4912-baad-62db03d3207e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a4b1ee90-31a6-4f6e-bc5f-1061443dc73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0940879-65ba-4d30-9995-a15c97327b7b",
        "cursor": {
          "ref": "ae1fa410-6712-407c-a137-52e8996770f0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "80245b1b-4a9f-4d2b-b793-e8e4c3a8be3f"
        },
        "item": {
          "id": "f0940879-65ba-4d30-9995-a15c97327b7b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "73e4de65-53c8-4ae6-8f76-df433bea8b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec251e67-391f-4da5-b8b8-361182d5fed4",
        "cursor": {
          "ref": "f5367c4b-04e9-4681-9c80-d7f75611187c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a5c40849-9de8-44ea-9f88-0f9e45c3a823"
        },
        "item": {
          "id": "ec251e67-391f-4da5-b8b8-361182d5fed4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ff374bdf-c438-4b4e-994f-62a2e6188ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0107e9-409a-42ad-8cc3-1bb38aa2585a",
        "cursor": {
          "ref": "702344b7-0ddc-48d3-8559-c2c5cc968a85",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "632506f0-bbfe-46c7-af5f-5dcec1cab99c"
        },
        "item": {
          "id": "3f0107e9-409a-42ad-8cc3-1bb38aa2585a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "103aaf6d-08ff-407c-bf7a-59a3e623581a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e9ac74-63d4-4af0-9639-2e2d309b561f",
        "cursor": {
          "ref": "199d2774-67bc-4e7a-865c-788d87479531",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4df59dd1-a669-4321-bb37-9f48f2b318cc"
        },
        "item": {
          "id": "b9e9ac74-63d4-4af0-9639-2e2d309b561f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "439d457c-bb30-47c8-963a-edf6ed966e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dd9f22-9097-4ef2-88ae-eef88a84baef",
        "cursor": {
          "ref": "fafa0dd6-fb2c-4441-ba62-c5b282df25cd",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7690fbff-b0c5-46ac-ae0b-3b301aebd761"
        },
        "item": {
          "id": "96dd9f22-9097-4ef2-88ae-eef88a84baef",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7f675832-13ef-47f4-88dd-cc3ed9a41c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1b2513-5c3b-4eb2-89f6-8460d1d16d21",
        "cursor": {
          "ref": "9217e7ce-910f-4d80-a2ad-3b1f8c266e3b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1737e5a6-b953-43c2-a17a-b9c0a2730738"
        },
        "item": {
          "id": "cf1b2513-5c3b-4eb2-89f6-8460d1d16d21",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b63bd914-fc9a-45fb-b167-6f7a713c71f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afffe6dc-76ac-4439-907e-09abaf7153eb",
        "cursor": {
          "ref": "0fd64a5b-4512-4c99-9164-11ec1fc8fc0f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b4d5eff7-5d25-4088-b060-a8a6fc327f9f"
        },
        "item": {
          "id": "afffe6dc-76ac-4439-907e-09abaf7153eb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a637ff67-dd64-40d0-9f53-441a84855247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20afeb15-bfd5-4fe2-af9d-d9c11f28d19a",
        "cursor": {
          "ref": "18ba18f2-f020-4d3f-bfcb-2764e3916375",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8d32bfac-4108-4e47-ae2c-61c350b41e4b"
        },
        "item": {
          "id": "20afeb15-bfd5-4fe2-af9d-d9c11f28d19a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "630d98d7-e684-4c1c-84d4-400eb5464627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f6f641-c792-4cbd-961e-9a0ad2650e57",
        "cursor": {
          "ref": "84c85a24-b848-49d7-b81e-0e31af723183",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9846b9d5-8074-418e-9a37-dbc9e7679038"
        },
        "item": {
          "id": "d7f6f641-c792-4cbd-961e-9a0ad2650e57",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "119e8f87-1f3b-4a61-a2de-c2379a499951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750e4efe-74b8-4359-a445-d7f4e3ff1eba",
        "cursor": {
          "ref": "81f4d664-e03b-4c96-a14d-3ac246ef8ddb",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "46e7af82-6dc2-4034-9046-ab15a9c0eba7"
        },
        "item": {
          "id": "750e4efe-74b8-4359-a445-d7f4e3ff1eba",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d5afdd07-2045-4e13-9819-ca1a042505bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f702c3f-1a29-4f00-b597-0082fafcc991",
        "cursor": {
          "ref": "83ec20ad-8c48-4e6d-aad4-a0cdd121a5ea",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "058e9ed5-43a3-4f12-b569-443759e1f7b5"
        },
        "item": {
          "id": "7f702c3f-1a29-4f00-b597-0082fafcc991",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a6479961-8d15-4c76-b041-80e037b6a7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494f2600-139a-499b-8b45-8a3d9f6cdd9e",
        "cursor": {
          "ref": "b2f82f0d-f8dc-477a-a957-4156a904a29a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "75bdd07f-a28c-4e41-8406-d62719b4a277"
        },
        "item": {
          "id": "494f2600-139a-499b-8b45-8a3d9f6cdd9e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f7202c64-09ac-45d9-9327-1ea036a607fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a465e6b7-9586-4a00-9205-da9650a7a428",
        "cursor": {
          "ref": "0e9fe157-2944-4ae0-8101-c7424f101fe7",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d0a6835a-b9c1-4907-8b50-e454348ab6d4"
        },
        "item": {
          "id": "a465e6b7-9586-4a00-9205-da9650a7a428",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9f19247a-c931-4fbc-85ac-75570d22e2dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b66dc1-4039-4f8e-8caf-40449dad64b0",
        "cursor": {
          "ref": "8da86a8a-cc15-42fe-8f4a-a46c7e020238",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0f337210-c918-4f2e-aa41-f2f9c3bdd829"
        },
        "item": {
          "id": "71b66dc1-4039-4f8e-8caf-40449dad64b0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8db3758a-c2ac-4240-9f60-c857060eaf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dd6db1c1-e45b-47cf-9fb8-a923c8e75a72",
        "cursor": {
          "ref": "e80ac8cb-ae41-426a-835d-344cc6694144",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "68455a15-b2bc-4708-a203-3336385a49e8"
        },
        "item": {
          "id": "dd6db1c1-e45b-47cf-9fb8-a923c8e75a72",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bbbf831d-eee6-41c4-879c-1e6fe87921d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7a578a42-59ec-4463-ab14-63779962d0f0",
        "cursor": {
          "ref": "134fed11-ba15-4b61-9c72-2846ff3f717f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "04d9a863-adfb-44d3-8a9d-a2a888797a4c"
        },
        "item": {
          "id": "7a578a42-59ec-4463-ab14-63779962d0f0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0912df7b-c01a-4916-afbd-d45b8faa0bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "086582ad-54b3-4807-b909-9dacedc241d1",
        "cursor": {
          "ref": "d163fd9b-7a39-4f87-a697-59152d67e545",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "21ae3d22-46c6-4f9e-8461-6205651abff8"
        },
        "item": {
          "id": "086582ad-54b3-4807-b909-9dacedc241d1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a31526d8-8f7e-413b-84a5-6baebc8f49a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b3e027cf-4bb6-4af6-8ff5-abe82d70bd64",
        "cursor": {
          "ref": "3afbac12-078b-40c3-9470-c2cb1673ac8d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "87192387-5d60-47a4-82a1-7b3c60efef90"
        },
        "item": {
          "id": "b3e027cf-4bb6-4af6-8ff5-abe82d70bd64",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f870d068-928e-45dc-adcc-47da1e88c904",
          "status": "Created",
          "code": 201,
          "responseTime": 9327,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb6e76a-6037-453b-8b6e-39f9a21f18a8",
        "cursor": {
          "ref": "37ed0fa1-e00e-47f1-819a-43d7edf85c49",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "264ce84d-1af8-4b3f-a763-57d27567bdef"
        },
        "item": {
          "id": "dfb6e76a-6037-453b-8b6e-39f9a21f18a8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c75b0463-940e-498e-ae3d-98449d7e254a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "83f92013-b469-4324-9087-46191e9241a3",
        "cursor": {
          "ref": "ecdaf435-a081-42a9-8a7a-4934160d0806",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c1231d32-0bd0-4a09-b14f-44b14f48c45d"
        },
        "item": {
          "id": "83f92013-b469-4324-9087-46191e9241a3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "07efa9cc-5d07-455c-b2f4-eb9c9ad167a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "81f3a3d4-f70e-471f-a3bc-8391edcf0600",
        "cursor": {
          "ref": "ae1db6ae-721d-405f-a324-824741f77182",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cbf4e0f7-2f50-44e9-8782-c03233a30dbf"
        },
        "item": {
          "id": "81f3a3d4-f70e-471f-a3bc-8391edcf0600",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d68edf31-fc96-440d-9fc6-25a0c7b3cad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62e954c-55e0-4e2b-bfce-24cf52404ee0",
        "cursor": {
          "ref": "7c35f0e2-0d05-4a85-9002-7cf99469863d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1646ec4-91d3-4ec6-b404-c237c8e52c63"
        },
        "item": {
          "id": "f62e954c-55e0-4e2b-bfce-24cf52404ee0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "484e5694-b812-47f7-acd9-9d41aa19d0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d989618-0f36-46a3-befb-6c085038ba3e",
        "cursor": {
          "ref": "ca5c82df-ec66-4beb-b2c5-e8732ac62a92",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "75bafa48-dfd6-4336-aaf6-4456356e976a"
        },
        "item": {
          "id": "2d989618-0f36-46a3-befb-6c085038ba3e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5659f70f-3820-4638-b9ce-335eb8b7cdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7c3cf7-81fc-4a2c-bb79-cdff09debffe",
        "cursor": {
          "ref": "21e59c37-8040-4620-9b59-ea3d85a28899",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7ff2c910-f8e6-45a0-8392-4376dec6d762"
        },
        "item": {
          "id": "9e7c3cf7-81fc-4a2c-bb79-cdff09debffe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "091f74f1-43ff-4d38-96bf-a2934075ab69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d334b6d-cc1d-4283-a07e-7a8a95eebf03",
        "cursor": {
          "ref": "7308a32a-e7cf-4887-b719-12707396c2ac",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "73082afa-7416-4c77-90f2-4c5b0804d605"
        },
        "item": {
          "id": "5d334b6d-cc1d-4283-a07e-7a8a95eebf03",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b7e594cb-2877-4761-91cb-277309473477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40881da1-83bc-4636-98c0-6a8bb5e6456f",
        "cursor": {
          "ref": "2c12ecc8-fac3-4fe8-93ef-25cb75841f65",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1008ee2c-4e7d-4746-858f-24ec35b93ecd"
        },
        "item": {
          "id": "40881da1-83bc-4636-98c0-6a8bb5e6456f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5524e2e0-c924-418f-a888-a7e0f5958bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf399c46-fd5b-46f6-a3c6-72f7f7ac081b",
        "cursor": {
          "ref": "2b86cff2-e38b-4b6d-8d12-507b5c540c62",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d9faf07f-bdf1-4086-b4e1-dc111b853f1b"
        },
        "item": {
          "id": "bf399c46-fd5b-46f6-a3c6-72f7f7ac081b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5e3f0b72-12f6-46d9-86e6-c6e5327e48a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f793b1-aa49-4892-8abe-8227f486c6ca",
        "cursor": {
          "ref": "37e15387-b4d9-4674-bba1-20067e8f762d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3a75e2da-1a2b-4392-a55a-683197d7a8d0"
        },
        "item": {
          "id": "e3f793b1-aa49-4892-8abe-8227f486c6ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "153be3e2-445a-494c-8d3f-2f0f6bfa5bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d838e3e9-cddd-40ec-afab-718dbce86362",
        "cursor": {
          "ref": "f40d5919-5a56-451b-95f0-1895b70b1737",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fe81f8c2-9163-4f00-b93c-34aedd536c6d"
        },
        "item": {
          "id": "d838e3e9-cddd-40ec-afab-718dbce86362",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c291fe07-b714-4da3-af38-cbb884b9c57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c8a724-b8cd-47ea-918c-fa6b168c6d3c",
        "cursor": {
          "ref": "c354c7a2-1ace-4cb7-b288-31f792659ea2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8ebf43bb-cd55-4c78-9a6c-a12f7558e1a4"
        },
        "item": {
          "id": "48c8a724-b8cd-47ea-918c-fa6b168c6d3c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bff895d1-f8b1-488c-b396-244bffb03b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8541a86-8f75-4b19-a788-57903f8863cb",
        "cursor": {
          "ref": "a85840e9-1ea1-4df3-ac29-c22427754d38",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5622307e-5b40-4677-8313-c4eb7bb73d2d"
        },
        "item": {
          "id": "a8541a86-8f75-4b19-a788-57903f8863cb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "300cb707-e2db-4b68-b80d-a617bf549715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4e5c2a-d4be-4e13-a175-f0adeeaea6c5",
        "cursor": {
          "ref": "decfa866-2732-40e6-baf5-7415a511f19d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "361ff086-39fd-4a01-81e7-137aaaa4e191"
        },
        "item": {
          "id": "4a4e5c2a-d4be-4e13-a175-f0adeeaea6c5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "11dacb22-9430-4fef-be4b-1b14b61ea0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75467ff0-2862-4ee9-ae86-23185ee4fcc6",
        "cursor": {
          "ref": "630538a7-7938-4b72-8ec7-8717c209c939",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "43c2a993-6738-479f-9ed7-50569cc7ca5a"
        },
        "item": {
          "id": "75467ff0-2862-4ee9-ae86-23185ee4fcc6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "216731d0-c790-40d8-9ead-ed05085836d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4926e73e-d480-4593-97c7-ed99e51bff6c",
        "cursor": {
          "ref": "2ca32e40-7d93-4250-993e-0258cc0793eb",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1cd2414d-ba29-4783-a584-c6c2e943190a"
        },
        "item": {
          "id": "4926e73e-d480-4593-97c7-ed99e51bff6c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1d29712b-0ef8-4d21-8f90-563e402db7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea67c08-f242-48b6-82d4-f6aa43674475",
        "cursor": {
          "ref": "f42d043b-be61-4c2a-b5ef-33742cbe37c8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "071a4062-bcdf-4b9f-86e7-3cff71f45e46"
        },
        "item": {
          "id": "1ea67c08-f242-48b6-82d4-f6aa43674475",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4c6b86f7-ed42-4c74-9f9a-041380d74565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc678cb-099f-4a3e-91d0-10f128a51bdc",
        "cursor": {
          "ref": "b925d833-79fc-4e3b-96bc-6d985746f1c4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9be494d9-ebdd-4f3c-8196-09d301526ec9"
        },
        "item": {
          "id": "1bc678cb-099f-4a3e-91d0-10f128a51bdc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a47b2231-5f37-496f-8d81-85af5c57b991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600063f5-5f3b-4165-87a6-723c29048a7c",
        "cursor": {
          "ref": "50a8d336-3ced-4dd2-bc8c-d5f55efeafb6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8a39b75f-f8c6-4bfa-a999-e82db34ee3c7"
        },
        "item": {
          "id": "600063f5-5f3b-4165-87a6-723c29048a7c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e53e42b6-e384-4b53-9675-c248dc279bf0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "2de9d573-e154-4e43-a2fb-92f342157c3c",
        "cursor": {
          "ref": "2cbcacf0-2e88-4ad1-8945-f662ee08ccbc",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dc25cce7-df26-4c25-8a91-1a7a6a9324b8"
        },
        "item": {
          "id": "2de9d573-e154-4e43-a2fb-92f342157c3c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bb6f9b1a-d1c7-4b9f-b497-cf3dfb9db81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4831827b-83f4-4d6f-a843-24fea71d491d",
        "cursor": {
          "ref": "b0822a2d-117a-44b9-a668-e25b395babd3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "33a0016f-7ec1-444d-861f-2bd3c56c375a"
        },
        "item": {
          "id": "4831827b-83f4-4d6f-a843-24fea71d491d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "df9a891b-28ac-4a0a-9575-ec907699273d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eeca7a-62a1-4879-8d84-7b3411d93efa",
        "cursor": {
          "ref": "263a14df-6beb-4921-9d90-2d23e840788f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ba4afd8c-6c26-4d5c-b3fd-1aeb3b96f902"
        },
        "item": {
          "id": "f3eeca7a-62a1-4879-8d84-7b3411d93efa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b014c58f-0bb2-4295-b280-6de7c4b1c09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00001711-ab2a-4eb5-b20d-7449c5a407e4",
        "cursor": {
          "ref": "40112fa1-8722-4ce3-bc44-f88525aa5bf5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "51d69d6a-e961-4c96-b816-153ad784e67c"
        },
        "item": {
          "id": "00001711-ab2a-4eb5-b20d-7449c5a407e4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8a982dc9-575d-4315-b9a7-15720e06661f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50e0f93-cfc2-4ab4-a353-0321d8b47217",
        "cursor": {
          "ref": "e505fdc0-72e6-42fd-a8db-a3b9031fb9ca",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "500708ab-e98e-4e21-b801-b13adaf98a68"
        },
        "item": {
          "id": "e50e0f93-cfc2-4ab4-a353-0321d8b47217",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1e0dab18-9f27-4994-b969-5ab268cb26d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fe4084-2929-4f77-aca9-970674f13795",
        "cursor": {
          "ref": "5bc30f9d-9f01-4295-b851-60a58ca39bd0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e68811c5-f3e5-4df1-9977-c98ade9b5600"
        },
        "item": {
          "id": "f1fe4084-2929-4f77-aca9-970674f13795",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ebe79a85-6c2d-46be-8e94-520cb0c497be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3585cf-2637-4128-9379-b24b0bd69d52",
        "cursor": {
          "ref": "2f9c01a9-7c0d-4762-bcc0-7e4ac83f409a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d8de3f90-8b22-4abd-84d0-09b9f2a5729e"
        },
        "item": {
          "id": "9a3585cf-2637-4128-9379-b24b0bd69d52",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "30ddb219-e098-4fe5-aedc-79cdb11c4595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32506894-cb1f-497d-aa0a-782ff12f0ee4",
        "cursor": {
          "ref": "9881b366-b77a-420e-bf3a-0c874e7f59dd",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f6ad8e66-3179-4ee7-898a-7fc726cd9ebf"
        },
        "item": {
          "id": "32506894-cb1f-497d-aa0a-782ff12f0ee4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e63ad92e-f703-4550-9c8d-852911a0cc05",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "659db533-a4ed-4e56-b665-1ffb43491a96",
        "cursor": {
          "ref": "78bb9ed4-d890-4b11-be00-a7f74164d67e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "66886e0c-14ea-4023-b4f0-2e38bb75c949"
        },
        "item": {
          "id": "659db533-a4ed-4e56-b665-1ffb43491a96",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60a53b11-1a0b-4548-9737-ac9c3518c1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdf09fa-e68b-44cf-8969-95d318004144",
        "cursor": {
          "ref": "29c63604-3a37-4970-b07a-9a98a6e1d47a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "610e4bfa-534e-407c-980e-f7a274d04e56"
        },
        "item": {
          "id": "9bdf09fa-e68b-44cf-8969-95d318004144",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "82c829fa-8448-421c-b2c2-e4685afd3690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a226c82b-a7b7-439d-9251-0b9460af01de",
        "cursor": {
          "ref": "fc5d7c94-93a3-4433-ac23-ea1ded071bfc",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bfdfcbc8-6417-48e4-a0f0-03fad57c287e"
        },
        "item": {
          "id": "a226c82b-a7b7-439d-9251-0b9460af01de",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5bfb5c95-e832-4aa0-9eff-68a4bf4818eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a5c449-fb69-433c-a7fe-e3dac5730333",
        "cursor": {
          "ref": "14ff82ed-7f82-4ee6-a007-7739e70c9619",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "11305c34-5095-472a-a6b7-0e9f133d70b5"
        },
        "item": {
          "id": "29a5c449-fb69-433c-a7fe-e3dac5730333",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6a5f0b76-1007-4a0d-b81c-5d74ec245bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c6c174-f2e5-4f33-9514-6beea2caef3f",
        "cursor": {
          "ref": "d167132e-3e2e-4bcf-80f8-9986e1f794af",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eb67efd5-e36f-4231-b109-0bb7216f28f3"
        },
        "item": {
          "id": "63c6c174-f2e5-4f33-9514-6beea2caef3f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0502785b-4dee-49db-94d4-20f28f787db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c2cad2-c49f-497f-8af3-cbb9d6f2e610",
        "cursor": {
          "ref": "c26e2f61-7acc-42d1-8b82-4c50518dcded",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0c355cd4-a3f8-4722-ae8a-2bed8e955068"
        },
        "item": {
          "id": "e9c2cad2-c49f-497f-8af3-cbb9d6f2e610",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "399f9ed3-fb40-4bba-84f9-6b0267193109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d12628-6c34-4a5d-9831-fea374961c26",
        "cursor": {
          "ref": "5a563c4e-c4a2-4c41-8c8b-5f67d60aeb05",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c8ac54d1-7558-46e6-b835-3e07f1dd8833"
        },
        "item": {
          "id": "58d12628-6c34-4a5d-9831-fea374961c26",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cf61027e-6979-495a-9410-0308cc1512ea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "767e7748-0ce3-4191-b8cf-75be31bf8031",
        "cursor": {
          "ref": "06308a05-3545-466d-af7d-4ebe29b01fa7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "146538b1-dfea-4ab5-a7a9-fc5bdb7d2e96"
        },
        "item": {
          "id": "767e7748-0ce3-4191-b8cf-75be31bf8031",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d4d8fc7f-b2d5-42bd-b947-5f967c120cae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 85,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "be0936df-8d27-4030-af58-81e7db629cba",
        "cursor": {
          "ref": "547519bc-8650-4267-ba6d-675c793ef25f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "78ccb2e4-b26c-414f-b5a3-fa1918bc9692"
        },
        "item": {
          "id": "be0936df-8d27-4030-af58-81e7db629cba",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8c529331-eccd-4399-9ada-2a22575b890e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "5e4132ad-5f40-4537-9325-48b10677b0d8",
        "cursor": {
          "ref": "e5a7b2fb-2c40-4741-ad91-e1ac716ec2a1",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5c6c371d-109e-448a-b0a1-41a728c19341"
        },
        "item": {
          "id": "5e4132ad-5f40-4537-9325-48b10677b0d8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "07061273-1076-4aa7-859a-a24d47182598",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "3aa42a6e-ec06-4b48-a5d6-b231ddc03278",
        "cursor": {
          "ref": "2825711b-83e5-44af-84a6-0e4b072fb5c1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "12987a76-fde7-4875-98bd-d3a168db68b4"
        },
        "item": {
          "id": "3aa42a6e-ec06-4b48-a5d6-b231ddc03278",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b8f087c8-52bc-4c90-b42a-7b078df7ba70",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "074b14c2-44ab-4935-9a1f-c36804b9dc07",
        "cursor": {
          "ref": "a2763f32-2eb6-4e48-8f08-88b8fef3fad3",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6e263bd9-9dcf-4f74-b114-78de39a2a4e0"
        },
        "item": {
          "id": "074b14c2-44ab-4935-9a1f-c36804b9dc07",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dc976d58-d55a-4286-a090-86f99c3c8344",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "25e02fb2-50f0-4b8d-883f-a909bedc6ddc",
        "cursor": {
          "ref": "eb11109a-8876-4e7f-ad2b-9ce6ea1b9cf0",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a42d5b8c-7a76-40bc-af5e-6881aa1650f9"
        },
        "item": {
          "id": "25e02fb2-50f0-4b8d-883f-a909bedc6ddc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5eae139b-0d8a-47dd-9171-d43477e453a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6f9e0d-0824-4d85-bac5-8e9661dddea4",
        "cursor": {
          "ref": "823e4a0a-8a0b-41d1-b2a8-657338011b47",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "da7c036c-a666-42ff-84d7-c64858e8cffb"
        },
        "item": {
          "id": "3e6f9e0d-0824-4d85-bac5-8e9661dddea4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "59ec55dd-dfc8-4a83-b24e-421e0c418029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15586702-b526-40d0-8e3c-6821e7b67b5f",
        "cursor": {
          "ref": "27d92125-da38-40af-baa6-a563ce04fc03",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7f9c256f-a616-487e-818d-5cfa5ad4b402"
        },
        "item": {
          "id": "15586702-b526-40d0-8e3c-6821e7b67b5f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "201a28c4-e9b6-49b7-a385-b703153f614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f57ed0-ac4b-4469-ac08-3cf059fcbc57",
        "cursor": {
          "ref": "a1ae722d-4893-4f72-b80e-0573f7b6be1f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "74a7c145-b0b9-4780-aaf3-80f5aaef3a38"
        },
        "item": {
          "id": "a3f57ed0-ac4b-4469-ac08-3cf059fcbc57",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "58307ad2-e713-463b-8213-ab7b046706c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7b4f0b-f5f2-45a2-8b7b-4e468380690b",
        "cursor": {
          "ref": "363a2f9e-31e1-4ff7-93c7-d7cfe2c8b29b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "80d9b41b-f25a-4a56-9b30-6e0cef93239a"
        },
        "item": {
          "id": "6e7b4f0b-f5f2-45a2-8b7b-4e468380690b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8d1f66e8-32db-4f7d-b905-dc82977bdb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddb7353-2d9e-4f7a-9c72-6c77cd5532f2",
        "cursor": {
          "ref": "ac0df6ff-57ba-4269-81ef-38e4459fb9a6",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b4af782d-8563-45b8-9e5e-75510dbdead8"
        },
        "item": {
          "id": "eddb7353-2d9e-4f7a-9c72-6c77cd5532f2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "945b9544-a738-4c5f-abc6-8b55e2079fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83b9cdd-cc38-4760-9fbd-6a6346c370d9",
        "cursor": {
          "ref": "7f05d4ce-8b5d-4b18-9e68-26b212614f1d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4805a35c-f1d6-4ef9-aa4a-94e9aebb9adc"
        },
        "item": {
          "id": "f83b9cdd-cc38-4760-9fbd-6a6346c370d9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9ef5163a-540c-4fad-bb18-126cfa26f320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91211824-6fbd-43b9-b013-25d66d6ffefc",
        "cursor": {
          "ref": "73da47bd-8600-46a9-bd5c-b6fb40ff5432",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c6b14369-07c5-4047-870f-ce1516379145"
        },
        "item": {
          "id": "91211824-6fbd-43b9-b013-25d66d6ffefc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e49633bc-815d-4142-b1c1-3a933baa17c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81b4237-7996-4fe0-82f7-899956a47c7f",
        "cursor": {
          "ref": "30363799-5b50-4188-84d1-adbfde425b3a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5e2267e8-ef35-4f75-9241-f8c1636845a6"
        },
        "item": {
          "id": "c81b4237-7996-4fe0-82f7-899956a47c7f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f2d20bb2-db06-4dfd-ab9c-79cff4ad22e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61b3420-6640-41b0-92ef-31311891b2e8",
        "cursor": {
          "ref": "f0bd90bd-7eb5-431a-aa15-8cc1f5c94ede",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bd2549fa-561b-4b65-ab18-5090a8eb33c6"
        },
        "item": {
          "id": "d61b3420-6640-41b0-92ef-31311891b2e8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f07db570-5b18-461e-980a-a2c01875737a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11989ea4-ddba-4b26-8bdb-6ec0bd99ed95",
        "cursor": {
          "ref": "e4b9cee6-e02a-4e6e-b92a-727af239a276",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7e3f73db-1c09-478c-b09b-7b1a7393b954"
        },
        "item": {
          "id": "11989ea4-ddba-4b26-8bdb-6ec0bd99ed95",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "60e402ae-ec64-4332-971b-bb0781739b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717451fe-bf13-4cab-b398-ec6193fb0f9a",
        "cursor": {
          "ref": "172d838f-916c-4206-8fa3-d5313598b11c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "762bcc47-6406-4953-a01b-7021d4564d8a"
        },
        "item": {
          "id": "717451fe-bf13-4cab-b398-ec6193fb0f9a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c2f61d72-3327-4c1a-8287-137cf72a491e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a1805f-9a24-4b15-b58d-d4203b1cfde0",
        "cursor": {
          "ref": "1543cd9b-634f-452a-95c4-803672de86b9",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e382a575-009c-4cab-8809-a5a473a69cea"
        },
        "item": {
          "id": "f7a1805f-9a24-4b15-b58d-d4203b1cfde0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5d96ee57-32ff-4181-836b-419eca6df190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976e575c-ee4a-45fa-b258-4f5850eb583a",
        "cursor": {
          "ref": "9c1d9ba3-2e0f-4447-98f9-70b244560306",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "138858b5-1730-41e0-b07e-43a673884a0a"
        },
        "item": {
          "id": "976e575c-ee4a-45fa-b258-4f5850eb583a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "23faa039-d71c-4f88-95af-b9d251477535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61751a16-bd1c-4d67-934d-683d82e0f663",
        "cursor": {
          "ref": "35b03dc4-2d02-4fc6-9b31-4f6948198764",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3f5164d8-23ce-43d0-8c97-1b531732fdbc"
        },
        "item": {
          "id": "61751a16-bd1c-4d67-934d-683d82e0f663",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4c648482-f5ef-43eb-aa96-7ab57ec965f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d5b062-b4f1-40f7-a1f7-799bf455e69f",
        "cursor": {
          "ref": "5e9fc537-fbe3-4b8e-90de-7c89eded4738",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "34a9e0f7-286a-4ff8-86d6-1507d7cf9dfd"
        },
        "item": {
          "id": "49d5b062-b4f1-40f7-a1f7-799bf455e69f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fb8daeb1-7d79-4d31-a3bf-f7d9e6d5f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c030c622-37ce-47f9-becd-2e032200371b",
        "cursor": {
          "ref": "81710ddf-49b1-4ccc-9912-ce95c0190a3f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9aae4e5a-d5b8-4dd7-ac02-50b6c2f582c7"
        },
        "item": {
          "id": "c030c622-37ce-47f9-becd-2e032200371b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d4d38368-d80e-44ef-b886-088c4105e9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1515eb-8dc1-40e4-bb31-30cb4819805e",
        "cursor": {
          "ref": "36d51e87-ecc2-41f1-80c8-c2d5fd45aeaa",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b71b15e2-eac4-48bc-a4de-c899fb975934"
        },
        "item": {
          "id": "fe1515eb-8dc1-40e4-bb31-30cb4819805e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "aae74640-6ef2-4897-84df-01c13ca4d7b7",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "55ebe6b0-f1d4-4b8c-b4cb-b1ad83a4c075",
        "cursor": {
          "ref": "b7019bcd-695d-4912-b4fb-65280d59c908",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "06235924-b794-438e-9fba-c3ec38dc91a0"
        },
        "item": {
          "id": "55ebe6b0-f1d4-4b8c-b4cb-b1ad83a4c075",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f434918b-e7a4-40c9-ba63-b8bf7cef8b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0aedea-4c9d-43ce-a912-6fe55fe88976",
        "cursor": {
          "ref": "8b23b2b1-c859-4422-b328-158601d56b20",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6e9b13ac-62a5-4c65-87d1-09fa609a4853"
        },
        "item": {
          "id": "3f0aedea-4c9d-43ce-a912-6fe55fe88976",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9707dcdf-ac45-49b6-8d90-675718862657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4808ab-59cf-4c0c-8b74-fc6b478669e5",
        "cursor": {
          "ref": "e7549915-0bea-4385-84e5-b767c2050ab2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a84f8234-5118-4730-a03c-91d1a09982cf"
        },
        "item": {
          "id": "7b4808ab-59cf-4c0c-8b74-fc6b478669e5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4ad21846-8273-4c65-ad89-1422111cbf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7592c7fb-15e5-491c-867f-0d445aa9dc3c",
        "cursor": {
          "ref": "675739fa-3ee9-4be3-af0b-6f632a84a23d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cfc3bae8-1098-4759-bca4-e3d873a16941"
        },
        "item": {
          "id": "7592c7fb-15e5-491c-867f-0d445aa9dc3c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a724d567-9e6b-49f8-9931-c8591986f248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7be1c6d-e426-403f-b60d-7ac6a7f1af51",
        "cursor": {
          "ref": "6107915e-8399-4e48-b784-e4604cb0ebfa",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "046b3ea4-d15d-4468-9230-21377decfa85"
        },
        "item": {
          "id": "b7be1c6d-e426-403f-b60d-7ac6a7f1af51",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fdb6ae46-6f8a-4a36-8aba-2a51bc6d4b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cf3757-0d04-4acb-92d1-dc1f30e66143",
        "cursor": {
          "ref": "b6e2dd18-ea3e-4767-a3af-c1a8ea9449a9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7446eb9b-ef74-4e08-bc5d-49321ce69709"
        },
        "item": {
          "id": "43cf3757-0d04-4acb-92d1-dc1f30e66143",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b9c20a6d-5e65-4f8f-808d-785183312755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e074e2b-51b6-4f3d-b052-4e842ada3554",
        "cursor": {
          "ref": "9c48fbc2-d5d8-417a-a3d5-9b08488aa3b2",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f69e80d1-7216-4e39-9906-e44edc804627"
        },
        "item": {
          "id": "1e074e2b-51b6-4f3d-b052-4e842ada3554",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3880245b-4468-4f78-8062-208c38aadab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48736b4c-283f-49fb-8c5f-570c9c07455e",
        "cursor": {
          "ref": "5b61c21b-75c1-43a2-bb8a-8d25c9a02064",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "46ba448a-962f-43df-843b-51e514463831"
        },
        "item": {
          "id": "48736b4c-283f-49fb-8c5f-570c9c07455e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8648dcec-da7b-48a6-b24e-a0badc8526da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8f18f3-833d-44dc-91e8-4be749fdde36",
        "cursor": {
          "ref": "6a6df79d-ee41-46d9-8a4f-455f36a3e7de",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "95f8bd77-e221-40cc-846e-f7b2eb496d21"
        },
        "item": {
          "id": "1c8f18f3-833d-44dc-91e8-4be749fdde36",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b904f629-2ee1-4ec9-bef8-d82c01fd2f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ba571e-6d2b-408a-b01f-8a058b841b4a",
        "cursor": {
          "ref": "f889dffc-256b-4e92-8290-1949e33b3db2",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2ea67e6b-7cfd-4852-9450-a20c8b054ea2"
        },
        "item": {
          "id": "27ba571e-6d2b-408a-b01f-8a058b841b4a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "23ad3049-633f-4c35-b51a-58b8d90e1320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b7e03e-298b-464c-9912-9303cb96c599",
        "cursor": {
          "ref": "684082db-c072-47e3-9fe7-fa98a99a20c8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d602f07b-8eb0-43c3-88a6-e45443b8c406"
        },
        "item": {
          "id": "71b7e03e-298b-464c-9912-9303cb96c599",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8c715dc3-1b30-4ba1-aa30-7c7f067d74c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e87c1d-96c5-4e44-a91c-aaa187d41556",
        "cursor": {
          "ref": "7ea1900f-c1c5-47c2-9e2d-57fd136616bb",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2fc417a6-277d-4a29-9e43-a993bff07d8f"
        },
        "item": {
          "id": "f9e87c1d-96c5-4e44-a91c-aaa187d41556",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "94fcb121-2f11-40b5-a304-67a5c5e83ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329d552a-b73c-4211-bc46-847ea60efa92",
        "cursor": {
          "ref": "84017e16-446d-434a-aa08-05ff3ae975e0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d7fbd524-b6a0-4ad4-be80-1e5e2670d9e9"
        },
        "item": {
          "id": "329d552a-b73c-4211-bc46-847ea60efa92",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ca4b4593-de28-449f-a871-ab6f3762ec9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4048474e-b02b-4a04-a1e8-a8f141ee3b4d",
        "cursor": {
          "ref": "2469d803-9505-4a81-97be-a27ae5cbdf86",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "dafaff3c-81a2-4c38-be7c-c1e00301f758"
        },
        "item": {
          "id": "4048474e-b02b-4a04-a1e8-a8f141ee3b4d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "90f76bdc-f4f5-4fce-baeb-0a28100fb074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e87c1cb-140f-46b4-b00c-ce3c499be415",
        "cursor": {
          "ref": "07391445-ca40-4ae2-a049-563a72abdf4e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7fbc2fd8-203a-45a8-8cbe-fa77e5efdd35"
        },
        "item": {
          "id": "4e87c1cb-140f-46b4-b00c-ce3c499be415",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9b9e9df1-da83-4472-af09-8edf9f270156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95af2139-ef95-49be-9542-605d7d7b374b",
        "cursor": {
          "ref": "cf159ce3-4490-4bf5-b26c-ba5b84aaab3c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "26cbabb8-6d16-4de6-b6ad-a459bb7dbe1d"
        },
        "item": {
          "id": "95af2139-ef95-49be-9542-605d7d7b374b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "07d0ec6e-cf3b-42bd-9b36-8f439fa90d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21afe95-bd7b-4407-b163-87121a30a2dc",
        "cursor": {
          "ref": "3fcd6ac1-e5fd-4473-af90-309d3d15035c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cc687811-73eb-46bf-be8a-8a31952b025d"
        },
        "item": {
          "id": "e21afe95-bd7b-4407-b163-87121a30a2dc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "72851bd8-5857-401e-b62d-452e95d19d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b7e069-6583-4023-aafc-af8a94623d97",
        "cursor": {
          "ref": "5007cd04-44b6-4829-b7b6-6797eaacb54c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "320eebb7-7994-4c50-a423-8c5dd33dcb06"
        },
        "item": {
          "id": "e3b7e069-6583-4023-aafc-af8a94623d97",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7431452b-b857-4fbd-a625-523c60bb752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f3c402-b4dc-4a84-a321-7cc074b10c63",
        "cursor": {
          "ref": "1d7fbf1b-a756-40a1-835c-2fbe18dbca5b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e4edb306-80bd-418a-ab0d-bf6f3caf851d"
        },
        "item": {
          "id": "b5f3c402-b4dc-4a84-a321-7cc074b10c63",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8edfceaf-7aa4-4399-8a7c-b3810aa4c46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648d79b0-b68e-43be-88c8-611b71ccb17c",
        "cursor": {
          "ref": "92b9e0d1-0468-4b14-99e3-7efa4a67fcda",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "07ae4f56-8e6c-4b34-83c3-d8f151fda123"
        },
        "item": {
          "id": "648d79b0-b68e-43be-88c8-611b71ccb17c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "01d906af-a410-4cba-a70e-2c5367038e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3514594-d2c7-4c7e-b2f9-64bcf0bb5cff",
        "cursor": {
          "ref": "3fa28bb8-2211-4089-96e8-bfa191137632",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8f20e855-9e6c-46fd-a9df-0e34cc604dd2"
        },
        "item": {
          "id": "c3514594-d2c7-4c7e-b2f9-64bcf0bb5cff",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "764767b2-a3f1-4fe5-b4da-902c43a1a4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bda660-9966-455b-8c4e-d22410b9a25a",
        "cursor": {
          "ref": "47a77a87-4c70-473f-8ca6-84b02db12136",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "99344463-d441-49ee-b1e7-ead41f23e65f"
        },
        "item": {
          "id": "b1bda660-9966-455b-8c4e-d22410b9a25a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bbe1d869-fa9d-4d04-8cfa-e1b59544fa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f422580c-1e18-48c2-bf8c-605997b5fe31",
        "cursor": {
          "ref": "0a095bb9-7f41-4c18-a807-bd1e2b209ab6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9d128991-3eef-4340-8442-893842c1a0ee"
        },
        "item": {
          "id": "f422580c-1e18-48c2-bf8c-605997b5fe31",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1b40000f-16ee-4e0b-843d-b04dcf0d9363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a4872b-75a7-4b44-9747-8ae9643d66f2",
        "cursor": {
          "ref": "1ce6f0cd-1a96-413c-a6c9-1a888498bb31",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4ab1bb81-0c85-4f99-a895-580fc38cc82a"
        },
        "item": {
          "id": "30a4872b-75a7-4b44-9747-8ae9643d66f2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f6feff17-18e0-4bfc-864f-07bf62ff1152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3996167d-536e-4036-bdfd-64854c1b35a8",
        "cursor": {
          "ref": "1f630f91-4855-4932-b331-03f5ebff06d8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "93a60aa2-8d53-4f88-8133-26a040bb3922"
        },
        "item": {
          "id": "3996167d-536e-4036-bdfd-64854c1b35a8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e3a42455-9747-4997-b7ab-2dc20b9eb616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46a5577-305f-47e4-826b-521acade30c1",
        "cursor": {
          "ref": "d128661c-3f70-4ac3-8505-06a9b4c751b5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "caf1ff1d-ae30-49a0-9f40-009940e2bfbb"
        },
        "item": {
          "id": "d46a5577-305f-47e4-826b-521acade30c1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4383fcbb-2335-411d-8cba-57ab81ac4540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e060dc-42b9-439b-b3b1-dda4aefdfc6d",
        "cursor": {
          "ref": "9db6a30d-e472-40a1-91d8-196d1a6c5018",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8665cb1f-4893-4a12-962b-261c9e103d28"
        },
        "item": {
          "id": "98e060dc-42b9-439b-b3b1-dda4aefdfc6d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ce8afb59-7c84-48aa-a6f6-e405a69c5521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ec32c3-3112-4717-a63c-4f51b218d926",
        "cursor": {
          "ref": "ed4ab021-30fd-45fc-a48b-21dafbcae03b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6da0b2ab-eab1-4036-ad24-567b071905db"
        },
        "item": {
          "id": "02ec32c3-3112-4717-a63c-4f51b218d926",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "462448d4-b972-4e63-a0ed-d77f38bf1790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae96b19b-d739-46c5-87c9-a8c1b3c87b02",
        "cursor": {
          "ref": "e2fa80c6-6d71-415b-89e3-ea7e5102e7bc",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "930574a3-e1f5-4775-9895-453eb7323c57"
        },
        "item": {
          "id": "ae96b19b-d739-46c5-87c9-a8c1b3c87b02",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5ccdb60e-0d7f-45db-bd8e-e0f4a8401356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f743eec7-2617-4fe4-980a-89c5211e05a6",
        "cursor": {
          "ref": "567d3798-5d45-4ce2-9ae2-3b61b2bf7b13",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7195890f-5e28-4154-9f80-ed33f0f4527f"
        },
        "item": {
          "id": "f743eec7-2617-4fe4-980a-89c5211e05a6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "88dbcf76-6ba8-44d1-bf41-daa18290467a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9316822a-0900-4471-8d89-7c3c08ce56e8",
        "cursor": {
          "ref": "b7247d7b-8f67-4f7c-8d8b-65a673e531cc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0b89e99e-a3fd-41a2-88d5-491967989815"
        },
        "item": {
          "id": "9316822a-0900-4471-8d89-7c3c08ce56e8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5d61fcd5-1c16-43a4-9642-36d67de494ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ec1461-d107-40b9-a88b-cea6b717b289",
        "cursor": {
          "ref": "3eaa4420-8fe8-4878-9c22-61a20f98ecbd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "68fc0bc2-7a63-4559-99c1-39981f1af35a"
        },
        "item": {
          "id": "22ec1461-d107-40b9-a88b-cea6b717b289",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8b72358b-c17a-4e4f-8631-faf7b13720aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b82cb24-8e21-49d2-a057-5cb6946c2045",
        "cursor": {
          "ref": "23bcecc8-39cd-497c-9d34-68585d17bc5a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2ae999e2-b628-4da3-809f-97f948d50b0f"
        },
        "item": {
          "id": "6b82cb24-8e21-49d2-a057-5cb6946c2045",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c9cc444f-a868-4e80-accc-ec0e2922e69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f0071b-0cb7-4f94-9859-99cd64b3b4da",
        "cursor": {
          "ref": "2d6e5496-7342-477c-829c-d623eeb93eba",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "386e9bb1-e5b4-4eb9-b3cd-6ba325c7770e"
        },
        "item": {
          "id": "e5f0071b-0cb7-4f94-9859-99cd64b3b4da",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a36de70f-5793-4954-add4-2cff8a279414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcd19a6-fbb4-4922-9ef8-0f36ad66e351",
        "cursor": {
          "ref": "24a803ce-8f14-47b4-abfc-cceb62aec633",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cfaab87c-c4ee-44e1-bae5-8a9221fdbefa"
        },
        "item": {
          "id": "edcd19a6-fbb4-4922-9ef8-0f36ad66e351",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c586f58b-98f6-404a-bf9e-2478216b1548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737921b8-e8d6-48b4-bdb6-282c373a8421",
        "cursor": {
          "ref": "da0d576a-adf4-40c6-8590-c0bffa3b1e9d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad72c53c-15f5-4a4a-8feb-d0ed972c1944"
        },
        "item": {
          "id": "737921b8-e8d6-48b4-bdb6-282c373a8421",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6f6ecf68-9e6b-4110-b2e1-bb79eefc18a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c6c00f-c703-40e5-a313-26de6931d3af",
        "cursor": {
          "ref": "f189200d-4c45-4d60-997d-fa15a5a4da45",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "335c697b-0234-48db-9123-0c65d5e24717"
        },
        "item": {
          "id": "b8c6c00f-c703-40e5-a313-26de6931d3af",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e0ee3e85-5bdd-4d9e-8a1c-8894c9454231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e96a642-4168-43cf-8a2d-6599eb1b38bb",
        "cursor": {
          "ref": "e7e95dff-e3d8-40b2-b48f-677ceacd2d0f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b198d2d1-8a3d-4d6c-b8aa-d1ab582ee043"
        },
        "item": {
          "id": "7e96a642-4168-43cf-8a2d-6599eb1b38bb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c03cb6f9-5514-439a-a38a-db472be74b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d77007b-1bc8-421d-8e5d-648bede8d903",
        "cursor": {
          "ref": "60197488-aa3f-43a9-ac39-5e420c577c49",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32ffa96b-4ebb-4d41-a097-20fa788cc41f"
        },
        "item": {
          "id": "1d77007b-1bc8-421d-8e5d-648bede8d903",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "db493afd-47af-4937-afdd-a4c3b5d25ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4967c92-d6b9-4355-8d3b-4afe86977965",
        "cursor": {
          "ref": "8f9ddb1c-1ba9-423c-b2c9-61dc2721ed07",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "042d1cfe-0f2a-437f-a963-94cc6ddd2469"
        },
        "item": {
          "id": "f4967c92-d6b9-4355-8d3b-4afe86977965",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "94f74a45-6586-4dbc-8c4a-8c848ec033c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3285947-067c-440f-a49a-b4a4c8b260b1",
        "cursor": {
          "ref": "40789827-d69b-4968-8915-39bbac1858ea",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cfb4d5bc-4fc4-4731-bf26-370d5b005bef"
        },
        "item": {
          "id": "c3285947-067c-440f-a49a-b4a4c8b260b1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7340841e-9077-432c-977a-6dc000f9720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ab4db1-5dd7-40f1-9477-4465686f5f96",
        "cursor": {
          "ref": "2b77e9d9-c8e2-471a-9105-ab240750424e",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d9712b14-3120-4a7e-97f1-e38b2f82f383"
        },
        "item": {
          "id": "40ab4db1-5dd7-40f1-9477-4465686f5f96",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2b7aed4d-9310-4dc0-bcbd-d9fbc60f8b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9421efa5-e9ee-47f3-b846-ca4268ef057c",
        "cursor": {
          "ref": "f7da556e-bd80-4b92-8399-72472474d436",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8b41efe1-eeec-48d9-9ec2-2fea6fda6b53"
        },
        "item": {
          "id": "9421efa5-e9ee-47f3-b846-ca4268ef057c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7dd3b777-3777-42cf-adba-13ef3f5dcfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005b2d9a-461b-4d45-98f7-ecfebd16fe9a",
        "cursor": {
          "ref": "7f364c72-ef21-42e1-b9d8-e2174fa8e964",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dcdc81fd-80fc-4b39-930d-a252963df4b5"
        },
        "item": {
          "id": "005b2d9a-461b-4d45-98f7-ecfebd16fe9a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "44353885-6606-4558-9466-506f6a4da1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d364784-367d-4f48-80c7-30a0b002c73b",
        "cursor": {
          "ref": "11755354-1d74-4f8e-b317-ddcd09d8c5e8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b4cd6ca6-694d-4d3a-9cbd-0229cb079604"
        },
        "item": {
          "id": "3d364784-367d-4f48-80c7-30a0b002c73b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0cc19f5f-a66d-4d7c-90bc-ad5a9d2e1e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6aa1ba8-39bf-44d6-9664-90d60b565cbc",
        "cursor": {
          "ref": "35c8c539-cf91-4dc7-9ed4-6167f1929aa2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9a067333-08cd-4eb9-9826-cc12f6a0c682"
        },
        "item": {
          "id": "e6aa1ba8-39bf-44d6-9664-90d60b565cbc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "83c16954-e3e3-400b-98c5-d3d2902ad824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b662db-38ed-4fc2-8500-fa4e56bdc1ca",
        "cursor": {
          "ref": "2a209c68-7563-4042-b269-5a94a19b7708",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "85200b08-f756-4990-ab0a-1d1725953501"
        },
        "item": {
          "id": "54b662db-38ed-4fc2-8500-fa4e56bdc1ca",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "85886dec-da6f-4498-8fdf-758834d9d47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c7b3e5-d977-4324-86a2-31336e74ce2b",
        "cursor": {
          "ref": "9af5fdc5-e6c7-40b7-9fd9-6c01ac9ff0aa",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1c9f8619-9a06-4fbe-9f9f-7266cef42948"
        },
        "item": {
          "id": "e1c7b3e5-d977-4324-86a2-31336e74ce2b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7e6085a2-a937-4a73-a965-a9a27d8d20cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766c592b-70fd-43ff-b305-9420a1c41a79",
        "cursor": {
          "ref": "513c56dc-4bf1-4779-90ab-a060271a74c1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e804c506-2654-404f-a350-fa37f72fbbc5"
        },
        "item": {
          "id": "766c592b-70fd-43ff-b305-9420a1c41a79",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1f76c8cf-8ebb-422f-9d44-505b7a53a418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960b55b1-597f-4edf-ac1e-03c9cb9e494c",
        "cursor": {
          "ref": "766a41eb-ecd3-45ef-8d29-a7015ee90103",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "69be029a-472d-4351-9643-324e4b60fdc4"
        },
        "item": {
          "id": "960b55b1-597f-4edf-ac1e-03c9cb9e494c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "76131201-ba0e-49b9-b03a-9da690efc881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2f4b00-97da-441d-8ac9-e943f1d9b2a2",
        "cursor": {
          "ref": "4ef683ca-d890-4682-8059-320cf654c67d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6d66cb79-9eed-424d-8c54-12e5873e4467"
        },
        "item": {
          "id": "5d2f4b00-97da-441d-8ac9-e943f1d9b2a2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "52cf6c97-d21a-43b7-b000-d4bb894729df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08909e51-e1cf-4609-b515-c791c5341867",
        "cursor": {
          "ref": "fff0fc92-6bc4-48d7-b903-73f12fbde515",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c251de8f-10c2-4f75-a319-f0e07f3cc34f"
        },
        "item": {
          "id": "08909e51-e1cf-4609-b515-c791c5341867",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "39b699f3-8b40-4826-9e17-5b8ce0a36fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a038b94c-7d9a-4a0e-a7f2-f8fc339684bc",
        "cursor": {
          "ref": "ad0cc3bc-c5e1-4228-a6c3-25d41dba4852",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7fc72828-ce5c-4db7-937f-ca710cdf7171"
        },
        "item": {
          "id": "a038b94c-7d9a-4a0e-a7f2-f8fc339684bc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "99eb8e38-a9cd-4b25-ac05-72233803cb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb8ffc0-ce28-4348-949d-e87b1f958bdf",
        "cursor": {
          "ref": "b6c8ab69-f69a-4a2b-ba26-e912c5aaaecd",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a1d93322-917d-4df3-bd4a-b99763db46e7"
        },
        "item": {
          "id": "acb8ffc0-ce28-4348-949d-e87b1f958bdf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1869428f-109f-4360-851f-9f90a8c6da63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcce8ba-56b9-4700-8f19-fbd23c8998da",
        "cursor": {
          "ref": "5740710e-ccd4-4d6e-a5ec-ce8b636b5f3e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "62c46282-68ed-4a38-af38-d38f2efbac3d"
        },
        "item": {
          "id": "ffcce8ba-56b9-4700-8f19-fbd23c8998da",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d967e56f-e7d6-46a4-809c-9584d885c84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279de5f0-299a-4e3c-b2bb-b8900eca6ae8",
        "cursor": {
          "ref": "6d7ab955-bc18-4448-9b40-1a208150e7f2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "66a961f8-71a2-441a-9971-38ae2101dfd7"
        },
        "item": {
          "id": "279de5f0-299a-4e3c-b2bb-b8900eca6ae8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d2004282-beb5-40e8-9384-a19bc893997f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27406cb4-5e82-4b15-b21c-4691924a3d1e",
        "cursor": {
          "ref": "44e77607-6e87-40ec-921d-250bb66c94f2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "58b14ff9-ded7-41ac-9f42-04f2757f68ac"
        },
        "item": {
          "id": "27406cb4-5e82-4b15-b21c-4691924a3d1e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d6e7d5f0-1053-4ddd-81cb-1d7fd6c88bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b923f-09c3-440b-a444-7e4def0b041e",
        "cursor": {
          "ref": "29ca4b89-15f0-4a85-b98d-aa0b06c9fa80",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c72e68a2-ea5f-42d7-89b7-5affa1bb4403"
        },
        "item": {
          "id": "284b923f-09c3-440b-a444-7e4def0b041e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "366cba73-128c-4355-a041-414ed125fce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8123fb7d-47b0-4315-846d-6ebd0e43a7a1",
        "cursor": {
          "ref": "f5a61e03-4177-405d-a746-183158a35fe3",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5285b979-a05c-46ed-911d-b8625a18b6cf"
        },
        "item": {
          "id": "8123fb7d-47b0-4315-846d-6ebd0e43a7a1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8d6f723f-4e8f-45cc-b164-8c5d1df6acdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a8560f-1455-4e53-af3c-f74ceb196ada",
        "cursor": {
          "ref": "877f6983-5dd2-489d-a88f-3f8a7706387d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f7fdbc98-e961-4a9f-9ba0-fc882662172c"
        },
        "item": {
          "id": "a0a8560f-1455-4e53-af3c-f74ceb196ada",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6d8504b9-ef80-4b0f-a297-0c2b288b9d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d42399-8888-46b4-a044-52bd56a6a5f9",
        "cursor": {
          "ref": "592c2bca-4ed6-4c62-9f60-c90bb7d2819c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "223ecd7f-dcaa-40b5-9a7f-76b68225c3f8"
        },
        "item": {
          "id": "17d42399-8888-46b4-a044-52bd56a6a5f9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "780e9bb7-0287-4813-ad48-04d849ec7db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0153f93d-11d7-4d5e-8f10-d2a9d562ed66",
        "cursor": {
          "ref": "61fd4004-2de3-4db7-ae30-ae5d1d73bad5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "820e0573-9c87-4ebc-9da8-dc7506c9275b"
        },
        "item": {
          "id": "0153f93d-11d7-4d5e-8f10-d2a9d562ed66",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "83d73b9c-c05e-4d20-8cda-ecab9e385d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0b3a89-8d63-45eb-8ca1-b4d31f9d9292",
        "cursor": {
          "ref": "0fc6121b-c034-424a-94ab-ee9f8e2e6d81",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e3f03092-f54d-428e-8ab3-64f1e6ec0c55"
        },
        "item": {
          "id": "db0b3a89-8d63-45eb-8ca1-b4d31f9d9292",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8b1317b8-97f1-4d6e-a207-5ea3fedaf345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2106424-13b7-4032-9b4c-700cc6363ce1",
        "cursor": {
          "ref": "dade0e19-b3b7-4710-bc78-fcd974ad1af8",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6e672d92-824a-4531-8276-1db59bec2c81"
        },
        "item": {
          "id": "c2106424-13b7-4032-9b4c-700cc6363ce1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "43326a04-a80a-461d-afd2-6b4d58c709ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aa9aa2-9b32-4ab3-9496-fdfe4a9ea8e5",
        "cursor": {
          "ref": "e3f67311-ad5a-4776-841c-f8ccacd965a1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "221152af-356e-481e-823b-bd4285665cf7"
        },
        "item": {
          "id": "e9aa9aa2-9b32-4ab3-9496-fdfe4a9ea8e5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "53b84e83-c7be-4e85-ac59-7197ac3ffc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf1930c-12d0-49a8-97cc-6218757ebac0",
        "cursor": {
          "ref": "a02fd636-8d4a-4689-9b91-e2265addb955",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "050ce5b4-839a-402b-860d-65c61ada3b9c"
        },
        "item": {
          "id": "ddf1930c-12d0-49a8-97cc-6218757ebac0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ab765a4f-b6e9-4a2a-b4d5-e87551607906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e47ddb-fa90-49b4-9123-7d09419482b9",
        "cursor": {
          "ref": "029a6190-6a6b-4e74-a8a4-7ac08d444206",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e7575bda-1828-4108-9483-3dc93c84c61b"
        },
        "item": {
          "id": "d3e47ddb-fa90-49b4-9123-7d09419482b9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9d51d73d-7d0d-4050-ad59-de61090642cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76664dbd-c28d-4eb6-b193-c0aed75d7a8f",
        "cursor": {
          "ref": "75b6010d-5cd5-4187-927c-94f99044a1d0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cccca138-74f1-4271-a4c0-9c66002feefd"
        },
        "item": {
          "id": "76664dbd-c28d-4eb6-b193-c0aed75d7a8f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0a39fbe0-f6a9-413d-8d47-159c05fdc649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c997a8b1-d6b6-4e9e-af97-7fbe1431aa89",
        "cursor": {
          "ref": "d6708a56-f836-44df-94c5-0fce07ea1aef",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bf6632fc-d886-48fd-bf97-c60f0233e6f1"
        },
        "item": {
          "id": "c997a8b1-d6b6-4e9e-af97-7fbe1431aa89",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e26a931-d026-4236-bffc-28c2fa907eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3065d10f-58f5-4027-900e-ed4b1f6ac40b",
        "cursor": {
          "ref": "4dd42ae8-9b92-4f9b-8482-c5fc9179fd96",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "61270707-ed63-42ab-98bd-be18fbfed00c"
        },
        "item": {
          "id": "3065d10f-58f5-4027-900e-ed4b1f6ac40b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5dfc16bd-ff5b-4122-a645-73c6571687d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e8dfd9-3220-41c3-b4de-f04cc5013135",
        "cursor": {
          "ref": "ad52ddf0-f68d-4d3d-a361-30f1c9aedf39",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "581a41b5-1b18-4587-9de2-09cc1aeea934"
        },
        "item": {
          "id": "a9e8dfd9-3220-41c3-b4de-f04cc5013135",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "da651bbd-3e01-4af5-9d7e-47fda49aedcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c085bd3-016e-4ef7-b6cf-664e06653c7c",
        "cursor": {
          "ref": "216f3181-f46c-42cc-bd7f-2a7945c5bc65",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0fb0cb67-e798-4795-a1b7-d28f6b15c0ea"
        },
        "item": {
          "id": "0c085bd3-016e-4ef7-b6cf-664e06653c7c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4d5eb7e4-5c24-47fa-864a-a7450fb5e5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba7de7e-c715-490a-be35-2b06754aa6c3",
        "cursor": {
          "ref": "810f6736-5708-48f9-9ae4-e83cebfad0f5",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "209ca7ae-c7d1-4884-96f3-6faa2aa8886a"
        },
        "item": {
          "id": "8ba7de7e-c715-490a-be35-2b06754aa6c3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "45b215b5-57d2-4584-aca0-78b4e32203a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7130d01b-ecc7-4881-b2f4-3cdc3e4ca550",
        "cursor": {
          "ref": "c81fa062-fd1f-4327-aab5-023621ff4e34",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fca8a665-6594-4472-bcee-e4f875042449"
        },
        "item": {
          "id": "7130d01b-ecc7-4881-b2f4-3cdc3e4ca550",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ed6eb14e-bc03-4f35-b9c1-2b655270b7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1053c1ba-fdb5-40d6-8a2a-1a86557ea4ad",
        "cursor": {
          "ref": "7b765369-fa2f-44c4-8b0f-e7a54473d91d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a75b0c82-dbc2-4953-80a8-97aa2973167e"
        },
        "item": {
          "id": "1053c1ba-fdb5-40d6-8a2a-1a86557ea4ad",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2999f294-f617-476e-974f-01eb0167121d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b883d76-5b03-4213-b752-85f0bfedde89",
        "cursor": {
          "ref": "e19c4820-56e6-4de0-9bcf-bb1b95bf2665",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "217a7142-d6be-4a74-84dc-0541121f8abf"
        },
        "item": {
          "id": "4b883d76-5b03-4213-b752-85f0bfedde89",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "038a379d-feca-4cbe-8a5d-a8b8042b35ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c727e53-b72a-4b5c-9083-babd9c45a37a",
        "cursor": {
          "ref": "cf044a0d-fd3f-40d1-a4ed-2f4bffacbd10",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "328cb8bb-1b90-4c57-b71c-48fb406734c4"
        },
        "item": {
          "id": "8c727e53-b72a-4b5c-9083-babd9c45a37a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e4369334-1604-46fc-8477-d3f7716a4cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02974c6a-357a-4290-9454-f0a37f712af4",
        "cursor": {
          "ref": "aca5fd99-7970-42f7-b668-b9ab02b46007",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "85a234b2-466b-407a-beb3-a8175ebe9c99"
        },
        "item": {
          "id": "02974c6a-357a-4290-9454-f0a37f712af4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9e6ddfe7-32c4-41ad-821d-e858add758c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ea7725-2263-46e0-8ed5-fbc4b2a3c7e2",
        "cursor": {
          "ref": "7b3dd049-d4f7-4cca-ac61-dd9a6846702e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "69ac6b0e-f70f-4358-9662-f1ed85053e15"
        },
        "item": {
          "id": "71ea7725-2263-46e0-8ed5-fbc4b2a3c7e2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9f472400-0206-47bd-8f64-04743b887300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746ec361-adaf-445d-ad33-61ce9373b8df",
        "cursor": {
          "ref": "e8ce2775-8fbf-4879-890d-fa68a0239077",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0b6798ad-4c4d-40ab-802b-6f246d6dc863"
        },
        "item": {
          "id": "746ec361-adaf-445d-ad33-61ce9373b8df",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a157653d-958b-4265-940f-52e5696a3c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020aa709-2b80-41e5-99d4-1cbf34f9af19",
        "cursor": {
          "ref": "ba63ddbc-25de-4c6d-a1e6-401ce69c2b8c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "95381bba-471e-4dfd-a22f-a42f330d9d74"
        },
        "item": {
          "id": "020aa709-2b80-41e5-99d4-1cbf34f9af19",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "49745e8a-26c1-44f1-83e6-9c2d6c50368b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f89210-1bf0-4cc4-961f-40f91eb79a30",
        "cursor": {
          "ref": "e9046b2d-f9f9-4fdd-97d6-bb85ecc8826a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2e3afded-1e6f-4202-807c-54dfe4d112dc"
        },
        "item": {
          "id": "31f89210-1bf0-4cc4-961f-40f91eb79a30",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9acf6d6d-e59f-4ed2-96a3-f2de6183e4a9",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc29cc7d-53ba-4732-92b6-12aa54fbb67e",
        "cursor": {
          "ref": "3ab8ffef-4521-4977-8412-1b9c32b42601",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "83b81e30-5cfc-4f1a-bbc4-1ca808be0c00"
        },
        "item": {
          "id": "dc29cc7d-53ba-4732-92b6-12aa54fbb67e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "27ba4f72-2e36-407b-81fb-21c2cf76141c",
          "status": "OK",
          "code": 200,
          "responseTime": 3396,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb44903-9f9d-44e6-9c0a-3d49967af2f1",
        "cursor": {
          "ref": "7f8eb86a-db36-46d3-8f50-a97fb454fe7d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "39b8f86c-99ed-4a29-92bf-93c608c224fa"
        },
        "item": {
          "id": "bbb44903-9f9d-44e6-9c0a-3d49967af2f1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e1cda5db-f097-4b1c-ac1d-1417dd9ca760",
          "status": "OK",
          "code": 200,
          "responseTime": 3987,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ab560d-4ca4-4271-9491-bb50192f71b5",
        "cursor": {
          "ref": "5f29cd8f-25bf-43f3-978f-8bf7e1254799",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "815deff8-ba09-4efd-93b6-f802531fc21e"
        },
        "item": {
          "id": "12ab560d-4ca4-4271-9491-bb50192f71b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb3f1b6d-e64d-4ac2-b197-dcbded5beca6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ab560d-4ca4-4271-9491-bb50192f71b5",
        "cursor": {
          "ref": "5f29cd8f-25bf-43f3-978f-8bf7e1254799",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "815deff8-ba09-4efd-93b6-f802531fc21e"
        },
        "item": {
          "id": "12ab560d-4ca4-4271-9491-bb50192f71b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fb3f1b6d-e64d-4ac2-b197-dcbded5beca6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743bc232-1ba9-41d7-b76f-e500e531f435",
        "cursor": {
          "ref": "f256d785-dcd9-4baf-97fb-53c3beddbe1f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b3174ac4-162c-433d-85a6-d0658a945322"
        },
        "item": {
          "id": "743bc232-1ba9-41d7-b76f-e500e531f435",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "914b4cc2-453f-4696-8b06-e875d2c14766",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954e411a-e0d4-43d8-9a76-8f7657b1ff9f",
        "cursor": {
          "ref": "f8c7c099-26ee-4286-8480-41a65ba3ae49",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "27c204ab-2fe2-4230-ae78-c987dc3da805"
        },
        "item": {
          "id": "954e411a-e0d4-43d8-9a76-8f7657b1ff9f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c3035b42-07f9-47ae-b41e-24de94d93ea7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}